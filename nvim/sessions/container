let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/42/ft_containers
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +343 includes/map.hpp
badd +169 includes/map_iterator.hpp
badd +25 test/map_insert.cpp
badd +71 includes/pair.hpp
badd +301 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/utility
badd +22 test/vector_erase.cpp
badd +95 CMakeLists.txt
badd +23 test/map_empty.cpp
badd +36 test/map_begin.cpp
badd +33 test/map_count.cpp
badd +47 test/map_keycomp.cpp
badd +18 test/map_get_allocator.cpp
badd +33 test/map_swap.cpp
badd +100 includes/map_rev_iterator.hpp
argglobal
%argdel
$argadd includes/map.hpp
$argadd includes/map_iterator.hpp
$argadd test/map_insert.cpp
edit includes/map.hpp
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 120 + 107) / 215)
exe 'vert 2resize ' . ((&columns * 94 + 107) / 215)
argglobal
balt CMakeLists.txt
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
75
normal! zo
75
normal! zo
90
normal! zo
136
normal! zo
149
normal! zo
168
normal! zo
254
normal! zo
279
normal! zo
384
normal! zo
420
normal! zo
487
normal! zo
499
normal! zo
513
normal! zo
514
normal! zo
520
normal! zo
522
normal! zo
529
normal! zo
531
normal! zo
546
normal! zo
547
normal! zo
563
normal! zo
579
normal! zo
590
normal! zo
596
normal! zo
487
normal! zo
499
normal! zo
513
normal! zo
514
normal! zo
520
normal! zo
522
normal! zo
529
normal! zo
531
normal! zo
546
normal! zo
547
normal! zo
562
normal! zo
578
normal! zo
589
normal! zo
595
normal! zo
let s:l = 343 - ((21 * winheight(0) + 27) / 55)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 343
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("test/map_keycomp.cpp", ":p")) | buffer test/map_keycomp.cpp | else | edit test/map_keycomp.cpp | endif
if &buftype ==# 'terminal'
  silent file test/map_keycomp.cpp
endif
balt CMakeLists.txt
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
17
normal! zo
let s:l = 47 - ((41 * winheight(0) + 27) / 55)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 47
normal! 017|
wincmd w
exe 'vert 1resize ' . ((&columns * 120 + 107) / 215)
exe 'vert 2resize ' . ((&columns * 94 + 107) / 215)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
