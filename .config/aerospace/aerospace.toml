# Place a copy of this config to ~/.aerospace.toml

# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
# after-startup-command = ["toggle off"]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 0
inner.vertical =   0
outer.left =       0
outer.bottom =     0
outer.top =        0
outer.right =      0

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-5 = 'move-node-to-workspace 5'
alt-shift-6 = 'move-node-to-workspace 6'
alt-shift-7 = 'move-node-to-workspace 7'
alt-shift-8 = 'move-node-to-workspace 8'
alt-shift-9 = 'move-node-to-workspace 9'

alt-shift-f = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
# alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
# alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

alt-shift-t = ['layout floating tiling'] # Toggle between floating and tiling layout

alt-shift-m = 'move-node-to-monitor main'
alt-shift-p = 'move-node-to-monitor prev'
alt-shift-n = 'move-node-to-monitor  next'
alt-shift-s = 'move-node-to-monitor  secondary'


# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'
alt-shift-enter = 'mode apps'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']
k = 'resize smart +50'
j = 'resize smart -50'

[mode.apps.binding]
# Open apps
a = ['exec-and-forget open -a "Arc"', 'mode main']
b = ['exec-and-forget open -a "Beeper"', 'mode main']
c = ['exec-and-forget open -a "Calendar"', 'mode main']
d = ['exec-and-forget open -a "DBeaver"', 'mode main']
e = ['exec-and-forget open -a "Mail"', 'mode main']
f = ['exec-and-forget open -a "Figma"', 'mode main']
g = ['exec-and-forget open -a "Simulator"', 'mode main']
h = ['exec-and-forget open -a "Home"', 'mode main']
i = ['exec-and-forget open -a "Messages"', 'mode main']
j = ['exec-and-forget open -a "FaceTime"', 'mode main']
k = ['exec-and-forget open -a "Ledger Live"', 'mode main']
m = ['exec-and-forget open -a "Music"', 'mode main']
n = ['exec-and-forget open -a "Notion"', 'mode main']
p = ['exec-and-forget open -a "Obsidian"', 'mode main']
r = ['exec-and-forget open -a "Reader"', 'mode main']
s = ['exec-and-forget open -a "OBS Studio"', 'mode main']
semicolon = ['exec-and-forget open -a "Cursor"', 'mode main']
t = ['exec-and-forget open -a "Ghostty"', 'mode main']
v = ['exec-and-forget open -a "Visual Studio Code"', 'mode main']
w = ['exec-and-forget open -a "Brave Browser"', 'mode main']
x = ['exec-and-forget open -a "Discord"', 'mode main']
y = ['exec-and-forget open -a "Notes"', 'mode main']

# alt-shift-h = ['join-with left', 'mode main']
# alt-shift-j = ['join-with down', 'mode main']
# alt-shift-k = ['join-with up', 'mode main']
# alt-shift-l = ['join-with right', 'mode main']

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = ['move-node-to-workspace 1']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
run = ['move-node-to-workspace 2']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = ['move-node-to-workspace 2']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = ['move-node-to-workspace 2']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.apple.iphonesimulator'
run = ['move-node-to-workspace 2']  # The callback itself

[[on-window-detected]]
if.app-id = 'notion.id'
run = ['move-node-to-workspace 3']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.ledger.live'
run = ['move-node-to-workspace 3']  # The callback itself


[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = ['move-node-to-workspace 3']  # The callback itself

[[on-window-detected]]
if.app-id = 'io.rize'
run = ['move-node-to-workspace 3']  # The callback itself


[[on-window-detected]]
if.app-id = 'com.electron.motion'
run = ['move-node-to-workspace 3']  # The callback itself


[[on-window-detected]]
if.app-id = 'com.apple.reminders'
run = ['move-node-to-workspace 3']  # The callback itself


[[on-window-detected]]
if.app-id = 'org.jkiss.dbeaver.core.product'
run = ['move-node-to-workspace 4']  # The callback itself

[[on-window-detected]]
if.app-id = 'im.beeper'
run = ['move-node-to-workspace 5']  # The callback itself
[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = ['move-node-to-workspace 5']  # The callback itself
[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = ['move-node-to-workspace 5']  # The callback itself
[[on-window-detected]]
if.app-id = 'com.tdesktop.Telegram'
run = ['move-node-to-workspace 5']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.figma.Desktop'
run = ['move-node-to-workspace 7']  # The callback itself
[[on-window-detected]]
if.app-id = 'com.obsproject.obs-studio'
run = ['move-node-to-workspace 7']  # The callback itself
[[on-window-detected]]
if.app-id = 'com.blackmagic-design.DaVinciResolve'
run = ['move-node-to-workspace 7']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = ['move-node-to-workspace 8']  # The callback itself
[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = ['move-node-to-workspace 8']  # The callback itself


[[on-window-detected]]
if.app-id = 'com.electron.dockerdesktop'
run = ['move-node-to-workspace 9']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.apple.FaceTime'
run = ['move-node-to-workspace 10']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = ['move-node-to-workspace 10']  # The callback itself

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = ['move-node-to-workspace 13']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.brave.Browser'
run = ['move-node-to-workspace 11']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.raycast.macos'
run = ['move-node-to-workspace 12']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.apple.Passwords'
run = ['layout floating']  # The callback itself

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['layout floating']  # The callback itself

[workspace-to-monitor-force-assignment]
# 1 = 1                            # Monitor sequence number from left to right. 1-based indexing
# 3 = 'secondary'                  # Non-main monitor in case when there are only two monitors
# 4 = 'built-in'                   # Case insensitive regex substring
# # 5 = '^built-in retina display$'  # Case insensitive regex match
# 6 = ['secondary', 'dell']        # You can specify multiple patterns. The first matching pattern will be used
1 = 'main'                       
2 = 'main'                       
3 = 'main'                       
4 = 'main'                       
5 = 'main'                       
6 = 'main'                       
7 = 'main'                       
8 = 'main'                       
9 = 'main'                       
10 = 'secondary'
11 = 'main'                       
12 = 'secondary'                       
13 = 'secondary'                       
