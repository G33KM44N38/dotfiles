"use strict";var Al=Object.create;var Ta=Object.defineProperty;var Cl=Object.getOwnPropertyDescriptor;var Nl=Object.getOwnPropertyNames;var $l=Object.getPrototypeOf,Ll=Object.prototype.hasOwnProperty;var ve=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Ol=(e,t)=>{for(var a in t)Ta(e,a,{get:t[a],enumerable:!0})},Do=(e,t,a,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Nl(t))!Ll.call(e,o)&&o!==a&&Ta(e,o,{get:()=>t[o],enumerable:!(s=Cl(t,o))||s.enumerable});return e};var Uo=(e,t,a)=>(a=e!=null?Al($l(e)):{},Do(t||!e||!e.__esModule?Ta(a,"default",{value:e,enumerable:!0}):a,e)),Dl=e=>Do(Ta({},"__esModule",{value:!0}),e);var Vo=ve((WP,xo)=>{"use strict";var U={};xo.exports=U;function ko(e){return e<0?-1:1}function Ul(e){return e%1===.5&&!(e&1)?Math.floor(e):Math.round(e)}function pt(e,t){t.unsigned||--e;let a=t.unsigned?0:-Math.pow(2,e),s=Math.pow(2,e)-1,o=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e),l=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(m,h){h||(h={});let g=+m;if(h.enforceRange){if(!Number.isFinite(g))throw new TypeError("Argument is not a finite number");if(g=ko(g)*Math.floor(Math.abs(g)),g<a||g>s)throw new TypeError("Argument is not in byte range");return g}if(!isNaN(g)&&h.clamp)return g=Ul(g),g<a&&(g=a),g>s&&(g=s),g;if(!Number.isFinite(g)||g===0)return 0;if(g=ko(g)*Math.floor(Math.abs(g)),g=g%o,!t.unsigned&&g>=l)return g-o;if(t.unsigned){if(g<0)g+=o;else if(g===-0)return 0}return g}}U.void=function(){};U.boolean=function(e){return!!e};U.byte=pt(8,{unsigned:!1});U.octet=pt(8,{unsigned:!0});U.short=pt(16,{unsigned:!1});U["unsigned short"]=pt(16,{unsigned:!0});U.long=pt(32,{unsigned:!1});U["unsigned long"]=pt(32,{unsigned:!0});U["long long"]=pt(32,{unsigned:!1,moduloBitLength:64});U["unsigned long long"]=pt(32,{unsigned:!0,moduloBitLength:64});U.double=function(e){let t=+e;if(!Number.isFinite(t))throw new TypeError("Argument is not a finite floating-point value");return t};U["unrestricted double"]=function(e){let t=+e;if(isNaN(t))throw new TypeError("Argument is NaN");return t};U.float=U.double;U["unrestricted float"]=U["unrestricted double"];U.DOMString=function(e,t){return t||(t={}),t.treatNullAsEmptyString&&e===null?"":String(e)};U.ByteString=function(e,t){let a=String(e),s;for(let o=0;(s=a.codePointAt(o))!==void 0;++o)if(s>255)throw new TypeError("Argument is not a valid bytestring");return a};U.USVString=function(e){let t=String(e),a=t.length,s=[];for(let o=0;o<a;++o){let l=t.charCodeAt(o);if(l<55296||l>57343)s.push(String.fromCodePoint(l));else if(56320<=l&&l<=57343)s.push(String.fromCodePoint(65533));else if(o===a-1)s.push(String.fromCodePoint(65533));else{let m=t.charCodeAt(o+1);if(56320<=m&&m<=57343){let h=l&1023,g=m&1023;s.push(String.fromCodePoint(65536+1024*h+g)),++o}else s.push(String.fromCodePoint(65533))}}return s.join("")};U.Date=function(e,t){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e};U.RegExp=function(e,t){return e instanceof RegExp||(e=new RegExp(e)),e}});var jo=ve((QP,dt)=>{"use strict";dt.exports.mixin=function(t,a){let s=Object.getOwnPropertyNames(a);for(let o=0;o<s.length;++o)Object.defineProperty(t,s[o],Object.getOwnPropertyDescriptor(a,s[o]))};dt.exports.wrapperSymbol=Symbol("wrapper");dt.exports.implSymbol=Symbol("impl");dt.exports.wrapperForImpl=function(e){return e[dt.exports.wrapperSymbol]};dt.exports.implForWrapper=function(e){return e[dt.exports.implSymbol]}});var Go=ve((XP,kl)=>{kl.exports=[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1e3,1e3],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6e3],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8e3,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8e3]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9e3],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[3e4]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13e3,13e3],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43e3,43e3],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64e3,64e3],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66e3,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[12e4,12e4],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128e3,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23e3]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149e3]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32e3]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195e3,195e3],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[4e4]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918e3,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]});var Ho=ve((YP,Ea)=>{"use strict";var Mo=require("punycode"),Bo=Go(),Kt={TRANSITIONAL:0,NONTRANSITIONAL:1};function Fo(e){return e.split("\0").map(function(t){return t.normalize("NFC")}).join("\0")}function Zo(e){for(var t=0,a=Bo.length-1;t<=a;){var s=Math.floor((t+a)/2),o=Bo[s];if(o[0][0]<=e&&o[0][1]>=e)return o;o[0][0]>e?a=s-1:t=s+1}return null}var xl=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function Jo(e){return e.replace(xl,"_").length}function Vl(e,t,a){for(var s=!1,o="",l=Jo(e),m=0;m<l;++m){var h=e.codePointAt(m),g=Zo(h);switch(g[1]){case"disallowed":s=!0,o+=String.fromCodePoint(h);break;case"ignored":break;case"mapped":o+=String.fromCodePoint.apply(String,g[2]);break;case"deviation":a===Kt.TRANSITIONAL?o+=String.fromCodePoint.apply(String,g[2]):o+=String.fromCodePoint(h);break;case"valid":o+=String.fromCodePoint(h);break;case"disallowed_STD3_mapped":t?(s=!0,o+=String.fromCodePoint(h)):o+=String.fromCodePoint.apply(String,g[2]);break;case"disallowed_STD3_valid":t&&(s=!0),o+=String.fromCodePoint(h);break}}return{string:o,error:s}}var jl=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function Gl(e,t){e.substr(0,4)==="xn--"&&(e=Mo.toUnicode(e),t=Kt.NONTRANSITIONAL);var a=!1;(Fo(e)!==e||e[3]==="-"&&e[4]==="-"||e[0]==="-"||e[e.length-1]==="-"||e.indexOf(".")!==-1||e.search(jl)===0)&&(a=!0);for(var s=Jo(e),o=0;o<s;++o){var l=Zo(e.codePointAt(o));if(Ra===Kt.TRANSITIONAL&&l[1]!=="valid"||Ra===Kt.NONTRANSITIONAL&&l[1]!=="valid"&&l[1]!=="deviation"){a=!0;break}}return{label:e,error:a}}function Ra(e,t,a){var s=Vl(e,t,a);s.string=Fo(s.string);for(var o=s.string.split("."),l=0;l<o.length;++l)try{var m=Gl(o[l]);o[l]=m.label,s.error=s.error||m.error}catch{s.error=!0}return{string:o.join("."),error:s.error}}Ea.exports.toASCII=function(e,t,a,s){var o=Ra(e,t,a),l=o.string.split(".");if(l=l.map(function(g){try{return Mo.toASCII(g)}catch{return o.error=!0,g}}),s){var m=l.slice(0,l.length-1).join(".").length;(m.length>253||m.length===0)&&(o.error=!0);for(var h=0;h<l.length;++h)if(l.length>63||l.length===0){o.error=!0;break}}return o.error?null:l.join(".")};Ea.exports.toUnicode=function(e,t){var a=Ra(e,t,Kt.NONTRANSITIONAL);return{domain:a.string,error:a.error}};Ea.exports.PROCESSING_OPTIONS=Kt});var je=ve((qP,le)=>{"use strict";var Wt=require("punycode"),Ko=Ho(),Yo={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},T=Symbol("failure");function Wo(e){return Wt.ucs2.decode(e).length}function Qo(e,t){let a=e[t];return isNaN(a)?void 0:String.fromCodePoint(a)}function Ri(e){return e>=48&&e<=57}function Ei(e){return e>=65&&e<=90||e>=97&&e<=122}function Bl(e){return Ei(e)||Ri(e)}function ze(e){return Ri(e)||e>=65&&e<=70||e>=97&&e<=102}function Xo(e){return e==="."||e.toLowerCase()==="%2e"}function Ml(e){return e=e.toLowerCase(),e===".."||e==="%2e."||e===".%2e"||e==="%2e%2e"}function Fl(e,t){return Ei(e)&&(t===58||t===124)}function qo(e){return e.length===2&&Ei(e.codePointAt(0))&&(e[1]===":"||e[1]==="|")}function Zl(e){return e.length===2&&Ei(e.codePointAt(0))&&e[1]===":"}function Jl(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)!==-1}function Hl(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)!==-1}function Bn(e){return Yo[e]!==void 0}function H(e){return Bn(e.scheme)}function Kl(e){return Yo[e]}function er(e){let t=e.toString(16).toUpperCase();return t.length===1&&(t="0"+t),"%"+t}function Wl(e){let t=new Buffer(e),a="";for(let s=0;s<t.length;++s)a+=er(t[s]);return a}function Ql(e){let t=new Buffer(e),a=[];for(let s=0;s<t.length;++s)t[s]!==37?a.push(t[s]):t[s]===37&&ze(t[s+1])&&ze(t[s+2])?(a.push(parseInt(t.slice(s+1,s+3).toString(),16)),s+=2):a.push(t[s]);return new Buffer(a).toString()}function za(e){return e<=31||e>126}var Xl=new Set([32,34,35,60,62,63,96,123,125]);function tr(e){return za(e)||Xl.has(e)}var Yl=new Set([47,58,59,61,64,91,92,93,94,124]);function Fn(e){return tr(e)||Yl.has(e)}function $t(e,t){let a=String.fromCodePoint(e);return t(e)?Wl(a):a}function ql(e){let t=10;return e.length>=2&&e.charAt(0)==="0"&&e.charAt(1).toLowerCase()==="x"?(e=e.substring(2),t=16):e.length>=2&&e.charAt(0)==="0"&&(e=e.substring(1),t=8),e===""?0:(t===10?/[^0-9]/:t===16?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?T:parseInt(e,t)}function ec(e){let t=e.split(".");if(t[t.length-1]===""&&t.length>1&&t.pop(),t.length>4)return e;let a=[];for(let l of t){if(l==="")return e;let m=ql(l);if(m===T)return e;a.push(m)}for(let l=0;l<a.length-1;++l)if(a[l]>255)return T;if(a[a.length-1]>=Math.pow(256,5-a.length))return T;let s=a.pop(),o=0;for(let l of a)s+=l*Math.pow(256,3-o),++o;return s}function tc(e){let t="",a=e;for(let s=1;s<=4;++s)t=String(a%256)+t,s!==4&&(t="."+t),a=Math.floor(a/256);return t}function ic(e){let t=[0,0,0,0,0,0,0,0],a=0,s=null,o=0;if(e=Wt.ucs2.decode(e),e[o]===58){if(e[o+1]!==58)return T;o+=2,++a,s=a}for(;o<e.length;){if(a===8)return T;if(e[o]===58){if(s!==null)return T;++o,++a,s=a;continue}let l=0,m=0;for(;m<4&&ze(e[o]);)l=l*16+parseInt(Qo(e,o),16),++o,++m;if(e[o]===46){if(m===0||(o-=m,a>6))return T;let h=0;for(;e[o]!==void 0;){let g=null;if(h>0)if(e[o]===46&&h<4)++o;else return T;if(!Ri(e[o]))return T;for(;Ri(e[o]);){let P=parseInt(Qo(e,o));if(g===null)g=P;else{if(g===0)return T;g=g*10+P}if(g>255)return T;++o}t[a]=t[a]*256+g,++h,(h===2||h===4)&&++a}if(h!==4)return T;break}else if(e[o]===58){if(++o,e[o]===void 0)return T}else if(e[o]!==void 0)return T;t[a]=l,++a}if(s!==null){let l=a-s;for(a=7;a!==0&&l>0;){let m=t[s+l-1];t[s+l-1]=t[a],t[a]=m,--a,--l}}else if(s===null&&a!==8)return T;return t}function ac(e){let t="",s=sc(e).idx,o=!1;for(let l=0;l<=7;++l)if(!(o&&e[l]===0)){if(o&&(o=!1),s===l){t+=l===0?"::":":",o=!0;continue}t+=e[l].toString(16),l!==7&&(t+=":")}return t}function Mn(e,t){if(e[0]==="[")return e[e.length-1]!=="]"?T:ic(e.substring(1,e.length-1));if(!t)return nc(e);let a=Ql(e),s=Ko.toASCII(a,!1,Ko.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(s===null||Jl(s))return T;let o=ec(s);return typeof o=="number"||o===T?o:s}function nc(e){if(Hl(e))return T;let t="",a=Wt.ucs2.decode(e);for(let s=0;s<a.length;++s)t+=$t(a[s],za);return t}function sc(e){let t=null,a=1,s=null,o=0;for(let l=0;l<e.length;++l)e[l]!==0?(o>a&&(t=s,a=o),s=null,o=0):(s===null&&(s=l),++o);return o>a&&(t=s,a=o),{idx:t,len:a}}function Zn(e){return typeof e=="number"?tc(e):e instanceof Array?"["+ac(e)+"]":e}function oc(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}function rc(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}function ir(e){let t=e.path;t.length!==0&&(e.scheme==="file"&&t.length===1&&dc(t[0])||t.pop())}function ar(e){return e.username!==""||e.password!==""}function pc(e){return e.host===null||e.host===""||e.cannotBeABaseURL||e.scheme==="file"}function dc(e){return/^[A-Za-z]:$/.test(e)}function k(e,t,a,s,o){if(this.pointer=0,this.input=e,this.base=t||null,this.encodingOverride=a||"utf-8",this.stateOverride=o,this.url=s,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};let m=oc(this.input);m!==this.input&&(this.parseError=!0),this.input=m}let l=rc(this.input);for(l!==this.input&&(this.parseError=!0),this.input=l,this.state=o||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=Wt.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){let m=this.input[this.pointer],h=isNaN(m)?void 0:String.fromCodePoint(m),g=this["parse "+this.state](m,h);if(g){if(g===T){this.failure=!0;break}}else break}}k.prototype["parse scheme start"]=function(t,a){if(Ei(t))this.buffer+=a.toLowerCase(),this.state="scheme";else if(!this.stateOverride)this.state="no scheme",--this.pointer;else return this.parseError=!0,T;return!0};k.prototype["parse scheme"]=function(t,a){if(Bl(t)||t===43||t===45||t===46)this.buffer+=a.toLowerCase();else if(t===58){if(this.stateOverride&&(H(this.url)&&!Bn(this.buffer)||!H(this.url)&&Bn(this.buffer)||(ar(this.url)||this.url.port!==null)&&this.buffer==="file"||this.url.scheme==="file"&&(this.url.host===""||this.url.host===null))||(this.url.scheme=this.buffer,this.buffer="",this.stateOverride))return!1;this.url.scheme==="file"?((this.input[this.pointer+1]!==47||this.input[this.pointer+2]!==47)&&(this.parseError=!0),this.state="file"):H(this.url)&&this.base!==null&&this.base.scheme===this.url.scheme?this.state="special relative or authority":H(this.url)?this.state="special authority slashes":this.input[this.pointer+1]===47?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else if(!this.stateOverride)this.buffer="",this.state="no scheme",this.pointer=-1;else return this.parseError=!0,T;return!0};k.prototype["parse no scheme"]=function(t){return this.base===null||this.base.cannotBeABaseURL&&t!==35?T:(this.base.cannotBeABaseURL&&t===35?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):this.base.scheme==="file"?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)};k.prototype["parse special relative or authority"]=function(t){return t===47&&this.input[this.pointer+1]===47?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0};k.prototype["parse path or authority"]=function(t){return t===47?this.state="authority":(this.state="path",--this.pointer),!0};k.prototype["parse relative"]=function(t){return this.url.scheme=this.base.scheme,isNaN(t)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):t===47?this.state="relative slash":t===63?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):t===35?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):H(this.url)&&t===92?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0};k.prototype["parse relative slash"]=function(t){return H(this.url)&&(t===47||t===92)?(t===92&&(this.parseError=!0),this.state="special authority ignore slashes"):t===47?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer),!0};k.prototype["parse special authority slashes"]=function(t){return t===47&&this.input[this.pointer+1]===47?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0};k.prototype["parse special authority ignore slashes"]=function(t){return t!==47&&t!==92?(this.state="authority",--this.pointer):this.parseError=!0,!0};k.prototype["parse authority"]=function(t,a){if(t===64){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;let s=Wo(this.buffer);for(let o=0;o<s;++o){let l=this.buffer.codePointAt(o);if(l===58&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}let m=$t(l,Fn);this.passwordTokenSeenFlag?this.url.password+=m:this.url.username+=m}this.buffer=""}else if(isNaN(t)||t===47||t===63||t===35||H(this.url)&&t===92){if(this.atFlag&&this.buffer==="")return this.parseError=!0,T;this.pointer-=Wo(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=a;return!0};k.prototype["parse hostname"]=k.prototype["parse host"]=function(t,a){if(this.stateOverride&&this.url.scheme==="file")--this.pointer,this.state="file host";else if(t===58&&!this.arrFlag){if(this.buffer==="")return this.parseError=!0,T;let s=Mn(this.buffer,H(this.url));if(s===T)return T;if(this.url.host=s,this.buffer="",this.state="port",this.stateOverride==="hostname")return!1}else if(isNaN(t)||t===47||t===63||t===35||H(this.url)&&t===92){if(--this.pointer,H(this.url)&&this.buffer==="")return this.parseError=!0,T;if(this.stateOverride&&this.buffer===""&&(ar(this.url)||this.url.port!==null))return this.parseError=!0,!1;let s=Mn(this.buffer,H(this.url));if(s===T)return T;if(this.url.host=s,this.buffer="",this.state="path start",this.stateOverride)return!1}else t===91?this.arrFlag=!0:t===93&&(this.arrFlag=!1),this.buffer+=a;return!0};k.prototype["parse port"]=function(t,a){if(Ri(t))this.buffer+=a;else if(isNaN(t)||t===47||t===63||t===35||H(this.url)&&t===92||this.stateOverride){if(this.buffer!==""){let s=parseInt(this.buffer);if(s>Math.pow(2,16)-1)return this.parseError=!0,T;this.url.port=s===Kl(this.url.scheme)?null:s,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}else return this.parseError=!0,T;return!0};var lc=new Set([47,92,63,35]);k.prototype["parse file"]=function(t){return this.url.scheme="file",t===47||t===92?(t===92&&(this.parseError=!0),this.state="file slash"):this.base!==null&&this.base.scheme==="file"?isNaN(t)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):t===63?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):t===35?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1===0||!Fl(t,this.input[this.pointer+1])||this.input.length-this.pointer-1>=2&&!lc.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),ir(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0};k.prototype["parse file slash"]=function(t){return t===47||t===92?(t===92&&(this.parseError=!0),this.state="file host"):(this.base!==null&&this.base.scheme==="file"&&(Zl(this.base.path[0])?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0};k.prototype["parse file host"]=function(t,a){if(isNaN(t)||t===47||t===92||t===63||t===35)if(--this.pointer,!this.stateOverride&&qo(this.buffer))this.parseError=!0,this.state="path";else if(this.buffer===""){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let s=Mn(this.buffer,H(this.url));if(s===T)return T;if(s==="localhost"&&(s=""),this.url.host=s,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=a;return!0};k.prototype["parse path start"]=function(t){return H(this.url)?(t===92&&(this.parseError=!0),this.state="path",t!==47&&t!==92&&--this.pointer):!this.stateOverride&&t===63?(this.url.query="",this.state="query"):!this.stateOverride&&t===35?(this.url.fragment="",this.state="fragment"):t!==void 0&&(this.state="path",t!==47&&--this.pointer),!0};k.prototype["parse path"]=function(t){if(isNaN(t)||t===47||H(this.url)&&t===92||!this.stateOverride&&(t===63||t===35)){if(H(this.url)&&t===92&&(this.parseError=!0),Ml(this.buffer)?(ir(this.url),t!==47&&!(H(this.url)&&t===92)&&this.url.path.push("")):Xo(this.buffer)&&t!==47&&!(H(this.url)&&t===92)?this.url.path.push(""):Xo(this.buffer)||(this.url.scheme==="file"&&this.url.path.length===0&&qo(this.buffer)&&(this.url.host!==""&&this.url.host!==null&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)),this.buffer="",this.url.scheme==="file"&&(t===void 0||t===63||t===35))for(;this.url.path.length>1&&this.url.path[0]==="";)this.parseError=!0,this.url.path.shift();t===63&&(this.url.query="",this.state="query"),t===35&&(this.url.fragment="",this.state="fragment")}else t===37&&(!ze(this.input[this.pointer+1])||!ze(this.input[this.pointer+2]))&&(this.parseError=!0),this.buffer+=$t(t,tr);return!0};k.prototype["parse cannot-be-a-base-URL path"]=function(t){return t===63?(this.url.query="",this.state="query"):t===35?(this.url.fragment="",this.state="fragment"):(!isNaN(t)&&t!==37&&(this.parseError=!0),t===37&&(!ze(this.input[this.pointer+1])||!ze(this.input[this.pointer+2]))&&(this.parseError=!0),isNaN(t)||(this.url.path[0]=this.url.path[0]+$t(t,za))),!0};k.prototype["parse query"]=function(t,a){if(isNaN(t)||!this.stateOverride&&t===35){(!H(this.url)||this.url.scheme==="ws"||this.url.scheme==="wss")&&(this.encodingOverride="utf-8");let s=new Buffer(this.buffer);for(let o=0;o<s.length;++o)s[o]<33||s[o]>126||s[o]===34||s[o]===35||s[o]===60||s[o]===62?this.url.query+=er(s[o]):this.url.query+=String.fromCodePoint(s[o]);this.buffer="",t===35&&(this.url.fragment="",this.state="fragment")}else t===37&&(!ze(this.input[this.pointer+1])||!ze(this.input[this.pointer+2]))&&(this.parseError=!0),this.buffer+=a;return!0};k.prototype["parse fragment"]=function(t){return isNaN(t)||(t===0?this.parseError=!0:(t===37&&(!ze(this.input[this.pointer+1])||!ze(this.input[this.pointer+2]))&&(this.parseError=!0),this.url.fragment+=$t(t,za))),!0};function cc(e,t){let a=e.scheme+":";if(e.host!==null?(a+="//",(e.username!==""||e.password!=="")&&(a+=e.username,e.password!==""&&(a+=":"+e.password),a+="@"),a+=Zn(e.host),e.port!==null&&(a+=":"+e.port)):e.host===null&&e.scheme==="file"&&(a+="//"),e.cannotBeABaseURL)a+=e.path[0];else for(let s of e.path)a+="/"+s;return e.query!==null&&(a+="?"+e.query),!t&&e.fragment!==null&&(a+="#"+e.fragment),a}function mc(e){let t=e.scheme+"://";return t+=Zn(e.host),e.port!==null&&(t+=":"+e.port),t}le.exports.serializeURL=cc;le.exports.serializeURLOrigin=function(e){switch(e.scheme){case"blob":try{return le.exports.serializeURLOrigin(le.exports.parseURL(e.path[0]))}catch{return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return mc({scheme:e.scheme,host:e.host,port:e.port});case"file":return"file://";default:return"null"}};le.exports.basicURLParse=function(e,t){t===void 0&&(t={});let a=new k(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);return a.failure?"failure":a.url};le.exports.setTheUsername=function(e,t){e.username="";let a=Wt.ucs2.decode(t);for(let s=0;s<a.length;++s)e.username+=$t(a[s],Fn)};le.exports.setThePassword=function(e,t){e.password="";let a=Wt.ucs2.decode(t);for(let s=0;s<a.length;++s)e.password+=$t(a[s],Fn)};le.exports.serializeHost=Zn;le.exports.cannotHaveAUsernamePasswordPort=pc;le.exports.serializeInteger=function(e){return String(e)};le.exports.parseURL=function(e,t){return t===void 0&&(t={}),le.exports.basicURLParse(e,{baseURL:t.baseURL,encodingOverride:t.encodingOverride})}});var sr=ve(nr=>{"use strict";var x=je();nr.implementation=class{constructor(t){let a=t[0],s=t[1],o=null;if(s!==void 0&&(o=x.basicURLParse(s),o==="failure"))throw new TypeError("Invalid base URL");let l=x.basicURLParse(a,{baseURL:o});if(l==="failure")throw new TypeError("Invalid URL");this._url=l}get href(){return x.serializeURL(this._url)}set href(t){let a=x.basicURLParse(t);if(a==="failure")throw new TypeError("Invalid URL");this._url=a}get origin(){return x.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(t){x.basicURLParse(t+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(t){x.cannotHaveAUsernamePasswordPort(this._url)||x.setTheUsername(this._url,t)}get password(){return this._url.password}set password(t){x.cannotHaveAUsernamePasswordPort(this._url)||x.setThePassword(this._url,t)}get host(){let t=this._url;return t.host===null?"":t.port===null?x.serializeHost(t.host):x.serializeHost(t.host)+":"+x.serializeInteger(t.port)}set host(t){this._url.cannotBeABaseURL||x.basicURLParse(t,{url:this._url,stateOverride:"host"})}get hostname(){return this._url.host===null?"":x.serializeHost(this._url.host)}set hostname(t){this._url.cannotBeABaseURL||x.basicURLParse(t,{url:this._url,stateOverride:"hostname"})}get port(){return this._url.port===null?"":x.serializeInteger(this._url.port)}set port(t){x.cannotHaveAUsernamePasswordPort(this._url)||(t===""?this._url.port=null:x.basicURLParse(t,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:this._url.path.length===0?"":"/"+this._url.path.join("/")}set pathname(t){this._url.cannotBeABaseURL||(this._url.path=[],x.basicURLParse(t,{url:this._url,stateOverride:"path start"}))}get search(){return this._url.query===null||this._url.query===""?"":"?"+this._url.query}set search(t){let a=this._url;if(t===""){a.query=null;return}let s=t[0]==="?"?t.substring(1):t;a.query="",x.basicURLParse(s,{url:a,stateOverride:"query"})}get hash(){return this._url.fragment===null||this._url.fragment===""?"":"#"+this._url.fragment}set hash(t){if(t===""){this._url.fragment=null;return}let a=t[0]==="#"?t.substring(1):t;this._url.fragment="",x.basicURLParse(a,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}});var pr=ve((iA,zi)=>{"use strict";var ye=Vo(),rr=jo(),or=sr(),N=rr.implSymbol;function Y(e){if(!this||this[N]||!(this instanceof Y))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");let t=[];for(let a=0;a<arguments.length&&a<2;++a)t[a]=arguments[a];t[0]=ye.USVString(t[0]),t[1]!==void 0&&(t[1]=ye.USVString(t[1])),zi.exports.setup(this,t)}Y.prototype.toJSON=function(){if(!this||!zi.exports.is(this))throw new TypeError("Illegal invocation");let t=[];for(let a=0;a<arguments.length&&a<0;++a)t[a]=arguments[a];return this[N].toJSON.apply(this[N],t)};Object.defineProperty(Y.prototype,"href",{get(){return this[N].href},set(e){e=ye.USVString(e),this[N].href=e},enumerable:!0,configurable:!0});Y.prototype.toString=function(){if(!this||!zi.exports.is(this))throw new TypeError("Illegal invocation");return this.href};Object.defineProperty(Y.prototype,"origin",{get(){return this[N].origin},enumerable:!0,configurable:!0});Object.defineProperty(Y.prototype,"protocol",{get(){return this[N].protocol},set(e){e=ye.USVString(e),this[N].protocol=e},enumerable:!0,configurable:!0});Object.defineProperty(Y.prototype,"username",{get(){return this[N].username},set(e){e=ye.USVString(e),this[N].username=e},enumerable:!0,configurable:!0});Object.defineProperty(Y.prototype,"password",{get(){return this[N].password},set(e){e=ye.USVString(e),this[N].password=e},enumerable:!0,configurable:!0});Object.defineProperty(Y.prototype,"host",{get(){return this[N].host},set(e){e=ye.USVString(e),this[N].host=e},enumerable:!0,configurable:!0});Object.defineProperty(Y.prototype,"hostname",{get(){return this[N].hostname},set(e){e=ye.USVString(e),this[N].hostname=e},enumerable:!0,configurable:!0});Object.defineProperty(Y.prototype,"port",{get(){return this[N].port},set(e){e=ye.USVString(e),this[N].port=e},enumerable:!0,configurable:!0});Object.defineProperty(Y.prototype,"pathname",{get(){return this[N].pathname},set(e){e=ye.USVString(e),this[N].pathname=e},enumerable:!0,configurable:!0});Object.defineProperty(Y.prototype,"search",{get(){return this[N].search},set(e){e=ye.USVString(e),this[N].search=e},enumerable:!0,configurable:!0});Object.defineProperty(Y.prototype,"hash",{get(){return this[N].hash},set(e){e=ye.USVString(e),this[N].hash=e},enumerable:!0,configurable:!0});zi.exports={is(e){return!!e&&e[N]instanceof or.implementation},create(e,t){let a=Object.create(Y.prototype);return this.setup(a,e,t),a},setup(e,t,a){a||(a={}),a.wrapper=e,e[N]=new or.implementation(t,a),e[N][rr.wrapperSymbol]=e},interface:Y,expose:{Window:{URL:Y},Worker:{URL:Y}}}});var dr=ve(Ge=>{"use strict";Ge.URL=pr().interface;Ge.serializeURL=je().serializeURL;Ge.serializeURLOrigin=je().serializeURLOrigin;Ge.basicURLParse=je().basicURLParse;Ge.setTheUsername=je().setTheUsername;Ge.setThePassword=je().setThePassword;Ge.serializeHost=je().serializeHost;Ge.serializeInteger=je().serializeInteger;Ge.parseURL=je().parseURL});var Sr=ve((Ae,wr)=>{"use strict";Object.defineProperty(Ae,"__esModule",{value:!0});function qt(e){return e&&typeof e=="object"&&"default"in e?e.default:e}var Pe=qt(require("stream")),hr=qt(require("http")),Aa=qt(require("url")),gr=qt(dr()),hc=qt(require("https")),Lt=qt(require("zlib")),gc=Pe.Readable,Qe=Symbol("buffer"),Jn=Symbol("type"),Ai=class e{constructor(){this[Jn]="";let t=arguments[0],a=arguments[1],s=[],o=0;if(t){let m=t,h=Number(m.length);for(let g=0;g<h;g++){let P=m[g],J;P instanceof Buffer?J=P:ArrayBuffer.isView(P)?J=Buffer.from(P.buffer,P.byteOffset,P.byteLength):P instanceof ArrayBuffer?J=Buffer.from(P):P instanceof e?J=P[Qe]:J=Buffer.from(typeof P=="string"?P:String(P)),o+=J.length,s.push(J)}}this[Qe]=Buffer.concat(s);let l=a&&a.type!==void 0&&String(a.type).toLowerCase();l&&!/[^\u0020-\u007E]/.test(l)&&(this[Jn]=l)}get size(){return this[Qe].length}get type(){return this[Jn]}text(){return Promise.resolve(this[Qe].toString())}arrayBuffer(){let t=this[Qe],a=t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength);return Promise.resolve(a)}stream(){let t=new gc;return t._read=function(){},t.push(this[Qe]),t.push(null),t}toString(){return"[object Blob]"}slice(){let t=this.size,a=arguments[0],s=arguments[1],o,l;a===void 0?o=0:a<0?o=Math.max(t+a,0):o=Math.min(a,t),s===void 0?l=t:s<0?l=Math.max(t+s,0):l=Math.min(s,t);let m=Math.max(l-o,0),g=this[Qe].slice(o,o+m),P=new e([],{type:arguments[2]});return P[Qe]=g,P}};Object.defineProperties(Ai.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}});Object.defineProperty(Ai.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0});function ee(e,t,a){Error.call(this,e),this.message=e,this.type=t,a&&(this.code=this.errno=a.code),Error.captureStackTrace(this,this.constructor)}ee.prototype=Object.create(Error.prototype);ee.prototype.constructor=ee;ee.prototype.name="FetchError";var Qn;try{Qn=require("encoding").convert}catch{}var Ye=Symbol("Body internals"),lr=Pe.PassThrough;function q(e){var t=this,a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=a.size;let o=s===void 0?0:s;var l=a.timeout;let m=l===void 0?0:l;e==null?e=null:ur(e)?e=Buffer.from(e.toString()):Ni(e)||Buffer.isBuffer(e)||(Object.prototype.toString.call(e)==="[object ArrayBuffer]"?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof Pe||(e=Buffer.from(String(e)))),this[Ye]={body:e,disturbed:!1,error:null},this.size=o,this.timeout=m,e instanceof Pe&&e.on("error",function(h){let g=h.name==="AbortError"?h:new ee(`Invalid response body while trying to fetch ${t.url}: ${h.message}`,"system",h);t[Ye].error=g})}q.prototype={get body(){return this[Ye].body},get bodyUsed(){return this[Ye].disturbed},arrayBuffer(){return Qt.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return Qt.call(this).then(function(t){return Object.assign(new Ai([],{type:e.toLowerCase()}),{[Qe]:t})})},json(){var e=this;return Qt.call(this).then(function(t){try{return JSON.parse(t.toString())}catch(a){return q.Promise.reject(new ee(`invalid json response body at ${e.url} reason: ${a.message}`,"invalid-json"))}})},text(){return Qt.call(this).then(function(e){return e.toString()})},buffer(){return Qt.call(this)},textConverted(){var e=this;return Qt.call(this).then(function(t){return uc(t,e.headers)})}};Object.defineProperties(q.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}});q.mixIn=function(e){for(let t of Object.getOwnPropertyNames(q.prototype))if(!(t in e)){let a=Object.getOwnPropertyDescriptor(q.prototype,t);Object.defineProperty(e,t,a)}};function Qt(){var e=this;if(this[Ye].disturbed)return q.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[Ye].disturbed=!0,this[Ye].error)return q.Promise.reject(this[Ye].error);let t=this.body;if(t===null)return q.Promise.resolve(Buffer.alloc(0));if(Ni(t)&&(t=t.stream()),Buffer.isBuffer(t))return q.Promise.resolve(t);if(!(t instanceof Pe))return q.Promise.resolve(Buffer.alloc(0));let a=[],s=0,o=!1;return new q.Promise(function(l,m){let h;e.timeout&&(h=setTimeout(function(){o=!0,m(new ee(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),t.on("error",function(g){g.name==="AbortError"?(o=!0,m(g)):m(new ee(`Invalid response body while trying to fetch ${e.url}: ${g.message}`,"system",g))}),t.on("data",function(g){if(!(o||g===null)){if(e.size&&s+g.length>e.size){o=!0,m(new ee(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}s+=g.length,a.push(g)}}),t.on("end",function(){if(!o){clearTimeout(h);try{l(Buffer.concat(a,s))}catch(g){m(new ee(`Could not create Buffer from response body for ${e.url}: ${g.message}`,"system",g))}}})})}function uc(e,t){if(typeof Qn!="function")throw new Error("The package `encoding` must be installed to use the textConverted() function");let a=t.get("content-type"),s="utf-8",o,l;return a&&(o=/charset=([^;]*)/i.exec(a)),l=e.slice(0,1024).toString(),!o&&l&&(o=/<meta.+?charset=(['"])(.+?)\1/i.exec(l)),!o&&l&&(o=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(l),o||(o=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(l),o&&o.pop()),o&&(o=/charset=(.*)/i.exec(o.pop()))),!o&&l&&(o=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(l)),o&&(s=o.pop(),(s==="gb2312"||s==="gbk")&&(s="gb18030")),Qn(e,"UTF-8",s).toString()}function ur(e){return typeof e!="object"||typeof e.append!="function"||typeof e.delete!="function"||typeof e.get!="function"||typeof e.getAll!="function"||typeof e.has!="function"||typeof e.set!="function"?!1:e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort=="function"}function Ni(e){return typeof e=="object"&&typeof e.arrayBuffer=="function"&&typeof e.type=="string"&&typeof e.stream=="function"&&typeof e.constructor=="function"&&typeof e.constructor.name=="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function fr(e){let t,a,s=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return s instanceof Pe&&typeof s.getBoundary!="function"&&(t=new lr,a=new lr,s.pipe(t),s.pipe(a),e[Ye].body=t,s=a),s}function vr(e){return e===null?null:typeof e=="string"?"text/plain;charset=UTF-8":ur(e)?"application/x-www-form-urlencoded;charset=UTF-8":Ni(e)?e.type||null:Buffer.isBuffer(e)||Object.prototype.toString.call(e)==="[object ArrayBuffer]"||ArrayBuffer.isView(e)?null:typeof e.getBoundary=="function"?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof Pe?null:"text/plain;charset=UTF-8"}function yr(e){let t=e.body;return t===null?0:Ni(t)?t.size:Buffer.isBuffer(t)?t.length:t&&typeof t.getLengthSync=="function"&&(t._lengthRetrievers&&t._lengthRetrievers.length==0||t.hasKnownLength&&t.hasKnownLength())?t.getLengthSync():null}function fc(e,t){let a=t.body;a===null?e.end():Ni(a)?a.stream().pipe(e):Buffer.isBuffer(a)?(e.write(a),e.end()):a.pipe(e)}q.Promise=global.Promise;var _r=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,Xn=/[^\t\x20-\x7e\x80-\xff]/;function Pi(e){if(e=`${e}`,_r.test(e)||e==="")throw new TypeError(`${e} is not a legal HTTP header name`)}function cr(e){if(e=`${e}`,Xn.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function Xt(e,t){t=t.toLowerCase();for(let a in e)if(a.toLowerCase()===t)return a}var j=Symbol("map"),we=class e{constructor(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:void 0;if(this[j]=Object.create(null),t instanceof e){let a=t.raw(),s=Object.keys(a);for(let o of s)for(let l of a[o])this.append(o,l);return}if(t!=null)if(typeof t=="object"){let a=t[Symbol.iterator];if(a!=null){if(typeof a!="function")throw new TypeError("Header pairs must be iterable");let s=[];for(let o of t){if(typeof o!="object"||typeof o[Symbol.iterator]!="function")throw new TypeError("Each header pair must be iterable");s.push(Array.from(o))}for(let o of s){if(o.length!==2)throw new TypeError("Each header pair must be a name/value tuple");this.append(o[0],o[1])}}else for(let s of Object.keys(t)){let o=t[s];this.append(s,o)}}else throw new TypeError("Provided initializer must be an object")}get(t){t=`${t}`,Pi(t);let a=Xt(this[j],t);return a===void 0?null:this[j][a].join(", ")}forEach(t){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:void 0,s=Yn(this),o=0;for(;o<s.length;){var l=s[o];let m=l[0],h=l[1];t.call(a,h,m,this),s=Yn(this),o++}}set(t,a){t=`${t}`,a=`${a}`,Pi(t),cr(a);let s=Xt(this[j],t);this[j][s!==void 0?s:t]=[a]}append(t,a){t=`${t}`,a=`${a}`,Pi(t),cr(a);let s=Xt(this[j],t);s!==void 0?this[j][s].push(a):this[j][t]=[a]}has(t){return t=`${t}`,Pi(t),Xt(this[j],t)!==void 0}delete(t){t=`${t}`,Pi(t);let a=Xt(this[j],t);a!==void 0&&delete this[j][a]}raw(){return this[j]}keys(){return Hn(this,"key")}values(){return Hn(this,"value")}[Symbol.iterator](){return Hn(this,"key+value")}};we.prototype.entries=we.prototype[Symbol.iterator];Object.defineProperty(we.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0});Object.defineProperties(we.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});function Yn(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"key+value";return Object.keys(e[j]).sort().map(t==="key"?function(s){return s.toLowerCase()}:t==="value"?function(s){return e[j][s].join(", ")}:function(s){return[s.toLowerCase(),e[j][s].join(", ")]})}var qn=Symbol("internal");function Hn(e,t){let a=Object.create(es);return a[qn]={target:e,kind:t,index:0},a}var es=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==es)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[qn];let t=e.target,a=e.kind,s=e.index,o=Yn(t,a),l=o.length;return s>=l?{value:void 0,done:!0}:(this[qn].index=s+1,{value:o[s],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(es,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});function vc(e){let t=Object.assign({__proto__:null},e[j]),a=Xt(e[j],"Host");return a!==void 0&&(t[a]=t[a][0]),t}function yc(e){let t=new we;for(let a of Object.keys(e))if(!_r.test(a))if(Array.isArray(e[a]))for(let s of e[a])Xn.test(s)||(t[j][a]===void 0?t[j][a]=[s]:t[j][a].push(s));else Xn.test(e[a])||(t[j][a]=[e[a]]);return t}var lt=Symbol("Response internals"),_c=hr.STATUS_CODES,_e=class e{constructor(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:null,a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};q.call(this,t,a);let s=a.status||200,o=new we(a.headers);if(t!=null&&!o.has("Content-Type")){let l=vr(t);l&&o.append("Content-Type",l)}this[lt]={url:a.url,status:s,statusText:a.statusText||_c[s],headers:o,counter:a.counter}}get url(){return this[lt].url||""}get status(){return this[lt].status}get ok(){return this[lt].status>=200&&this[lt].status<300}get redirected(){return this[lt].counter>0}get statusText(){return this[lt].statusText}get headers(){return this[lt].headers}clone(){return new e(fr(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}};q.mixIn(_e.prototype);Object.defineProperties(_e.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}});Object.defineProperty(_e.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});var Xe=Symbol("Request internals"),wc=Aa.URL||gr.URL,Sc=Aa.parse,bc=Aa.format;function Kn(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new wc(e).toString()),Sc(e)}var Ic="destroy"in Pe.Readable.prototype;function Pa(e){return typeof e=="object"&&typeof e[Xe]=="object"}function Tc(e){let t=e&&typeof e=="object"&&Object.getPrototypeOf(e);return!!(t&&t.constructor.name==="AbortSignal")}var mt=class e{constructor(t){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s;Pa(t)?s=Kn(t.url):(t&&t.href?s=Kn(t.href):s=Kn(`${t}`),t={});let o=a.method||t.method||"GET";if(o=o.toUpperCase(),(a.body!=null||Pa(t)&&t.body!==null)&&(o==="GET"||o==="HEAD"))throw new TypeError("Request with GET/HEAD method cannot have body");let l=a.body!=null?a.body:Pa(t)&&t.body!==null?fr(t):null;q.call(this,l,{timeout:a.timeout||t.timeout||0,size:a.size||t.size||0});let m=new we(a.headers||t.headers||{});if(l!=null&&!m.has("Content-Type")){let g=vr(l);g&&m.append("Content-Type",g)}let h=Pa(t)?t.signal:null;if("signal"in a&&(h=a.signal),h!=null&&!Tc(h))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[Xe]={method:o,redirect:a.redirect||t.redirect||"follow",headers:m,parsedURL:s,signal:h},this.follow=a.follow!==void 0?a.follow:t.follow!==void 0?t.follow:20,this.compress=a.compress!==void 0?a.compress:t.compress!==void 0?t.compress:!0,this.counter=a.counter||t.counter||0,this.agent=a.agent||t.agent}get method(){return this[Xe].method}get url(){return bc(this[Xe].parsedURL)}get headers(){return this[Xe].headers}get redirect(){return this[Xe].redirect}get signal(){return this[Xe].signal}clone(){return new e(this)}};q.mixIn(mt.prototype);Object.defineProperty(mt.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0});Object.defineProperties(mt.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}});function Rc(e){let t=e[Xe].parsedURL,a=new we(e[Xe].headers);if(a.has("Accept")||a.set("Accept","*/*"),!t.protocol||!t.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof Pe.Readable&&!Ic)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let s=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)&&(s="0"),e.body!=null){let l=yr(e);typeof l=="number"&&(s=String(l))}s&&a.set("Content-Length",s),a.has("User-Agent")||a.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!a.has("Accept-Encoding")&&a.set("Accept-Encoding","gzip,deflate");let o=e.agent;return typeof o=="function"&&(o=o(t)),Object.assign({},t,{method:e.method,headers:vc(a),agent:o})}function Yt(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}Yt.prototype=Object.create(Error.prototype);Yt.prototype.constructor=Yt;Yt.prototype.name="AbortError";var Ci=Aa.URL||gr.URL,mr=Pe.PassThrough,Ec=function(t,a){let s=new Ci(a).hostname,o=new Ci(t).hostname;return s===o||s[s.length-o.length-1]==="."&&s.endsWith(o)},zc=function(t,a){let s=new Ci(a).protocol,o=new Ci(t).protocol;return s===o};function ct(e,t){if(!ct.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return q.Promise=ct.Promise,new ct.Promise(function(a,s){let o=new mt(e,t),l=Rc(o),m=(l.protocol==="https:"?hc:hr).request,h=o.signal,g=null,P=function(){let B=new Yt("The user aborted a request.");s(B),o.body&&o.body instanceof Pe.Readable&&Wn(o.body,B),!(!g||!g.body)&&g.body.emit("error",B)};if(h&&h.aborted){P();return}let J=function(){P(),G()},X=m(l),xe;h&&h.addEventListener("abort",J);function G(){X.abort(),h&&h.removeEventListener("abort",J),clearTimeout(xe)}o.timeout&&X.once("socket",function(R){xe=setTimeout(function(){s(new ee(`network timeout at: ${o.url}`,"request-timeout")),G()},o.timeout)}),X.on("error",function(R){s(new ee(`request to ${o.url} failed, reason: ${R.message}`,"system",R)),g&&g.body&&Wn(g.body,R),G()}),Pc(X,function(R){h&&h.aborted||g&&g.body&&Wn(g.body,R)}),parseInt(process.version.substring(1))<14&&X.on("socket",function(R){R.addListener("close",function(B){let b=R.listenerCount("data")>0;if(g&&b&&!B&&!(h&&h.aborted)){let V=new Error("Premature close");V.code="ERR_STREAM_PREMATURE_CLOSE",g.body.emit("error",V)}})}),X.on("response",function(R){clearTimeout(xe);let B=yc(R.headers);if(ct.isRedirect(R.statusCode)){let Ve=B.get("Location"),fe=null;try{fe=Ve===null?null:new Ci(Ve,o.url).toString()}catch{if(o.redirect!=="manual"){s(new ee(`uri requested responds with an invalid redirect URL: ${Ve}`,"invalid-redirect")),G();return}}switch(o.redirect){case"error":s(new ee(`uri requested responds with a redirect, redirect mode is set to error: ${o.url}`,"no-redirect")),G();return;case"manual":if(fe!==null)try{B.set("Location",fe)}catch(Ti){s(Ti)}break;case"follow":if(fe===null)break;if(o.counter>=o.follow){s(new ee(`maximum redirect reached at: ${o.url}`,"max-redirect")),G();return}let We={headers:new we(o.headers),follow:o.follow,counter:o.counter+1,agent:o.agent,compress:o.compress,method:o.method,body:o.body,signal:o.signal,timeout:o.timeout,size:o.size};if(!Ec(o.url,fe)||!zc(o.url,fe))for(let Ti of["authorization","www-authenticate","cookie","cookie2"])We.headers.delete(Ti);if(R.statusCode!==303&&o.body&&yr(o)===null){s(new ee("Cannot follow redirect with body being a readable stream","unsupported-redirect")),G();return}(R.statusCode===303||(R.statusCode===301||R.statusCode===302)&&o.method==="POST")&&(We.method="GET",We.body=void 0,We.headers.delete("content-length")),a(ct(new mt(fe,We))),G();return}}R.once("end",function(){h&&h.removeEventListener("abort",J)});let b=R.pipe(new mr),V={url:o.url,status:R.statusCode,statusText:R.statusMessage,headers:B,size:o.size,timeout:o.timeout,counter:o.counter},M=B.get("Content-Encoding");if(!o.compress||o.method==="HEAD"||M===null||R.statusCode===204||R.statusCode===304){g=new _e(b,V),a(g);return}let E={flush:Lt.Z_SYNC_FLUSH,finishFlush:Lt.Z_SYNC_FLUSH};if(M=="gzip"||M=="x-gzip"){b=b.pipe(Lt.createGunzip(E)),g=new _e(b,V),a(g);return}if(M=="deflate"||M=="x-deflate"){let Ve=R.pipe(new mr);Ve.once("data",function(fe){(fe[0]&15)===8?b=b.pipe(Lt.createInflate()):b=b.pipe(Lt.createInflateRaw()),g=new _e(b,V),a(g)}),Ve.on("end",function(){g||(g=new _e(b,V),a(g))});return}if(M=="br"&&typeof Lt.createBrotliDecompress=="function"){b=b.pipe(Lt.createBrotliDecompress()),g=new _e(b,V),a(g);return}g=new _e(b,V),a(g)}),fc(X,o)})}function Pc(e,t){let a;e.on("socket",function(s){a=s}),e.on("response",function(s){let o=s.headers;o["transfer-encoding"]==="chunked"&&!o["content-length"]&&s.once("close",function(l){if(a&&a.listenerCount("data")>0&&!l){let h=new Error("Premature close");h.code="ERR_STREAM_PREMATURE_CLOSE",t(h)}})})}function Wn(e,t){e.destroy?e.destroy(t):(e.emit("error",t),e.end())}ct.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};ct.Promise=global.Promise;wr.exports=Ae=ct;Object.defineProperty(Ae,"__esModule",{value:!0});Ae.default=Ae;Ae.Headers=we;Ae.Request=mt;Ae.Response=_e;Ae.FetchError=ee;Ae.AbortError=Yt});var Ir=ve((Ot,br)=>{var $i=Sr(),Ac=$i.default||$i,Ca=function(e,t){return/^\/\//.test(e)&&(e="https:"+e),Ac.call(this,e,t)};Ca.ponyfill=!0;br.exports=Ot=Ca;Ot.fetch=Ca;Ot.Headers=$i.Headers;Ot.Request=$i.Request;Ot.Response=$i.Response;Ot.default=Ca});var sl=ve(f=>{"use strict";var _n=function(e){return e[e.silent=0]="silent",e[e.error=1]="error",e[e.warn=2]="warn",e[e.info=3]="info",e[e.debug=4]="debug",e}({}),Fs=(e,t)=>_n[t]<=e,on=class{constructor(t,a="",s=console){this.logLevel=t,this.prefix=a,this.output=s,this.level=_n[this.logLevel]}makeMethod(t){return a=>{Fs(this.level,t)&&this.output[t](this.prefix?`${this.prefix} ${a}`:a)}}debug=this.makeMethod("debug");error=this.makeMethod("error");info=this.makeMethod("info");warn=this.makeMethod("warn")},Wr=new on("silent"),Qr=e=>{Wr=e},Nc=(e="warn",t="scaleway-sdk-js:")=>Qr(new on(e,t)),da=()=>Wr,Xr=(e,t)=>({request:a})=>{let s=a.clone();return t!==void 0&&s.headers.append(e,t),s},Yr=(e,t)=>async a=>Xr(e,await t())(a),$c=/^SCW[A-Z0-9]{17}$/i,Lc=/^[a-z]{2}-[a-z]{3}$/i,Oc=/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i,Dc=/^[a-z]{2}-[a-z]{3}-[1-9]$/i,wn=e=>Oc.test(e),Uc=e=>$c.test(e),kc=e=>wn(e),xc=e=>wn(e),Vc=e=>wn(e),jc=e=>Lc.test(e),Gc=e=>Dc.test(e),Bc=e=>{let t;try{t=new URL(e)}catch{return!1}return t.protocol==="http:"||t.protocol==="https:"},Mc=e=>typeof e.accessKey=="string"&&e.accessKey!==""&&typeof e.secretKey=="string"&&e.secretKey!=="";function Fc(e){if(!(e.accessKey&&e.secretKey))throw new Error("Invalid secrets, accessKey & secretKey must be defined. See https://www.scaleway.com/en/docs/identity-and-access-management/iam/how-to/create-api-keys/");if(!Uc(e.accessKey))throw new Error(`Invalid access key format '${e.accessKey}', expected SCWXXXXXXXXXXXXXXXXX format. See https://www.scaleway.com/en/docs/identity-and-access-management/iam/how-to/create-api-keys/`);if(!kc(e.secretKey))throw new Error(`Invalid secret key format '${e.secretKey}', expected a UUID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx. See https://www.scaleway.com/en/docs/identity-and-access-management/iam/how-to/create-api-keys/`)}var qr="x-session-token",ep="x-auth-token",Zc=e=>Yr(qr,e),Jc=e=>(Fc(e),Xr(ep,e.secretKey)),Hc=e=>`${e.substring(0,5)}xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx`,Kc=e=>`${e.substring(0,8)}-xxxx-xxxx-xxxx-xxxxxxxxxxxx`,Wc=([e,t])=>e===qr?[e,Hc(t)]:e===ep?[e,Kc(t)]:[e,t],tp=e=>t=>{let a={...t};return e.apiURL&&(a.apiURL=e.apiURL),e.defaultOrganizationId&&(a.defaultOrganizationId=e.defaultOrganizationId),e.defaultProjectId&&(a.defaultProjectId=e.defaultProjectId),e.defaultRegion&&(a.defaultRegion=e.defaultRegion),e.defaultZone&&(a.defaultZone=e.defaultZone),Mc(e)&&(a.interceptors=[{request:Jc(e)},...a.interceptors]),a},Qc=e=>t=>({...t,httpClient:e}),Xc=e=>t=>({...t,defaultPageSize:e}),Yc=e=>t=>({...t,userAgent:e}),qc=e=>t=>({...t,userAgent:t.userAgent?`${t.userAgent} ${e}`:e}),em=e=>t=>({...t,interceptors:t.interceptors.concat(e)}),tm=()=>e=>{if(!e.requestInterceptors&&!e.responseInterceptors)return e;let t=e.interceptors.concat((e.requestInterceptors??[]).map(a=>({request:a})),(e.responseInterceptors??[]).map(a=>({response:a})));return{...e,interceptors:t}},im=e=>{if(e.defaultOrganizationId!==void 0){if(typeof e.defaultOrganizationId!="string"||e.defaultOrganizationId.length===0)throw new Error("Default organization ID cannot be empty");if(!xc(e.defaultOrganizationId))throw new Error(`Invalid organization ID format '${e.defaultOrganizationId}', expected a UUID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx`)}if(e.defaultProjectId!==void 0){if(typeof e.defaultProjectId!="string"||e.defaultProjectId.length===0)throw new Error("Default project ID cannot be empty");if(!Vc(e.defaultProjectId))throw new Error(`Invalid project ID format '${e.defaultProjectId}', expected a UUID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx`)}if(e.defaultRegion&&!jc(e.defaultRegion))throw new Error(`Invalid default region format '${e.defaultRegion}'`);if(e.defaultZone&&!Gc(e.defaultZone))throw new Error(`Invalid default zone format '${e.defaultZone}'`);if(!Bc(e.apiURL))throw new Error(`Invalid URL ${e.apiURL}`);if(e.apiURL.endsWith("/"))throw new Error(`Invalid URL ${e.apiURL}: it should not have a trailing slash`);if(typeof e.httpClient!=typeof fetch)throw new Error("Invalid HTTP Client");if(e.defaultPageSize!==void 0&&(typeof e.defaultPageSize!="number"||Number.isNaN(e.defaultPageSize)||e.defaultPageSize<=0))throw new Error(`Invalid defaultPageSize ${e.defaultPageSize}: it should be a number above 0`);if(typeof e.userAgent!="string")throw new Error("Invalid User-Agent")},ip="v2.22.0",am=`scaleway-sdk-js/${ip}`,nm=()=>typeof window<"u"&&typeof window.document<"u",sm=e=>async t=>e.reduce(async(a,s)=>s({request:await a}),Promise.resolve(t)),om=e=>async t=>e.reduce(async(a,s)=>s({response:await a}),Promise.resolve(t)),rm=e=>async(t,a)=>{let s=a;for(let o of e)try{return await o({request:t,error:s})}catch(l){s=l}throw s},pm=e=>e.replace(/\w+/g,t=>`${t[0].toUpperCase()}${t.slice(1).toLowerCase()}`),dm=([e,t])=>`${pm(e)}: ${t}`,ap=e=>Array.from(e.entries(),dm),lm=async e=>[`${e.method.toUpperCase()}: ${e.url}`,...ap(e.headers),await e.clone().text()].join(`\r
`),cm=async e=>[`HTTP ${e.status} ${e.ok?"OK":"NOK"}`,...ap(e.headers),await e.clone().text()].join(`\r
`),ms=class e extends Request{constructor(t,a){super(t),this.request=t,this.obfuscate=a}get headers(){return new Headers(Array.from(this.request.headers,this.obfuscate))}clone(){return new e(this.request,this.obfuscate)}},mm=e=>({request:t})=>new ms(t,e),hm=({request:e})=>e,gm=(e,t=hm)=>async({request:a})=>(Fs(_n[da().logLevel],"debug")&&da().debug(`--------------- Scaleway SDK REQUEST ${e} ---------------
${await lm(await t({request:a}))}
---------------------------------------------------------`),a),um=e=>async({response:t})=>(Fs(_n[da().logLevel],"debug")&&da().debug(`--------------- Scaleway SDK RESPONSE ${e} ---------------
${await cm(t)}
---------------------------------------------------------`),t),fm=e=>e!=null&&typeof e=="object"&&"status"in e&&typeof e.status=="number"&&"statusText"in e&&typeof e.statusText=="string"&&"headers"in e&&typeof e.headers=="object"&&"body"in e&&typeof e.body<"u",n=e=>{let t=typeof e;return e!=null&&t!=="string"&&t!=="number"&&t!=="boolean"&&!Array.isArray(e)&&t==="object"},np=e=>{if(!n(e))return!1;for(let t of Object.values(e))if(!Array.isArray(t)||Object.values(t).find(a=>typeof a!="string")!==void 0)return!1;return!0},vm=(e,t)=>{let a=[`http error ${e}`];return typeof t=="string"?a.push(t):n(t)&&(typeof t.resource=="string"&&a.push(`resource ${t.resource}`),typeof t.message=="string"&&a.push(t.message),t.fields&&np(t.fields)&&a.push(Object.entries(t.fields).map(([s,o])=>`${s} (${o.join(", ")})`).join(", "))),a.join(": ")},F=class e extends Error{constructor(t,a,s=vm(t,a)){super(s),this.status=t,this.body=a,this.message=s,this.name="ScalewayError",this.rawMessage=typeof a=="object"&&typeof a.message=="string"?a.message:void 0,Object.setPrototypeOf(this,new.target.prototype)}static fromJSON(t,a){return new e(t,a)}toString(){return`${this.name}: ${this.message}`}},ym=e=>`invalid argument(s): ${e.reduce((a,s)=>{let o="";switch(s.reason){case"required":o="is required";break;case"format":o="is wrongly formatted";break;case"constraint":o="does not respect constraint";break;default:o="is invalid for unexpected reason";break}return s.helpMessage&&s.helpMessage.length>0&&(o=o.concat(", ",s.helpMessage)),a.push(`${s.argumentName} ${o}`),a},[]).join("; ")}`,la=class e extends F{constructor(t,a,s){super(t,a,ym(s)),this.status=t,this.body=a,this.details=s,this.name="InvalidArgumentsError"}static fromJSON(t,a){return Array.isArray(a.details)?new e(t,a,a.details.reduce((s,o)=>n(o)&&typeof o.argument_name=="string"&&typeof o.reason=="string"?s.concat({argumentName:o.argument_name,helpMessage:typeof o.help_message=="string"?o.help_message:void 0,reason:o.reason}):s,[])):null}},_m=e=>`quota(s) exceeded: ${e.map(t=>{let a=`${t.resource} has reached its quota (${t.current}/${t.quota})`;return t.scope?`${a} for ${t.scope.kind} '${t.scope.id}'`:a}).join("; ")}`,wm=e=>{if(typeof e.organization_id=="string"&&e.organization_id.length)return{id:e.organization_id,kind:"organization"};if(typeof e.project_id=="string"&&e.project_id.length)return{id:e.project_id,kind:"project"}},ca=class e extends F{constructor(t,a,s){super(t,a,_m(s)),this.status=t,this.body=a,this.list=s,this.name="QuotasExceededError"}static fromJSON(t,a){return Array.isArray(a.details)?new e(t,a,a.details.reduce((s,o)=>n(o)&&typeof o.resource=="string"&&typeof o.quota=="number"&&typeof o.current=="number"?s.concat({current:o.current,quota:o.quota,resource:o.resource,scope:wm(o)}):s,[])):null}},hs=class{static fromJSON(t,a){if(typeof a.message=="string"&&a.message.toLowerCase().includes("quota exceeded for this resource"))return new ca(t,a,[{current:0,quota:0,resource:typeof a.resource=="string"?a.resource:""}]);let s=a.fields&&np(a.fields)?a.fields:{},o=Object.entries(s);return o.length?new la(t,a,o.map(([l,m])=>m.map(h=>({argumentName:l,helpMessage:h,reason:"constraint"}))).flat()):new F(t,a)}},ma=class e extends F{constructor(t,a,s,o){super(t,a,`resource ${s} with ID ${o} is not found`),this.status=t,this.body=a,this.resource=s,this.resourceId=o,this.name="ResourceNotFoundError"}static fromJSON(t,a){return typeof a.resource!="string"||typeof a.resource_id!="string"?null:new e(t,a,a.resource,a.resource_id)}},gs=class{static fromJSON(t,a){let s=typeof a.message=="string"?a.message.split(/"|'/):[];return s.length===3&&wn(s[1])?new ma(t,a,s[0].trim().toLowerCase().split(" ").join("_"),s[1]):new F(t,a)}},rn=class e extends F{constructor(t,a,s,o,l){super(t,a,`resource ${s} with ID ${o} already exists: ${l}`),this.status=t,this.body=a,this.resource=s,this.resourceId=o,this.helpMessage=l,this.name="AlreadyExistsError"}static fromJSON(t,a){return typeof a.resource!="string"||typeof a.resource_id!="string"||typeof a.help_message!="string"?null:new e(t,a,a.resource,a.resource_id,a.help_message)}},Sm=(e,t)=>{let a;switch(t){case"invalid_argument":a=`invalid ${e} format or empty value`;break;case"not_found":a=`${e} does not exist`;break;case"expired":a=`${e} is expired`;break;default:a=`unknown reason for ${e}`}return`denied authentication: ${a}`},pn=class e extends F{constructor(t,a,s,o){super(t,a,Sm(s,o)),this.status=t,this.body=a,this.method=s,this.reason=o,this.name="DeniedAuthenticationError"}static fromJSON(t,a){return typeof a.method!="string"||typeof a.reason!="string"?null:new e(t,a,a.method,a.reason)}},dn=class e extends F{constructor(t,a,s){super(t,a,`resource ${s} is out of stock`),this.status=t,this.body=a,this.resource=s,this.name="OutOfStockError"}static fromJSON(t,a){return typeof a.resource!="string"?null:new e(t,a,a.resource)}},bm=e=>`insufficient permissions: ${e.map(({action:t,resource:a})=>`${t} ${a}`).join("; ")}`,ln=class e extends F{constructor(t,a,s){super(t,a,bm(s)),this.status=t,this.body=a,this.list=s,this.name="PermissionsDeniedError"}static fromJSON(t,a){return Array.isArray(a.details)?new e(t,a,a.details.reduce((s,o)=>n(o)&&typeof o.resource=="string"&&typeof o.action=="string"?s.concat({action:o.action,resource:o.resource}):s,[])):null}},Im=(e,t)=>{let a=`precondition failed: ${e}`;return typeof t=="string"&&t.length>0&&(a=a.concat(", ",t)),a},cn=class e extends F{constructor(t,a,s,o){super(t,a,Im(s,o)),this.status=t,this.body=a,this.precondition=s,this.helpMessage=o,this.name="PreconditionFailedError"}static fromJSON(t,a){return typeof a.precondition!="string"||typeof a.help_message!="string"?null:new e(t,a,a.precondition,a.help_message)}},mn=class e extends F{constructor(t,a,s,o,l){super(t,a,`resource ${s} with ID ${o} expired since ${l.toISOString()}`),this.status=t,this.body=a,this.resource=s,this.resourceId=o,this.expiredSince=l,this.name="ResourceExpiredError"}static fromJSON(t,a){return typeof a.resource!="string"||typeof a.resource_id!="string"||typeof a.expired_since!="string"?null:new e(t,a,a.resource,a.resource_id,new Date(a.expired_since))}},hn=class e extends F{constructor(t,a,s,o){super(t,a,`resource ${s} with ID ${o} is locked`),this.status=t,this.body=a,this.resource=s,this.resourceId=o,this.name="ResourceLockedError"}static fromJSON(t,a){return typeof a.resource!="string"||typeof a.resource_id!="string"?null:new e(t,a,a.resource,a.resource_id)}},Tm=(e,t,a,s)=>{let o=[];t&&(t.windowSeconds?o.push(`quota is ${t.quota} for ${t.windowSeconds}s`):o.push(`quota is ${t.quota}`)),a?o.push(`resets in ${a}s`):s&&o.push(`resets at ${s.toISOString()}`);let l="too many requests";return o.length>0&&(l+=` (${o.join(", ")})`),e.length>0&&(l+=`: ${e}`),l},gn=class e extends F{constructor(t,a,s,o,l,m){super(t,a,Tm(s,o,l,m)),this.status=t,this.body=a,this.helpMessage=s,this.limit=o,this.resetSeconds=l,this.resetAt=m,this.name="TooManyRequestsError"}static fromJSON(t,a){if(typeof a.help_message!="string")return null;let s;return n(a.limit)&&typeof a.limit.quota=="number"&&(s={quota:a.limit.quota,windowSeconds:typeof a.limit.window_seconds=="number"?a.limit.window_seconds:void 0}),new e(t,a,a.help_message,s,typeof a.reset_seconds=="number"?a.reset_seconds:void 0,typeof a.reset_at=="string"?new Date(a.reset_at):void 0)}},un=class e extends F{constructor(t,a,s,o,l){super(t,a,`resource ${s} with ID ${o} is in a transient state: ${l}`),this.status=t,this.body=a,this.resource=s,this.resourceId=o,this.currentState=l,this.name="TransientStateError"}static fromJSON(t,a){return typeof a.resource!="string"||typeof a.resource_id!="string"||typeof a.current_state!="string"?null:new e(t,a,a.resource,a.resource_id,a.current_state)}},Rm=(e,t,a)=>{let s;switch(e){case"denied_authentication":s=pn;break;case"invalid_arguments":s=la;break;case"out_of_stock":s=dn;break;case"permissions_denied":s=ln;break;case"precondition_failed":s=cn;break;case"quotas_exceeded":s=ca;break;case"expired":s=mn;break;case"not_found":s=ma;break;case"locked":s=hn;break;case"transient_state":s=un;break;case"already_exists":s=rn;break;case"too_many_requests":s=gn;break;default:return null}return s.fromJSON(t,a)},Em=(e,t,a)=>{switch(e){case"unknown_resource":return gs.fromJSON(t,a);case"invalid_request_error":return hs.fromJSON(t,a);default:return null}},zm=(e,t)=>typeof t.type=="string"&&(Rm(t.type,e,t)??Em(t.type,e,t))||new F(e,t),Pm="x-total-count",zr="total_count",Am=(e,t)=>{let a=t.get(Pm);if(!a)return e;let s=parseInt(a,10);return Number.isNaN(s)?e:n(e)&&!(zr in e)?Object.assign(e,{[zr]:s}):e},Cm=(e,t)=>async a=>{if(!fm(a))throw new TypeError("Invalid response object");if(a.ok){if(a.status===204)return e(void 0);let o=a.headers.get("Content-Type");try{return e(t==="json"&&o==="application/json"?Am(await a.json(),a.headers):t==="blob"?await a.blob():await a.text())}catch(l){throw new F(a.status,`could not parse '${o??""}' response${l instanceof Error?`: ${l.message}`:""}`)}}let s=await a.clone().json().catch(()=>a.text());throw n(s)?zm(a.status,s):new F(a.status,typeof s=="string"?s:"cannot read error response body")},Nm=(e,t)=>{let{path:a}=e;return e.urlParams instanceof URLSearchParams&&(a=a.concat(`?${e.urlParams.toString()}`)),new Request(`${t.apiURL}${a}`,{body:e.body,headers:{Accept:"application/json",...nm()?{}:{"User-Agent":t.userAgent},...e.headers},method:e.method})},$m=e=>e,Lm=(e,t)=>{let a=0,s=m=>sm([...e.interceptors.map(h=>h.request).filter(h=>h),gm(m,mm(Wc))]),o=m=>om([...e.interceptors.map(h=>h.response).filter(h=>h),um(m)]),l=()=>rm(e.interceptors.map(m=>m.responseError).filter(m=>m));return async(m,h=$m)=>{let g=`${a+=1}`,J=await s(g)(Nm(m,e));try{let X=await t(J),G=await o(g)(X);return await Cm(h,m.responseType??"json")(G)}catch(X){let G=await l()(J,X);return h(G)}}},Om={apiURL:"https://api.scaleway.com",httpClient:fetch,interceptors:[],userAgent:am},sp=(...e)=>{let t=e.concat([tm()]).reduce((a,s)=>s(a),Om);return im(t),da().info(`init Scaleway SDK version ${ip}`),{fetch:Lm(t,t.httpClient),settings:t}},Dm=(e={})=>sp(tp(e)),Um=Object.freeze({__proto__:null,AlreadyExistsError:rn,DeniedAuthenticationError:pn,InvalidArgumentsError:la,OutOfStockError:dn,PermissionsDeniedError:ln,PreconditionFailedError:cn,QuotasExceededError:ca,ResourceExpiredError:mn,ResourceLockedError:hn,ResourceNotFoundError:ma,ScalewayError:F,TooManyRequestsError:gn,TransientStateError:un}),km=e=>new Promise(t=>{setTimeout(t,e)}),xm=300,Vm=1,jm=30;function*Te(e,t){if(e<1||t<1||e>t)throw new Error("Waiter: minDelay must be >= 1 and maxDelay must be >= minDelay");let a=1,s=Math.log(t/e)/Math.log(2)+1,o=(l,m)=>l+Math.random()*(m-l);for(;;)a>s?yield t:yield o(e,e*2**(a-1)),a+=1}var Re=async(e,t,a=xm)=>{let s=Date.now()+a*1e3,o=0;for(;Date.now()<=s;){let l=t.next(o+=1).value*1e3;if(s<=Date.now()+l)break;await km(l);let{value:m,done:h}=await e();if(h)return m}throw new Error(`Timeout after ${a}s`)},v=(e,t,a,s,o=Te(s?.minDelay??Vm,s?.maxDelay??jm))=>Re(async()=>{let l=await t(a);return{done:await e(l),value:l}},o,s?.timeout),w=class{constructor(t){this.client=t}};function i(e,t){if(typeof t=="string"&&t.length>0)return t;if(typeof t=="number")return t.toString();throw new TypeError(`param ${e} cannot be empty in request`)}var u=(e,t=!1)=>{let a=e.find(o=>o.value!==void 0)??e.find(o=>o.default!==void 0),s=a?.value??a?.default;if(a&&s!==void 0)return{[a.param]:s};if(t){let o=e.map(l=>l.param).join(" or ");throw new TypeError(`one of ${o} must be indicated in the request`)}return{}},d=(...e)=>{let t=new URLSearchParams;for(let[a,s]of e)if(typeof a=="string"&&s!=null)if(Array.isArray(s))for(let o of s)o!==null&&t.append(a,o instanceof Date?o.toISOString():o.toString());else t.append(a,s instanceof Date?s.toISOString():s.toString());return t},p=e=>{if(typeof e!="string")return;let t=new Date(e);if(!Number.isNaN(t.getTime()))return t},r=(e,t,a=!0)=>Array.isArray(e)?e.map(s=>t(s)):a?[]:void 0,It=(e,t,a=!0)=>!e||typeof e!="object"||!(e instanceof Object)||Array.isArray(e)?a?{}:void 0:Object.entries(e).reduce((s,[o,l])=>({...s,[o]:t(l)}),{}),L=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Money' failed as data isn't a dictionary.");return{currencyCode:e.currency_code,nanos:e.nanos,units:e.units}},Gm=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServiceInfo' failed as data isn't a dictionary.");return{description:e.description,documentationUrl:e.documentation_url,name:e.name,version:e.version}},Bm=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ScwFile' failed as data isn't a dictionary.");return{content:e.content,contentType:e.content_type,name:e.name}},op=e=>{if(!Array.isArray(e))throw new TypeError("Unmarshalling the type 'TimeSeriesPoint' failed as data isn't an array.");return{timestamp:p(e[0]),value:e[1]}},Tt=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'TimeSeries' failed as data isn't a dictionary.");return{metadata:e.metadata,name:e.name,points:r(e.points,op)}},Mm=e=>({content:e.content,content_type:e.contentType,name:e.name}),Fm=e=>({currency_code:e.currencyCode,nanos:e.nanos,units:e.units}),Zm=e=>({timestamp:e.timestamp?.toISOString(),value:e.value}),Jm=e=>({metadata:e.metadata,name:e.name,points:e.points.map(t=>Zm(t))}),Hm=e=>t=>t[e];function*rp(e,t,a,s){if(!Array.isArray(s[e]))throw new Error(`Property ${e} is not a list in paginated result`);let o=Hm(e),l=a.page||1;l===1&&(yield Promise.resolve(o(s)),l+=1);let{length:m}=s[e];if(!m)return;let{totalCount:h}=s;for(;l<=Math.floor((h+m-1)/m);)yield t({...a,page:l}).then(o),l+=1}async function*Km(e,t,a,s=t(a)){yield*rp(e,t,a,await s)}var Wm=async(e,t,a,s=t(a))=>(await Promise.all(Array.from(rp(e,t,a,await s)))).flat(),c=(e,t,a)=>{let s=t(a);return Object.assign(s,{all:()=>Wm(e,t,a,s),[Symbol.asyncIterator]:()=>Km(e,t,a,s)})},Pr=["admiring","adoring","affectionate","agitated","amazing","angry","awesome","beautiful","blissful","bold","boring","brave","busy","charming","clever","cool","compassionate","competent","condescending","confident","cranky","crazy","dazzling","determined","distracted","dreamy","eager","ecstatic","elastic","elated","elegant","eloquent","epic","exciting","fervent","festive","flamboyant","focused","friendly","frosty","funny","gallant","gifted","goofy","gracious","great","happy","hardcore","heuristic","hopeful","hungry","infallible","inspiring","interesting","intelligent","jolly","jovial","keen","kind","laughing","loving","lucid","magical","mystifying","modest","musing","naughty","nervous","nice","nifty","nostalgic","objective","optimistic","peaceful","pedantic","pensive","practical","priceless","quirky","quizzical","recursing","relaxed","reverent","romantic","sad","serene","sharp","silly","sleepy","stoic","strange","stupefied","suspicious","sweet","tender","thirsty","trusting","unruffled","upbeat","vibrant","vigilant","vigorous","wizardly","wonderful","xenodochial","youthful","zealous","zen"],Ar=["albattani","allen","almeida","antonelli","agnesi","archimedes","ardinghelli","aryabhata","austin","babbage","banach","banzai","bardeen","bartik","bassi","beaver","bell","benz","bhabha","bhaskara","black","blackburn","blackwell","bohr","booth","borg","bose","bouman","boyd","brahmagupta","brattain","brown","buck","burnell","cannon","carson","cartwright","carver","cerf","chandrasekhar","chaplygin","chatelet","chatterjee","chebyshev","cohen","chaum","clarke","colden","cori","cray","curran","curie","darwin","davinci","dewdney","dhawan","diffie","dijkstra","dirac","driscoll","dubinsky","easley","edison","einstein","elbakyan","elgamal","elion","ellis","engelbart","euclid","euler","faraday","feistel","fermat","fermi","feynman","franklin","gagarin","galileo","galois","ganguly","gates","gauss","germain","goldberg","goldstine","goldwasser","golick","goodall","gould","greider","grothendieck","haibt","hamilton","haslett","hawking","hellman","heisenberg","hermann","herschel","hertz","heyrovsky","hodgkin","hofstadter","hoover","hopper","hugle","hypatia","ishizaka","jackson","jang","jemison","jennings","jepsen","johnson","joliot","jones","kalam","kapitsa","kare","keldysh","keller","kepler","khayyam","khorana","kilby","kirch","knuth","kowalevski","lalande","lamarr","lamport","leakey","leavitt","lederberg","lehmann","lewin","lichterman","liskov","lovelace","lumiere","mahavira","margulis","matsumoto","maxwell","mayer","mccarthy","mcclintock","mclaren","mclean","mcnulty","mendel","mendeleev","meitner","meninsky","merkle","mestorf","mirzakhani","montalcini","moore","morse","murdock","moser","napier","nash","neumann","newton","niel","nightingale","nobel","noether","northcutt","noyce","panini","pare","pascal","pasteur","payne","perlman","pike","poincare","poitras","proskuriakova","ptolemy","raman","ramanujan","ride","ritchie","rhodes","robinson","roentgen","rosalind","rubin","saha","sammet","sanderson","satoshi","shamir","shannon","shaw","shirley","shockley","shtern","sinoussi","snyder","solomon","spence","stonebraker","sutherland","swanson","swartz","swirles","taussig","tereshkova","tesla","tharp","thompson","torvalds","tu","turing","varahamihira","vaughan","visvesvaraya","volhard","villani","wescoff","wilbur","wiles","williams","williamson","wilson","wing","wozniak","wright","wu","yalow","yonath","zhukovsky"],_=(e="",t="-")=>{let a=`${Pr[Math.floor(Math.random()*Pr.length)]??""}${t}${Ar[Math.floor(Math.random()*Ar.length)]??""}`;return a===`boring${t}wozniak`?_(e,t):e.length>0?`${e}${t}${a}`:a},ja=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Project' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),description:e.description,id:e.id,name:e.name,organizationId:e.organization_id,updatedAt:p(e.updated_at)}},Qm=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListProjectsResponse' failed as data isn't a dictionary.");return{projects:r(e.projects,ja),totalCount:e.total_count}},Xm=(e,t)=>({description:e.description,name:e.name||_("proj"),organization_id:e.organizationId??t.defaultOrganizationId}),Ym=(e,t)=>({description:e.description,name:e.name}),Cr={"Content-Type":"application/json; charset=utf-8"},qm=class extends w{createProject=(t={})=>this.client.fetch({body:JSON.stringify(Xm(t,this.client.settings)),headers:Cr,method:"POST",path:"/account/v2/projects"},ja);pageOfListProjects=(t={})=>this.client.fetch({method:"GET",path:"/account/v2/projects",urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId??this.client.settings.defaultOrganizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_ids",t.projectIds])},Qm);listProjects=(t={})=>c("projects",this.pageOfListProjects,t);getProject=(t={})=>this.client.fetch({method:"GET",path:`/account/v2/projects/${i("projectId",t.projectId??this.client.settings.defaultProjectId)}`},ja);deleteProject=(t={})=>this.client.fetch({method:"DELETE",path:`/account/v2/projects/${i("projectId",t.projectId??this.client.settings.defaultProjectId)}`});updateProject=(t={})=>this.client.fetch({body:JSON.stringify(Ym(t,this.client.settings)),headers:Cr,method:"PATCH",path:`/account/v2/projects/${i("projectId",t.projectId??this.client.settings.defaultProjectId)}`},ja)},eh=Object.freeze({__proto__:null,API:qm}),Ga=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Project' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),description:e.description,id:e.id,name:e.name,organizationId:e.organization_id,updatedAt:p(e.updated_at)}},th=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListProjectsResponse' failed as data isn't a dictionary.");return{projects:r(e.projects,Ga),totalCount:e.total_count}},ih=(e,t)=>({description:e.description,name:e.name||_("proj"),organization_id:e.organizationId??t.defaultOrganizationId}),ah=(e,t)=>({description:e.description,name:e.name}),Nr={"Content-Type":"application/json; charset=utf-8"},us=class extends w{createProject=t=>this.client.fetch({body:JSON.stringify(ih(t,this.client.settings)),headers:Nr,method:"POST",path:"/account/v3/projects"},Ga);pageOfListProjects=(t={})=>this.client.fetch({method:"GET",path:"/account/v3/projects",urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId??this.client.settings.defaultOrganizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_ids",t.projectIds])},th);listProjects=(t={})=>c("projects",this.pageOfListProjects,t);getProject=(t={})=>this.client.fetch({method:"GET",path:`/account/v3/projects/${i("projectId",t.projectId??this.client.settings.defaultProjectId)}`},Ga);deleteProject=(t={})=>this.client.fetch({method:"DELETE",path:`/account/v3/projects/${i("projectId",t.projectId??this.client.settings.defaultProjectId)}`});updateProject=(t={})=>this.client.fetch({body:JSON.stringify(ah(t,this.client.settings)),headers:Nr,method:"PATCH",path:`/account/v3/projects/${i("projectId",t.projectId??this.client.settings.defaultProjectId)}`},Ga)},nh={description:{maxLength:200},name:{maxLength:64,minLength:1,pattern:/^[a-zA-Z0-9\._\- ]+$/}},sh={name:{maxLength:64,minLength:1,pattern:/^[a-zA-Z0-9\._\- ]+$/},page:{greaterThan:0},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:100}},oh={description:{maxLength:200},name:{maxLength:64,minLength:1,pattern:/^[a-zA-Z0-9\._\- ]+$/}},rh=Object.freeze({__proto__:null,ProjectApiCreateProjectRequest:nh,ProjectApiListProjectsRequest:sh,ProjectApiUpdateProjectRequest:oh}),ph=Object.freeze({__proto__:null,ProjectAPI:us,ValidationRules:rh}),dh=Object.freeze({__proto__:null,v2:eh,v3:ph}),pp=["starting","rebooting","updating","locking","unlocking","reinstalling"],dp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OS' failed as data isn't a dictionary.");return{compatibleServerTypes:e.compatible_server_types,id:e.id,imageUrl:e.image_url,label:e.label,name:e.name}},lh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerTypeCPU' failed as data isn't a dictionary.");return{coreCount:e.core_count,name:e.name}},ch=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerTypeDisk' failed as data isn't a dictionary.");return{capacity:e.capacity,type:e.type}},mh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerTypeMemory' failed as data isn't a dictionary.");return{capacity:e.capacity,type:e.type}},lp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerType' failed as data isn't a dictionary.");return{cpu:e.cpu?lh(e.cpu):void 0,disk:e.disk?ch(e.disk):void 0,memory:e.memory?mh(e.memory):void 0,minimumLeaseDuration:e.minimum_lease_duration,name:e.name,stock:e.stock}},ii=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Server' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),deletableAt:p(e.deletable_at),id:e.id,ip:e.ip,name:e.name,organizationId:e.organization_id,projectId:e.project_id,status:e.status,type:e.type,updatedAt:p(e.updated_at),vncUrl:e.vnc_url,zone:e.zone}},hh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListOSResponse' failed as data isn't a dictionary.");return{os:r(e.os,dp),totalCount:e.total_count}},gh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListServerTypesResponse' failed as data isn't a dictionary.");return{serverTypes:r(e.server_types,lp)}},uh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListServersResponse' failed as data isn't a dictionary.");return{servers:r(e.servers,ii),totalCount:e.total_count}},fh=(e,t)=>({name:e.name||_("as"),project_id:e.projectId??t.defaultProjectId,type:e.type}),vh=(e,t)=>({name:e.name}),Oa={"Content-Type":"application/json; charset=utf-8"},yh=class extends w{static LOCALITIES=["fr-par-3"];listServerTypes=(t={})=>this.client.fetch({method:"GET",path:`/apple-silicon/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/server-types`},gh);getServerType=t=>this.client.fetch({method:"GET",path:`/apple-silicon/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/server-type/${i("serverType",t.serverType)}`},lp);createServer=t=>this.client.fetch({body:JSON.stringify(fh(t,this.client.settings)),headers:Oa,method:"POST",path:`/apple-silicon/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers`},ii);pageOfListServers=(t={})=>this.client.fetch({method:"GET",path:`/apple-silicon/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers`,urlParams:d(["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},uh);listServers=(t={})=>c("servers",this.pageOfListServers,t);pageOfListOS=(t={})=>this.client.fetch({method:"GET",path:`/apple-silicon/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/os`,urlParams:d(["name",t.name],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["server_type",t.serverType])},hh);listOS=(t={})=>c("os",this.pageOfListOS,t);getOS=t=>this.client.fetch({method:"GET",path:`/apple-silicon/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/os/${i("osId",t.osId)}`},dp);getServer=t=>this.client.fetch({method:"GET",path:`/apple-silicon/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}`},ii);waitForServer=(t,a)=>v(a?.stop??(s=>Promise.resolve(!pp.includes(s.status))),this.getServer,t,a);updateServer=t=>this.client.fetch({body:JSON.stringify(vh(t,this.client.settings)),headers:Oa,method:"PATCH",path:`/apple-silicon/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}`},ii);deleteServer=t=>this.client.fetch({method:"DELETE",path:`/apple-silicon/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}`});rebootServer=t=>this.client.fetch({body:"{}",headers:Oa,method:"POST",path:`/apple-silicon/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/reboot`},ii);reinstallServer=t=>this.client.fetch({body:"{}",headers:Oa,method:"POST",path:`/apple-silicon/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/reinstall`},ii)},_h=Object.freeze({__proto__:null,API:yh,SERVER_TRANSIENT_STATUSES:pp}),wh=Object.freeze({__proto__:null,v1alpha1:_h}),cp=["to_install","installing"],Sh=["attaching","detaching"],mp=["delivering","stopping","starting","deleting","ordered","resetting"],hp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'IP' failed as data isn't a dictionary.");return{address:e.address,id:e.id,reverse:e.reverse,reverseStatus:e.reverse_status,reverseStatusMessage:e.reverse_status_message,version:e.version}},Li=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OSOSField' failed as data isn't a dictionary.");return{defaultValue:e.default_value,editable:e.editable,required:e.required}},gp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OS' failed as data isn't a dictionary.");return{allowed:e.allowed,enabled:e.enabled,id:e.id,licenseRequired:e.license_required,logoUrl:e.logo_url,name:e.name,password:e.password?Li(e.password):void 0,servicePassword:e.service_password?Li(e.service_password):void 0,serviceUser:e.service_user?Li(e.service_user):void 0,ssh:e.ssh?Li(e.ssh):void 0,user:e.user?Li(e.user):void 0,version:e.version}},bh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CPU' failed as data isn't a dictionary.");return{benchmark:e.benchmark,coreCount:e.core_count,frequency:e.frequency,name:e.name,threadCount:e.thread_count}},Ih=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Disk' failed as data isn't a dictionary.");return{capacity:e.capacity,type:e.type}},Th=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Memory' failed as data isn't a dictionary.");return{capacity:e.capacity,frequency:e.frequency,isEcc:e.is_ecc,type:e.type}},Rh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OfferOptionOffer' failed as data isn't a dictionary.");return{enabled:e.enabled,id:e.id,manageable:e.manageable,name:e.name,osId:e.os_id,price:e.price?L(e.price):void 0,subscriptionPeriod:e.subscription_period}},Eh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PersistentMemory' failed as data isn't a dictionary.");return{capacity:e.capacity,frequency:e.frequency,type:e.type}},zh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RaidController' failed as data isn't a dictionary.");return{model:e.model,raidLevel:e.raid_level}},up=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Offer' failed as data isn't a dictionary.");return{bandwidth:e.bandwidth,commercialRange:e.commercial_range,cpus:r(e.cpus,bh),disks:r(e.disks,Ih),enable:e.enable,fee:e.fee?L(e.fee):void 0,id:e.id,incompatibleOsIds:e.incompatible_os_ids,memories:r(e.memories,Th),name:e.name,operationPath:e.operation_path,options:r(e.options,Rh),persistentMemories:r(e.persistent_memories,Eh),pricePerHour:e.price_per_hour?L(e.price_per_hour):void 0,pricePerMonth:e.price_per_month?L(e.price_per_month):void 0,privateBandwidth:e.private_bandwidth,quotaName:e.quota_name,raidControllers:r(e.raid_controllers,zh),sharedBandwidth:e.shared_bandwidth,stock:e.stock,subscriptionPeriod:e.subscription_period,tags:e.tags}},fp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Option' failed as data isn't a dictionary.");return{id:e.id,manageable:e.manageable,name:e.name}},Zs=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerPrivateNetwork' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,privateNetworkId:e.private_network_id,projectId:e.project_id,serverId:e.server_id,status:e.status,updatedAt:p(e.updated_at),vlan:e.vlan}},Ph=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerInstall' failed as data isn't a dictionary.");return{hostname:e.hostname,osId:e.os_id,serviceUrl:e.service_url,serviceUser:e.service_user,sshKeyIds:e.ssh_key_ids,status:e.status,user:e.user}},Ah=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerOption' failed as data isn't a dictionary.");return{expiresAt:p(e.expires_at),id:e.id,manageable:e.manageable,name:e.name,status:e.status}},Ch=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerRescueServer' failed as data isn't a dictionary.");return{password:e.password,user:e.user}},Le=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Server' failed as data isn't a dictionary.");return{bootType:e.boot_type,createdAt:p(e.created_at),description:e.description,domain:e.domain,id:e.id,install:e.install?Ph(e.install):void 0,ips:r(e.ips,hp),name:e.name,offerId:e.offer_id,offerName:e.offer_name,options:r(e.options,Ah),organizationId:e.organization_id,pingStatus:e.ping_status,projectId:e.project_id,rescueServer:e.rescue_server?Ch(e.rescue_server):void 0,status:e.status,tags:e.tags,updatedAt:p(e.updated_at),zone:e.zone}},vp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Setting' failed as data isn't a dictionary.");return{enabled:e.enabled,id:e.id,projectId:e.project_id,type:e.type}},$r=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'BMCAccess' failed as data isn't a dictionary.");return{expiresAt:p(e.expires_at),login:e.login,password:e.password,url:e.url}},Nh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetServerMetricsResponse' failed as data isn't a dictionary.");return{pings:e.pings?Tt(e.pings):void 0}},$h=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListOSResponse' failed as data isn't a dictionary.");return{os:r(e.os,gp),totalCount:e.total_count}},Lh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListOffersResponse' failed as data isn't a dictionary.");return{offers:r(e.offers,up),totalCount:e.total_count}},Oh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListOptionsResponse' failed as data isn't a dictionary.");return{options:r(e.options,fp),totalCount:e.total_count}},Dh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerEvent' failed as data isn't a dictionary.");return{action:e.action,createdAt:p(e.created_at),id:e.id,updatedAt:p(e.updated_at)}},Uh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListServerEventsResponse' failed as data isn't a dictionary.");return{events:r(e.events,Dh),totalCount:e.total_count}},kh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListServerPrivateNetworksResponse' failed as data isn't a dictionary.");return{serverPrivateNetworks:r(e.server_private_networks,Zs),totalCount:e.total_count}},xh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListServersResponse' failed as data isn't a dictionary.");return{servers:r(e.servers,Le),totalCount:e.total_count}},Vh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSettingsResponse' failed as data isn't a dictionary.");return{settings:r(e.settings,vp),totalCount:e.total_count}},jh=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetServerPrivateNetworksResponse' failed as data isn't a dictionary.");return{serverPrivateNetworks:r(e.server_private_networks,Zs)}},Gh=(e,t)=>({expires_at:e.expiresAt}),Bh=(e,t)=>({hostname:e.hostname,os_id:e.osId,password:e.password,service_password:e.servicePassword,service_user:e.serviceUser,ssh_key_ids:e.sshKeyIds,user:e.user}),Mh=(e,t)=>({description:e.description,install:e.install!==void 0?Bh(e.install):void 0,name:e.name,offer_id:e.offerId,option_ids:e.optionIds,tags:e.tags,...u([{default:t.defaultProjectId,param:"project_id",value:e.projectId},{default:t.defaultOrganizationId,param:"organization_id",value:e.organizationId}])}),Fh=(e,t)=>({hostname:e.hostname,os_id:e.osId,password:e.password,service_password:e.servicePassword,service_user:e.serviceUser,ssh_key_ids:e.sshKeyIds,user:e.user}),Zh=(e,t)=>({private_network_id:e.privateNetworkId}),Jh=(e,t)=>({private_network_ids:e.privateNetworkIds}),Hh=(e,t)=>({boot_type:e.bootType}),Kh=(e,t)=>({ip:e.ip}),Wh=(e,t)=>({boot_type:e.bootType}),Qh=(e,t)=>({reverse:e.reverse}),Xh=(e,t)=>({description:e.description,name:e.name,tags:e.tags}),Yh=(e,t)=>({enabled:e.enabled}),Ie={"Content-Type":"application/json; charset=utf-8"},qh=class extends w{static LOCALITIES=["fr-par-1","fr-par-2","nl-ams-1","nl-ams-2"];pageOfListServers=(t={})=>this.client.fetch({method:"GET",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers`,urlParams:d(["name",t.name],["option_id",t.optionId],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["status",t.status],["tags",t.tags])},xh);listServers=(t={})=>c("servers",this.pageOfListServers,t);getServer=t=>this.client.fetch({method:"GET",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}`},Le);waitForServer=(t,a)=>v(a?.stop??(s=>Promise.resolve(!mp.includes(s.status))),this.getServer,t,a);createServer=t=>this.client.fetch({body:JSON.stringify(Mh(t,this.client.settings)),headers:Ie,method:"POST",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers`},Le);updateServer=t=>this.client.fetch({body:JSON.stringify(Xh(t,this.client.settings)),headers:Ie,method:"PATCH",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}`},Le);installServer=t=>this.client.fetch({body:JSON.stringify(Fh(t,this.client.settings)),headers:Ie,method:"POST",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/install`},Le);getServerMetrics=t=>this.client.fetch({method:"GET",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/metrics`},Nh);deleteServer=t=>this.client.fetch({method:"DELETE",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}`},Le);rebootServer=t=>this.client.fetch({body:JSON.stringify(Hh(t,this.client.settings)),headers:Ie,method:"POST",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/reboot`},Le);startServer=t=>this.client.fetch({body:JSON.stringify(Wh(t,this.client.settings)),headers:Ie,method:"POST",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/start`},Le);stopServer=t=>this.client.fetch({body:"{}",headers:Ie,method:"POST",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/stop`},Le);pageOfListServerEvents=t=>this.client.fetch({method:"GET",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/events`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},Uh);listServerEvents=t=>c("events",this.pageOfListServerEvents,t);startBMCAccess=t=>this.client.fetch({body:JSON.stringify(Kh(t,this.client.settings)),headers:Ie,method:"POST",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/bmc-access`},$r);getBMCAccess=t=>this.client.fetch({method:"GET",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/bmc-access`},$r);stopBMCAccess=t=>this.client.fetch({method:"DELETE",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/bmc-access`});updateIP=t=>this.client.fetch({body:JSON.stringify(Qh(t,this.client.settings)),headers:Ie,method:"PATCH",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/ips/${i("ipId",t.ipId)}`},hp);addOptionServer=t=>this.client.fetch({body:JSON.stringify(Gh(t,this.client.settings)),headers:Ie,method:"POST",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/options/${i("optionId",t.optionId)}`},Le);deleteOptionServer=t=>this.client.fetch({method:"DELETE",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/options/${i("optionId",t.optionId)}`},Le);pageOfListOffers=(t={})=>this.client.fetch({method:"GET",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/offers`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["subscription_period",t.subscriptionPeriod])},Lh);listOffers=(t={})=>c("offers",this.pageOfListOffers,t);getOffer=t=>this.client.fetch({method:"GET",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/offers/${i("offerId",t.offerId)}`},up);getOption=t=>this.client.fetch({method:"GET",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/options/${i("optionId",t.optionId)}`},fp);pageOfListOptions=(t={})=>this.client.fetch({method:"GET",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/options`,urlParams:d(["name",t.name],["offer_id",t.offerId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},Oh);listOptions=(t={})=>c("options",this.pageOfListOptions,t);pageOfListSettings=(t={})=>this.client.fetch({method:"GET",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/settings`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId??this.client.settings.defaultProjectId])},Vh);listSettings=(t={})=>c("settings",this.pageOfListSettings,t);updateSetting=t=>this.client.fetch({body:JSON.stringify(Yh(t,this.client.settings)),headers:Ie,method:"PATCH",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/settings/${i("settingId",t.settingId)}`},vp);pageOfListOS=(t={})=>this.client.fetch({method:"GET",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/os`,urlParams:d(["offer_id",t.offerId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},$h);listOS=(t={})=>c("os",this.pageOfListOS,t);getOS=t=>this.client.fetch({method:"GET",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/os/${i("osId",t.osId)}`},gp)},fs=class extends w{static LOCALITIES=["fr-par-2"];addServerPrivateNetwork=t=>this.client.fetch({body:JSON.stringify(Zh(t,this.client.settings)),headers:Ie,method:"POST",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/private-networks`},Zs);setServerPrivateNetworks=t=>this.client.fetch({body:JSON.stringify(Jh(t,this.client.settings)),headers:Ie,method:"PUT",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/private-networks`},jh);pageOfListServerPrivateNetworks=(t={})=>this.client.fetch({method:"GET",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/server-private-networks`,urlParams:d(["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["private_network_id",t.privateNetworkId],["project_id",t.projectId],["server_id",t.serverId])},kh);listServerPrivateNetworks=(t={})=>c("serverPrivateNetworks",this.pageOfListServerPrivateNetworks,t);deleteServerPrivateNetwork=t=>this.client.fetch({method:"DELETE",path:`/baremetal/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}`})},vs=class extends qh{waitForServerInstall=(t,a)=>Re(async()=>{let s=await this.getServer(t).then(o=>{if(!o.install)throw new Error(`Server creation has not begun for server ${t.serverId}`);return o.install});return{done:!cp.includes(s.status),value:s}},Te(a?.minDelay??1,a?.maxDelay??30),a?.timeout)},e2={description:{maxLength:255},name:{minLength:1}},t2={hostname:{maxLength:255},password:{maxLength:255},servicePassword:{maxLength:255},serviceUser:{maxLength:255},user:{maxLength:255}},i2={hostname:{maxLength:255},password:{maxLength:255},servicePassword:{maxLength:255},serviceUser:{maxLength:255},user:{maxLength:255}},a2={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},n2={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},s2={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},o2={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},r2={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},p2={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},d2={description:{maxLength:255},name:{maxLength:255}},l2=Object.freeze({__proto__:null,CreateServerRequest:e2,CreateServerRequestInstall:t2,InstallServerRequest:i2,ListOSRequest:a2,ListOffersRequest:n2,ListOptionsRequest:s2,ListServerEventsRequest:o2,ListServersRequest:r2,ListSettingsRequest:p2,UpdateServerRequest:d2}),c2=Object.freeze({__proto__:null,API:vs,PrivateNetworkAPI:fs,SERVER_INSTALL_TRANSIENT_STATUSES:cp,SERVER_PRIVATE_NETWORK_TRANSIENT_STATUSES:Sh,SERVER_TRANSIENT_STATUSES:mp,ValidationRules:l2}),m2=Object.freeze({__proto__:null,v1:c2}),h2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetConsumptionResponseConsumption' failed as data isn't a dictionary.");return{category:e.category,description:e.description,operationPath:e.operation_path,projectId:e.project_id,value:e.value?L(e.value):void 0}},g2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetConsumptionResponse' failed as data isn't a dictionary.");return{consumptions:r(e.consumptions,h2),updatedAt:p(e.updated_at)}},u2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DiscountCoupon' failed as data isn't a dictionary.");return{description:e.description}},f2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DiscountFilter' failed as data isn't a dictionary.");return{type:e.type,value:e.value}},v2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Discount' failed as data isn't a dictionary.");return{coupon:e.coupon?u2(e.coupon):void 0,creationDate:p(e.creation_date),description:e.description,filters:r(e.filters,f2),id:e.id,mode:e.mode,organizationId:e.organization_id,startDate:p(e.start_date),stopDate:p(e.stop_date),value:e.value,valueRemaining:e.value_remaining,valueUsed:e.value_used}},y2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDiscountsResponse' failed as data isn't a dictionary.");return{discounts:r(e.discounts,v2),totalCount:e.total_count}},_2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Invoice' failed as data isn't a dictionary.");return{dueDate:p(e.due_date),id:e.id,invoiceType:e.invoice_type,issuedDate:p(e.issued_date),number:e.number,startDate:p(e.start_date),totalTaxed:e.total_taxed?L(e.total_taxed):void 0,totalUntaxed:e.total_untaxed?L(e.total_untaxed):void 0}},w2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListInvoicesResponse' failed as data isn't a dictionary.");return{invoices:r(e.invoices,_2),totalCount:e.total_count}},S2=class extends w{getConsumption=(t={})=>this.client.fetch({method:"GET",path:"/billing/v2alpha1/consumption",urlParams:d(["organization_id",t.organizationId??this.client.settings.defaultOrganizationId])},g2);pageOfListInvoices=(t={})=>this.client.fetch({method:"GET",path:"/billing/v2alpha1/invoices",urlParams:d(["invoice_type",t.invoiceType],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["started_after",t.startedAfter],["started_before",t.startedBefore])},w2);listInvoices=(t={})=>c("invoices",this.pageOfListInvoices,t);downloadInvoice=t=>this.client.fetch({method:"GET",path:`/billing/v2alpha1/invoices/${i("invoiceId",t.invoiceId)}/download`,urlParams:d(["dl",1],["file_type",t.fileType]),responseType:"blob"});pageOfListDiscounts=(t={})=>this.client.fetch({method:"GET",path:"/billing/v2alpha1/discounts",urlParams:d(["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},y2);listDiscounts=(t={})=>c("discounts",this.pageOfListDiscounts,t)},b2=Object.freeze({__proto__:null,API:S2}),yp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Invoice' failed as data isn't a dictionary.");return{billingPeriod:p(e.billing_period),dueDate:p(e.due_date),id:e.id,issuedDate:p(e.issued_date),number:e.number,organizationId:e.organization_id,organizationName:e.organization_name,sellerName:e.seller_name,startDate:p(e.start_date),state:e.state,stopDate:p(e.stop_date),totalDiscount:e.total_discount?L(e.total_discount):void 0,totalTax:e.total_tax?L(e.total_tax):void 0,totalTaxed:e.total_taxed?L(e.total_taxed):void 0,totalUndiscount:e.total_undiscount?L(e.total_undiscount):void 0,totalUntaxed:e.total_untaxed?L(e.total_untaxed):void 0,type:e.type}},I2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListConsumptionsResponseConsumption' failed as data isn't a dictionary.");return{billedQuantity:e.billed_quantity,categoryName:e.category_name,productName:e.product_name,projectId:e.project_id,resourceName:e.resource_name,sku:e.sku,unit:e.unit,value:e.value?L(e.value):void 0}},T2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListConsumptionsResponse' failed as data isn't a dictionary.");return{consumptions:r(e.consumptions,I2),totalCount:e.total_count,totalDiscountUntaxedValue:e.total_discount_untaxed_value,updatedAt:p(e.updated_at)}},R2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DiscountCoupon' failed as data isn't a dictionary.");return{description:e.description}},E2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DiscountFilter' failed as data isn't a dictionary.");return{type:e.type,value:e.value}},z2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Discount' failed as data isn't a dictionary.");return{coupon:e.coupon?R2(e.coupon):void 0,creationDate:p(e.creation_date),description:e.description,filters:r(e.filters,E2),id:e.id,mode:e.mode,organizationId:e.organization_id,startDate:p(e.start_date),stopDate:p(e.stop_date),value:e.value,valueRemaining:e.value_remaining,valueUsed:e.value_used}},P2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDiscountsResponse' failed as data isn't a dictionary.");return{discounts:r(e.discounts,z2),totalCount:e.total_count}},A2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListInvoicesResponse' failed as data isn't a dictionary.");return{invoices:r(e.invoices,yp),totalCount:e.total_count}},C2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTaxesResponseTax' failed as data isn't a dictionary.");return{currency:e.currency,description:e.description,rate:e.rate,totalTaxValue:e.total_tax_value}},N2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTaxesResponse' failed as data isn't a dictionary.");return{taxes:r(e.taxes,C2),totalCount:e.total_count,updatedAt:p(e.updated_at)}},$2=class extends w{pageOfListConsumptions=(t={})=>this.client.fetch({method:"GET",path:"/billing/v2beta1/consumptions",urlParams:d(["billing_period",t.billingPeriod],["category_name",t.categoryName],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],...Object.entries(u([{default:this.client.settings.defaultOrganizationId,param:"organization_id",value:t.organizationId},{default:this.client.settings.defaultProjectId,param:"project_id",value:t.projectId}])))},T2);listConsumptions=(t={})=>c("consumptions",this.pageOfListConsumptions,t);pageOfListTaxes=(t={})=>this.client.fetch({method:"GET",path:"/billing/v2beta1/taxes",urlParams:d(["billing_period",t.billingPeriod],["order_by",t.orderBy],["organization_id",t.organizationId??this.client.settings.defaultOrganizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},N2);listTaxes=(t={})=>c("taxes",this.pageOfListTaxes,t);pageOfListInvoices=(t={})=>this.client.fetch({method:"GET",path:"/billing/v2beta1/invoices",urlParams:d(["billing_period_start_after",t.billingPeriodStartAfter],["billing_period_start_before",t.billingPeriodStartBefore],["invoice_type",t.invoiceType],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},A2);listInvoices=(t={})=>c("invoices",this.pageOfListInvoices,t);exportInvoices=(t={})=>this.client.fetch({method:"GET",path:"/billing/v2beta1/export-invoices",urlParams:d(["dl",1],["billing_period_start_after",t.billingPeriodStartAfter],["billing_period_start_before",t.billingPeriodStartBefore],["file_type",t.fileType],["invoice_type",t.invoiceType],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize]),responseType:"blob"});getInvoice=t=>this.client.fetch({method:"GET",path:`/billing/v2beta1/invoices/${i("invoiceId",t.invoiceId)}`},yp);downloadInvoice=t=>this.client.fetch({method:"GET",path:`/billing/v2beta1/invoices/${i("invoiceId",t.invoiceId)}/download`,urlParams:d(["dl",1],["file_type",t.fileType]),responseType:"blob"});pageOfListDiscounts=(t={})=>this.client.fetch({method:"GET",path:"/billing/v2beta1/discounts",urlParams:d(["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},P2);listDiscounts=(t={})=>c("discounts",this.pageOfListDiscounts,t)},L2=Object.freeze({__proto__:null,API:$2}),O2=Object.freeze({__proto__:null,v2alpha1:b2,v2beta1:L2}),D2=["attaching","detaching","creating"],_p=["creating","deleting"],wp=["creating","deleting","resizing","snapshotting"],Sp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Reference' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,productResourceId:e.product_resource_id,productResourceType:e.product_resource_type,status:e.status,type:e.type}},U2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SnapshotParentVolume' failed as data isn't a dictionary.");return{id:e.id,name:e.name,status:e.status,type:e.type}},Ba=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Snapshot' failed as data isn't a dictionary.");return{class:e.class,createdAt:p(e.created_at),id:e.id,name:e.name,parentVolume:e.parent_volume?U2(e.parent_volume):void 0,projectId:e.project_id,references:r(e.references,Sp),size:e.size,status:e.status,tags:e.tags,updatedAt:p(e.updated_at),zone:e.zone}},bp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'VolumeSpecifications' failed as data isn't a dictionary.");return{class:e.class,perfIops:e.perf_iops}},Ma=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Volume' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,lastDetachedAt:p(e.last_detached_at),name:e.name,parentSnapshotId:e.parent_snapshot_id,projectId:e.project_id,references:r(e.references,Sp),size:e.size,specs:e.specs?bp(e.specs):void 0,status:e.status,tags:e.tags,type:e.type,updatedAt:p(e.updated_at),zone:e.zone}},k2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSnapshotsResponse' failed as data isn't a dictionary.");return{snapshots:r(e.snapshots,Ba),totalCount:e.total_count}},x2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'VolumeType' failed as data isn't a dictionary.");return{pricing:e.pricing?L(e.pricing):void 0,snapshotPricing:e.snapshot_pricing?L(e.snapshot_pricing):void 0,specs:e.specs?bp(e.specs):void 0,type:e.type}},V2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListVolumeTypesResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,volumeTypes:r(e.volume_types,x2)}},j2=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListVolumesResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,volumes:r(e.volumes,Ma)}},G2=(e,t)=>({name:e.name,project_id:e.projectId??t.defaultProjectId,tags:e.tags,volume_id:e.volumeId}),B2=(e,t)=>({size:e.size}),M2=(e,t)=>({size:e.size,snapshot_id:e.snapshotId}),F2=(e,t)=>({name:e.name,project_id:e.projectId??t.defaultProjectId,tags:e.tags,...u([{param:"from_empty",value:e.fromEmpty!==void 0?B2(e.fromEmpty):void 0},{param:"from_snapshot",value:e.fromSnapshot!==void 0?M2(e.fromSnapshot):void 0}]),...u([{param:"perf_iops",value:e.perfIops}])}),Z2=(e,t)=>({name:e.name,tags:e.tags}),J2=(e,t)=>({name:e.name,perf_iops:e.perfIops,size:e.size,tags:e.tags}),Da={"Content-Type":"application/json; charset=utf-8"},H2=class extends w{static LOCALITIES=["fr-par-1","fr-par-2","nl-ams-1","nl-ams-3","pl-waw-3"];pageOfListVolumeTypes=(t={})=>this.client.fetch({method:"GET",path:`/block/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/volume-types`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},V2);listVolumeTypes=(t={})=>c("volumeTypes",this.pageOfListVolumeTypes,t);pageOfListVolumes=(t={})=>this.client.fetch({method:"GET",path:`/block/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/volumes`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["product_resource_id",t.productResourceId],["project_id",t.projectId])},j2);listVolumes=(t={})=>c("volumes",this.pageOfListVolumes,t);createVolume=t=>this.client.fetch({body:JSON.stringify(F2(t,this.client.settings)),headers:Da,method:"POST",path:`/block/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/volumes`},Ma);getVolume=t=>this.client.fetch({method:"GET",path:`/block/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/volumes/${i("volumeId",t.volumeId)}`},Ma);waitForVolume=(t,a)=>v(a?.stop??(s=>Promise.resolve(!wp.includes(s.status))),this.getVolume,t,a);deleteVolume=t=>this.client.fetch({method:"DELETE",path:`/block/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/volumes/${i("volumeId",t.volumeId)}`});updateVolume=t=>this.client.fetch({body:JSON.stringify(J2(t,this.client.settings)),headers:Da,method:"PATCH",path:`/block/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/volumes/${i("volumeId",t.volumeId)}`},Ma);pageOfListSnapshots=(t={})=>this.client.fetch({method:"GET",path:`/block/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/snapshots`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["volume_id",t.volumeId])},k2);listSnapshots=(t={})=>c("snapshots",this.pageOfListSnapshots,t);getSnapshot=t=>this.client.fetch({method:"GET",path:`/block/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/snapshots/${i("snapshotId",t.snapshotId)}`},Ba);waitForSnapshot=(t,a)=>v(a?.stop??(s=>Promise.resolve(!_p.includes(s.status))),this.getSnapshot,t,a);createSnapshot=t=>this.client.fetch({body:JSON.stringify(G2(t,this.client.settings)),headers:Da,method:"POST",path:`/block/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/snapshots`},Ba);deleteSnapshot=t=>this.client.fetch({method:"DELETE",path:`/block/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/snapshots/${i("snapshotId",t.snapshotId)}`});updateSnapshot=t=>this.client.fetch({body:JSON.stringify(Z2(t,this.client.settings)),headers:Da,method:"PATCH",path:`/block/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/snapshots/${i("snapshotId",t.snapshotId)}`},Ba)},K2={name:{minLength:1}},W2={name:{minLength:1}},Q2={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},X2={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},Y2={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},q2={productResourceType:{minLength:1}},e6=Object.freeze({__proto__:null,CreateSnapshotRequest:K2,CreateVolumeRequest:W2,ListSnapshotsRequest:Q2,ListVolumeTypesRequest:X2,ListVolumesRequest:Y2,Reference:q2}),t6=Object.freeze({__proto__:null,API:H2,REFERENCE_TRANSIENT_STATUSES:D2,SNAPSHOT_TRANSIENT_STATUSES:_p,VOLUME_TRANSIENT_STATUSES:wp,ValidationRules:e6}),i6=Object.freeze({__proto__:null,v1alpha1:t6}),Ip=["creating","deleting","updating"],a6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ContactPointEmail' failed as data isn't a dictionary.");return{to:e.to}},Tp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ContactPoint' failed as data isn't a dictionary.");return{email:e.email?a6(e.email):void 0}},Rp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Datasource' failed as data isn't a dictionary.");return{id:e.id,isManagedByScaleway:e.is_managed_by_scaleway,name:e.name,projectId:e.project_id,type:e.type,url:e.url}},Ep=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GrafanaProductDashboard' failed as data isn't a dictionary.");return{dashboardName:e.dashboard_name,tags:e.tags,title:e.title,url:e.url,variables:e.variables}},ys=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GrafanaUser' failed as data isn't a dictionary.");return{id:e.id,login:e.login,password:e.password,role:e.role}},n6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'TokenScopes' failed as data isn't a dictionary.");return{queryLogs:e.query_logs,queryMetrics:e.query_metrics,queryTraces:e.query_traces,setupAlerts:e.setup_alerts,setupLogsRules:e.setup_logs_rules,setupMetricsRules:e.setup_metrics_rules,writeLogs:e.write_logs,writeMetrics:e.write_metrics,writeTraces:e.write_traces}},_s=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Token' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,name:e.name,projectId:e.project_id,scopes:e.scopes?n6(e.scopes):void 0,secretKey:e.secret_key,updatedAt:p(e.updated_at)}},s6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CockpitEndpoints' failed as data isn't a dictionary.");return{alertmanagerUrl:e.alertmanager_url,grafanaUrl:e.grafana_url,logsUrl:e.logs_url,metricsUrl:e.metrics_url,tracesUrl:e.traces_url}},zp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Plan' failed as data isn't a dictionary.");return{id:e.id,logsIngestionPrice:e.logs_ingestion_price,name:e.name,retentionLogsInterval:e.retention_logs_interval,retentionMetricsInterval:e.retention_metrics_interval,retentionPrice:e.retention_price,retentionTracesInterval:e.retention_traces_interval,sampleIngestionPrice:e.sample_ingestion_price,tracesIngestionPrice:e.traces_ingestion_price}},is=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Cockpit' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),endpoints:e.endpoints?s6(e.endpoints):void 0,managedAlertsEnabled:e.managed_alerts_enabled,plan:e.plan?zp(e.plan):void 0,projectId:e.project_id,status:e.status,updatedAt:p(e.updated_at)}},o6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CockpitMetrics' failed as data isn't a dictionary.");return{timeseries:r(e.timeseries,Tt)}},r6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListContactPointsResponse' failed as data isn't a dictionary.");return{contactPoints:r(e.contact_points,Tp),hasAdditionalContactPoints:e.has_additional_contact_points,hasAdditionalReceivers:e.has_additional_receivers,totalCount:e.total_count}},p6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDatasourcesResponse' failed as data isn't a dictionary.");return{datasources:r(e.datasources,Rp),totalCount:e.total_count}},d6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListGrafanaProductDashboardsResponse' failed as data isn't a dictionary.");return{dashboards:r(e.dashboards,Ep),totalCount:e.total_count}},l6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListGrafanaUsersResponse' failed as data isn't a dictionary.");return{grafanaUsers:r(e.grafana_users,ys),totalCount:e.total_count}},c6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListPlansResponse' failed as data isn't a dictionary.");return{plans:r(e.plans,zp),totalCount:e.total_count}},m6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTokensResponse' failed as data isn't a dictionary.");return{tokens:r(e.tokens,_s),totalCount:e.total_count}},h6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SelectPlanResponse' failed as data isn't a dictionary.");return{}},g6=(e,t)=>({project_id:e.projectId??t.defaultProjectId}),u6=(e,t)=>({to:e.to}),Pp=(e,t)=>({...u([{param:"email",value:e.email!==void 0?u6(e.email):void 0}])}),f6=(e,t)=>({contact_point:e.contactPoint!==void 0?Pp(e.contactPoint):void 0,project_id:e.projectId??t.defaultProjectId}),v6=(e,t)=>({is_default:e.isDefault,name:e.name,project_id:e.projectId??t.defaultProjectId,type:e.type}),y6=(e,t)=>({login:e.login,project_id:e.projectId??t.defaultProjectId,role:e.role}),_6=(e,t)=>({query_logs:e.queryLogs,query_metrics:e.queryMetrics,query_traces:e.queryTraces,setup_alerts:e.setupAlerts,setup_logs_rules:e.setupLogsRules,setup_metrics_rules:e.setupMetricsRules,write_logs:e.writeLogs,write_metrics:e.writeMetrics,write_traces:e.writeTraces}),w6=(e,t)=>({name:e.name||_("token"),project_id:e.projectId??t.defaultProjectId,scopes:e.scopes!==void 0?_6(e.scopes):void 0}),S6=(e,t)=>({project_id:e.projectId??t.defaultProjectId}),b6=(e,t)=>({contact_point:e.contactPoint!==void 0?Pp(e.contactPoint):void 0,project_id:e.projectId??t.defaultProjectId}),I6=(e,t)=>({project_id:e.projectId??t.defaultProjectId}),T6=(e,t)=>({project_id:e.projectId??t.defaultProjectId}),R6=(e,t)=>({project_id:e.projectId??t.defaultProjectId}),E6=(e,t)=>({project_id:e.projectId??t.defaultProjectId}),z6=(e,t)=>({plan_id:e.planId,project_id:e.projectId??t.defaultProjectId}),P6=(e,t)=>({project_id:e.projectId??t.defaultProjectId}),me={"Content-Type":"application/json; charset=utf-8"},A6=class extends w{activateCockpit=(t={})=>this.client.fetch({body:JSON.stringify(g6(t,this.client.settings)),headers:me,method:"POST",path:"/cockpit/v1beta1/activate"},is);getCockpit=(t={})=>this.client.fetch({method:"GET",path:"/cockpit/v1beta1/cockpit",urlParams:d(["project_id",t.projectId??this.client.settings.defaultProjectId])},is);waitForCockpit=(t={},a)=>v(a?.stop??(s=>Promise.resolve(!Ip.includes(s.status))),this.getCockpit,t,a);getCockpitMetrics=(t={})=>this.client.fetch({method:"GET",path:"/cockpit/v1beta1/cockpit/metrics",urlParams:d(["end_date",t.endDate],["metric_name",t.metricName],["project_id",t.projectId??this.client.settings.defaultProjectId],["start_date",t.startDate])},o6);deactivateCockpit=(t={})=>this.client.fetch({body:JSON.stringify(S6(t,this.client.settings)),headers:me,method:"POST",path:"/cockpit/v1beta1/deactivate"},is);createDatasource=t=>this.client.fetch({body:JSON.stringify(v6(t,this.client.settings)),headers:me,method:"POST",path:"/cockpit/v1beta1/datasources"},Rp);deleteDatasource=t=>this.client.fetch({method:"DELETE",path:`/cockpit/v1beta1/datasources/${i("datasourceId",t.datasourceId)}`});pageOfListDatasources=(t={})=>this.client.fetch({method:"GET",path:"/cockpit/v1beta1/datasources",urlParams:d(["is_managed_by_scaleway",t.isManagedByScaleway],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId??this.client.settings.defaultProjectId],["types",t.types])},p6);listDatasources=(t={})=>c("datasources",this.pageOfListDatasources,t);createToken=(t={})=>this.client.fetch({body:JSON.stringify(w6(t,this.client.settings)),headers:me,method:"POST",path:"/cockpit/v1beta1/tokens"},_s);pageOfListTokens=(t={})=>this.client.fetch({method:"GET",path:"/cockpit/v1beta1/tokens",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId??this.client.settings.defaultProjectId])},m6);listTokens=(t={})=>c("tokens",this.pageOfListTokens,t);getToken=t=>this.client.fetch({method:"GET",path:`/cockpit/v1beta1/tokens/${i("tokenId",t.tokenId)}`},_s);deleteToken=t=>this.client.fetch({method:"DELETE",path:`/cockpit/v1beta1/tokens/${i("tokenId",t.tokenId)}`});createContactPoint=(t={})=>this.client.fetch({body:JSON.stringify(f6(t,this.client.settings)),headers:me,method:"POST",path:"/cockpit/v1beta1/contact-points"},Tp);pageOfListContactPoints=(t={})=>this.client.fetch({method:"GET",path:"/cockpit/v1beta1/contact-points",urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId??this.client.settings.defaultProjectId])},r6);listContactPoints=(t={})=>c("contactPoints",this.pageOfListContactPoints,t);deleteContactPoint=(t={})=>this.client.fetch({body:JSON.stringify(b6(t,this.client.settings)),headers:me,method:"POST",path:"/cockpit/v1beta1/delete-contact-point"});enableManagedAlerts=(t={})=>this.client.fetch({body:JSON.stringify(R6(t,this.client.settings)),headers:me,method:"POST",path:"/cockpit/v1beta1/enable-managed-alerts"});disableManagedAlerts=(t={})=>this.client.fetch({body:JSON.stringify(T6(t,this.client.settings)),headers:me,method:"POST",path:"/cockpit/v1beta1/disable-managed-alerts"});triggerTestAlert=(t={})=>this.client.fetch({body:JSON.stringify(P6(t,this.client.settings)),headers:me,method:"POST",path:"/cockpit/v1beta1/trigger-test-alert"});createGrafanaUser=t=>this.client.fetch({body:JSON.stringify(y6(t,this.client.settings)),headers:me,method:"POST",path:"/cockpit/v1beta1/grafana-users"},ys);pageOfListGrafanaUsers=(t={})=>this.client.fetch({method:"GET",path:"/cockpit/v1beta1/grafana-users",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId??this.client.settings.defaultProjectId])},l6);listGrafanaUsers=(t={})=>c("grafanaUsers",this.pageOfListGrafanaUsers,t);deleteGrafanaUser=t=>this.client.fetch({body:JSON.stringify(I6(t,this.client.settings)),headers:me,method:"POST",path:`/cockpit/v1beta1/grafana-users/${i("grafanaUserId",t.grafanaUserId)}/delete`});resetGrafanaUserPassword=t=>this.client.fetch({body:JSON.stringify(E6(t,this.client.settings)),headers:me,method:"POST",path:`/cockpit/v1beta1/grafana-users/${i("grafanaUserId",t.grafanaUserId)}/reset-password`},ys);pageOfListPlans=(t={})=>this.client.fetch({method:"GET",path:"/cockpit/v1beta1/plans",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},c6);listPlans=(t={})=>c("plans",this.pageOfListPlans,t);selectPlan=t=>this.client.fetch({body:JSON.stringify(z6(t,this.client.settings)),headers:me,method:"POST",path:"/cockpit/v1beta1/select-plan"},h6);pageOfListGrafanaProductDashboards=(t={})=>this.client.fetch({method:"GET",path:"/cockpit/v1beta1/grafana-product-dashboards",urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId??this.client.settings.defaultProjectId],["tags",t.tags])},d6);listGrafanaProductDashboards=(t={})=>c("dashboards",this.pageOfListGrafanaProductDashboards,t);getGrafanaProductDashboard=t=>this.client.fetch({method:"GET",path:`/cockpit/v1beta1/grafana-product-dashboards/${i("dashboardName",t.dashboardName)}`,urlParams:d(["project_id",t.projectId??this.client.settings.defaultProjectId])},Ep)},C6=Object.freeze({__proto__:null,API:A6,COCKPIT_TRANSIENT_STATUSES:Ip}),N6=Object.freeze({__proto__:null,v1beta1:C6}),Ap=["deleting","creating","pending"],Cp=["deleting","creating","pending"],Np=["deleting","creating","pending"],$p=["deleting","creating","pending"],Lp=["deleting","creating"],Op=["deleting","creating","pending"],Dp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SecretHashedValue' failed as data isn't a dictionary.");return{hashedValue:e.hashed_value,key:e.key}},ai=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Container' failed as data isn't a dictionary.");return{cpuLimit:e.cpu_limit,description:e.description,domainName:e.domain_name,environmentVariables:e.environment_variables,errorMessage:e.error_message,httpOption:e.http_option,id:e.id,maxConcurrency:e.max_concurrency,maxScale:e.max_scale,memoryLimit:e.memory_limit,minScale:e.min_scale,name:e.name,namespaceId:e.namespace_id,port:e.port,privacy:e.privacy,protocol:e.protocol,region:e.region,registryImage:e.registry_image,secretEnvironmentVariables:r(e.secret_environment_variables,Dp),status:e.status,timeout:e.timeout}},Ui=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Cron' failed as data isn't a dictionary.");return{args:e.args,containerId:e.container_id,id:e.id,name:e.name,schedule:e.schedule,status:e.status}},Fa=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Domain' failed as data isn't a dictionary.");return{containerId:e.container_id,errorMessage:e.error_message,hostname:e.hostname,id:e.id,status:e.status,url:e.url}},ki=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Namespace' failed as data isn't a dictionary.");return{description:e.description,environmentVariables:e.environment_variables,errorMessage:e.error_message,id:e.id,name:e.name,organizationId:e.organization_id,projectId:e.project_id,region:e.region,registryEndpoint:e.registry_endpoint,registryNamespaceId:e.registry_namespace_id,secretEnvironmentVariables:r(e.secret_environment_variables,Dp),status:e.status}},xi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Token' failed as data isn't a dictionary.");return{containerId:e.container_id,description:e.description,expiresAt:p(e.expires_at),id:e.id,namespaceId:e.namespace_id,publicKey:e.public_key,status:e.status,token:e.token}},$6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'TriggerMnqNatsClientConfig' failed as data isn't a dictionary.");return{mnqCredentialId:e.mnq_credential_id,mnqNatsAccountId:e.mnq_nats_account_id,mnqProjectId:e.mnq_project_id,mnqRegion:e.mnq_region,subject:e.subject}},L6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'TriggerMnqSqsClientConfig' failed as data isn't a dictionary.");return{mnqCredentialId:e.mnq_credential_id,mnqProjectId:e.mnq_project_id,mnqRegion:e.mnq_region,queue:e.queue}},O6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'TriggerSqsClientConfig' failed as data isn't a dictionary.");return{accessKey:e.access_key,endpoint:e.endpoint,queueUrl:e.queue_url,secretKey:e.secret_key}},Vi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Trigger' failed as data isn't a dictionary.");return{containerId:e.container_id,description:e.description,errorMessage:e.error_message,id:e.id,inputType:e.input_type,name:e.name,scwNatsConfig:e.scw_nats_config?$6(e.scw_nats_config):void 0,scwSqsConfig:e.scw_sqs_config?L6(e.scw_sqs_config):void 0,sqsConfig:e.sqs_config?O6(e.sqs_config):void 0,status:e.status}},D6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListContainersResponse' failed as data isn't a dictionary.");return{containers:r(e.containers,ai),totalCount:e.total_count}},U6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListCronsResponse' failed as data isn't a dictionary.");return{crons:r(e.crons,Ui),totalCount:e.total_count}},k6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDomainsResponse' failed as data isn't a dictionary.");return{domains:r(e.domains,Fa),totalCount:e.total_count}},x6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListNamespacesResponse' failed as data isn't a dictionary.");return{namespaces:r(e.namespaces,ki),totalCount:e.total_count}},V6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTokensResponse' failed as data isn't a dictionary.");return{tokens:r(e.tokens,xi),totalCount:e.total_count}},j6=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTriggersResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,triggers:r(e.triggers,Vi)}},Sn=(e,t)=>({key:e.key,value:e.value}),G6=(e,t)=>({cpu_limit:e.cpuLimit,description:e.description,environment_variables:e.environmentVariables,http_option:e.httpOption,max_concurrency:e.maxConcurrency,max_scale:e.maxScale,memory_limit:e.memoryLimit,min_scale:e.minScale,name:e.name,namespace_id:e.namespaceId,port:e.port,privacy:e.privacy,protocol:e.protocol,registry_image:e.registryImage,secret_environment_variables:e.secretEnvironmentVariables!==void 0?e.secretEnvironmentVariables.map(a=>Sn(a)):void 0,timeout:e.timeout}),B6=(e,t)=>({args:e.args,container_id:e.containerId,name:e.name,schedule:e.schedule}),M6=(e,t)=>({container_id:e.containerId,hostname:e.hostname}),F6=(e,t)=>({description:e.description,environment_variables:e.environmentVariables,name:e.name||_("cns"),project_id:e.projectId??t.defaultProjectId,secret_environment_variables:e.secretEnvironmentVariables!==void 0?e.secretEnvironmentVariables.map(a=>Sn(a)):void 0}),Z6=(e,t)=>({description:e.description,expires_at:e.expiresAt,...u([{param:"container_id",value:e.containerId},{param:"namespace_id",value:e.namespaceId}])}),J6=(e,t)=>({mnq_nats_account_id:e.mnqNatsAccountId,mnq_project_id:e.mnqProjectId,mnq_region:e.mnqRegion,subject:e.subject}),H6=(e,t)=>({mnq_project_id:e.mnqProjectId,mnq_region:e.mnqRegion,queue:e.queue}),K6=(e,t)=>({access_key:e.accessKey,endpoint:e.endpoint,queue_url:e.queueUrl,secret_key:e.secretKey}),W6=(e,t)=>({container_id:e.containerId,description:e.description,name:e.name,...u([{param:"scw_sqs_config",value:e.scwSqsConfig!==void 0?H6(e.scwSqsConfig):void 0},{param:"scw_nats_config",value:e.scwNatsConfig!==void 0?J6(e.scwNatsConfig):void 0},{param:"sqs_config",value:e.sqsConfig!==void 0?K6(e.sqsConfig):void 0}])}),Q6=(e,t)=>({cpu_limit:e.cpuLimit,description:e.description,environment_variables:e.environmentVariables,http_option:e.httpOption,max_concurrency:e.maxConcurrency,max_scale:e.maxScale,memory_limit:e.memoryLimit,min_scale:e.minScale,port:e.port,privacy:e.privacy,protocol:e.protocol,redeploy:e.redeploy,registry_image:e.registryImage,secret_environment_variables:e.secretEnvironmentVariables!==void 0?e.secretEnvironmentVariables.map(a=>Sn(a)):void 0,timeout:e.timeout}),X6=(e,t)=>({args:e.args,container_id:e.containerId,name:e.name,schedule:e.schedule}),Y6=(e,t)=>({description:e.description,environment_variables:e.environmentVariables,secret_environment_variables:e.secretEnvironmentVariables!==void 0?e.secretEnvironmentVariables.map(a=>Sn(a)):void 0}),q6=(e,t)=>({access_key:e.accessKey,secret_key:e.secretKey}),eg=(e,t)=>({description:e.description,name:e.name,...u([{param:"sqs_config",value:e.sqsConfig!==void 0?q6(e.sqsConfig):void 0}])}),Ce={"Content-Type":"application/json; charset=utf-8"},tg=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];pageOfListNamespaces=(t={})=>this.client.fetch({method:"GET",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},x6);listNamespaces=(t={})=>c("namespaces",this.pageOfListNamespaces,t);getNamespace=t=>this.client.fetch({method:"GET",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces/${i("namespaceId",t.namespaceId)}`},ki);waitForNamespace=(t,a)=>v(a?.stop??(s=>Promise.resolve(!$p.includes(s.status))),this.getNamespace,t,a);createNamespace=(t={})=>this.client.fetch({body:JSON.stringify(F6(t,this.client.settings)),headers:Ce,method:"POST",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces`},ki);updateNamespace=t=>this.client.fetch({body:JSON.stringify(Y6(t,this.client.settings)),headers:Ce,method:"PATCH",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces/${i("namespaceId",t.namespaceId)}`},ki);deleteNamespace=t=>this.client.fetch({method:"DELETE",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces/${i("namespaceId",t.namespaceId)}`},ki);pageOfListContainers=t=>this.client.fetch({method:"GET",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/containers`,urlParams:d(["name",t.name],["namespace_id",t.namespaceId],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},D6);listContainers=t=>c("containers",this.pageOfListContainers,t);getContainer=t=>this.client.fetch({method:"GET",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/containers/${i("containerId",t.containerId)}`},ai);waitForContainer=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Ap.includes(s.status))),this.getContainer,t,a);createContainer=t=>this.client.fetch({body:JSON.stringify(G6(t,this.client.settings)),headers:Ce,method:"POST",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/containers`},ai);updateContainer=t=>this.client.fetch({body:JSON.stringify(Q6(t,this.client.settings)),headers:Ce,method:"PATCH",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/containers/${i("containerId",t.containerId)}`},ai);deleteContainer=t=>this.client.fetch({method:"DELETE",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/containers/${i("containerId",t.containerId)}`},ai);deployContainer=t=>this.client.fetch({body:"{}",headers:Ce,method:"POST",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/containers/${i("containerId",t.containerId)}/deploy`},ai);pageOfListCrons=t=>this.client.fetch({method:"GET",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/crons`,urlParams:d(["container_id",t.containerId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},U6);listCrons=t=>c("crons",this.pageOfListCrons,t);getCron=t=>this.client.fetch({method:"GET",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/crons/${i("cronId",t.cronId)}`},Ui);waitForCron=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Cp.includes(s.status))),this.getCron,t,a);createCron=t=>this.client.fetch({body:JSON.stringify(B6(t,this.client.settings)),headers:Ce,method:"POST",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/crons`},Ui);updateCron=t=>this.client.fetch({body:JSON.stringify(X6(t,this.client.settings)),headers:Ce,method:"PATCH",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/crons/${i("cronId",t.cronId)}`},Ui);deleteCron=t=>this.client.fetch({method:"DELETE",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/crons/${i("cronId",t.cronId)}`},Ui);pageOfListDomains=t=>this.client.fetch({method:"GET",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains`,urlParams:d(["container_id",t.containerId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},k6);listDomains=t=>c("domains",this.pageOfListDomains,t);getDomain=t=>this.client.fetch({method:"GET",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains/${i("domainId",t.domainId)}`},Fa);waitForDomain=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Np.includes(s.status))),this.getDomain,t,a);createDomain=t=>this.client.fetch({body:JSON.stringify(M6(t,this.client.settings)),headers:Ce,method:"POST",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains`},Fa);deleteDomain=t=>this.client.fetch({method:"DELETE",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains/${i("domainId",t.domainId)}`},Fa);issueJWT=(t={})=>this.client.fetch({method:"GET",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/issue-jwt`,urlParams:d(["expires_at",t.expiresAt],...Object.entries(u([{param:"container_id",value:t.containerId},{param:"namespace_id",value:t.namespaceId}])))},xi);createToken=(t={})=>this.client.fetch({body:JSON.stringify(Z6(t,this.client.settings)),headers:Ce,method:"POST",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/tokens`},xi);getToken=t=>this.client.fetch({method:"GET",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/tokens/${i("tokenId",t.tokenId)}`},xi);waitForToken=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Lp.includes(s.status))),this.getToken,t,a);pageOfListTokens=(t={})=>this.client.fetch({method:"GET",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/tokens`,urlParams:d(["container_id",t.containerId],["namespace_id",t.namespaceId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},V6);listTokens=(t={})=>c("tokens",this.pageOfListTokens,t);deleteToken=t=>this.client.fetch({method:"DELETE",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/tokens/${i("tokenId",t.tokenId)}`},xi);createTrigger=t=>this.client.fetch({body:JSON.stringify(W6(t,this.client.settings)),headers:Ce,method:"POST",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/triggers`},Vi);getTrigger=t=>this.client.fetch({method:"GET",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/triggers/${i("triggerId",t.triggerId)}`},Vi);waitForTrigger=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Op.includes(s.status))),this.getTrigger,t,a);pageOfListTriggers=(t={})=>this.client.fetch({method:"GET",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/triggers`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],...Object.entries(u([{param:"container_id",value:t.containerId},{param:"namespace_id",value:t.namespaceId},{default:this.client.settings.defaultProjectId,param:"project_id",value:t.projectId}])))},j6);listTriggers=(t={})=>c("triggers",this.pageOfListTriggers,t);updateTrigger=t=>this.client.fetch({body:JSON.stringify(eg(t,this.client.settings)),headers:Ce,method:"PATCH",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/triggers/${i("triggerId",t.triggerId)}`},Vi);deleteTrigger=t=>this.client.fetch({method:"DELETE",path:`/containers/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/triggers/${i("triggerId",t.triggerId)}`},Vi)},ig={description:{maxLength:255},name:{maxLength:50,minLength:1}},ag={mnqRegion:{maxLength:20,minLength:1},subject:{maxLength:100,minLength:1,pattern:/^[^\s]+$/}},ng={mnqRegion:{maxLength:20,minLength:1},queue:{maxLength:100,minLength:1}},sg={description:{maxLength:255},name:{maxLength:50,minLength:1}},og=Object.freeze({__proto__:null,CreateTriggerRequest:ig,CreateTriggerRequestMnqNatsClientConfig:ag,CreateTriggerRequestMnqSqsClientConfig:ng,UpdateTriggerRequest:sg}),rg=Object.freeze({__proto__:null,API:tg,CONTAINER_TRANSIENT_STATUSES:Ap,CRON_TRANSIENT_STATUSES:Cp,DOMAIN_TRANSIENT_STATUSES:Np,NAMESPACE_TRANSIENT_STATUSES:$p,TOKEN_TRANSIENT_STATUSES:Lp,TRIGGER_TRANSIENT_STATUSES:Op,ValidationRules:og}),pg=Object.freeze({__proto__:null,v1beta1:rg}),Up=["creating","deleting"],dg=["updating"],lg=["creating","deleting"],kp=["creating","deleting"],xp=["creating","updating","deleting"],cg=["creating","updating","deleting"],Vp=["booting","setting_up_raid","partitioning","formatting","installing","configuring","configuring_bootloader","rebooting"],jp=["delivering","installing"],mg=["delivering","expiring"],ta=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'IP' failed as data isn't a dictionary.");return{address:e.address,cidr:e.cidr,gateway:e.gateway,ipId:e.ip_id,netmask:e.netmask,reverse:e.reverse,semantic:e.semantic,status:e.status,version:e.version}},hg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CPU' failed as data isn't a dictionary.");return{coreCount:e.core_count,frequency:e.frequency,name:e.name,threadCount:e.thread_count}},gg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Disk' failed as data isn't a dictionary.");return{capacity:e.capacity,type:e.type}},ug=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Memory' failed as data isn't a dictionary.");return{capacity:e.capacity,frequency:e.frequency,isEcc:e.is_ecc,type:e.type}},fg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PersistentMemory' failed as data isn't a dictionary.");return{capacity:e.capacity,frequency:e.frequency,model:e.model}},vg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RaidController' failed as data isn't a dictionary.");return{model:e.model,raidLevel:e.raid_level}},yg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OfferAntiDosInfo' failed as data isn't a dictionary.");return{type:e.type}},_g=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OfferBackupInfo' failed as data isn't a dictionary.");return{size:e.size}},wg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OfferBandwidthInfo' failed as data isn't a dictionary.");return{speed:e.speed}},Sg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OfferFailoverBlockInfo' failed as data isn't a dictionary.");return{onetimeFees:e.onetime_fees?ge(e.onetime_fees):void 0}},bg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OfferFailoverIpInfo' failed as data isn't a dictionary.");return{onetimeFees:e.onetime_fees?ge(e.onetime_fees):void 0}},Ig=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OfferLicenseInfo' failed as data isn't a dictionary.");return{boundToIp:e.bound_to_ip}},Tg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OfferRPNInfo' failed as data isn't a dictionary.");return{speed:e.speed}},Rg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OfferSANInfo' failed as data isn't a dictionary.");return{deviceType:e.device_type,ha:e.ha,size:e.size}},Eg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OfferServerInfo' failed as data isn't a dictionary.");return{availableOptions:r(e.available_options,ge),bandwidth:e.bandwidth,commercialRange:e.commercial_range,connectivity:e.connectivity,cpus:r(e.cpus,hg),disks:r(e.disks,gg),memories:r(e.memories,ug),onetimeFees:e.onetime_fees?ge(e.onetime_fees):void 0,persistentMemories:r(e.persistent_memories,fg),raidControllers:r(e.raid_controllers,vg),rpnVersion:e.rpn_version,stock:e.stock,stockByDatacenter:e.stock_by_datacenter}},zg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OfferServiceLevelInfo' failed as data isn't a dictionary.");return{antidos:e.antidos,availableOptions:r(e.available_options,ge),customization:e.customization,extraFailoverQuota:e.extra_failover_quota,git:e.git,highRpnBandwidth:e.high_rpn_bandwidth,prioritySupport:e.priority_support,salesSupport:e.sales_support,sla:e.sla,supportPhone:e.support_phone,supportTicket:e.support_ticket}},Lr=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OfferStorageInfo' failed as data isn't a dictionary.");return{maxQuota:e.max_quota,size:e.size}},ge=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Offer' failed as data isn't a dictionary.");return{antidosInfo:e.antidos_info?yg(e.antidos_info):void 0,backupInfo:e.backup_info?_g(e.backup_info):void 0,bandwidthInfo:e.bandwidth_info?wg(e.bandwidth_info):void 0,catalog:e.catalog,failoverBlockInfo:e.failover_block_info?Sg(e.failover_block_info):void 0,failoverIpInfo:e.failover_ip_info?bg(e.failover_ip_info):void 0,id:e.id,licenseInfo:e.license_info?Ig(e.license_info):void 0,name:e.name,paymentFrequency:e.payment_frequency,pricing:e.pricing?L(e.pricing):void 0,rpnInfo:e.rpn_info?Tg(e.rpn_info):void 0,sanInfo:e.san_info?Rg(e.san_info):void 0,serverInfo:e.server_info?Eg(e.server_info):void 0,serviceLevelInfo:e.service_level_info?zg(e.service_level_info):void 0,storageInfo:e.storage_info?Lr(e.storage_info):void 0,usbStorageInfo:e.usb_storage_info?Lr(e.usb_storage_info):void 0}},fn=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OS' failed as data isn't a dictionary.");return{allowCustomPartitioning:e.allow_custom_partitioning,allowSshKeys:e.allow_ssh_keys,allowedFilesystems:e.allowed_filesystems,arch:e.arch,displayName:e.display_name,hostnameMaxLength:e.hostname_max_length,hostnameRegex:e.hostname_regex,id:e.id,licenseOffers:r(e.license_offers,ge),maxPartitions:e.max_partitions,name:e.name,panelPasswordRegex:e.panel_password_regex,passwordRegex:e.password_regex,releasedAt:p(e.released_at),requiresAdminPassword:e.requires_admin_password,requiresLicense:e.requires_license,requiresPanelPassword:e.requires_panel_password,requiresUser:e.requires_user,requiresValidHostname:e.requires_valid_hostname,type:e.type,version:e.version}},Gp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RpnSan' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),datacenterName:e.datacenter_name,deliveredAt:p(e.delivered_at),expiresAt:p(e.expires_at),id:e.id,iqn:e.iqn,iqnSuffix:e.iqn_suffix,offer:e.offer?ge(e.offer):void 0,offerId:e.offer_id,offerName:e.offer_name,organizationId:e.organization_id,projectId:e.project_id,rpnv1Compatible:e.rpnv1_compatible,rpnv1Implicit:e.rpnv1_implicit,serverHostname:e.server_hostname,status:e.status,storageSize:e.storage_size,terminatedAt:p(e.terminated_at)}},ft=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RpnGroup' failed as data isn't a dictionary.");return{active:e.active,createdAt:p(e.created_at),id:e.id,membersCount:e.members_count,name:e.name,organizationId:e.organization_id,owner:e.owner,projectId:e.project_id,type:e.type}},Bp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'NetworkInterface' failed as data isn't a dictionary.");return{cardId:e.card_id,deviceId:e.device_id,ips:r(e.ips,ta),mac:e.mac,type:e.type}},Pg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerLocation' failed as data isn't a dictionary.");return{datacenterName:e.datacenter_name,rack:e.rack,room:e.room}},Mp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerOption' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),expiredAt:p(e.expired_at),offer:e.offer?ge(e.offer):void 0,options:r(e.options,Mp),updatedAt:p(e.updated_at)}},Fp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServiceLevel' failed as data isn't a dictionary.");return{level:e.level,offerId:e.offer_id}},Gt=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Server' failed as data isn't a dictionary.");return{abuseContact:e.abuse_contact,createdAt:p(e.created_at),expiredAt:p(e.expired_at),hasBmc:e.has_bmc,hostname:e.hostname,id:e.id,interfaces:r(e.interfaces,Bp),ipv6Slaac:e.ipv6_slaac,isOutsourced:e.is_outsourced,isRpnv2Member:e.is_rpnv2_member,level:e.level?Fp(e.level):void 0,location:e.location?Pg(e.location):void 0,offer:e.offer?ge(e.offer):void 0,options:r(e.options,Mp),organizationId:e.organization_id,os:e.os?fn(e.os):void 0,projectId:e.project_id,qinq:e.qinq,rebootedAt:p(e.rebooted_at),rescueOs:e.rescue_os?fn(e.rescue_os):void 0,status:e.status,tags:e.tags,updatedAt:p(e.updated_at),zone:e.zone}},Ag=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RpnV2GroupSubnet' failed as data isn't a dictionary.");return{address:e.address,cidr:e.cidr}},ia=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RpnV2Group' failed as data isn't a dictionary.");return{compatibleRpnv1:e.compatible_rpnv1,gateway:e.gateway,id:e.id,membersCount:e.members_count,name:e.name,organizationId:e.organization_id,owner:e.owner,projectId:e.project_id,rpnv1Group:e.rpnv1_group?ft(e.rpnv1_group):void 0,status:e.status,subnet:e.subnet?Ag(e.subnet):void 0,type:e.type}},it=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Service' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),deliveredAt:p(e.delivered_at),expiresAt:p(e.expires_at),id:e.id,offer:e.offer?ge(e.offer):void 0,provisioningStatus:e.provisioning_status,resourceId:e.resource_id,terminatedAt:p(e.terminated_at),type:e.type}},Cg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'FailoverBlock' failed as data isn't a dictionary.");return{address:e.address,cidr:e.cidr,gatewayIp:e.gateway_ip,id:e.id,ipVersion:e.ip_version,nameservers:e.nameservers,netmask:e.netmask}},Zp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'FailoverIP' failed as data isn't a dictionary.");return{address:e.address,block:e.block?Cg(e.block):void 0,cidr:e.cidr,gatewayIp:e.gateway_ip,id:e.id,ipVersion:e.ip_version,mac:e.mac,netmask:e.netmask,reverse:e.reverse,serverId:e.server_id,serverZone:e.server_zone,status:e.status,type:e.type}},Ng=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'BMCAccess' failed as data isn't a dictionary.");return{expiresAt:p(e.expires_at),login:e.login,password:e.password,status:e.status,url:e.url}},Or=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Backup' failed as data isn't a dictionary.");return{aclEnabled:e.acl_enabled,autologin:e.autologin,id:e.id,login:e.login,quotaFiles:e.quota_files,quotaFilesUsed:e.quota_files_used,quotaSpace:e.quota_space,quotaSpaceUsed:e.quota_space_used,server:e.server,status:e.status}},$g=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CanOrderResponse' failed as data isn't a dictionary.");return{billingOk:e.billing_ok,canOrder:e.can_order,emailConfirmed:e.email_confirmed,message:e.message,paymentMode:e.payment_mode,phoneConfirmed:e.phone_confirmed,quotaOk:e.quota_ok,userConfirmed:e.user_confirmed}},Lg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CreateFailoverIPsResponse' failed as data isn't a dictionary.");return{services:r(e.services,it),totalCount:e.total_count}},Og=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetIPv6BlockQuotasResponseQuota' failed as data isn't a dictionary.");return{cidr:e.cidr,quota:e.quota}},Dg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetIPv6BlockQuotasResponse' failed as data isn't a dictionary.");return{quotas:r(e.quotas,Og),totalCount:e.total_count}},Ug=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetRemainingQuotaResponse' failed as data isn't a dictionary.");return{failoverBlockQuota:e.failover_block_quota,failoverBlockRemainingQuota:e.failover_block_remaining_quota,failoverIpQuota:e.failover_ip_quota,failoverIpRemainingQuota:e.failover_ip_remaining_quota}},kg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetRpnStatusResponse' failed as data isn't a dictionary.");return{operationsLeft:e.operations_left,status:e.status}},ji=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'IPv6Block' failed as data isn't a dictionary.");return{address:e.address,cidr:e.cidr,delegationStatus:e.delegation_status,duid:e.duid,id:e.id,nameservers:e.nameservers,subnets:r(e.subnets,ji)}},xg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Invoice' failed as data isn't a dictionary.");return{content:e.content,createdAt:p(e.created_at),id:e.id,paidAt:p(e.paid_at),paymentMethod:e.payment_method,status:e.status,totalWithTaxes:e.total_with_taxes?L(e.total_with_taxes):void 0,totalWithoutTaxes:e.total_without_taxes?L(e.total_without_taxes):void 0,transactionId:e.transaction_id}},Vg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListFailoverIPsResponse' failed as data isn't a dictionary.");return{failoverIps:r(e.failover_ips,Zp),totalCount:e.total_count}},jg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListIPv6BlockSubnetsAvailableResponseSubnet' failed as data isn't a dictionary.");return{address:e.address,cidr:e.cidr}},Gg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListIPv6BlockSubnetsAvailableResponse' failed as data isn't a dictionary.");return{subnetAvailables:r(e.subnet_availables,jg),totalCount:e.total_count}},Bg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'InvoiceSummary' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,paidAt:p(e.paid_at),paymentMethod:e.payment_method,status:e.status,totalWithTaxes:e.total_with_taxes?L(e.total_with_taxes):void 0,totalWithoutTaxes:e.total_without_taxes?L(e.total_without_taxes):void 0,transactionId:e.transaction_id}},Mg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListInvoicesResponse' failed as data isn't a dictionary.");return{invoices:r(e.invoices,Bg),totalCount:e.total_count}},Fg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RpnSanIpRpnV2Group' failed as data isn't a dictionary.");return{id:e.id,name:e.name}},Zg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RpnSanIpServer' failed as data isn't a dictionary.");return{datacenterName:e.datacenter_name,hostname:e.hostname,id:e.id}},Jg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RpnSanIp' failed as data isn't a dictionary.");return{ip:e.ip?ta(e.ip):void 0,rpnv2Group:e.rpnv2_group?Fg(e.rpnv2_group):void 0,server:e.server?Zg(e.server):void 0,type:e.type}},Dr=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListIpsResponse' failed as data isn't a dictionary.");return{ips:r(e.ips,Jg),totalCount:e.total_count}},Hg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListOSResponse' failed as data isn't a dictionary.");return{os:r(e.os,fn),totalCount:e.total_count}},Kg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListOffersResponse' failed as data isn't a dictionary.");return{offers:r(e.offers,ge),totalCount:e.total_count}},Wg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RefundSummary' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,method:e.method,refundedAt:p(e.refunded_at),status:e.status,totalWithTaxes:e.total_with_taxes?L(e.total_with_taxes):void 0,totalWithoutTaxes:e.total_without_taxes?L(e.total_without_taxes):void 0}},Qg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRefundsResponse' failed as data isn't a dictionary.");return{refunds:r(e.refunds,Wg),totalCount:e.total_count}},Jp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RpnSanServer' failed as data isn't a dictionary.");return{datacenterName:e.datacenter_name,hostname:e.hostname,id:e.id,sans:r(e.sans,Gp),zone:e.zone}},Xg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRpnCapableSanServersResponse' failed as data isn't a dictionary.");return{sanServers:r(e.san_servers,Jp),totalCount:e.total_count}},Yg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRpnCapableServersResponse' failed as data isn't a dictionary.");return{servers:r(e.servers,Gt),totalCount:e.total_count}},Hp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RpnGroupMember' failed as data isn't a dictionary.");return{groupId:e.group_id,groupName:e.group_name,groupOwner:e.group_owner,id:e.id,owner:e.owner,sanServer:e.san_server?Jp(e.san_server):void 0,server:e.server?Gt(e.server):void 0,speed:e.speed,status:e.status}},qg=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRpnGroupMembersResponse' failed as data isn't a dictionary.");return{members:r(e.members,Hp),totalCount:e.total_count}},e0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRpnGroupsResponse' failed as data isn't a dictionary.");return{rpnGroups:r(e.rpn_groups,ft),totalCount:e.total_count}},t0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRpnInvitesResponse' failed as data isn't a dictionary.");return{members:r(e.members,Hp),totalCount:e.total_count}},i0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RpnSanSummary' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),datacenterName:e.datacenter_name,deliveredAt:p(e.delivered_at),expiresAt:p(e.expires_at),id:e.id,iqnSuffix:e.iqn_suffix,offerId:e.offer_id,offerName:e.offer_name,organizationId:e.organization_id,projectId:e.project_id,rpnv1Compatible:e.rpnv1_compatible,rpnv1Implicit:e.rpnv1_implicit,serverHostname:e.server_hostname,status:e.status,storageSize:e.storage_size,terminatedAt:p(e.terminated_at)}},a0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRpnSansResponse' failed as data isn't a dictionary.");return{rpnSans:r(e.rpn_sans,i0),totalCount:e.total_count}},n0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RpnServerCapability' failed as data isn't a dictionary.");return{canJoinQinqGroup:e.can_join_qinq_group,canJoinRpnv2Group:e.can_join_rpnv2_group,compatibleQinq:e.compatible_qinq,datacenterName:e.datacenter_name,hostname:e.hostname,id:e.id,ipAddress:e.ip_address,rpnVersion:e.rpn_version,rpnv1GroupCount:e.rpnv1_group_count,rpnv2GroupCount:e.rpnv2_group_count,zone:e.zone}},s0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRpnServerCapabilitiesResponse' failed as data isn't a dictionary.");return{servers:r(e.servers,n0),totalCount:e.total_count}},o0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRpnV2CapableResourcesResponse' failed as data isn't a dictionary.");return{servers:r(e.servers,Gt),totalCount:e.total_count}},Kp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RpnV2Member' failed as data isn't a dictionary.");return{id:e.id,rpnv1Group:e.rpnv1_group?ft(e.rpnv1_group):void 0,server:e.server?Gt(e.server):void 0,speed:e.speed,status:e.status,vlan:e.vlan}},r0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Log' failed as data isn't a dictionary.");return{action:e.action,createdAt:p(e.created_at),finishedAt:p(e.finished_at),group:e.group?ia(e.group):void 0,id:e.id,member:e.member?Kp(e.member):void 0,status:e.status}},p0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRpnV2GroupLogsResponse' failed as data isn't a dictionary.");return{logs:r(e.logs,r0),totalCount:e.total_count}},d0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRpnV2GroupsResponse' failed as data isn't a dictionary.");return{rpnGroups:r(e.rpn_groups,ia),totalCount:e.total_count}},l0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRpnV2MembersResponse' failed as data isn't a dictionary.");return{members:r(e.members,Kp),totalCount:e.total_count}},Wp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerDisk' failed as data isn't a dictionary.");return{capacity:e.capacity,connector:e.connector,id:e.id,isAddon:e.is_addon,type:e.type}},c0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListServerDisksResponse' failed as data isn't a dictionary.");return{disks:r(e.disks,Wp),totalCount:e.total_count}},m0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerEvent' failed as data isn't a dictionary.");return{date:p(e.date),description:e.description,eventId:e.event_id}},h0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListServerEventsResponse' failed as data isn't a dictionary.");return{events:r(e.events,m0),totalCount:e.total_count}},g0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerSummary' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),datacenterName:e.datacenter_name,expiredAt:p(e.expired_at),hostname:e.hostname,id:e.id,interfaces:r(e.interfaces,Bp),isOutsourced:e.is_outsourced,level:e.level?Fp(e.level):void 0,offerId:e.offer_id,offerName:e.offer_name,organizationId:e.organization_id,osId:e.os_id,projectId:e.project_id,qinq:e.qinq,rpnVersion:e.rpn_version,status:e.status,updatedAt:p(e.updated_at),zone:e.zone}},u0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListServersResponse' failed as data isn't a dictionary.");return{servers:r(e.servers,g0),totalCount:e.total_count}},f0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListServicesResponse' failed as data isn't a dictionary.");return{services:r(e.services,it),totalCount:e.total_count}},v0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSubscribableServerOptionsResponse' failed as data isn't a dictionary.");return{serverOptions:r(e.server_options,ge),totalCount:e.total_count}},y0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RaidArray' failed as data isn't a dictionary.");return{disks:r(e.disks,Wp),raidLevel:e.raid_level}},_0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Raid' failed as data isn't a dictionary.");return{raidArrays:r(e.raid_arrays,y0)}},w0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Refund' failed as data isn't a dictionary.");return{content:e.content,createdAt:p(e.created_at),id:e.id,method:e.method,refundedAt:p(e.refunded_at),status:e.status,totalWithTaxes:e.total_with_taxes?L(e.total_with_taxes):void 0,totalWithoutTaxes:e.total_without_taxes?L(e.total_without_taxes):void 0}},Ur=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Rescue' failed as data isn't a dictionary.");return{login:e.login,osId:e.os_id,password:e.password,protocol:e.protocol}},Qp=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Partition' failed as data isn't a dictionary.");return{capacity:e.capacity,connectors:e.connectors,fileSystem:e.file_system,mountPoint:e.mount_point,raidLevel:e.raid_level,type:e.type}},S0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerDefaultPartitioning' failed as data isn't a dictionary.");return{partitions:r(e.partitions,Qp)}},kr=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerInstall' failed as data isn't a dictionary.");return{hostname:e.hostname,osId:e.os_id,panelUrl:e.panel_url,partitions:r(e.partitions,Qp),sshKeyIds:e.ssh_key_ids,status:e.status,userLogin:e.user_login}},b0=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SubscribeStorageOptionsResponse' failed as data isn't a dictionary.");return{services:r(e.services,it)}},I0=(e,t)=>({mac:e.mac,type:e.type}),T0=(e,t)=>({fips_ids:e.fipsIds,server_id:e.serverId}),R0=(e,t)=>({offer_id:e.offerId,project_id:e.projectId??t.defaultProjectId,quantity:e.quantity}),E0=(e,t)=>({datacenter_name:e.datacenterName,offer_id:e.offerId,project_id:e.projectId??t.defaultProjectId,server_option_ids:e.serverOptionIds}),z0=(e,t)=>({fips_ids:e.fipsIds}),P0=(e,t)=>({project_id:e.projectId??t.defaultProjectId}),A0=(e,t)=>({address:e.address,cidr:e.cidr}),C0=(e,t)=>({nameservers:e.nameservers}),N0=(e,t)=>({capacity:e.capacity,connectors:e.connectors,file_system:e.fileSystem,mount_point:e.mountPoint,raid_level:e.raidLevel}),$0=(e,t)=>({hostname:e.hostname,ip_id:e.ipId,license_offer_id:e.licenseOfferId,os_id:e.osId,panel_password:e.panelPassword,partitions:e.partitions!==void 0?e.partitions.map(a=>N0(a)):void 0,root_password:e.rootPassword,ssh_key_ids:e.sshKeyIds,user_login:e.userLogin,user_password:e.userPassword}),L0=(e,t)=>({ip_ids:e.ipIds}),O0=(e,t)=>({offer_id:e.offerId,project_id:e.projectId??t.defaultProjectId}),D0=(e,t)=>({ip_ids:e.ipIds}),U0=(e,t)=>({san_server_ids:e.sanServerIds,server_ids:e.serverIds}),k0=(e,t)=>({name:e.name,project_id:e.projectId??t.defaultProjectId,san_server_ids:e.sanServerIds,server_ids:e.serverIds}),x0=(e,t)=>({member_ids:e.memberIds}),V0=(e,t)=>({member_ids:e.memberIds,project_id:e.projectId??t.defaultProjectId}),j0=(e,t)=>({project_id:e.projectId??t.defaultProjectId,server_ids:e.serverIds}),G0=(e,t)=>({name:e.name}),B0=(e,t)=>({servers:e.servers}),M0=(e,t)=>({name:e.name,project_id:e.projectId??t.defaultProjectId,servers:e.servers,type:e.type}),F0=(e,t)=>({member_ids:e.memberIds}),Z0=(e,t)=>({rpnv1_group_id:e.rpnv1GroupId}),J0=(e,t)=>({name:e.name}),H0=(e,t)=>({member_ids:e.memberIds,vlan:e.vlan}),K0=(e,t)=>({ip:e.ip}),W0=(e,t)=>({os_id:e.osId}),Q0=(e,t)=>({option_id:e.optionId}),X0=(e,t)=>({options_ids:e.optionsIds}),Y0=(e,t)=>({disk_ids:e.diskIds,raid_level:e.raidLevel}),q0=(e,t)=>({raid_arrays:e.raidArrays.map(a=>Y0(a))}),e4=(e,t)=>({reverse:e.reverse}),t4=(e,t)=>({acl_enabled:e.aclEnabled,autologin:e.autologin,password:e.password}),i4=(e,t)=>({enable_ipv6:e.enableIpv6,hostname:e.hostname}),a4=(e,t)=>({tags:e.tags}),I={"Content-Type":"application/json; charset=utf-8"},n4=class extends w{static LOCALITIES=["fr-par-1","fr-par-2","nl-ams-1"];pageOfListServers=(t={})=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId??this.client.settings.defaultProjectId],["search",t.search])},u0);listServers=(t={})=>c("servers",this.pageOfListServers,t);getServer=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}`},Gt);waitForServer=(t,a)=>v(a?.stop??(s=>Promise.resolve(!jp.includes(s.status))),this.getServer,t,a);getServerBackup=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/backups`},Or);updateServerBackup=t=>this.client.fetch({body:JSON.stringify(t4(t,this.client.settings)),headers:I,method:"PATCH",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/backups`},Or);pageOfListSubscribableServerOptions=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/subscribable-server-options`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},v0);listSubscribableServerOptions=t=>c("serverOptions",this.pageOfListSubscribableServerOptions,t);subscribeServerOption=t=>this.client.fetch({body:JSON.stringify(Q0(t,this.client.settings)),headers:I,method:"PATCH",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/subscribe-server-option`},it);createServer=t=>this.client.fetch({body:JSON.stringify(E0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers`},it);subscribeStorageOptions=t=>this.client.fetch({body:JSON.stringify(X0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/subscribe-storage-options`},b0);updateServer=t=>this.client.fetch({body:JSON.stringify(i4(t,this.client.settings)),headers:I,method:"PATCH",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}`},Gt);updateServerTags=t=>this.client.fetch({body:JSON.stringify(a4(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/tags`},Gt);rebootServer=t=>this.client.fetch({body:"{}",headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/reboot`});startServer=t=>this.client.fetch({body:"{}",headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/start`});stopServer=t=>this.client.fetch({body:"{}",headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/stop`});deleteServer=t=>this.client.fetch({method:"DELETE",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}`});pageOfListServerEvents=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/events`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},h0);listServerEvents=t=>c("events",this.pageOfListServerEvents,t);pageOfListServerDisks=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/disks`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},c0);listServerDisks=t=>c("disks",this.pageOfListServerDisks,t);getOrderedService=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ordered-services/${i("orderedServiceId",t.orderedServiceId)}`},it);getService=t=>this.client.fetch({body:"{}",headers:I,method:"PATCH",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/services/${i("serviceId",t.serviceId)}`},it);deleteService=t=>this.client.fetch({method:"DELETE",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/services/${i("serviceId",t.serviceId)}`},it);pageOfListServices=(t={})=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/services`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},f0);listServices=(t={})=>c("services",this.pageOfListServices,t);installServer=t=>this.client.fetch({body:JSON.stringify($0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/install`},kr);getServerInstall=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/install`},kr);waitForServerInstall=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Vp.includes(s.status))),this.getServerInstall,t,a);cancelServerInstall=t=>this.client.fetch({method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/cancel-install`});getServerDefaultPartitioning=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/partitioning/${i("osId",t.osId)}`},S0);startBMCAccess=t=>this.client.fetch({body:JSON.stringify(K0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/bmc-access`});getBMCAccess=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/bmc-access`},Ng);waitForBMCAccess=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Up.includes(s.status))),this.getBMCAccess,t,a);stopBMCAccess=t=>this.client.fetch({method:"DELETE",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/bmc-access`});pageOfListOffers=(t={})=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/offers`,urlParams:d(["available_only",t.availableOnly],["catalog",t.catalog],["commercial_range",t.commercialRange],["is_failover_block",t.isFailoverBlock],["is_failover_ip",t.isFailoverIp],["is_rpn_san",t.isRpnSan],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["sold_in",t.soldIn&&t.soldIn.length>0?t.soldIn.join(","):void 0])},Kg);listOffers=(t={})=>c("offers",this.pageOfListOffers,t);getOffer=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/offers/${i("offerId",t.offerId)}`,urlParams:d(["project_id",t.projectId])},ge);pageOfListOS=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/os`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["server_id",t.serverId],["type",t.type])},Hg);listOS=t=>c("os",this.pageOfListOS,t);getOS=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/os/${i("osId",t.osId)}`,urlParams:d(["project_id",t.projectId],["server_id",t.serverId])},fn);updateReverse=t=>this.client.fetch({body:JSON.stringify(e4(t,this.client.settings)),headers:I,method:"PATCH",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/reverses/${i("ipId",t.ipId)}`},ta);createFailoverIPs=t=>this.client.fetch({body:JSON.stringify(R0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/failover-ips`},Lg);attachFailoverIPs=t=>this.client.fetch({body:JSON.stringify(T0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/failover-ips/attach`});detachFailoverIPs=t=>this.client.fetch({body:JSON.stringify(z0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/failover-ips/detach`});attachFailoverIPToMacAddress=t=>this.client.fetch({body:JSON.stringify(I0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/failover-ips/${i("ipId",t.ipId)}/attach-to-mac-address`},ta);detachFailoverIPFromMacAddress=t=>this.client.fetch({body:"{}",headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/failover-ips/${i("ipId",t.ipId)}/detach-from-mac-address`},ta);deleteFailoverIP=t=>this.client.fetch({method:"DELETE",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/failover-ips/${i("ipId",t.ipId)}`});pageOfListFailoverIPs=(t={})=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/failover-ips`,urlParams:d(["only_available",t.onlyAvailable],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId??this.client.settings.defaultProjectId],["search",t.search])},Vg);listFailoverIPs=(t={})=>c("failoverIps",this.pageOfListFailoverIPs,t);getFailoverIP=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/failover-ips/${i("ipId",t.ipId)}`},Zp);getRemainingQuota=(t={})=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/remaining-quota`,urlParams:d(["project_id",t.projectId])},Ug);getRaid=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/raid`},_0);updateRaid=t=>this.client.fetch({body:JSON.stringify(q0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/update-raid`});startRescue=t=>this.client.fetch({body:JSON.stringify(W0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/rescue`},Ur);getRescue=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/rescue`},Ur);stopRescue=t=>this.client.fetch({method:"DELETE",path:`/dedibox/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/rescue`})},ws=class extends w{pageOfListInvoices=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/invoices",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},Mg);listInvoices=(t={})=>c("invoices",this.pageOfListInvoices,t);getInvoice=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/invoices/${i("invoiceId",t.invoiceId)}`},xg);downloadInvoice=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/invoices/${i("invoiceId",t.invoiceId)}/download`,urlParams:d(["dl",1]),responseType:"blob"});pageOfListRefunds=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/refunds",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},Qg);listRefunds=(t={})=>c("refunds",this.pageOfListRefunds,t);getRefund=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/refunds/${i("refundId",t.refundId)}`},w0);downloadRefund=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/refunds/${i("refundId",t.refundId)}/download`,urlParams:d(["dl",1]),responseType:"blob"});canOrder=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/can-order",urlParams:d(["project_id",t.projectId??this.client.settings.defaultProjectId])},$g)},Ss=class extends w{getIPv6BlockQuotas=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/ipv6-block-quotas",urlParams:d(["project_id",t.projectId])},Dg);createIPv6Block=(t={})=>this.client.fetch({body:JSON.stringify(P0(t,this.client.settings)),headers:I,method:"POST",path:"/dedibox/v1/ipv6-block"},ji);getIPv6Block=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/ipv6-block",urlParams:d(["project_id",t.projectId])},ji);updateIPv6Block=t=>this.client.fetch({body:JSON.stringify(C0(t,this.client.settings)),headers:I,method:"PATCH",path:`/dedibox/v1/ipv6-blocks/${i("blockId",t.blockId)}`},ji);deleteIPv6Block=t=>this.client.fetch({method:"DELETE",path:`/dedibox/v1/ipv6-blocks/${i("blockId",t.blockId)}`});createIPv6BlockSubnet=t=>this.client.fetch({body:JSON.stringify(A0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/ipv6-blocks/${i("blockId",t.blockId)}/subnets`},ji);listIPv6BlockSubnetsAvailable=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/ipv6-blocks/${i("blockId",t.blockId)}/subnets`},Gg)},bs=class extends w{pageOfListRpnServerCapabilities=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/rpn/server-capabilities",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},s0);listRpnServerCapabilities=(t={})=>c("servers",this.pageOfListRpnServerCapabilities,t);getRpnStatus=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/rpn/status",urlParams:d(["project_id",t.projectId],["rpnv1_group_id",t.rpnv1GroupId],["rpnv2_group_id",t.rpnv2GroupId])},kg)},Is=class extends w{pageOfListRpnSans=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/rpn-sans",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},a0);listRpnSans=(t={})=>c("rpnSans",this.pageOfListRpnSans,t);getRpnSan=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/rpn-sans/${i("rpnSanId",t.rpnSanId)}`},Gp);waitForRpnSan=(t,a)=>v(a?.stop??(s=>Promise.resolve(!kp.includes(s.status))),this.getRpnSan,t,a);deleteRpnSan=t=>this.client.fetch({method:"DELETE",path:`/dedibox/v1/rpn-sans/${i("rpnSanId",t.rpnSanId)}`});createRpnSan=t=>this.client.fetch({body:JSON.stringify(O0(t,this.client.settings)),headers:I,method:"POST",path:"/dedibox/v1/rpn-sans"},it);listIps=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/rpn-sans/${i("rpnSanId",t.rpnSanId)}/ips`,urlParams:d(["type",t.type])},Dr);addIp=t=>this.client.fetch({body:JSON.stringify(L0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/rpn-sans/${i("rpnSanId",t.rpnSanId)}/ips`});removeIp=t=>this.client.fetch({body:JSON.stringify(D0(t,this.client.settings)),headers:I,method:"DELETE",path:`/dedibox/v1/rpn-sans/${i("rpnSanId",t.rpnSanId)}/ips`});listAvailableIps=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/rpn-sans/${i("rpnSanId",t.rpnSanId)}/available-ips`,urlParams:d(["type",t.type])},Dr)},Ts=class extends w{pageOfListRpnGroups=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/rpnv1/groups",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},e0);listRpnGroups=(t={})=>c("rpnGroups",this.pageOfListRpnGroups,t);getRpnGroup=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/rpnv1/groups/${i("groupId",t.groupId)}`},ft);createRpnGroup=t=>this.client.fetch({body:JSON.stringify(k0(t,this.client.settings)),headers:I,method:"POST",path:"/dedibox/v1/rpnv1/groups"},ft);deleteRpnGroup=t=>this.client.fetch({method:"DELETE",path:`/dedibox/v1/rpnv1/groups/${i("groupId",t.groupId)}`});updateRpnGroupName=t=>this.client.fetch({body:JSON.stringify(G0(t,this.client.settings)),headers:I,method:"PATCH",path:`/dedibox/v1/rpnv1/groups/${i("groupId",t.groupId)}`},ft);pageOfListRpnGroupMembers=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/rpnv1/groups/${i("groupId",t.groupId)}/members`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},qg);listRpnGroupMembers=t=>c("members",this.pageOfListRpnGroupMembers,t);rpnGroupInvite=t=>this.client.fetch({body:JSON.stringify(j0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/rpnv1/groups/${i("groupId",t.groupId)}/invite`});leaveRpnGroup=t=>this.client.fetch({body:JSON.stringify(V0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/rpnv1/groups/${i("groupId",t.groupId)}/leave`});addRpnGroupMembers=t=>this.client.fetch({body:JSON.stringify(U0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/rpnv1/groups/${i("groupId",t.groupId)}/members`},ft);deleteRpnGroupMembers=t=>this.client.fetch({body:JSON.stringify(x0(t,this.client.settings)),headers:I,method:"DELETE",path:`/dedibox/v1/rpnv1/groups/${i("groupId",t.groupId)}/members`},ft);pageOfListRpnCapableServers=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/rpnv1/capable-servers",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},Yg);listRpnCapableServers=(t={})=>c("servers",this.pageOfListRpnCapableServers,t);pageOfListRpnCapableSanServers=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/rpnv1/capable-san-servers",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},Xg);listRpnCapableSanServers=(t={})=>c("sanServers",this.pageOfListRpnCapableSanServers,t);pageOfListRpnInvites=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/rpnv1/invites",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId??this.client.settings.defaultProjectId])},t0);listRpnInvites=(t={})=>c("members",this.pageOfListRpnInvites,t);acceptRpnInvite=t=>this.client.fetch({method:"POST",path:`/dedibox/v1/rpnv1/invites/${i("memberId",t.memberId)}/accept`});refuseRpnInvite=t=>this.client.fetch({method:"POST",path:`/dedibox/v1/rpnv1/invites/${i("memberId",t.memberId)}/refuse`})},Rs=class extends w{pageOfListRpnV2Groups=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/rpnv2/groups",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},d0);listRpnV2Groups=(t={})=>c("rpnGroups",this.pageOfListRpnV2Groups,t);pageOfListRpnV2Members=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/rpnv2/groups/${i("groupId",t.groupId)}/members`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["type",t.type])},l0);listRpnV2Members=t=>c("members",this.pageOfListRpnV2Members,t);getRpnV2Group=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/rpnv2/groups/${i("groupId",t.groupId)}`},ia);waitForRpnV2Group=(t,a)=>v(a?.stop??(s=>Promise.resolve(!xp.includes(s.status))),this.getRpnV2Group,t,a);createRpnV2Group=t=>this.client.fetch({body:JSON.stringify(M0(t,this.client.settings)),headers:I,method:"POST",path:"/dedibox/v1/rpnv2/groups"},ia);deleteRpnV2Group=t=>this.client.fetch({method:"DELETE",path:`/dedibox/v1/rpnv2/groups/${i("groupId",t.groupId)}`});updateRpnV2GroupName=t=>this.client.fetch({body:JSON.stringify(J0(t,this.client.settings)),headers:I,method:"PATCH",path:`/dedibox/v1/rpnv2/groups/${i("groupId",t.groupId)}`},ia);addRpnV2Members=t=>this.client.fetch({body:JSON.stringify(B0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/rpnv2/groups/${i("groupId",t.groupId)}/members`});deleteRpnV2Members=t=>this.client.fetch({body:JSON.stringify(F0(t,this.client.settings)),headers:I,method:"DELETE",path:`/dedibox/v1/rpnv2/groups/${i("groupId",t.groupId)}/members`});pageOfListRpnV2CapableResources=(t={})=>this.client.fetch({method:"GET",path:"/dedibox/v1/rpnv2/groups/capable",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},o0);listRpnV2CapableResources=(t={})=>c("servers",this.pageOfListRpnV2CapableResources,t);pageOfListRpnV2GroupLogs=t=>this.client.fetch({method:"GET",path:`/dedibox/v1/rpnv2/groups/${i("groupId",t.groupId)}/logs`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},p0);listRpnV2GroupLogs=t=>c("logs",this.pageOfListRpnV2GroupLogs,t);updateRpnV2VlanForMembers=t=>this.client.fetch({body:JSON.stringify(H0(t,this.client.settings)),headers:I,method:"PATCH",path:`/dedibox/v1/rpnv2/groups/${i("groupId",t.groupId)}/vlan`});enableRpnV2GroupCompatibility=t=>this.client.fetch({body:JSON.stringify(Z0(t,this.client.settings)),headers:I,method:"POST",path:`/dedibox/v1/rpnv2/groups/${i("groupId",t.groupId)}/enable-compatibility`});disableRpnV2GroupCompatibility=t=>this.client.fetch({body:"{}",headers:I,method:"POST",path:`/dedibox/v1/rpnv2/groups/${i("groupId",t.groupId)}/disable-compatibility`})},s4={ipId:{greaterThan:0}},o4={serverId:{greaterThan:0}},r4={invoiceId:{greaterThan:0}},p4={refundId:{greaterThan:0}},d4={invoiceId:{greaterThan:0}},l4={refundId:{greaterThan:0}},c4={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},m4={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},h4={serverId:{greaterThan:0}},g4={ipId:{greaterThan:0}},u4={serverId:{greaterThan:0}},f4={serviceId:{greaterThan:0}},v4={ipId:{greaterThan:0}},y4={serverId:{greaterThan:0}},_4={ipId:{greaterThan:0}},w4={osId:{greaterThan:0},serverId:{greaterThan:0}},S4={offerId:{greaterThan:0}},b4={orderedServiceId:{greaterThan:0}},I4={serverId:{greaterThan:0}},T4={serverId:{greaterThan:0}},R4={serverId:{greaterThan:0}},E4={serverId:{greaterThan:0}},z4={serverId:{greaterThan:0}},P4={serviceId:{greaterThan:0}},A4={id:{greaterThan:0}},C4={blockId:{greaterThan:0}},N4={blockId:{greaterThan:0}},$4={blockId:{greaterThan:0}},L4={blockId:{greaterThan:0}},O4={osId:{greaterThan:0},serverId:{greaterThan:0}},D4={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},U4={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100},serverId:{greaterThan:0}},k4={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},x4={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100},serverId:{greaterThan:0}},V4={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100},serverId:{greaterThan:0}},j4={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},G4={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},B4={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100},serverId:{greaterThan:0}},M4={serverId:{greaterThan:0}},F4={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},Z4={rpnSanId:{greaterThan:0}},J4={rpnSanId:{greaterThan:0}},H4={rpnSanId:{greaterThan:0}},K4={rpnSanId:{greaterThan:0}},W4={rpnSanId:{greaterThan:0}},Q4={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},X4={rpnSanId:{greaterThan:0}},Y4={memberId:{greaterThan:0}},q4={groupId:{greaterThan:0}},eu={groupId:{greaterThan:0}},tu={groupId:{greaterThan:0}},iu={groupId:{greaterThan:0}},au={groupId:{greaterThan:0}},nu={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},su={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},ou={groupId:{greaterThan:0},page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},ru={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},pu={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},du={memberId:{greaterThan:0}},lu={groupId:{greaterThan:0}},cu={groupId:{greaterThan:0}},mu={groupId:{greaterThan:0}},hu={groupId:{greaterThan:0}},gu={groupId:{greaterThan:0}},uu={groupId:{greaterThan:0}},fu={groupId:{greaterThan:0}},vu={groupId:{greaterThan:0}},yu={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},_u={groupId:{greaterThan:0},page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},wu={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},Su={groupId:{greaterThan:0},page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},bu={groupId:{greaterThan:0}},Iu={groupId:{greaterThan:0}},Tu={serverId:{greaterThan:0}},Ru={serverId:{greaterThan:0}},Eu={serverId:{greaterThan:0}},zu={serverId:{greaterThan:0}},Pu={serverId:{greaterThan:0}},Au={optionId:{greaterThan:0},serverId:{greaterThan:0}},Cu={serverId:{greaterThan:0}},Nu={serverId:{greaterThan:0}},$u={ipId:{greaterThan:0}},Lu={serverId:{greaterThan:0}},Ou={serverId:{greaterThan:0}},Du={serverId:{greaterThan:0}},Uu=Object.freeze({__proto__:null,AttachFailoverIPToMacAddressRequest:s4,AttachFailoverIPsRequest:o4,BillingApiDownloadInvoiceRequest:r4,BillingApiDownloadRefundRequest:p4,BillingApiGetInvoiceRequest:d4,BillingApiGetRefundRequest:l4,BillingApiListInvoicesRequest:c4,BillingApiListRefundsRequest:m4,CancelServerInstallRequest:h4,DeleteFailoverIPRequest:g4,DeleteServerRequest:u4,DeleteServiceRequest:f4,DetachFailoverIPFromMacAddressRequest:v4,GetBMCAccessRequest:y4,GetFailoverIPRequest:_4,GetOSRequest:w4,GetOfferRequest:S4,GetOrderedServiceRequest:b4,GetRaidRequest:I4,GetRescueRequest:T4,GetServerBackupRequest:R4,GetServerInstallRequest:E4,GetServerRequest:z4,GetServiceRequest:P4,IPv6Block:A4,IPv6BlockApiCreateIPv6BlockSubnetRequest:C4,IPv6BlockApiDeleteIPv6BlockRequest:N4,IPv6BlockApiListIPv6BlockSubnetsAvailableRequest:$4,IPv6BlockApiUpdateIPv6BlockRequest:L4,InstallServerRequest:O4,ListFailoverIPsRequest:D4,ListOSRequest:U4,ListOffersRequest:k4,ListServerDisksRequest:x4,ListServerEventsRequest:V4,ListServersRequest:j4,ListServicesRequest:G4,ListSubscribableServerOptionsRequest:B4,RebootServerRequest:M4,RpnApiListRpnServerCapabilitiesRequest:F4,RpnSanApiAddIpRequest:Z4,RpnSanApiDeleteRpnSanRequest:J4,RpnSanApiGetRpnSanRequest:H4,RpnSanApiListAvailableIpsRequest:K4,RpnSanApiListIpsRequest:W4,RpnSanApiListRpnSansRequest:Q4,RpnSanApiRemoveIpRequest:X4,RpnV1ApiAcceptRpnInviteRequest:Y4,RpnV1ApiAddRpnGroupMembersRequest:q4,RpnV1ApiDeleteRpnGroupMembersRequest:eu,RpnV1ApiDeleteRpnGroupRequest:tu,RpnV1ApiGetRpnGroupRequest:iu,RpnV1ApiLeaveRpnGroupRequest:au,RpnV1ApiListRpnCapableSanServersRequest:nu,RpnV1ApiListRpnCapableServersRequest:su,RpnV1ApiListRpnGroupMembersRequest:ou,RpnV1ApiListRpnGroupsRequest:ru,RpnV1ApiListRpnInvitesRequest:pu,RpnV1ApiRefuseRpnInviteRequest:du,RpnV1ApiRpnGroupInviteRequest:lu,RpnV1ApiUpdateRpnGroupNameRequest:cu,RpnV2ApiAddRpnV2MembersRequest:mu,RpnV2ApiDeleteRpnV2GroupRequest:hu,RpnV2ApiDeleteRpnV2MembersRequest:gu,RpnV2ApiDisableRpnV2GroupCompatibilityRequest:uu,RpnV2ApiEnableRpnV2GroupCompatibilityRequest:fu,RpnV2ApiGetRpnV2GroupRequest:vu,RpnV2ApiListRpnV2CapableResourcesRequest:yu,RpnV2ApiListRpnV2GroupLogsRequest:_u,RpnV2ApiListRpnV2GroupsRequest:wu,RpnV2ApiListRpnV2MembersRequest:Su,RpnV2ApiUpdateRpnV2GroupNameRequest:bu,RpnV2ApiUpdateRpnV2VlanForMembersRequest:Iu,StartRescueRequest:Tu,StartServerRequest:Ru,StopBMCAccessRequest:Eu,StopRescueRequest:zu,StopServerRequest:Pu,SubscribeServerOptionRequest:Au,SubscribeStorageOptionsRequest:Cu,UpdateRaidRequest:Nu,UpdateReverseRequest:$u,UpdateServerBackupRequest:Lu,UpdateServerRequest:Ou,UpdateServerTagsRequest:Du}),ku=Object.freeze({__proto__:null,API:n4,BMC_ACCESS_TRANSIENT_STATUSES:Up,BillingAPI:ws,IPv6BlockAPI:Ss,I_PV6_BLOCK_DELEGATION_TRANSIENT_STATUSES:dg,RPN_GROUP_MEMBER_TRANSIENT_STATUSES:lg,RPN_SAN_TRANSIENT_STATUSES:kp,RPN_V2_GROUP_TRANSIENT_STATUSES:xp,RPN_V2_MEMBER_TRANSIENT_STATUSES:cg,RpnAPI:bs,RpnSanAPI:Is,RpnV1API:Ts,RpnV2API:Rs,SERVER_INSTALL_TRANSIENT_STATUSES:Vp,SERVER_TRANSIENT_STATUSES:jp,SERVICE_PROVISIONING_TRANSIENT_STATUSES:mg,ValidationRules:Uu}),xu=Object.freeze({__proto__:null,v1:ku}),Xp=["creating"],Yp=["provisioning","configuring","deleting","autohealing","initializing","backuping","snapshotting","restarting"],Vu=["ongoing"],qp=["provisioning","initializing","deleting","configuring","promoting"],ed=["creating","restoring","deleting"],ju=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EndpointDirectAccessDetails' failed as data isn't a dictionary.");return{}},Gu=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EndpointLoadBalancerDetails' failed as data isn't a dictionary.");return{}},Bu=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EndpointPrivateNetworkDetails' failed as data isn't a dictionary.");return{privateNetworkId:e.private_network_id,serviceIp:e.service_ip,zone:e.zone}},hi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Endpoint' failed as data isn't a dictionary.");return{directAccess:e.direct_access?ju(e.direct_access):void 0,hostname:e.hostname,id:e.id,ip:e.ip,loadBalancer:e.load_balancer?Gu(e.load_balancer):void 0,name:e.name,port:e.port,privateNetwork:e.private_network?Bu(e.private_network):void 0}},td=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Maintenance' failed as data isn't a dictionary.");return{closedAt:p(e.closed_at),forcedAt:p(e.forced_at),reason:e.reason,startsAt:p(e.starts_at),status:e.status,stopsAt:p(e.stops_at)}},ni=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ReadReplica' failed as data isn't a dictionary.");return{endpoints:r(e.endpoints,hi),id:e.id,region:e.region,sameZone:e.same_zone,status:e.status}},id=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Database' failed as data isn't a dictionary.");return{managed:e.managed,name:e.name,owner:e.owner,size:e.size}},ad=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'InstanceLog' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),downloadUrl:e.download_url,expiresAt:p(e.expires_at),id:e.id,nodeName:e.node_name,region:e.region,status:e.status}},Mu=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'BackupSchedule' failed as data isn't a dictionary.");return{disabled:e.disabled,frequency:e.frequency,nextRunAt:p(e.next_run_at),retention:e.retention}},ha=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'InstanceSetting' failed as data isn't a dictionary.");return{name:e.name,value:e.value}},Fu=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'LogsPolicy' failed as data isn't a dictionary.");return{maxAgeRetention:e.max_age_retention,totalDiskRetention:e.total_disk_retention}},Zu=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UpgradableVersion' failed as data isn't a dictionary.");return{id:e.id,minorVersion:e.minor_version,name:e.name,version:e.version}},Ju=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Volume' failed as data isn't a dictionary.");return{class:e.class,size:e.size,type:e.type}},Me=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Instance' failed as data isn't a dictionary.");return{backupSameRegion:e.backup_same_region,backupSchedule:e.backup_schedule?Mu(e.backup_schedule):void 0,createdAt:p(e.created_at),endpoint:e.endpoint?hi(e.endpoint):void 0,endpoints:r(e.endpoints,hi),engine:e.engine,id:e.id,initSettings:r(e.init_settings,ha),isHaCluster:e.is_ha_cluster,logsPolicy:e.logs_policy?Fu(e.logs_policy):void 0,maintenances:r(e.maintenances,td),name:e.name,nodeType:e.node_type,organizationId:e.organization_id,projectId:e.project_id,readReplicas:r(e.read_replicas,ni),region:e.region,settings:r(e.settings,ha),status:e.status,tags:e.tags,upgradableVersion:r(e.upgradable_version,Zu),volume:e.volume?Ju(e.volume):void 0}},nd=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Privilege' failed as data isn't a dictionary.");return{databaseName:e.database_name,permission:e.permission,userName:e.user_name}},Hu=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SnapshotVolumeType' failed as data isn't a dictionary.");return{class:e.class,type:e.type}},Gi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Snapshot' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),expiresAt:p(e.expires_at),id:e.id,instanceId:e.instance_id,instanceName:e.instance_name,name:e.name,nodeType:e.node_type,region:e.region,size:e.size,status:e.status,updatedAt:p(e.updated_at),volumeType:e.volume_type?Hu(e.volume_type):void 0}},Es=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'User' failed as data isn't a dictionary.");return{isAdmin:e.is_admin,name:e.name}},bn=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ACLRule' failed as data isn't a dictionary.");return{action:e.action,description:e.description,direction:e.direction,ip:e.ip,port:e.port,protocol:e.protocol}},Ku=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AddInstanceACLRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,bn)}},Wu=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AddInstanceSettingsResponse' failed as data isn't a dictionary.");return{settings:r(e.settings,ha)}},Qu=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DeleteInstanceACLRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,bn)}},Xu=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DeleteInstanceSettingsResponse' failed as data isn't a dictionary.");return{settings:r(e.settings,ha)}},Yu=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'InstanceMetrics' failed as data isn't a dictionary.");return{timeseries:r(e.timeseries,Tt)}},xr=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EngineSetting' failed as data isn't a dictionary.");return{defaultValue:e.default_value,description:e.description,floatMax:e.float_max,floatMin:e.float_min,hotConfigurable:e.hot_configurable,intMax:e.int_max,intMin:e.int_min,name:e.name,propertyType:e.property_type,stringConstraint:e.string_constraint,unit:e.unit}},qu=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EngineVersion' failed as data isn't a dictionary.");return{availableInitSettings:r(e.available_init_settings,xr),availableSettings:r(e.available_settings,xr),beta:e.beta,disabled:e.disabled,endOfLife:p(e.end_of_life),name:e.name,version:e.version}},ef=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DatabaseEngine' failed as data isn't a dictionary.");return{logoUrl:e.logo_url,name:e.name,region:e.region,versions:r(e.versions,qu)}},tf=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDatabaseEnginesResponse' failed as data isn't a dictionary.");return{engines:r(e.engines,ef),totalCount:e.total_count}},af=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDatabasesResponse' failed as data isn't a dictionary.");return{databases:r(e.databases,id),totalCount:e.total_count}},nf=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListInstanceACLRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,bn),totalCount:e.total_count}},sf=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListInstanceLogsDetailsResponseInstanceLogDetail' failed as data isn't a dictionary.");return{logName:e.log_name,size:e.size}},of=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListInstanceLogsDetailsResponse' failed as data isn't a dictionary.");return{details:r(e.details,sf)}},rf=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListInstanceLogsResponse' failed as data isn't a dictionary.");return{instanceLogs:r(e.instance_logs,ad)}},pf=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListInstancesResponse' failed as data isn't a dictionary.");return{instances:r(e.instances,Me),totalCount:e.total_count}},df=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'NodeTypeVolumeConstraintSizes' failed as data isn't a dictionary.");return{maxSize:e.max_size,minSize:e.min_size}},lf=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'NodeTypeVolumeType' failed as data isn't a dictionary.");return{chunkSize:e.chunk_size,class:e.class,description:e.description,maxSize:e.max_size,minSize:e.min_size,type:e.type}},cf=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'NodeType' failed as data isn't a dictionary.");return{availableVolumeTypes:r(e.available_volume_types,lf),beta:e.beta,description:e.description,disabled:e.disabled,generation:e.generation,instanceRange:e.instance_range,isBssdCompatible:e.is_bssd_compatible,isHaRequired:e.is_ha_required,memory:e.memory,name:e.name,region:e.region,stockStatus:e.stock_status,vcpus:e.vcpus,volumeConstraint:e.volume_constraint?df(e.volume_constraint):void 0}},mf=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListNodeTypesResponse' failed as data isn't a dictionary.");return{nodeTypes:r(e.node_types,cf),totalCount:e.total_count}},hf=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListPrivilegesResponse' failed as data isn't a dictionary.");return{privileges:r(e.privileges,nd),totalCount:e.total_count}},gf=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSnapshotsResponse' failed as data isn't a dictionary.");return{snapshots:r(e.snapshots,Gi),totalCount:e.total_count}},uf=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListUsersResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,users:r(e.users,Es)}},ff=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetInstanceACLRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,bn)}},vf=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetInstanceSettingsResponse' failed as data isn't a dictionary.");return{settings:r(e.settings,ha)}},sd=(e,t)=>({description:e.description,ip:e.ip}),yf=(e,t)=>({rules:e.rules.map(a=>sd(a))}),Js=(e,t)=>({name:e.name,value:e.value}),_f=(e,t)=>({settings:e.settings.map(a=>Js(a))}),wf=(e,t)=>({name:e.name,node_type:e.nodeType}),Sf=(e,t)=>({name:e.name}),bf=(e,t)=>({}),If=(e,t)=>({}),Tf=(e,t)=>({private_network_id:e.privateNetworkId,...u([{param:"service_ip",value:e.serviceIp},{param:"ipam_config",value:e.ipamConfig!==void 0?bf(e.ipamConfig):void 0}])}),od=(e,t)=>({...u([{param:"load_balancer",value:e.loadBalancer!==void 0?If(e.loadBalancer):void 0},{param:"private_network",value:e.privateNetwork!==void 0?Tf(e.privateNetwork):void 0}])}),Rf=(e,t)=>({endpoint_spec:e.endpointSpec!==void 0?od(e.endpointSpec):void 0}),Ef=(e,t)=>({instance_name:e.instanceName,is_ha_cluster:e.isHaCluster,node_type:e.nodeType}),zf=(e,t)=>({backup_same_region:e.backupSameRegion,disable_backup:e.disableBackup,engine:e.engine,init_endpoints:e.initEndpoints!==void 0?e.initEndpoints.map(a=>od(a)):void 0,init_settings:e.initSettings!==void 0?e.initSettings.map(a=>Js(a)):void 0,is_ha_cluster:e.isHaCluster,name:e.name||_("ins"),node_type:e.nodeType,password:e.password,tags:e.tags,user_name:e.userName,volume_size:e.volumeSize,volume_type:e.volumeType,...u([{default:t.defaultOrganizationId,param:"organization_id",value:e.organizationId},{default:t.defaultProjectId,param:"project_id",value:e.projectId}])}),Pf=(e,t)=>({}),Af=(e,t)=>({}),Cf=(e,t)=>({private_network_id:e.privateNetworkId,...u([{param:"service_ip",value:e.serviceIp},{param:"ipam_config",value:e.ipamConfig!==void 0?Pf(e.ipamConfig):void 0}])}),rd=(e,t)=>({...u([{param:"direct_access",value:e.directAccess!==void 0?Af(e.directAccess):void 0},{param:"private_network",value:e.privateNetwork!==void 0?Cf(e.privateNetwork):void 0}])}),Nf=(e,t)=>({endpoint_spec:e.endpointSpec.map(a=>rd(a))}),$f=(e,t)=>({endpoint_spec:e.endpointSpec!==void 0?e.endpointSpec.map(a=>rd(a)):void 0,instance_id:e.instanceId,same_zone:e.sameZone}),Lf=(e,t)=>({expires_at:e.expiresAt,name:e.name||_("snp")}),Of=(e,t)=>({is_admin:e.isAdmin,name:e.name,password:e.password}),Df=(e,t)=>({acl_rule_ips:e.aclRuleIps}),Uf=(e,t)=>({setting_names:e.settingNames}),kf=(e,t)=>({instance_id:e.instanceId}),xf=(e,t)=>({log_name:e.logName}),Vf=(e,t)=>({rules:e.rules.map(a=>sd(a))}),jf=(e,t)=>({settings:e.settings.map(a=>Js(a))}),Gf=(e,t)=>({database_name:e.databaseName,permission:e.permission,user_name:e.userName}),Bf=(e,t)=>({max_age_retention:e.maxAgeRetention,total_disk_retention:e.totalDiskRetention}),Mf=(e,t)=>({backup_same_region:e.backupSameRegion,backup_schedule_frequency:e.backupScheduleFrequency,backup_schedule_retention:e.backupScheduleRetention,backup_schedule_start_hour:e.backupScheduleStartHour,is_backup_schedule_disabled:e.isBackupScheduleDisabled,logs_policy:e.logsPolicy!==void 0?Bf(e.logsPolicy):void 0,name:e.name,tags:e.tags}),Ff=(e,t)=>({expires_at:e.expiresAt,name:e.name}),Zf=(e,t)=>({is_admin:e.isAdmin,password:e.password}),Jf=(e,t)=>({upgradable_version_id:e.upgradableVersionId,with_endpoints:e.withEndpoints}),Hf=(e,t)=>({...u([{param:"node_type",value:e.nodeType},{param:"enable_ha",value:e.enableHa},{param:"volume_size",value:e.volumeSize},{param:"volume_type",value:e.volumeType},{param:"upgradable_version_id",value:e.upgradableVersionId},{param:"major_upgrade_workflow",value:e.majorUpgradeWorkflow!==void 0?Jf(e.majorUpgradeWorkflow):void 0}])}),$={"Content-Type":"application/json; charset=utf-8"},Kf=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];pageOfListDatabaseEngines=(t={})=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/database-engines`,urlParams:d(["name",t.name],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["version",t.version])},tf);listDatabaseEngines=(t={})=>c("engines",this.pageOfListDatabaseEngines,t);pageOfListNodeTypes=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/node-types`,urlParams:d(["include_disabled_types",t.includeDisabledTypes],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},mf);listNodeTypes=t=>c("nodeTypes",this.pageOfListNodeTypes,t);upgradeInstance=t=>this.client.fetch({body:JSON.stringify(Hf(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/upgrade`},Me);pageOfListInstances=(t={})=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["tags",t.tags])},pf);listInstances=(t={})=>c("instances",this.pageOfListInstances,t);getInstance=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}`},Me);waitForInstance=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Yp.includes(s.status))),this.getInstance,t,a);createInstance=t=>this.client.fetch({body:JSON.stringify(zf(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances`},Me);updateInstance=t=>this.client.fetch({body:JSON.stringify(Mf(t,this.client.settings)),headers:$,method:"PATCH",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}`},Me);deleteInstance=t=>this.client.fetch({method:"DELETE",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}`},Me);cloneInstance=t=>this.client.fetch({body:JSON.stringify(wf(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/clone`},Me);restartInstance=t=>this.client.fetch({body:"{}",headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/restart`},Me);getInstanceCertificate=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/certificate`,urlParams:d(["dl",1]),responseType:"blob"});renewInstanceCertificate=t=>this.client.fetch({body:"{}",headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/renew-certificate`});getInstanceMetrics=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/metrics`,urlParams:d(["end_date",t.endDate],["metric_name",t.metricName],["start_date",t.startDate])},Yu);createReadReplica=t=>this.client.fetch({body:JSON.stringify($f(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/read-replicas`},ni);getReadReplica=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/read-replicas/${i("readReplicaId",t.readReplicaId)}`},ni);waitForReadReplica=(t,a)=>v(a?.stop??(s=>Promise.resolve(!qp.includes(s.status))),this.getReadReplica,t,a);deleteReadReplica=t=>this.client.fetch({method:"DELETE",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/read-replicas/${i("readReplicaId",t.readReplicaId)}`},ni);resetReadReplica=t=>this.client.fetch({body:"{}",headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/read-replicas/${i("readReplicaId",t.readReplicaId)}/reset`},ni);promoteReadReplica=t=>this.client.fetch({body:"{}",headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/read-replicas/${i("readReplicaId",t.readReplicaId)}/promote`},Me);createReadReplicaEndpoint=t=>this.client.fetch({body:JSON.stringify(Nf(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/read-replicas/${i("readReplicaId",t.readReplicaId)}/endpoints`},ni);listInstanceLogs=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/logs`,urlParams:d(["order_by",t.orderBy])},rf);getInstanceLog=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/logs/${i("instanceLogId",t.instanceLogId)}`},ad);waitForInstanceLog=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Xp.includes(s.status))),this.getInstanceLog,t,a);purgeInstanceLogs=t=>this.client.fetch({body:JSON.stringify(xf(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/purge-logs`});listInstanceLogsDetails=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/logs-details`},of);addInstanceSettings=t=>this.client.fetch({body:JSON.stringify(_f(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/settings`},Wu);deleteInstanceSettings=t=>this.client.fetch({body:JSON.stringify(Uf(t,this.client.settings)),headers:$,method:"DELETE",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/settings`},Xu);setInstanceSettings=t=>this.client.fetch({body:JSON.stringify(jf(t,this.client.settings)),headers:$,method:"PUT",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/settings`},vf);pageOfListInstanceACLRules=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/acls`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},nf);listInstanceACLRules=t=>c("rules",this.pageOfListInstanceACLRules,t);addInstanceACLRules=t=>this.client.fetch({body:JSON.stringify(yf(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/acls`},Ku);setInstanceACLRules=t=>this.client.fetch({body:JSON.stringify(Vf(t,this.client.settings)),headers:$,method:"PUT",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/acls`},ff);deleteInstanceACLRules=t=>this.client.fetch({body:JSON.stringify(Df(t,this.client.settings)),headers:$,method:"DELETE",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/acls`},Qu);pageOfListUsers=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/users`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},uf);listUsers=t=>c("users",this.pageOfListUsers,t);createUser=t=>this.client.fetch({body:JSON.stringify(Of(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/users`},Es);updateUser=t=>this.client.fetch({body:JSON.stringify(Zf(t,this.client.settings)),headers:$,method:"PATCH",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/users/${i("name",t.name)}`},Es);deleteUser=t=>this.client.fetch({method:"DELETE",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/users/${i("name",t.name)}`});pageOfListDatabases=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/databases`,urlParams:d(["managed",t.managed],["name",t.name],["order_by",t.orderBy],["owner",t.owner],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},af);listDatabases=t=>c("databases",this.pageOfListDatabases,t);createDatabase=t=>this.client.fetch({body:JSON.stringify(Sf(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/databases`},id);deleteDatabase=t=>this.client.fetch({method:"DELETE",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/databases/${i("name",t.name)}`});pageOfListPrivileges=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/privileges`,urlParams:d(["database_name",t.databaseName],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["user_name",t.userName])},hf);listPrivileges=t=>c("privileges",this.pageOfListPrivileges,t);setPrivilege=t=>this.client.fetch({body:JSON.stringify(Gf(t,this.client.settings)),headers:$,method:"PUT",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/privileges`},nd);pageOfListSnapshots=(t={})=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/snapshots`,urlParams:d(["instance_id",t.instanceId],["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},gf);listSnapshots=(t={})=>c("snapshots",this.pageOfListSnapshots,t);getSnapshot=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/snapshots/${i("snapshotId",t.snapshotId)}`},Gi);waitForSnapshot=(t,a)=>v(a?.stop??(s=>Promise.resolve(!ed.includes(s.status))),this.getSnapshot,t,a);createSnapshot=t=>this.client.fetch({body:JSON.stringify(Lf(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/snapshots`},Gi);updateSnapshot=t=>this.client.fetch({body:JSON.stringify(Ff(t,this.client.settings)),headers:$,method:"PATCH",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/snapshots/${i("snapshotId",t.snapshotId)}`},Gi);deleteSnapshot=t=>this.client.fetch({method:"DELETE",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/snapshots/${i("snapshotId",t.snapshotId)}`},Gi);createInstanceFromSnapshot=t=>this.client.fetch({body:JSON.stringify(Ef(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/snapshots/${i("snapshotId",t.snapshotId)}/create-instance`},Me);createEndpoint=t=>this.client.fetch({body:JSON.stringify(Rf(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/endpoints`},hi);deleteEndpoint=t=>this.client.fetch({method:"DELETE",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/endpoints/${i("endpointId",t.endpointId)}`});getEndpoint=t=>this.client.fetch({method:"GET",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/endpoints/${i("endpointId",t.endpointId)}`},hi);migrateEndpoint=t=>this.client.fetch({body:JSON.stringify(kf(t,this.client.settings)),headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/endpoints/${i("endpointId",t.endpointId)}/migrate`},hi);applyInstanceMaintenance=t=>this.client.fetch({body:"{}",headers:$,method:"POST",path:`/document-db/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/apply-maintenance`},td)},Wf={backupScheduleStartHour:{lessThanOrEqual:23}},Qf=Object.freeze({__proto__:null,UpdateInstanceRequest:Wf}),Xf=Object.freeze({__proto__:null,API:Kf,INSTANCE_LOG_TRANSIENT_STATUSES:Xp,INSTANCE_TRANSIENT_STATUSES:Yp,MAINTENANCE_TRANSIENT_STATUSES:Vu,READ_REPLICA_TRANSIENT_STATUSES:qp,SNAPSHOT_TRANSIENT_STATUSES:ed,ValidationRules:Qf}),Yf=Object.freeze({__proto__:null,v1beta1:Xf}),qf=["pending"],e9=["enabling","disabling"],t9=["pending","processing"],pd=["creating","renewing","xfering","expiring","updating","checking","deleting"],i9=["updating","deleting"],dd=["pending"],a9=["pending"],n9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ContactExtensionFRAssociationInfo' failed as data isn't a dictionary.");return{publicationJo:p(e.publication_jo),publicationJoPage:e.publication_jo_page}},s9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ContactExtensionFRCodeAuthAfnicInfo' failed as data isn't a dictionary.");return{codeAuthAfnic:e.code_auth_afnic}},o9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ContactExtensionFRDunsInfo' failed as data isn't a dictionary.");return{dunsId:e.duns_id,localId:e.local_id}},r9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ContactExtensionFRIndividualInfo' failed as data isn't a dictionary.");return{whoisOptIn:e.whois_opt_in}},p9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ContactExtensionFRTrademarkInfo' failed as data isn't a dictionary.");return{trademarkInpi:e.trademark_inpi}},d9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ContactExtensionEU' failed as data isn't a dictionary.");return{europeanCitizenship:e.european_citizenship}},l9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ContactExtensionFR' failed as data isn't a dictionary.");return{associationInfo:e.association_info?n9(e.association_info):void 0,codeAuthAfnicInfo:e.code_auth_afnic_info?s9(e.code_auth_afnic_info):void 0,dunsInfo:e.duns_info?o9(e.duns_info):void 0,individualInfo:e.individual_info?r9(e.individual_info):void 0,mode:e.mode,trademarkInfo:e.trademark_info?p9(e.trademark_info):void 0}},c9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ContactExtensionNL' failed as data isn't a dictionary.");return{legalForm:e.legal_form,legalFormRegistrationNumber:e.legal_form_registration_number}},m9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ContactQuestion' failed as data isn't a dictionary.");return{answer:e.answer,question:e.question}},gi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Contact' failed as data isn't a dictionary.");return{addressLine1:e.address_line_1,addressLine2:e.address_line_2,city:e.city,companyIdentificationCode:e.company_identification_code,companyName:e.company_name,country:e.country,email:e.email,emailAlt:e.email_alt,emailStatus:e.email_status,extensionEu:e.extension_eu?d9(e.extension_eu):void 0,extensionFr:e.extension_fr?l9(e.extension_fr):void 0,extensionNl:e.extension_nl?c9(e.extension_nl):void 0,faxNumber:e.fax_number,firstname:e.firstname,id:e.id,lang:e.lang,lastname:e.lastname,legalForm:e.legal_form,phoneNumber:e.phone_number,questions:e.questions?r(e.questions,m9):void 0,resale:e.resale,state:e.state,status:e.status,vatIdentificationCode:e.vat_identification_code,whoisOptIn:e.whois_opt_in,zip:e.zip}},ui=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DNSZone' failed as data isn't a dictionary.");return{domain:e.domain,linkedProducts:e.linked_products,message:e.message,ns:e.ns,nsDefault:e.ns_default,nsMaster:e.ns_master,projectId:e.project_id,status:e.status,subdomain:e.subdomain,updatedAt:p(e.updated_at)}},Za=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Host' failed as data isn't a dictionary.");return{domain:e.domain,ips:e.ips,name:e.name,status:e.status}},zs=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SSLCertificate' failed as data isn't a dictionary.");return{alternativeDnsZones:e.alternative_dns_zones,certificateChain:e.certificate_chain,createdAt:p(e.created_at),dnsZone:e.dns_zone,expiredAt:p(e.expired_at),privateKey:e.private_key,status:e.status}},as=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CheckContactsCompatibilityResponseContactCheckResult' failed as data isn't a dictionary.");return{compatible:e.compatible,errorMessage:e.error_message}},h9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CheckContactsCompatibilityResponse' failed as data isn't a dictionary.");return{administrativeCheckResult:e.administrative_check_result?as(e.administrative_check_result):void 0,compatible:e.compatible,ownerCheckResult:e.owner_check_result?as(e.owner_check_result):void 0,technicalCheckResult:e.technical_check_result?as(e.technical_check_result):void 0}},g9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ClearDNSZoneRecordsResponse' failed as data isn't a dictionary.");return{}},u9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DeleteDNSZoneResponse' failed as data isn't a dictionary.");return{}},f9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DeleteExternalDomainResponse' failed as data isn't a dictionary.");return{}},v9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DeleteSSLCertificateResponse' failed as data isn't a dictionary.");return{}},ld=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DSRecordPublicKey' failed as data isn't a dictionary.");return{key:e.key}},y9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DSRecordDigest' failed as data isn't a dictionary.");return{digest:e.digest,publicKey:e.public_key?ld(e.public_key):void 0,type:e.type}},_9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DSRecord' failed as data isn't a dictionary.");return{algorithm:e.algorithm,digest:e.digest?y9(e.digest):void 0,keyId:e.key_id,publicKey:e.public_key?ld(e.public_key):void 0}},w9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'TldOffer' failed as data isn't a dictionary.");return{action:e.action,operationPath:e.operation_path,price:e.price?L(e.price):void 0}},S9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainDNSSEC' failed as data isn't a dictionary.");return{dsRecords:r(e.ds_records,_9),status:e.status}},cd=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainRegistrationStatusExternalDomain' failed as data isn't a dictionary.");return{validationToken:e.validation_token}},md=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainRegistrationStatusTransfer' failed as data isn't a dictionary.");return{status:e.status,voteCurrentOwner:e.vote_current_owner,voteNewOwner:e.vote_new_owner}},In=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Tld' failed as data isn't a dictionary.");return{dnssecSupport:e.dnssec_support,durationInYearsMax:e.duration_in_years_max,durationInYearsMin:e.duration_in_years_min,idnSupport:e.idn_support,name:e.name,offers:It(e.offers,w9),specifications:e.specifications}},ht=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Domain' failed as data isn't a dictionary.");return{administrativeContact:e.administrative_contact?gi(e.administrative_contact):void 0,autoRenewStatus:e.auto_renew_status,dnsZones:r(e.dns_zones,ui),dnssec:e.dnssec?S9(e.dnssec):void 0,domain:e.domain,eppCode:e.epp_code,expiredAt:p(e.expired_at),externalDomainRegistrationStatus:e.external_domain_registration_status?cd(e.external_domain_registration_status):void 0,isExternal:e.is_external,linkedProducts:e.linked_products,organizationId:e.organization_id,ownerContact:e.owner_contact?gi(e.owner_contact):void 0,pendingTrade:e.pending_trade,projectId:e.project_id,registrar:e.registrar,status:e.status,technicalContact:e.technical_contact?gi(e.technical_contact):void 0,tld:e.tld?In(e.tld):void 0,transferRegistrationStatus:e.transfer_registration_status?md(e.transfer_registration_status):void 0,updatedAt:p(e.updated_at)}},b9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetDNSZoneTsigKeyResponse' failed as data isn't a dictionary.");return{algorithm:e.algorithm,key:e.key,name:e.name}},I9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainRecordGeoIPConfigMatch' failed as data isn't a dictionary.");return{continents:e.continents,countries:e.countries,data:e.data}},T9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainRecordViewConfigView' failed as data isn't a dictionary.");return{data:e.data,subnet:e.subnet}},R9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainRecordWeightedConfigWeightedIP' failed as data isn't a dictionary.");return{ip:e.ip,weight:e.weight}},E9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainRecordGeoIPConfig' failed as data isn't a dictionary.");return{default:e.default,matches:r(e.matches,I9)}},z9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainRecordHTTPServiceConfig' failed as data isn't a dictionary.");return{ips:e.ips,mustContain:e.must_contain,strategy:e.strategy,url:e.url,userAgent:e.user_agent}},P9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainRecordViewConfig' failed as data isn't a dictionary.");return{views:r(e.views,T9)}},A9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainRecordWeightedConfig' failed as data isn't a dictionary.");return{weightedIps:r(e.weighted_ips,R9)}},Mt=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainRecord' failed as data isn't a dictionary.");return{comment:e.comment,data:e.data,geoIpConfig:e.geo_ip_config?E9(e.geo_ip_config):void 0,httpServiceConfig:e.http_service_config?z9(e.http_service_config):void 0,id:e.id,name:e.name,priority:e.priority,ttl:e.ttl,type:e.type,viewConfig:e.view_config?P9(e.view_config):void 0,weightedConfig:e.weighted_config?A9(e.weighted_config):void 0}},hd=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RecordIdentifier' failed as data isn't a dictionary.");return{data:e.data,name:e.name,ttl:e.ttl,type:e.type}},C9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RecordChangeAdd' failed as data isn't a dictionary.");return{records:r(e.records,Mt)}},N9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RecordChangeClear' failed as data isn't a dictionary.");return{}},$9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RecordChangeDelete' failed as data isn't a dictionary.");return{id:e.id,idFields:e.id_fields?hd(e.id_fields):void 0}},L9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RecordChangeSet' failed as data isn't a dictionary.");return{id:e.id,idFields:e.id_fields?hd(e.id_fields):void 0,records:r(e.records,Mt)}},O9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RecordChange' failed as data isn't a dictionary.");return{add:e.add?C9(e.add):void 0,clear:e.clear?N9(e.clear):void 0,delete:e.delete?$9(e.delete):void 0,set:e.set?L9(e.set):void 0}},D9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetDNSZoneVersionDiffResponse' failed as data isn't a dictionary.");return{changes:r(e.changes,O9)}},U9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetDomainAuthCodeResponse' failed as data isn't a dictionary.");return{authCode:e.auth_code}},k9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ImportProviderDNSZoneResponse' failed as data isn't a dictionary.");return{records:r(e.records,Mt)}},x9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ImportRawDNSZoneResponse' failed as data isn't a dictionary.");return{records:r(e.records,Mt)}},V9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ContactRolesRoles' failed as data isn't a dictionary.");return{isAdministrative:e.is_administrative,isOwner:e.is_owner,isTechnical:e.is_technical}},j9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ContactRoles' failed as data isn't a dictionary.");return{contact:e.contact?gi(e.contact):void 0,roles:It(e.roles,V9)}},G9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListContactsResponse' failed as data isn't a dictionary.");return{contacts:r(e.contacts,j9),totalCount:e.total_count}},gd=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Nameserver' failed as data isn't a dictionary.");return{ip:e.ip,name:e.name}},B9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDNSZoneNameserversResponse' failed as data isn't a dictionary.");return{ns:r(e.ns,gd)}},M9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDNSZoneRecordsResponse' failed as data isn't a dictionary.");return{records:r(e.records,Mt),totalCount:e.total_count}},F9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDNSZoneVersionRecordsResponse' failed as data isn't a dictionary.");return{records:r(e.records,Mt),totalCount:e.total_count}},Z9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DNSZoneVersion' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id}},J9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDNSZoneVersionsResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,versions:r(e.versions,Z9)}},H9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDNSZonesResponse' failed as data isn't a dictionary.");return{dnsZones:r(e.dns_zones,ui),totalCount:e.total_count}},K9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDomainHostsResponse' failed as data isn't a dictionary.");return{hosts:r(e.hosts,Za),totalCount:e.total_count}},W9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainSummary' failed as data isn't a dictionary.");return{autoRenewStatus:e.auto_renew_status,createdAt:p(e.created_at),dnssecStatus:e.dnssec_status,domain:e.domain,eppCode:e.epp_code,expiredAt:p(e.expired_at),externalDomainRegistrationStatus:e.external_domain_registration_status?cd(e.external_domain_registration_status):void 0,isExternal:e.is_external,organizationId:e.organization_id,pendingTrade:e.pending_trade,projectId:e.project_id,registrar:e.registrar,status:e.status,transferRegistrationStatus:e.transfer_registration_status?md(e.transfer_registration_status):void 0,updatedAt:p(e.updated_at)}},Q9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDomainsResponse' failed as data isn't a dictionary.");return{domains:r(e.domains,W9),totalCount:e.total_count}},X9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RenewableDomain' failed as data isn't a dictionary.");return{domain:e.domain,estimatedDeleteAt:p(e.estimated_delete_at),expiredAt:p(e.expired_at),limitRedemptionAt:p(e.limit_redemption_at),limitRenewAt:p(e.limit_renew_at),organizationId:e.organization_id,projectId:e.project_id,renewableDurationInYears:e.renewable_duration_in_years,status:e.status,tld:e.tld?In(e.tld):void 0}},Y9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRenewableDomainsResponse' failed as data isn't a dictionary.");return{domains:r(e.domains,X9),totalCount:e.total_count}},q9=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSSLCertificatesResponse' failed as data isn't a dictionary.");return{certificates:r(e.certificates,zs),totalCount:e.total_count}},e3=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Task' failed as data isn't a dictionary.");return{contactIdentifier:e.contact_identifier,domain:e.domain,id:e.id,message:e.message,organizationId:e.organization_id,projectId:e.project_id,startedAt:p(e.started_at),status:e.status,type:e.type,updatedAt:p(e.updated_at)}},t3=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTasksResponse' failed as data isn't a dictionary.");return{tasks:r(e.tasks,e3),totalCount:e.total_count}},i3=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTldsResponse' failed as data isn't a dictionary.");return{tlds:r(e.tlds,In),totalCount:e.total_count}},Ua=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OrderResponse' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),domains:e.domains,organizationId:e.organization_id,projectId:e.project_id,taskId:e.task_id}},a3=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RefreshDNSZoneResponse' failed as data isn't a dictionary.");return{dnsZones:r(e.dns_zones,ui)}},n3=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RegisterExternalDomainResponse' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),domain:e.domain,organizationId:e.organization_id,projectId:e.project_id,validationToken:e.validation_token}},s3=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RestoreDNSZoneVersionResponse' failed as data isn't a dictionary.");return{}},o3=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AvailableDomain' failed as data isn't a dictionary.");return{available:e.available,domain:e.domain,tld:e.tld?In(e.tld):void 0}},r3=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SearchAvailableDomainsResponse' failed as data isn't a dictionary.");return{availableDomains:r(e.available_domains,o3)}},p3=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UpdateDNSZoneNameserversResponse' failed as data isn't a dictionary.");return{ns:r(e.ns,gd)}},d3=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UpdateDNSZoneRecordsResponse' failed as data isn't a dictionary.");return{records:r(e.records,Mt)}},l3=(e,t)=>({dest_dns_zone:e.destDnsZone,overwrite:e.overwrite,project_id:e.projectId??t.defaultProjectId}),c3=(e,t)=>({domain:e.domain,project_id:e.projectId??t.defaultProjectId,subdomain:e.subdomain}),m3=(e,t)=>({alternative_dns_zones:e.alternativeDnsZones,dns_zone:e.dnsZone}),h3=(e,t)=>({token:e.token}),g3=(e,t)=>({...u([{param:"online_v1",value:e.onlineV1!==void 0?h3(e.onlineV1):void 0}])}),u3=(e,t)=>({algorithm:e.algorithm,key:e.key,name:e.name}),f3=(e,t)=>({name_server:e.nameServer,tsig_key:e.tsigKey!==void 0?u3(e.tsigKey):void 0}),v3=(e,t)=>({content:e.content}),y3=(e,t)=>({content:e.content,format:e.format,project_id:e.projectId??t.defaultProjectId,...u([{param:"bind_source",value:e.bindSource!==void 0?v3(e.bindSource):void 0},{param:"axfr_source",value:e.axfrSource!==void 0?f3(e.axfrSource):void 0}])}),_3=(e,t)=>({recreate_dns_zone:e.recreateDnsZone,recreate_sub_dns_zone:e.recreateSubDnsZone}),w3=(e,t)=>({publication_jo:e.publicationJo,publication_jo_page:e.publicationJoPage}),S3=(e,t)=>({code_auth_afnic:e.codeAuthAfnic}),b3=(e,t)=>({duns_id:e.dunsId,local_id:e.localId}),I3=(e,t)=>({whois_opt_in:e.whoisOptIn}),T3=(e,t)=>({trademark_inpi:e.trademarkInpi}),ud=(e,t)=>({european_citizenship:e.europeanCitizenship}),fd=(e,t)=>({mode:e.mode,...u([{param:"individual_info",value:e.individualInfo!==void 0?I3(e.individualInfo):void 0},{param:"duns_info",value:e.dunsInfo!==void 0?b3(e.dunsInfo):void 0},{param:"association_info",value:e.associationInfo!==void 0?w3(e.associationInfo):void 0},{param:"trademark_info",value:e.trademarkInfo!==void 0?T3(e.trademarkInfo):void 0},{param:"code_auth_afnic_info",value:e.codeAuthAfnicInfo!==void 0?S3(e.codeAuthAfnicInfo):void 0}])}),vd=(e,t)=>({legal_form:e.legalForm,legal_form_registration_number:e.legalFormRegistrationNumber}),R3=(e,t)=>({answer:e.answer,question:e.question}),he=(e,t)=>({address_line_1:e.addressLine1,address_line_2:e.addressLine2,city:e.city,company_identification_code:e.companyIdentificationCode,company_name:e.companyName,country:e.country,email:e.email,email_alt:e.emailAlt,extension_eu:e.extensionEu!==void 0?ud(e.extensionEu):void 0,extension_fr:e.extensionFr!==void 0?fd(e.extensionFr):void 0,extension_nl:e.extensionNl!==void 0?vd(e.extensionNl):void 0,fax_number:e.faxNumber,firstname:e.firstname,lang:e.lang,lastname:e.lastname,legal_form:e.legalForm,phone_number:e.phoneNumber,questions:e.questions!==void 0?e.questions.map(a=>R3(a)):void 0,resale:e.resale,state:e.state,vat_identification_code:e.vatIdentificationCode,whois_opt_in:e.whoisOptIn,zip:e.zip}),E3=(e,t)=>({domains:e.domains,duration_in_years:e.durationInYears,project_id:e.projectId??t.defaultProjectId,...u([{param:"owner_contact_id",value:e.ownerContactId},{param:"owner_contact",value:e.ownerContact!==void 0?he(e.ownerContact):void 0}]),...u([{param:"administrative_contact_id",value:e.administrativeContactId},{param:"administrative_contact",value:e.administrativeContact!==void 0?he(e.administrativeContact):void 0}]),...u([{param:"technical_contact_id",value:e.technicalContactId},{param:"technical_contact",value:e.technicalContact!==void 0?he(e.technicalContact):void 0}])}),z3=(e,t)=>({domains:e.domains,tlds:e.tlds,...u([{param:"owner_contact_id",value:e.ownerContactId},{param:"owner_contact",value:e.ownerContact!==void 0?he(e.ownerContact):void 0}]),...u([{param:"administrative_contact_id",value:e.administrativeContactId},{param:"administrative_contact",value:e.administrativeContact!==void 0?he(e.administrativeContact):void 0}]),...u([{param:"technical_contact_id",value:e.technicalContactId},{param:"technical_contact",value:e.technicalContact!==void 0?he(e.technicalContact):void 0}])}),P3=(e,t)=>({ips:e.ips,name:e.name}),yd=(e,t)=>({key:e.key}),A3=(e,t)=>({digest:e.digest,public_key:e.publicKey!==void 0?yd(e.publicKey):void 0,type:e.type}),C3=(e,t)=>({algorithm:e.algorithm,key_id:e.keyId,...u([{param:"digest",value:e.digest!==void 0?A3(e.digest):void 0},{param:"public_key",value:e.publicKey!==void 0?yd(e.publicKey):void 0}])}),N3=(e,t)=>({ds_record:e.dsRecord!==void 0?C3(e.dsRecord):void 0}),$3=(e,t)=>({domain:e.domain,project_id:e.projectId??t.defaultProjectId}),L3=(e,t)=>({domains:e.domains,duration_in_years:e.durationInYears,force_late_renewal:e.forceLateRenewal}),O3=(e,t)=>({project_id:e.projectId??t.defaultProjectId,...u([{param:"new_owner_contact_id",value:e.newOwnerContactId},{param:"new_owner_contact",value:e.newOwnerContact!==void 0?he(e.newOwnerContact):void 0}])}),D3=(e,t)=>({auth_code:e.authCode,domain:e.domain}),U3=(e,t)=>({domains:e.domains.map(a=>D3(a)),project_id:e.projectId??t.defaultProjectId,...u([{param:"owner_contact_id",value:e.ownerContactId},{param:"owner_contact",value:e.ownerContact!==void 0?he(e.ownerContact):void 0}]),...u([{param:"administrative_contact_id",value:e.administrativeContactId},{param:"administrative_contact",value:e.administrativeContact!==void 0?he(e.administrativeContact):void 0}]),...u([{param:"technical_contact_id",value:e.technicalContactId},{param:"technical_contact",value:e.technicalContact!==void 0?he(e.technicalContact):void 0}])}),k3=(e,t)=>({answer:e.answer,question:e.question}),x3=(e,t)=>({address_line_1:e.addressLine1,address_line_2:e.addressLine2,city:e.city,company_identification_code:e.companyIdentificationCode,country:e.country,email:e.email,email_alt:e.emailAlt,extension_eu:e.extensionEu!==void 0?ud(e.extensionEu):void 0,extension_fr:e.extensionFr!==void 0?fd(e.extensionFr):void 0,extension_nl:e.extensionNl!==void 0?vd(e.extensionNl):void 0,fax_number:e.faxNumber,lang:e.lang,phone_number:e.phoneNumber,questions:e.questions!==void 0?e.questions.map(a=>k3(a)):void 0,resale:e.resale,state:e.state,vat_identification_code:e.vatIdentificationCode,whois_opt_in:e.whoisOptIn,zip:e.zip}),V3=(e,t)=>({ips:e.ips}),j3=(e,t)=>({...u([{param:"technical_contact_id",value:e.technicalContactId},{param:"technical_contact",value:e.technicalContact!==void 0?he(e.technicalContact):void 0}]),...u([{param:"owner_contact_id",value:e.ownerContactId},{param:"owner_contact",value:e.ownerContact!==void 0?he(e.ownerContact):void 0}]),...u([{param:"administrative_contact_id",value:e.administrativeContactId},{param:"administrative_contact",value:e.administrativeContact!==void 0?he(e.administrativeContact):void 0}])}),G3=(e,t)=>({ip:e.ip,name:e.name}),B3=(e,t)=>({ns:e.ns.map(a=>G3(a))}),M3=(e,t)=>({continents:e.continents,countries:e.countries,data:e.data}),F3=(e,t)=>({data:e.data,subnet:e.subnet}),Z3=(e,t)=>({ip:e.ip,weight:e.weight}),J3=(e,t)=>({default:e.default,matches:e.matches.map(a=>M3(a))}),H3=(e,t)=>({ips:e.ips,must_contain:e.mustContain,strategy:e.strategy,url:e.url,user_agent:e.userAgent}),K3=(e,t)=>({views:e.views.map(a=>F3(a))}),W3=(e,t)=>({weighted_ips:e.weightedIps.map(a=>Z3(a))}),_d=(e,t)=>({comment:e.comment,data:e.data,id:e.id,name:e.name,priority:e.priority,ttl:e.ttl,type:e.type,...u([{param:"geo_ip_config",value:e.geoIpConfig!==void 0?J3(e.geoIpConfig):void 0},{param:"http_service_config",value:e.httpServiceConfig!==void 0?H3(e.httpServiceConfig):void 0},{param:"weighted_config",value:e.weightedConfig!==void 0?W3(e.weightedConfig):void 0},{param:"view_config",value:e.viewConfig!==void 0?K3(e.viewConfig):void 0}])}),wd=(e,t)=>({data:e.data,name:e.name,ttl:e.ttl,type:e.type}),Q3=(e,t)=>({records:e.records.map(a=>_d(a))}),X3=(e,t)=>({}),Y3=(e,t)=>({...u([{param:"id",value:e.id},{param:"id_fields",value:e.idFields!==void 0?wd(e.idFields):void 0}])}),q3=(e,t)=>({records:e.records.map(a=>_d(a)),...u([{param:"id",value:e.id},{param:"id_fields",value:e.idFields!==void 0?wd(e.idFields):void 0}])}),e5=(e,t)=>({...u([{param:"add",value:e.add!==void 0?Q3(e.add):void 0},{param:"set",value:e.set!==void 0?q3(e.set):void 0},{param:"delete",value:e.delete!==void 0?Y3(e.delete):void 0},{param:"clear",value:e.clear!==void 0?X3(e.clear):void 0}])}),t5=(e,t)=>({changes:e.changes.map(a=>e5(a)),disallow_new_zone_creation:e.disallowNewZoneCreation,return_all_records:e.returnAllRecords,serial:e.serial}),i5=(e,t)=>({new_dns_zone:e.newDnsZone,project_id:e.projectId??t.defaultProjectId}),O={"Content-Type":"application/json; charset=utf-8"},a5=class extends w{pageOfListDNSZones=t=>this.client.fetch({method:"GET",path:"/domain/v2beta1/dns-zones",urlParams:d(["created_after",t.createdAfter],["created_before",t.createdBefore],["dns_zone",t.dnsZone],["dns_zones",t.dnsZones],["domain",t.domain],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["updated_after",t.updatedAfter],["updated_before",t.updatedBefore])},H9);listDNSZones=t=>c("dnsZones",this.pageOfListDNSZones,t);createDNSZone=t=>this.client.fetch({body:JSON.stringify(c3(t,this.client.settings)),headers:O,method:"POST",path:"/domain/v2beta1/dns-zones"},ui);updateDNSZone=t=>this.client.fetch({body:JSON.stringify(i5(t,this.client.settings)),headers:O,method:"PATCH",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}`},ui);cloneDNSZone=t=>this.client.fetch({body:JSON.stringify(l3(t,this.client.settings)),headers:O,method:"POST",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}/clone`},ui);deleteDNSZone=t=>this.client.fetch({method:"DELETE",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}`,urlParams:d(["project_id",t.projectId??this.client.settings.defaultProjectId])},u9);pageOfListDNSZoneRecords=t=>this.client.fetch({method:"GET",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}/records`,urlParams:d(["id",t.id],["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["type",t.type])},M9);listDNSZoneRecords=t=>c("records",this.pageOfListDNSZoneRecords,t);updateDNSZoneRecords=t=>this.client.fetch({body:JSON.stringify(t5(t,this.client.settings)),headers:O,method:"PATCH",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}/records`},d3);listDNSZoneNameservers=t=>this.client.fetch({method:"GET",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}/nameservers`,urlParams:d(["project_id",t.projectId])},B9);updateDNSZoneNameservers=t=>this.client.fetch({body:JSON.stringify(B3(t,this.client.settings)),headers:O,method:"PUT",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}/nameservers`},p3);clearDNSZoneRecords=t=>this.client.fetch({method:"DELETE",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}/records`},g9);exportRawDNSZone=t=>this.client.fetch({method:"GET",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}/raw`,urlParams:d(["dl",1],["format",t.format]),responseType:"blob"});importRawDNSZone=t=>this.client.fetch({body:JSON.stringify(y3(t,this.client.settings)),headers:O,method:"POST",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}/raw`},x9);importProviderDNSZone=t=>this.client.fetch({body:JSON.stringify(g3(t,this.client.settings)),headers:O,method:"POST",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}/import-provider`},k9);refreshDNSZone=t=>this.client.fetch({body:JSON.stringify(_3(t,this.client.settings)),headers:O,method:"POST",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}/refresh`},a3);pageOfListDNSZoneVersions=t=>this.client.fetch({method:"GET",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}/versions`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},J9);listDNSZoneVersions=t=>c("versions",this.pageOfListDNSZoneVersions,t);pageOfListDNSZoneVersionRecords=t=>this.client.fetch({method:"GET",path:`/domain/v2beta1/dns-zones/version/${i("dnsZoneVersionId",t.dnsZoneVersionId)}`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},F9);listDNSZoneVersionRecords=t=>c("records",this.pageOfListDNSZoneVersionRecords,t);getDNSZoneVersionDiff=t=>this.client.fetch({method:"GET",path:`/domain/v2beta1/dns-zones/version/${i("dnsZoneVersionId",t.dnsZoneVersionId)}/diff`},D9);restoreDNSZoneVersion=t=>this.client.fetch({body:"{}",headers:O,method:"POST",path:`/domain/v2beta1/dns-zones/version/${i("dnsZoneVersionId",t.dnsZoneVersionId)}/restore`},s3);getSSLCertificate=t=>this.client.fetch({method:"GET",path:`/domain/v2beta1/ssl-certificates/${i("dnsZone",t.dnsZone)}`},zs);waitForSSLCertificate=(t,a)=>v(a?.stop??(s=>Promise.resolve(!dd.includes(s.status))),this.getSSLCertificate,t,a);createSSLCertificate=t=>this.client.fetch({body:JSON.stringify(m3(t,this.client.settings)),headers:O,method:"POST",path:"/domain/v2beta1/ssl-certificates"},zs);pageOfListSSLCertificates=t=>this.client.fetch({method:"GET",path:"/domain/v2beta1/ssl-certificates",urlParams:d(["dns_zone",t.dnsZone],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},q9);listSSLCertificates=t=>c("certificates",this.pageOfListSSLCertificates,t);deleteSSLCertificate=t=>this.client.fetch({method:"DELETE",path:`/domain/v2beta1/ssl-certificates/${i("dnsZone",t.dnsZone)}`},v9);getDNSZoneTsigKey=t=>this.client.fetch({method:"GET",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}/tsig-key`},b9);deleteDNSZoneTsigKey=t=>this.client.fetch({method:"DELETE",path:`/domain/v2beta1/dns-zones/${i("dnsZone",t.dnsZone)}/tsig-key`})},Ps=class extends w{pageOfListTasks=(t={})=>this.client.fetch({method:"GET",path:"/domain/v2beta1/tasks",urlParams:d(["domain",t.domain],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["statuses",t.statuses],["types",t.types])},t3);listTasks=(t={})=>c("tasks",this.pageOfListTasks,t);buyDomains=t=>this.client.fetch({body:JSON.stringify(E3(t,this.client.settings)),headers:O,method:"POST",path:"/domain/v2beta1/buy-domains"},Ua);renewDomains=t=>this.client.fetch({body:JSON.stringify(L3(t,this.client.settings)),headers:O,method:"POST",path:"/domain/v2beta1/renew-domains"},Ua);transferInDomain=t=>this.client.fetch({body:JSON.stringify(U3(t,this.client.settings)),headers:O,method:"POST",path:"/domain/v2beta1/domains/transfer-domains"},Ua);tradeDomain=t=>this.client.fetch({body:JSON.stringify(O3(t,this.client.settings)),headers:O,method:"POST",path:`/domain/v2beta1/domains/${i("domain",t.domain)}/trade`},Ua);registerExternalDomain=t=>this.client.fetch({body:JSON.stringify($3(t,this.client.settings)),headers:O,method:"POST",path:"/domain/v2beta1/external-domains"},n3);deleteExternalDomain=t=>this.client.fetch({method:"DELETE",path:`/domain/v2beta1/external-domains/${i("domain",t.domain)}`},f9);checkContactsCompatibility=(t={})=>this.client.fetch({body:JSON.stringify(z3(t,this.client.settings)),headers:O,method:"POST",path:"/domain/v2beta1/check-contacts-compatibility"},h9);pageOfListContacts=(t={})=>this.client.fetch({method:"GET",path:"/domain/v2beta1/contacts",urlParams:d(["domain",t.domain],["email_status",t.emailStatus],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["role",t.role])},G9);listContacts=(t={})=>c("contacts",this.pageOfListContacts,t);getContact=t=>this.client.fetch({method:"GET",path:`/domain/v2beta1/contacts/${i("contactId",t.contactId)}`},gi);updateContact=t=>this.client.fetch({body:JSON.stringify(x3(t,this.client.settings)),headers:O,method:"PATCH",path:`/domain/v2beta1/contacts/${i("contactId",t.contactId)}`},gi);pageOfListDomains=(t={})=>this.client.fetch({method:"GET",path:"/domain/v2beta1/domains",urlParams:d(["domain",t.domain],["is_external",t.isExternal],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["registrar",t.registrar],["status",t.status])},Q9);listDomains=(t={})=>c("domains",this.pageOfListDomains,t);pageOfListRenewableDomains=(t={})=>this.client.fetch({method:"GET",path:"/domain/v2beta1/renewable-domains",urlParams:d(["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},Y9);listRenewableDomains=(t={})=>c("domains",this.pageOfListRenewableDomains,t);getDomain=t=>this.client.fetch({method:"GET",path:`/domain/v2beta1/domains/${i("domain",t.domain)}`},ht);waitForDomain=(t,a)=>v(a?.stop??(s=>Promise.resolve(!pd.includes(s.status))),this.getDomain,t,a);updateDomain=t=>this.client.fetch({body:JSON.stringify(j3(t,this.client.settings)),headers:O,method:"PATCH",path:`/domain/v2beta1/domains/${i("domain",t.domain)}`},ht);lockDomainTransfer=t=>this.client.fetch({body:"{}",headers:O,method:"POST",path:`/domain/v2beta1/domains/${i("domain",t.domain)}/lock-transfer`},ht);unlockDomainTransfer=t=>this.client.fetch({body:"{}",headers:O,method:"POST",path:`/domain/v2beta1/domains/${i("domain",t.domain)}/unlock-transfer`},ht);enableDomainAutoRenew=t=>this.client.fetch({body:"{}",headers:O,method:"POST",path:`/domain/v2beta1/domains/${i("domain",t.domain)}/enable-auto-renew`},ht);disableDomainAutoRenew=t=>this.client.fetch({body:"{}",headers:O,method:"POST",path:`/domain/v2beta1/domains/${i("domain",t.domain)}/disable-auto-renew`},ht);getDomainAuthCode=t=>this.client.fetch({method:"GET",path:`/domain/v2beta1/domains/${i("domain",t.domain)}/auth-code`},U9);enableDomainDNSSEC=t=>this.client.fetch({body:JSON.stringify(N3(t,this.client.settings)),headers:O,method:"POST",path:`/domain/v2beta1/domains/${i("domain",t.domain)}/enable-dnssec`},ht);disableDomainDNSSEC=t=>this.client.fetch({body:"{}",headers:O,method:"POST",path:`/domain/v2beta1/domains/${i("domain",t.domain)}/disable-dnssec`},ht);searchAvailableDomains=t=>this.client.fetch({method:"GET",path:"/domain/v2beta1/search-domains",urlParams:d(["domains",t.domains],["strict_search",t.strictSearch],["tlds",t.tlds])},r3);pageOfListTlds=(t={})=>this.client.fetch({method:"GET",path:"/domain/v2beta1/tlds",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["tlds",t.tlds])},i3);listTlds=(t={})=>c("tlds",this.pageOfListTlds,t);createDomainHost=t=>this.client.fetch({body:JSON.stringify(P3(t,this.client.settings)),headers:O,method:"POST",path:`/domain/v2beta1/domains/${i("domain",t.domain)}/hosts`},Za);pageOfListDomainHosts=t=>this.client.fetch({method:"GET",path:`/domain/v2beta1/domains/${i("domain",t.domain)}/hosts`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},K9);listDomainHosts=t=>c("hosts",this.pageOfListDomainHosts,t);updateDomainHost=t=>this.client.fetch({body:JSON.stringify(V3(t,this.client.settings)),headers:O,method:"PATCH",path:`/domain/v2beta1/domains/${i("domain",t.domain)}/hosts/${i("name",t.name)}`},Za);deleteDomainHost=t=>this.client.fetch({method:"DELETE",path:`/domain/v2beta1/domains/${i("domain",t.domain)}/hosts/${i("name",t.name)}`},Za)},n5=Object.freeze({__proto__:null,API:a5,DNS_ZONE_TRANSIENT_STATUSES:qf,DOMAIN_FEATURE_TRANSIENT_STATUSES:e9,DOMAIN_REGISTRATION_STATUS_TRANSFER_TRANSIENT_STATUSES:t9,DOMAIN_TRANSIENT_STATUSES:pd,HOST_TRANSIENT_STATUSES:i9,RegistrarAPI:Ps,SSL_CERTIFICATE_TRANSIENT_STATUSES:dd,TASK_TRANSIENT_STATUSES:a9}),s5=Object.freeze({__proto__:null,v2beta1:n5}),Sd=["updating","detaching"],o5=["updating","deleting"],r5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'MACAddress' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,macAddress:e.mac_address,macType:e.mac_type,status:e.status,updatedAt:p(e.updated_at),zone:e.zone}},tt=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'FlexibleIP' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),description:e.description,id:e.id,ipAddress:e.ip_address,macAddress:e.mac_address?r5(e.mac_address):void 0,organizationId:e.organization_id,projectId:e.project_id,reverse:e.reverse,serverId:e.server_id,status:e.status,tags:e.tags,updatedAt:p(e.updated_at),zone:e.zone}},p5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AttachFlexibleIPsResponse' failed as data isn't a dictionary.");return{flexibleIps:r(e.flexible_ips,tt),totalCount:e.total_count}},d5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DetachFlexibleIPsResponse' failed as data isn't a dictionary.");return{flexibleIps:r(e.flexible_ips,tt),totalCount:e.total_count}},l5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListFlexibleIPsResponse' failed as data isn't a dictionary.");return{flexibleIps:r(e.flexible_ips,tt),totalCount:e.total_count}},c5=(e,t)=>({fips_ids:e.fipsIds,server_id:e.serverId}),m5=(e,t)=>({description:e.description,is_ipv6:e.isIpv6,project_id:e.projectId??t.defaultProjectId,reverse:e.reverse,server_id:e.serverId,tags:e.tags}),h5=(e,t)=>({fips_ids:e.fipsIds}),g5=(e,t)=>({duplicate_from_fip_id:e.duplicateFromFipId}),u5=(e,t)=>({mac_type:e.macType}),f5=(e,t)=>({dst_fip_id:e.dstFipId}),v5=(e,t)=>({description:e.description,reverse:e.reverse,tags:e.tags}),Ut={"Content-Type":"application/json; charset=utf-8"},y5=class extends w{static LOCALITIES=["fr-par-1","fr-par-2","nl-ams-1"];createFlexibleIP=t=>this.client.fetch({body:JSON.stringify(m5(t,this.client.settings)),headers:Ut,method:"POST",path:`/flexible-ip/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/fips`},tt);getFlexibleIP=t=>this.client.fetch({method:"GET",path:`/flexible-ip/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/fips/${i("fipId",t.fipId)}`},tt);waitForFlexibleIP=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Sd.includes(s.status))),this.getFlexibleIP,t,a);pageOfListFlexibleIPs=(t={})=>this.client.fetch({method:"GET",path:`/flexible-ip/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/fips`,urlParams:d(["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["server_ids",t.serverIds],["status",t.status],["tags",t.tags])},l5);listFlexibleIPs=(t={})=>c("flexibleIps",this.pageOfListFlexibleIPs,t);updateFlexibleIP=t=>this.client.fetch({body:JSON.stringify(v5(t,this.client.settings)),headers:Ut,method:"PATCH",path:`/flexible-ip/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/fips/${i("fipId",t.fipId)}`},tt);deleteFlexibleIP=t=>this.client.fetch({method:"DELETE",path:`/flexible-ip/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/fips/${i("fipId",t.fipId)}`});attachFlexibleIP=t=>this.client.fetch({body:JSON.stringify(c5(t,this.client.settings)),headers:Ut,method:"POST",path:`/flexible-ip/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/fips/attach`},p5);detachFlexibleIP=t=>this.client.fetch({body:JSON.stringify(h5(t,this.client.settings)),headers:Ut,method:"POST",path:`/flexible-ip/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/fips/detach`},d5);generateMACAddr=t=>this.client.fetch({body:JSON.stringify(u5(t,this.client.settings)),headers:Ut,method:"POST",path:`/flexible-ip/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/fips/${i("fipId",t.fipId)}/mac`},tt);duplicateMACAddr=t=>this.client.fetch({body:JSON.stringify(g5(t,this.client.settings)),headers:Ut,method:"POST",path:`/flexible-ip/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/fips/${i("fipId",t.fipId)}/mac/duplicate`},tt);moveMACAddr=t=>this.client.fetch({body:JSON.stringify(f5(t,this.client.settings)),headers:Ut,method:"POST",path:`/flexible-ip/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/fips/${i("fipId",t.fipId)}/mac/move`},tt);deleteMACAddr=t=>this.client.fetch({method:"DELETE",path:`/flexible-ip/v1alpha1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/fips/${i("fipId",t.fipId)}/mac`})},_5={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},w5=Object.freeze({__proto__:null,ListFlexibleIPsRequest:_5}),S5=Object.freeze({__proto__:null,API:y5,FLEXIBLE_IP_TRANSIENT_STATUSES:Sd,MAC_ADDRESS_TRANSIENT_STATUSES:o5,ValidationRules:w5}),b5=Object.freeze({__proto__:null,v1alpha1:S5}),bd=["deleting","creating","pending"],Id=["deleting","creating","pending"],Td=["deleting","creating","pending"],Rd=["deleting","creating","pending"],Ed=["deleting","creating"],zd=["deleting","creating","pending"],Bi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Cron' failed as data isn't a dictionary.");return{args:e.args,functionId:e.function_id,id:e.id,name:e.name,schedule:e.schedule,status:e.status}},Ja=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Domain' failed as data isn't a dictionary.");return{errorMessage:e.error_message,functionId:e.function_id,hostname:e.hostname,id:e.id,status:e.status,url:e.url}},Pd=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SecretHashedValue' failed as data isn't a dictionary.");return{hashedValue:e.hashed_value,key:e.key}},si=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Function' failed as data isn't a dictionary.");return{buildMessage:e.build_message,cpuLimit:e.cpu_limit,description:e.description,domainName:e.domain_name,environmentVariables:e.environment_variables,errorMessage:e.error_message,handler:e.handler,httpOption:e.http_option,id:e.id,maxScale:e.max_scale,memoryLimit:e.memory_limit,minScale:e.min_scale,name:e.name,namespaceId:e.namespace_id,privacy:e.privacy,region:e.region,runtime:e.runtime,runtimeMessage:e.runtime_message,secretEnvironmentVariables:r(e.secret_environment_variables,Pd),status:e.status,timeout:e.timeout}},Mi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Namespace' failed as data isn't a dictionary.");return{description:e.description,environmentVariables:e.environment_variables,errorMessage:e.error_message,id:e.id,name:e.name,organizationId:e.organization_id,projectId:e.project_id,region:e.region,registryEndpoint:e.registry_endpoint,registryNamespaceId:e.registry_namespace_id,secretEnvironmentVariables:r(e.secret_environment_variables,Pd),status:e.status}},Fi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Token' failed as data isn't a dictionary.");return{description:e.description,expiresAt:p(e.expires_at),functionId:e.function_id,id:e.id,namespaceId:e.namespace_id,publicKey:e.public_key,status:e.status,token:e.token}},I5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'TriggerMnqNatsClientConfig' failed as data isn't a dictionary.");return{mnqCredentialId:e.mnq_credential_id,mnqNatsAccountId:e.mnq_nats_account_id,mnqProjectId:e.mnq_project_id,mnqRegion:e.mnq_region,subject:e.subject}},T5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'TriggerMnqSqsClientConfig' failed as data isn't a dictionary.");return{mnqCredentialId:e.mnq_credential_id,mnqProjectId:e.mnq_project_id,mnqRegion:e.mnq_region,queue:e.queue}},R5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'TriggerSqsClientConfig' failed as data isn't a dictionary.");return{accessKey:e.access_key,endpoint:e.endpoint,queueUrl:e.queue_url,secretKey:e.secret_key}},Zi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Trigger' failed as data isn't a dictionary.");return{description:e.description,errorMessage:e.error_message,functionId:e.function_id,id:e.id,inputType:e.input_type,name:e.name,scwNatsConfig:e.scw_nats_config?I5(e.scw_nats_config):void 0,scwSqsConfig:e.scw_sqs_config?T5(e.scw_sqs_config):void 0,sqsConfig:e.sqs_config?R5(e.sqs_config):void 0,status:e.status}},E5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DownloadURL' failed as data isn't a dictionary.");return{headers:e.headers,url:e.url}},z5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListCronsResponse' failed as data isn't a dictionary.");return{crons:r(e.crons,Bi),totalCount:e.total_count}},P5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDomainsResponse' failed as data isn't a dictionary.");return{domains:r(e.domains,Ja),totalCount:e.total_count}},A5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Runtime' failed as data isn't a dictionary.");return{codeSample:e.code_sample,defaultHandler:e.default_handler,extension:e.extension,implementation:e.implementation,language:e.language,logoUrl:e.logo_url,name:e.name,status:e.status,statusMessage:e.status_message,version:e.version}},C5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListFunctionRuntimesResponse' failed as data isn't a dictionary.");return{runtimes:r(e.runtimes,A5),totalCount:e.total_count}},N5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListFunctionsResponse' failed as data isn't a dictionary.");return{functions:r(e.functions,si),totalCount:e.total_count}},$5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListNamespacesResponse' failed as data isn't a dictionary.");return{namespaces:r(e.namespaces,Mi),totalCount:e.total_count}},L5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTokensResponse' failed as data isn't a dictionary.");return{tokens:r(e.tokens,Fi),totalCount:e.total_count}},O5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTriggersResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,triggers:r(e.triggers,Zi)}},D5=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UploadURL' failed as data isn't a dictionary.");return{headers:e.headers,url:e.url}},U5=(e,t)=>({args:e.args,function_id:e.functionId,name:e.name,schedule:e.schedule}),k5=(e,t)=>({function_id:e.functionId,hostname:e.hostname}),Tn=(e,t)=>({key:e.key,value:e.value}),x5=(e,t)=>({description:e.description,environment_variables:e.environmentVariables,handler:e.handler,http_option:e.httpOption,max_scale:e.maxScale,memory_limit:e.memoryLimit,min_scale:e.minScale,name:e.name||_("fn"),namespace_id:e.namespaceId,privacy:e.privacy,runtime:e.runtime,secret_environment_variables:e.secretEnvironmentVariables!==void 0?e.secretEnvironmentVariables.map(a=>Tn(a)):void 0,timeout:e.timeout}),V5=(e,t)=>({description:e.description,environment_variables:e.environmentVariables,name:e.name||_("ns"),project_id:e.projectId??t.defaultProjectId,secret_environment_variables:e.secretEnvironmentVariables!==void 0?e.secretEnvironmentVariables.map(a=>Tn(a)):void 0}),j5=(e,t)=>({description:e.description,expires_at:e.expiresAt,...u([{param:"function_id",value:e.functionId},{param:"namespace_id",value:e.namespaceId}])}),G5=(e,t)=>({mnq_nats_account_id:e.mnqNatsAccountId,mnq_project_id:e.mnqProjectId,mnq_region:e.mnqRegion,subject:e.subject}),B5=(e,t)=>({mnq_project_id:e.mnqProjectId,mnq_region:e.mnqRegion,queue:e.queue}),M5=(e,t)=>({access_key:e.accessKey,endpoint:e.endpoint,queue_url:e.queueUrl,secret_key:e.secretKey}),F5=(e,t)=>({description:e.description,function_id:e.functionId,name:e.name,...u([{param:"scw_sqs_config",value:e.scwSqsConfig!==void 0?B5(e.scwSqsConfig):void 0},{param:"scw_nats_config",value:e.scwNatsConfig!==void 0?G5(e.scwNatsConfig):void 0},{param:"sqs_config",value:e.sqsConfig!==void 0?M5(e.sqsConfig):void 0}])}),Z5=(e,t)=>({args:e.args,function_id:e.functionId,name:e.name,schedule:e.schedule}),J5=(e,t)=>({description:e.description,environment_variables:e.environmentVariables,handler:e.handler,http_option:e.httpOption,max_scale:e.maxScale,memory_limit:e.memoryLimit,min_scale:e.minScale,privacy:e.privacy,redeploy:e.redeploy,runtime:e.runtime,secret_environment_variables:e.secretEnvironmentVariables!==void 0?e.secretEnvironmentVariables.map(a=>Tn(a)):void 0,timeout:e.timeout}),H5=(e,t)=>({description:e.description,environment_variables:e.environmentVariables,secret_environment_variables:e.secretEnvironmentVariables!==void 0?e.secretEnvironmentVariables.map(a=>Tn(a)):void 0}),K5=(e,t)=>({access_key:e.accessKey,secret_key:e.secretKey}),W5=(e,t)=>({description:e.description,name:e.name,...u([{param:"sqs_config",value:e.sqsConfig!==void 0?K5(e.sqsConfig):void 0}])}),Ne={"Content-Type":"application/json; charset=utf-8"},Q5=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];pageOfListNamespaces=(t={})=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},$5);listNamespaces=(t={})=>c("namespaces",this.pageOfListNamespaces,t);getNamespace=t=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces/${i("namespaceId",t.namespaceId)}`},Mi);waitForNamespace=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Rd.includes(s.status))),this.getNamespace,t,a);createNamespace=(t={})=>this.client.fetch({body:JSON.stringify(V5(t,this.client.settings)),headers:Ne,method:"POST",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces`},Mi);updateNamespace=t=>this.client.fetch({body:JSON.stringify(H5(t,this.client.settings)),headers:Ne,method:"PATCH",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces/${i("namespaceId",t.namespaceId)}`},Mi);deleteNamespace=t=>this.client.fetch({method:"DELETE",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces/${i("namespaceId",t.namespaceId)}`},Mi);pageOfListFunctions=t=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/functions`,urlParams:d(["name",t.name],["namespace_id",t.namespaceId],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},N5);listFunctions=t=>c("functions",this.pageOfListFunctions,t);getFunction=t=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/functions/${i("functionId",t.functionId)}`},si);waitForFunction=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Td.includes(s.status))),this.getFunction,t,a);createFunction=t=>this.client.fetch({body:JSON.stringify(x5(t,this.client.settings)),headers:Ne,method:"POST",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/functions`},si);updateFunction=t=>this.client.fetch({body:JSON.stringify(J5(t,this.client.settings)),headers:Ne,method:"PATCH",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/functions/${i("functionId",t.functionId)}`},si);deleteFunction=t=>this.client.fetch({method:"DELETE",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/functions/${i("functionId",t.functionId)}`},si);deployFunction=t=>this.client.fetch({body:"{}",headers:Ne,method:"POST",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/functions/${i("functionId",t.functionId)}/deploy`},si);listFunctionRuntimes=(t={})=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/runtimes`},C5);getFunctionUploadURL=t=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/functions/${i("functionId",t.functionId)}/upload-url`,urlParams:d(["content_length",t.contentLength])},D5);getFunctionDownloadURL=t=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/functions/${i("functionId",t.functionId)}/download-url`},E5);pageOfListCrons=t=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/crons`,urlParams:d(["function_id",t.functionId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},z5);listCrons=t=>c("crons",this.pageOfListCrons,t);getCron=t=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/crons/${i("cronId",t.cronId)}`},Bi);waitForCron=(t,a)=>v(a?.stop??(s=>Promise.resolve(!bd.includes(s.status))),this.getCron,t,a);createCron=t=>this.client.fetch({body:JSON.stringify(U5(t,this.client.settings)),headers:Ne,method:"POST",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/crons`},Bi);updateCron=t=>this.client.fetch({body:JSON.stringify(Z5(t,this.client.settings)),headers:Ne,method:"PATCH",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/crons/${i("cronId",t.cronId)}`},Bi);deleteCron=t=>this.client.fetch({method:"DELETE",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/crons/${i("cronId",t.cronId)}`},Bi);pageOfListDomains=t=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains`,urlParams:d(["function_id",t.functionId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},P5);listDomains=t=>c("domains",this.pageOfListDomains,t);getDomain=t=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains/${i("domainId",t.domainId)}`},Ja);waitForDomain=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Id.includes(s.status))),this.getDomain,t,a);createDomain=t=>this.client.fetch({body:JSON.stringify(k5(t,this.client.settings)),headers:Ne,method:"POST",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains`},Ja);deleteDomain=t=>this.client.fetch({method:"DELETE",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains/${i("domainId",t.domainId)}`},Ja);issueJWT=(t={})=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/issue-jwt`,urlParams:d(["expires_at",t.expiresAt],...Object.entries(u([{param:"function_id",value:t.functionId},{param:"namespace_id",value:t.namespaceId}])))},Fi);createToken=(t={})=>this.client.fetch({body:JSON.stringify(j5(t,this.client.settings)),headers:Ne,method:"POST",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/tokens`},Fi);getToken=t=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/tokens/${i("tokenId",t.tokenId)}`},Fi);waitForToken=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Ed.includes(s.status))),this.getToken,t,a);pageOfListTokens=(t={})=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/tokens`,urlParams:d(["function_id",t.functionId],["namespace_id",t.namespaceId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},L5);listTokens=(t={})=>c("tokens",this.pageOfListTokens,t);deleteToken=t=>this.client.fetch({method:"DELETE",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/tokens/${i("tokenId",t.tokenId)}`},Fi);createTrigger=t=>this.client.fetch({body:JSON.stringify(F5(t,this.client.settings)),headers:Ne,method:"POST",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/triggers`},Zi);getTrigger=t=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/triggers/${i("triggerId",t.triggerId)}`},Zi);waitForTrigger=(t,a)=>v(a?.stop??(s=>Promise.resolve(!zd.includes(s.status))),this.getTrigger,t,a);pageOfListTriggers=(t={})=>this.client.fetch({method:"GET",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/triggers`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],...Object.entries(u([{param:"function_id",value:t.functionId},{param:"namespace_id",value:t.namespaceId},{default:this.client.settings.defaultProjectId,param:"project_id",value:t.projectId}])))},O5);listTriggers=(t={})=>c("triggers",this.pageOfListTriggers,t);updateTrigger=t=>this.client.fetch({body:JSON.stringify(W5(t,this.client.settings)),headers:Ne,method:"PATCH",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/triggers/${i("triggerId",t.triggerId)}`},Zi);deleteTrigger=t=>this.client.fetch({method:"DELETE",path:`/functions/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/triggers/${i("triggerId",t.triggerId)}`},Zi)},X5={description:{maxLength:255},name:{maxLength:50,minLength:1}},Y5={mnqRegion:{maxLength:20,minLength:1},subject:{maxLength:100,minLength:1,pattern:/^[^\s]+$/}},q5={mnqRegion:{maxLength:20,minLength:1},queue:{maxLength:100,minLength:1}},e8={description:{maxLength:255},name:{maxLength:50,minLength:1}},t8=Object.freeze({__proto__:null,CreateTriggerRequest:X5,CreateTriggerRequestMnqNatsClientConfig:Y5,CreateTriggerRequestMnqSqsClientConfig:q5,UpdateTriggerRequest:e8}),i8=Object.freeze({__proto__:null,API:Q5,CRON_TRANSIENT_STATUSES:bd,DOMAIN_TRANSIENT_STATUSES:Id,FUNCTION_TRANSIENT_STATUSES:Td,NAMESPACE_TRANSIENT_STATUSES:Rd,TOKEN_TRANSIENT_STATUSES:Ed,TRIGGER_TRANSIENT_STATUSES:zd,ValidationRules:t8}),a8=Object.freeze({__proto__:null,v1beta1:i8}),Hs=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'JWT' failed as data isn't a dictionary.");return{audienceId:e.audience_id,createdAt:p(e.created_at),expiresAt:p(e.expires_at),ip:e.ip,issuerId:e.issuer_id,jti:e.jti,updatedAt:p(e.updated_at),userAgent:e.user_agent}},Ha=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'APIKey' failed as data isn't a dictionary.");return{accessKey:e.access_key,applicationId:e.application_id,createdAt:p(e.created_at),creationIp:e.creation_ip,defaultProjectId:e.default_project_id,description:e.description,editable:e.editable,expiresAt:p(e.expires_at),secretKey:e.secret_key,updatedAt:p(e.updated_at),userId:e.user_id}},Ka=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Application' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),description:e.description,editable:e.editable,id:e.id,name:e.name,nbApiKeys:e.nb_api_keys,organizationId:e.organization_id,tags:e.tags,updatedAt:p(e.updated_at)}},gt=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Group' failed as data isn't a dictionary.");return{applicationIds:e.application_ids,createdAt:p(e.created_at),description:e.description,id:e.id,name:e.name,organizationId:e.organization_id,tags:e.tags,updatedAt:p(e.updated_at),userIds:e.user_ids}},Ad=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Log' failed as data isn't a dictionary.");return{action:e.action,bearerId:e.bearer_id,createdAt:p(e.created_at),id:e.id,ip:e.ip,organizationId:e.organization_id,resourceId:e.resource_id,resourceType:e.resource_type,userAgent:e.user_agent}},Ji=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Policy' failed as data isn't a dictionary.");return{applicationId:e.application_id,createdAt:p(e.created_at),description:e.description,editable:e.editable,groupId:e.group_id,id:e.id,name:e.name,nbPermissionSets:e.nb_permission_sets,nbRules:e.nb_rules,nbScopes:e.nb_scopes,noPrincipal:e.no_principal,organizationId:e.organization_id,tags:e.tags,updatedAt:p(e.updated_at),userId:e.user_id}},Cd=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Quotum' failed as data isn't a dictionary.");return{limit:e.limit,name:e.name,unlimited:e.unlimited}},Wa=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SSHKey' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),disabled:e.disabled,fingerprint:e.fingerprint,id:e.id,name:e.name,organizationId:e.organization_id,projectId:e.project_id,publicKey:e.public_key,updatedAt:p(e.updated_at)}},Qa=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'User' failed as data isn't a dictionary.");return{accountRootUserId:e.account_root_user_id,createdAt:p(e.created_at),deletable:e.deletable,email:e.email,id:e.id,lastLoginAt:p(e.last_login_at),mfa:e.mfa,organizationId:e.organization_id,status:e.status,tags:e.tags,twoFactorEnabled:e.two_factor_enabled,type:e.type,updatedAt:p(e.updated_at)}},n8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EncodedJWT' failed as data isn't a dictionary.");return{jwt:e.jwt?Hs(e.jwt):void 0,renewToken:e.renew_token,token:e.token}},s8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListAPIKeysResponse' failed as data isn't a dictionary.");return{apiKeys:r(e.api_keys,Ha),totalCount:e.total_count}},o8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListApplicationsResponse' failed as data isn't a dictionary.");return{applications:r(e.applications,Ka),totalCount:e.total_count}},r8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListGroupsResponse' failed as data isn't a dictionary.");return{groups:r(e.groups,gt),totalCount:e.total_count}},p8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListJWTsResponse' failed as data isn't a dictionary.");return{jwts:r(e.jwts,Hs),totalCount:e.total_count}},d8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListLogsResponse' failed as data isn't a dictionary.");return{logs:r(e.logs,Ad),totalCount:e.total_count}},l8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PermissionSet' failed as data isn't a dictionary.");return{categories:e.categories,description:e.description,id:e.id,name:e.name,scopeType:e.scope_type}},c8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListPermissionSetsResponse' failed as data isn't a dictionary.");return{permissionSets:r(e.permission_sets,l8),totalCount:e.total_count}},m8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListPoliciesResponse' failed as data isn't a dictionary.");return{policies:r(e.policies,Ji),totalCount:e.total_count}},h8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListQuotaResponse' failed as data isn't a dictionary.");return{quota:r(e.quota,Cd),totalCount:e.total_count}},Nd=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Rule' failed as data isn't a dictionary.");return{accountRootUserId:e.account_root_user_id,id:e.id,organizationId:e.organization_id,permissionSetNames:e.permission_set_names,permissionSetsScopeType:e.permission_sets_scope_type,projectIds:e.project_ids}},g8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,Nd),totalCount:e.total_count}},u8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSSHKeysResponse' failed as data isn't a dictionary.");return{sshKeys:r(e.ssh_keys,Wa),totalCount:e.total_count}},f8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListUsersResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,users:r(e.users,Qa)}},v8=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,Nd)}},y8=(e,t)=>({...u([{param:"user_id",value:e.userId},{param:"application_id",value:e.applicationId}])}),_8=(e,t)=>({application_ids:e.applicationIds,user_ids:e.userIds}),w8=(e,t)=>({default_project_id:e.defaultProjectId,description:e.description,expires_at:e.expiresAt,...u([{param:"application_id",value:e.applicationId},{param:"user_id",value:e.userId}])}),S8=(e,t)=>({description:e.description,name:e.name||_("app"),organization_id:e.organizationId??t.defaultOrganizationId,tags:e.tags}),b8=(e,t)=>({description:e.description,name:e.name||_("grp"),organization_id:e.organizationId??t.defaultOrganizationId,tags:e.tags}),I8=(e,t)=>({referrer:e.referrer,user_id:e.userId}),$d=(e,t)=>({permission_set_names:e.permissionSetNames,...u([{param:"project_ids",value:e.projectIds},{param:"organization_id",value:e.organizationId}])}),T8=(e,t)=>({description:e.description,name:e.name||_("pol"),organization_id:e.organizationId??t.defaultOrganizationId,rules:e.rules!==void 0?e.rules.map(a=>$d(a)):void 0,tags:e.tags,...u([{param:"user_id",value:e.userId},{param:"group_id",value:e.groupId},{param:"application_id",value:e.applicationId},{param:"no_principal",value:e.noPrincipal}])}),R8=(e,t)=>({name:e.name||_("key"),project_id:e.projectId??t.defaultProjectId,public_key:e.publicKey}),E8=(e,t)=>({email:e.email,organization_id:e.organizationId??t.defaultOrganizationId,tags:e.tags}),z8=(e,t)=>({...u([{param:"user_id",value:e.userId},{param:"application_id",value:e.applicationId}])}),P8=(e,t)=>({application_ids:e.applicationIds,user_ids:e.userIds}),A8=(e,t)=>({policy_id:e.policyId,rules:e.rules.map(a=>$d(a))}),C8=(e,t)=>({default_project_id:e.defaultProjectId,description:e.description}),N8=(e,t)=>({description:e.description,name:e.name,tags:e.tags}),$8=(e,t)=>({description:e.description,name:e.name,tags:e.tags}),L8=(e,t)=>({description:e.description,name:e.name,tags:e.tags,...u([{param:"user_id",value:e.userId},{param:"group_id",value:e.groupId},{param:"application_id",value:e.applicationId},{param:"no_principal",value:e.noPrincipal}])}),O8=(e,t)=>({disabled:e.disabled,name:e.name}),D8=(e,t)=>({tags:e.tags}),W={"Content-Type":"application/json; charset=utf-8"},U8=class extends w{pageOfListSSHKeys=(t={})=>this.client.fetch({method:"GET",path:"/iam/v1alpha1/ssh-keys",urlParams:d(["disabled",t.disabled],["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},u8);listSSHKeys=(t={})=>c("sshKeys",this.pageOfListSSHKeys,t);createSSHKey=t=>this.client.fetch({body:JSON.stringify(R8(t,this.client.settings)),headers:W,method:"POST",path:"/iam/v1alpha1/ssh-keys"},Wa);getSSHKey=t=>this.client.fetch({method:"GET",path:`/iam/v1alpha1/ssh-keys/${i("sshKeyId",t.sshKeyId)}`},Wa);updateSSHKey=t=>this.client.fetch({body:JSON.stringify(O8(t,this.client.settings)),headers:W,method:"PATCH",path:`/iam/v1alpha1/ssh-keys/${i("sshKeyId",t.sshKeyId)}`},Wa);deleteSSHKey=t=>this.client.fetch({method:"DELETE",path:`/iam/v1alpha1/ssh-keys/${i("sshKeyId",t.sshKeyId)}`});pageOfListUsers=(t={})=>this.client.fetch({method:"GET",path:"/iam/v1alpha1/users",urlParams:d(["mfa",t.mfa],["order_by",t.orderBy],["organization_id",t.organizationId??this.client.settings.defaultOrganizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["tag",t.tag],["user_ids",t.userIds])},f8);listUsers=(t={})=>c("users",this.pageOfListUsers,t);getUser=t=>this.client.fetch({method:"GET",path:`/iam/v1alpha1/users/${i("userId",t.userId)}`},Qa);updateUser=t=>this.client.fetch({body:JSON.stringify(D8(t,this.client.settings)),headers:W,method:"PATCH",path:`/iam/v1alpha1/users/${i("userId",t.userId)}`},Qa);deleteUser=t=>this.client.fetch({method:"DELETE",path:`/iam/v1alpha1/users/${i("userId",t.userId)}`});createUser=t=>this.client.fetch({body:JSON.stringify(E8(t,this.client.settings)),headers:W,method:"POST",path:"/iam/v1alpha1/users"},Qa);pageOfListApplications=(t={})=>this.client.fetch({method:"GET",path:"/iam/v1alpha1/applications",urlParams:d(["application_ids",t.applicationIds],["editable",t.editable],["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId??this.client.settings.defaultOrganizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["tag",t.tag])},o8);listApplications=(t={})=>c("applications",this.pageOfListApplications,t);createApplication=t=>this.client.fetch({body:JSON.stringify(S8(t,this.client.settings)),headers:W,method:"POST",path:"/iam/v1alpha1/applications"},Ka);getApplication=t=>this.client.fetch({method:"GET",path:`/iam/v1alpha1/applications/${i("applicationId",t.applicationId)}`},Ka);updateApplication=t=>this.client.fetch({body:JSON.stringify(N8(t,this.client.settings)),headers:W,method:"PATCH",path:`/iam/v1alpha1/applications/${i("applicationId",t.applicationId)}`},Ka);deleteApplication=t=>this.client.fetch({method:"DELETE",path:`/iam/v1alpha1/applications/${i("applicationId",t.applicationId)}`});pageOfListGroups=(t={})=>this.client.fetch({method:"GET",path:"/iam/v1alpha1/groups",urlParams:d(["application_ids",t.applicationIds],["group_ids",t.groupIds],["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId??this.client.settings.defaultOrganizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["tag",t.tag],["user_ids",t.userIds])},r8);listGroups=(t={})=>c("groups",this.pageOfListGroups,t);createGroup=t=>this.client.fetch({body:JSON.stringify(b8(t,this.client.settings)),headers:W,method:"POST",path:"/iam/v1alpha1/groups"},gt);getGroup=t=>this.client.fetch({method:"GET",path:`/iam/v1alpha1/groups/${i("groupId",t.groupId)}`},gt);updateGroup=t=>this.client.fetch({body:JSON.stringify($8(t,this.client.settings)),headers:W,method:"PATCH",path:`/iam/v1alpha1/groups/${i("groupId",t.groupId)}`},gt);setGroupMembers=t=>this.client.fetch({body:JSON.stringify(P8(t,this.client.settings)),headers:W,method:"PUT",path:`/iam/v1alpha1/groups/${i("groupId",t.groupId)}/members`},gt);addGroupMember=t=>this.client.fetch({body:JSON.stringify(y8(t,this.client.settings)),headers:W,method:"POST",path:`/iam/v1alpha1/groups/${i("groupId",t.groupId)}/add-member`},gt);addGroupMembers=t=>this.client.fetch({body:JSON.stringify(_8(t,this.client.settings)),headers:W,method:"POST",path:`/iam/v1alpha1/groups/${i("groupId",t.groupId)}/add-members`},gt);removeGroupMember=t=>this.client.fetch({body:JSON.stringify(z8(t,this.client.settings)),headers:W,method:"POST",path:`/iam/v1alpha1/groups/${i("groupId",t.groupId)}/remove-member`},gt);deleteGroup=t=>this.client.fetch({method:"DELETE",path:`/iam/v1alpha1/groups/${i("groupId",t.groupId)}`});pageOfListPolicies=(t={})=>this.client.fetch({method:"GET",path:"/iam/v1alpha1/policies",urlParams:d(["application_ids",t.applicationIds],["editable",t.editable],["group_ids",t.groupIds],["no_principal",t.noPrincipal],["order_by",t.orderBy],["organization_id",t.organizationId??this.client.settings.defaultOrganizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["policy_ids",t.policyIds],["policy_name",t.policyName],["tag",t.tag],["user_ids",t.userIds])},m8);listPolicies=(t={})=>c("policies",this.pageOfListPolicies,t);createPolicy=t=>this.client.fetch({body:JSON.stringify(T8(t,this.client.settings)),headers:W,method:"POST",path:"/iam/v1alpha1/policies"},Ji);getPolicy=t=>this.client.fetch({method:"GET",path:`/iam/v1alpha1/policies/${i("policyId",t.policyId)}`},Ji);updatePolicy=t=>this.client.fetch({body:JSON.stringify(L8(t,this.client.settings)),headers:W,method:"PATCH",path:`/iam/v1alpha1/policies/${i("policyId",t.policyId)}`},Ji);deletePolicy=t=>this.client.fetch({method:"DELETE",path:`/iam/v1alpha1/policies/${i("policyId",t.policyId)}`});clonePolicy=t=>this.client.fetch({body:"{}",headers:W,method:"POST",path:`/iam/v1alpha1/policies/${i("policyId",t.policyId)}/clone`},Ji);setRules=t=>this.client.fetch({body:JSON.stringify(A8(t,this.client.settings)),headers:W,method:"PUT",path:"/iam/v1alpha1/rules"},v8);pageOfListRules=t=>this.client.fetch({method:"GET",path:"/iam/v1alpha1/rules",urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["policy_id",t.policyId])},g8);listRules=t=>c("rules",this.pageOfListRules,t);pageOfListPermissionSets=(t={})=>this.client.fetch({method:"GET",path:"/iam/v1alpha1/permission-sets",urlParams:d(["order_by",t.orderBy],["organization_id",t.organizationId??this.client.settings.defaultOrganizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},c8);listPermissionSets=(t={})=>c("permissionSets",this.pageOfListPermissionSets,t);pageOfListAPIKeys=(t={})=>this.client.fetch({method:"GET",path:"/iam/v1alpha1/api-keys",urlParams:d(["access_key",t.accessKey],["access_keys",t.accessKeys],["bearer_id",t.bearerId],["bearer_type",t.bearerType],["description",t.description],["editable",t.editable],["expired",t.expired],["order_by",t.orderBy],["organization_id",t.organizationId??this.client.settings.defaultOrganizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],...Object.entries(u([{param:"application_id",value:t.applicationId},{param:"user_id",value:t.userId}])))},s8);listAPIKeys=(t={})=>c("apiKeys",this.pageOfListAPIKeys,t);createAPIKey=t=>this.client.fetch({body:JSON.stringify(w8(t,this.client.settings)),headers:W,method:"POST",path:"/iam/v1alpha1/api-keys"},Ha);getAPIKey=t=>this.client.fetch({method:"GET",path:`/iam/v1alpha1/api-keys/${i("accessKey",t.accessKey)}`},Ha);updateAPIKey=t=>this.client.fetch({body:JSON.stringify(C8(t,this.client.settings)),headers:W,method:"PATCH",path:`/iam/v1alpha1/api-keys/${i("accessKey",t.accessKey)}`},Ha);deleteAPIKey=t=>this.client.fetch({method:"DELETE",path:`/iam/v1alpha1/api-keys/${i("accessKey",t.accessKey)}`});pageOfListQuota=(t={})=>this.client.fetch({method:"GET",path:"/iam/v1alpha1/quota",urlParams:d(["order_by",t.orderBy],["organization_id",t.organizationId??this.client.settings.defaultOrganizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["quotum_names",t.quotumNames])},h8);listQuota=(t={})=>c("quota",this.pageOfListQuota,t);getQuotum=t=>this.client.fetch({method:"GET",path:`/iam/v1alpha1/quota/${i("quotumName",t.quotumName)}`,urlParams:d(["organization_id",t.organizationId??this.client.settings.defaultOrganizationId])},Cd);pageOfListJWTs=(t={})=>this.client.fetch({method:"GET",path:"/iam/v1alpha1/jwts",urlParams:d(["audience_id",t.audienceId],["expired",t.expired],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},p8);listJWTs=(t={})=>c("jwts",this.pageOfListJWTs,t);createJWT=t=>this.client.fetch({body:JSON.stringify(I8(t,this.client.settings)),headers:W,method:"POST",path:"/iam/v1alpha1/jwts"},n8);getJWT=t=>this.client.fetch({method:"GET",path:`/iam/v1alpha1/jwts/${i("jti",t.jti)}`},Hs);deleteJWT=t=>this.client.fetch({method:"DELETE",path:`/iam/v1alpha1/jwts/${i("jti",t.jti)}`});pageOfListLogs=(t={})=>this.client.fetch({method:"GET",path:"/iam/v1alpha1/logs",urlParams:d(["action",t.action],["created_after",t.createdAfter],["created_before",t.createdBefore],["order_by",t.orderBy],["organization_id",t.organizationId??this.client.settings.defaultOrganizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["resource_type",t.resourceType],["search",t.search])},d8);listLogs=(t={})=>c("logs",this.pageOfListLogs,t);getLog=t=>this.client.fetch({method:"GET",path:`/iam/v1alpha1/logs/${i("logId",t.logId)}`},Ad)},k8={description:{ignoreEmpty:!0,maxLength:200}},x8={description:{ignoreEmpty:!0,maxLength:200},name:{maxLength:64,minLength:1,pattern:/^[a-zA-Z0-9\(\)\._\- ]+$/}},V8={description:{ignoreEmpty:!0,maxLength:200},name:{maxLength:64,minLength:1,pattern:/^[a-zA-Z0-9\(\)\._\- ]+$/}},j8={description:{ignoreEmpty:!0,maxLength:200},name:{maxLength:64,minLength:1,pattern:/^[a-zA-Z0-9\(\)\._\- ]+$/}},G8={name:{ignoreEmpty:!0,maxLength:1e3},publicKey:{maxLength:65e3,minLength:1}},B8={quotumName:{minLength:1}},M8={description:{maxLength:200},page:{greaterThan:0},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:100}},F8={name:{maxLength:64,minLength:1,pattern:/^[a-zA-Z0-9\(\)\._\- ]+$/},page:{greaterThan:0},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:100}},Z8={name:{minLength:1},page:{greaterThan:0},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:100}},J8={page:{greaterThan:0},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:100}},H8={page:{greaterThan:0},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:100}},K8={page:{greaterThan:0},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:100}},W8={page:{greaterThan:0},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:100},policyName:{minLength:1}},Q8={page:{greaterThan:0},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:100}},X8={page:{greaterThan:0},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:100}},Y8={name:{maxLength:1e3,minLength:1},page:{greaterThan:0},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:100}},q8={page:{greaterThan:0},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:100}},e7={description:{maxLength:200}},t7={description:{maxLength:200},name:{maxLength:64,minLength:1,pattern:/^[a-zA-Z0-9\(\)\._\- ]+$/}},i7={description:{maxLength:200},name:{maxLength:64,minLength:1,pattern:/^[a-zA-Z0-9\(\)\._\- ]+$/}},a7={description:{maxLength:200},name:{maxLength:64,minLength:1,pattern:/^[a-zA-Z0-9\(\)\._\- ]+$/}},n7={name:{maxLength:1e3}},s7=Object.freeze({__proto__:null,CreateAPIKeyRequest:k8,CreateApplicationRequest:x8,CreateGroupRequest:V8,CreatePolicyRequest:j8,CreateSSHKeyRequest:G8,GetQuotumRequest:B8,ListAPIKeysRequest:M8,ListApplicationsRequest:F8,ListGroupsRequest:Z8,ListJWTsRequest:J8,ListLogsRequest:H8,ListPermissionSetsRequest:K8,ListPoliciesRequest:W8,ListQuotaRequest:Q8,ListRulesRequest:X8,ListSSHKeysRequest:Y8,ListUsersRequest:q8,UpdateAPIKeyRequest:e7,UpdateApplicationRequest:t7,UpdateGroupRequest:i7,UpdatePolicyRequest:a7,UpdateSSHKeyRequest:n7}),o7=Object.freeze({__proto__:null,API:U8,ValidationRules:s7}),r7=Object.freeze({__proto__:null,v1alpha1:o7}),fa=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PrivateNIC' failed as data isn't a dictionary.");return{id:e.id,macAddress:e.mac_address,privateNetworkId:e.private_network_id,serverId:e.server_id,state:e.state,tags:e.tags}},Rn=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerSummary' failed as data isn't a dictionary.");return{id:e.id,name:e.name}},En=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Bootscript' failed as data isn't a dictionary.");return{arch:e.arch,bootcmdargs:e.bootcmdargs,default:e.default,dtb:e.dtb,id:e.id,initrd:e.initrd,kernel:e.kernel,organization:e.organization,project:e.project,public:e.public,title:e.title,zone:e.zone}},vi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Volume' failed as data isn't a dictionary.");return{creationDate:p(e.creation_date),exportUri:e.export_uri,id:e.id,modificationDate:p(e.modification_date),name:e.name,organization:e.organization,project:e.project,server:e.server?Rn(e.server):void 0,size:e.size,state:e.state,tags:e.tags,volumeType:e.volume_type,zone:e.zone}},p7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'VolumeSummary' failed as data isn't a dictionary.");return{id:e.id,name:e.name,size:e.size,volumeType:e.volume_type}},yi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Image' failed as data isn't a dictionary.");return{arch:e.arch,creationDate:p(e.creation_date),defaultBootscript:e.default_bootscript?En(e.default_bootscript):void 0,extraVolumes:It(e.extra_volumes,vi),fromServer:e.from_server,id:e.id,modificationDate:p(e.modification_date),name:e.name,organization:e.organization,project:e.project,public:e.public,rootVolume:e.root_volume?p7(e.root_volume):void 0,state:e.state,tags:e.tags,zone:e.zone}},_i=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PlacementGroup' failed as data isn't a dictionary.");return{id:e.id,name:e.name,organization:e.organization,policyMode:e.policy_mode,policyRespected:e.policy_respected,policyType:e.policy_type,project:e.project,tags:e.tags,zone:e.zone}},d7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SecurityGroupSummary' failed as data isn't a dictionary.");return{id:e.id,name:e.name}},Vr=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerIp' failed as data isn't a dictionary.");return{address:e.address,dynamic:e.dynamic,family:e.family,gateway:e.gateway,id:e.id,ipamId:e.ipam_id,netmask:e.netmask,provisioningMode:e.provisioning_mode,state:e.state,tags:e.tags}},l7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerIpv6' failed as data isn't a dictionary.");return{address:e.address,gateway:e.gateway,netmask:e.netmask}},c7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerLocation' failed as data isn't a dictionary.");return{clusterId:e.cluster_id,hypervisorId:e.hypervisor_id,nodeId:e.node_id,platformId:e.platform_id,zoneId:e.zone_id}},m7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerMaintenance' failed as data isn't a dictionary.");return{reason:e.reason,startDate:p(e.start_date)}},h7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'VolumeServer' failed as data isn't a dictionary.");return{boot:e.boot,creationDate:p(e.creation_date),exportUri:e.export_uri,id:e.id,modificationDate:p(e.modification_date),name:e.name,organization:e.organization,project:e.project,server:e.server?Rn(e.server):void 0,size:e.size,state:e.state,volumeType:e.volume_type,zone:e.zone}},Ft=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Server' failed as data isn't a dictionary.");return{allowedActions:e.allowed_actions,arch:e.arch,bootType:e.boot_type,bootscript:e.bootscript?En(e.bootscript):void 0,commercialType:e.commercial_type,creationDate:p(e.creation_date),dynamicIpRequired:e.dynamic_ip_required,enableIpv6:e.enable_ipv6,hostname:e.hostname,id:e.id,image:e.image?yi(e.image):void 0,ipv6:e.ipv6?l7(e.ipv6):void 0,location:e.location?c7(e.location):void 0,macAddress:e.mac_address,maintenances:r(e.maintenances,m7),modificationDate:p(e.modification_date),name:e.name,organization:e.organization,placementGroup:e.placement_group?_i(e.placement_group):void 0,privateIp:e.private_ip,privateNics:r(e.private_nics,fa),project:e.project,protected:e.protected,publicIp:e.public_ip?Vr(e.public_ip):void 0,publicIps:r(e.public_ips,Vr),routedIpEnabled:e.routed_ip_enabled,securityGroup:e.security_group?d7(e.security_group):void 0,state:e.state,stateDetail:e.state_detail,tags:e.tags,volumes:It(e.volumes,h7),zone:e.zone}},g7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AttachServerVolumeResponse' failed as data isn't a dictionary.");return{server:e.server?Ft(e.server):void 0}},u7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CreateImageResponse' failed as data isn't a dictionary.");return{image:e.image?yi(e.image):void 0}},zn=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Ip' failed as data isn't a dictionary.");return{address:e.address,id:e.id,ipamId:e.ipam_id,organization:e.organization,prefix:e.prefix,project:e.project,reverse:e.reverse,server:e.server?Rn(e.server):void 0,state:e.state,tags:e.tags,type:e.type,zone:e.zone}},f7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CreateIpResponse' failed as data isn't a dictionary.");return{ip:e.ip?zn(e.ip):void 0}},v7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CreatePlacementGroupResponse' failed as data isn't a dictionary.");return{placementGroup:e.placement_group?_i(e.placement_group):void 0}},y7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CreatePrivateNICResponse' failed as data isn't a dictionary.");return{privateNic:e.private_nic?fa(e.private_nic):void 0}},va=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SecurityGroup' failed as data isn't a dictionary.");return{creationDate:p(e.creation_date),description:e.description,enableDefaultSecurity:e.enable_default_security,id:e.id,inboundDefaultPolicy:e.inbound_default_policy,modificationDate:p(e.modification_date),name:e.name,organization:e.organization,organizationDefault:e.organization_default,outboundDefaultPolicy:e.outbound_default_policy,project:e.project,projectDefault:e.project_default,servers:r(e.servers,Rn),state:e.state,stateful:e.stateful,tags:e.tags,zone:e.zone}},_7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CreateSecurityGroupResponse' failed as data isn't a dictionary.");return{securityGroup:e.security_group?va(e.security_group):void 0}},wi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SecurityGroupRule' failed as data isn't a dictionary.");return{action:e.action,destPortFrom:e.dest_port_from,destPortTo:e.dest_port_to,direction:e.direction,editable:e.editable,id:e.id,ipRange:e.ip_range,position:e.position,protocol:e.protocol,zone:e.zone}},w7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CreateSecurityGroupRuleResponse' failed as data isn't a dictionary.");return{rule:e.rule?wi(e.rule):void 0}},S7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CreateServerResponse' failed as data isn't a dictionary.");return{server:e.server?Ft(e.server):void 0}},b7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SnapshotBaseVolume' failed as data isn't a dictionary.");return{id:e.id,name:e.name}},Si=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Snapshot' failed as data isn't a dictionary.");return{baseVolume:e.base_volume?b7(e.base_volume):void 0,creationDate:p(e.creation_date),errorReason:e.error_reason,id:e.id,modificationDate:p(e.modification_date),name:e.name,organization:e.organization,project:e.project,size:e.size,state:e.state,tags:e.tags,volumeType:e.volume_type,zone:e.zone}},Ks=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Task' failed as data isn't a dictionary.");return{description:e.description,hrefFrom:e.href_from,hrefResult:e.href_result,id:e.id,progress:e.progress,startedAt:p(e.started_at),status:e.status,terminatedAt:p(e.terminated_at),zone:e.zone}},I7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CreateSnapshotResponse' failed as data isn't a dictionary.");return{snapshot:e.snapshot?Si(e.snapshot):void 0,task:e.task?Ks(e.task):void 0}},T7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CreateVolumeResponse' failed as data isn't a dictionary.");return{volume:e.volume?vi(e.volume):void 0}},R7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DetachServerVolumeResponse' failed as data isn't a dictionary.");return{server:e.server?Ft(e.server):void 0}},E7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ExportSnapshotResponse' failed as data isn't a dictionary.");return{task:e.task?Ks(e.task):void 0}},z7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetBootscriptResponse' failed as data isn't a dictionary.");return{bootscript:e.bootscript?En(e.bootscript):void 0}},P7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Dashboard' failed as data isn't a dictionary.");return{imagesCount:e.images_count,ipsCount:e.ips_count,ipsUnused:e.ips_unused,placementGroupsCount:e.placement_groups_count,privateNicsCount:e.private_nics_count,runningServersCount:e.running_servers_count,securityGroupsCount:e.security_groups_count,serversByTypes:e.servers_by_types,serversCount:e.servers_count,snapshotsCount:e.snapshots_count,volumesBSsdCount:e.volumes_b_ssd_count,volumesBSsdTotalSize:e.volumes_b_ssd_total_size,volumesCount:e.volumes_count,volumesLSsdCount:e.volumes_l_ssd_count,volumesLSsdTotalSize:e.volumes_l_ssd_total_size}},A7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetDashboardResponse' failed as data isn't a dictionary.");return{dashboard:e.dashboard?P7(e.dashboard):void 0}},C7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetImageResponse' failed as data isn't a dictionary.");return{image:e.image?yi(e.image):void 0}},N7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetIpResponse' failed as data isn't a dictionary.");return{ip:e.ip?zn(e.ip):void 0}},$7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetPlacementGroupResponse' failed as data isn't a dictionary.");return{placementGroup:e.placement_group?_i(e.placement_group):void 0}},Ws=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PlacementGroupServer' failed as data isn't a dictionary.");return{id:e.id,name:e.name,policyRespected:e.policy_respected}},L7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetPlacementGroupServersResponse' failed as data isn't a dictionary.");return{servers:r(e.servers,Ws)}},O7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetPrivateNICResponse' failed as data isn't a dictionary.");return{privateNic:e.private_nic?fa(e.private_nic):void 0}},D7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetSecurityGroupResponse' failed as data isn't a dictionary.");return{securityGroup:e.security_group?va(e.security_group):void 0}},U7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetSecurityGroupRuleResponse' failed as data isn't a dictionary.");return{rule:e.rule?wi(e.rule):void 0}},k7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetServerResponse' failed as data isn't a dictionary.");return{server:e.server?Ft(e.server):void 0}},x7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetServerTypesAvailabilityResponseAvailability' failed as data isn't a dictionary.");return{availability:e.availability}},V7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetServerTypesAvailabilityResponse' failed as data isn't a dictionary.");return{servers:It(e.servers,x7),totalCount:e.total_count}},j7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetSnapshotResponse' failed as data isn't a dictionary.");return{snapshot:e.snapshot?Si(e.snapshot):void 0}},G7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetVolumeResponse' failed as data isn't a dictionary.");return{volume:e.volume?vi(e.volume):void 0}},B7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListBootscriptsResponse' failed as data isn't a dictionary.");return{bootscripts:r(e.bootscripts,En),totalCount:e.total_count}},M7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListImagesResponse' failed as data isn't a dictionary.");return{images:r(e.images,yi),totalCount:e.total_count}},F7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListIpsResponse' failed as data isn't a dictionary.");return{ips:r(e.ips,zn),totalCount:e.total_count}},Z7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListPlacementGroupsResponse' failed as data isn't a dictionary.");return{placementGroups:r(e.placement_groups,_i),totalCount:e.total_count}},J7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListPrivateNICsResponse' failed as data isn't a dictionary.");return{privateNics:r(e.private_nics,fa),totalCount:e.total_count}},jr=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSecurityGroupRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,wi),totalCount:e.total_count}},H7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSecurityGroupsResponse' failed as data isn't a dictionary.");return{securityGroups:r(e.security_groups,va),totalCount:e.total_count}},K7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListServerActionsResponse' failed as data isn't a dictionary.");return{actions:e.actions}},W7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListServerUserDataResponse' failed as data isn't a dictionary.");return{userData:e.user_data}},Q7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListServersResponse' failed as data isn't a dictionary.");return{servers:r(e.servers,Ft),totalCount:e.total_count}},X7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerTypeNetworkInterface' failed as data isn't a dictionary.");return{internalBandwidth:e.internal_bandwidth,internetBandwidth:e.internet_bandwidth}},Ld=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerTypeVolumeConstraintSizes' failed as data isn't a dictionary.");return{maxSize:e.max_size,minSize:e.min_size}},Y7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerTypeCapabilities' failed as data isn't a dictionary.");return{blockStorage:e.block_storage,bootTypes:e.boot_types}},q7=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerTypeNetwork' failed as data isn't a dictionary.");return{interfaces:r(e.interfaces,X7),ipv6Support:e.ipv6_support,sumInternalBandwidth:e.sum_internal_bandwidth,sumInternetBandwidth:e.sum_internet_bandwidth}},ev=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerTypeVolumeConstraintsByType' failed as data isn't a dictionary.");return{lSsd:e.l_ssd?Ld(e.l_ssd):void 0}},tv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerType' failed as data isn't a dictionary.");return{altNames:e.alt_names,arch:e.arch,baremetal:e.baremetal,capabilities:e.capabilities?Y7(e.capabilities):void 0,gpu:e.gpu,hourlyPrice:e.hourly_price,monthlyPrice:e.monthly_price,ncpus:e.ncpus,network:e.network?q7(e.network):void 0,perVolumeConstraint:e.per_volume_constraint?ev(e.per_volume_constraint):void 0,ram:e.ram,scratchStorageMaxSize:e.scratch_storage_max_size,volumesConstraint:e.volumes_constraint?Ld(e.volumes_constraint):void 0}},iv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListServersTypesResponse' failed as data isn't a dictionary.");return{servers:It(e.servers,tv),totalCount:e.total_count}},av=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSnapshotsResponse' failed as data isn't a dictionary.");return{snapshots:r(e.snapshots,Si),totalCount:e.total_count}},nv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListVolumesResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,volumes:r(e.volumes,vi)}},sv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'VolumeTypeCapabilities' failed as data isn't a dictionary.");return{snapshot:e.snapshot}},ov=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'VolumeTypeConstraints' failed as data isn't a dictionary.");return{max:e.max,min:e.min}},rv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'VolumeType' failed as data isn't a dictionary.");return{capabilities:e.capabilities?sv(e.capabilities):void 0,constraints:e.constraints?ov(e.constraints):void 0,displayName:e.display_name}},pv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListVolumesTypesResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,volumes:It(e.volumes,rv)}},dv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'MigrationPlan' failed as data isn't a dictionary.");return{snapshots:r(e.snapshots,Si),validationKey:e.validation_key,volume:e.volume?vi(e.volume):void 0}},lv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ServerActionResponse' failed as data isn't a dictionary.");return{task:e.task?Ks(e.task):void 0}},cv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetImageResponse' failed as data isn't a dictionary.");return{image:e.image?yi(e.image):void 0}},mv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetPlacementGroupResponse' failed as data isn't a dictionary.");return{placementGroup:e.placement_group?_i(e.placement_group):void 0}},hv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetPlacementGroupServersResponse' failed as data isn't a dictionary.");return{servers:r(e.servers,Ws)}},gv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetSecurityGroupResponse' failed as data isn't a dictionary.");return{securityGroup:e.security_group?va(e.security_group):void 0}},uv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetSecurityGroupRuleResponse' failed as data isn't a dictionary.");return{rule:e.rule?wi(e.rule):void 0}},fv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetSecurityGroupRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,wi)}},vv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetServerResponse' failed as data isn't a dictionary.");return{server:e.server?Ft(e.server):void 0}},yv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetSnapshotResponse' failed as data isn't a dictionary.");return{snapshot:e.snapshot?Si(e.snapshot):void 0}},_v=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UpdateImageResponse' failed as data isn't a dictionary.");return{image:e.image?yi(e.image):void 0}},wv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UpdateIpResponse' failed as data isn't a dictionary.");return{ip:e.ip?zn(e.ip):void 0}},Sv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UpdatePlacementGroupResponse' failed as data isn't a dictionary.");return{placementGroup:e.placement_group?_i(e.placement_group):void 0}},bv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UpdatePlacementGroupServersResponse' failed as data isn't a dictionary.");return{servers:r(e.servers,Ws)}},Iv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UpdateSecurityGroupResponse' failed as data isn't a dictionary.");return{securityGroup:e.security_group?va(e.security_group):void 0}},Tv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UpdateSecurityGroupRuleResponse' failed as data isn't a dictionary.");return{rule:e.rule?wi(e.rule):void 0}},Rv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UpdateServerResponse' failed as data isn't a dictionary.");return{server:e.server?Ft(e.server):void 0}},Ev=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UpdateSnapshotResponse' failed as data isn't a dictionary.");return{snapshot:e.snapshot?Si(e.snapshot):void 0}},zv=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UpdateVolumeResponse' failed as data isn't a dictionary.");return{volume:e.volume?vi(e.volume):void 0}},Pv=(e,t)=>({validation_key:e.validationKey,...u([{param:"volume_id",value:e.volumeId},{param:"snapshot_id",value:e.snapshotId}])}),Av=(e,t)=>({boot:e.boot,volume_id:e.volumeId,volume_type:e.volumeType}),Cv=(e,t)=>({id:e.id,name:e.name,size:e.size,volume_type:e.volumeType,...u([{param:"project",value:e.project},{param:"organization",value:e.organization}])}),Nv=(e,t)=>({arch:e.arch,default_bootscript:e.defaultBootscript,extra_volumes:e.extraVolumes!==void 0?Object.entries(e.extraVolumes).reduce((a,[s,o])=>({...a,[s]:Cv(o)}),{}):void 0,name:e.name||_("img"),public:e.public,root_volume:e.rootVolume,tags:e.tags,...u([{default:t.defaultProjectId,param:"project",value:e.project},{default:t.defaultOrganizationId,param:"organization",value:e.organization}])}),$v=(e,t)=>({server:e.server,tags:e.tags,type:e.type,...u([{default:t.defaultProjectId,param:"project",value:e.project},{default:t.defaultOrganizationId,param:"organization",value:e.organization}])}),Lv=(e,t)=>({name:e.name||_("pg"),policy_mode:e.policyMode,policy_type:e.policyType,tags:e.tags,...u([{default:t.defaultProjectId,param:"project",value:e.project},{default:t.defaultOrganizationId,param:"organization",value:e.organization}])}),Ov=(e,t)=>({ip_ids:e.ipIds,private_network_id:e.privateNetworkId,tags:e.tags}),Dv=(e,t)=>({description:e.description,enable_default_security:e.enableDefaultSecurity,inbound_default_policy:e.inboundDefaultPolicy,name:e.name||_("sg"),outbound_default_policy:e.outboundDefaultPolicy,stateful:e.stateful,tags:e.tags,...u([{default:t.defaultProjectId,param:"project",value:e.project},{default:t.defaultOrganizationId,param:"organization",value:e.organization}]),...u([{param:"organization_default",value:e.organizationDefault},{param:"project_default",value:e.projectDefault}])}),Uv=(e,t)=>({action:e.action,dest_port_from:e.destPortFrom,dest_port_to:e.destPortTo,direction:e.direction,editable:e.editable,ip_range:e.ipRange,position:e.position,protocol:e.protocol}),Od=(e,t)=>({base_snapshot:e.baseSnapshot,boot:e.boot,id:e.id,name:e.name,organization:e.organization,project:e.project,size:e.size,volume_type:e.volumeType}),kv=(e,t)=>({boot_type:e.bootType,bootscript:e.bootscript,commercial_type:e.commercialType,dynamic_ip_required:e.dynamicIpRequired,enable_ipv6:e.enableIpv6,image:e.image,name:e.name||_("srv"),placement_group:e.placementGroup,public_ip:e.publicIp,public_ips:e.publicIps,routed_ip_enabled:e.routedIpEnabled,security_group:e.securityGroup,tags:e.tags,volumes:e.volumes!==void 0?Object.entries(e.volumes).reduce((a,[s,o])=>({...a,[s]:Od(o)}),{}):void 0,...u([{default:t.defaultProjectId,param:"project",value:e.project},{default:t.defaultOrganizationId,param:"organization",value:e.organization}])}),xv=(e,t)=>({bucket:e.bucket,key:e.key,name:e.name||_("snp"),size:e.size,tags:e.tags,volume_id:e.volumeId,volume_type:e.volumeType,...u([{default:t.defaultProjectId,param:"project",value:e.project},{default:t.defaultOrganizationId,param:"organization",value:e.organization}])}),Vv=(e,t)=>({name:e.name||_("vol"),tags:e.tags,volume_type:e.volumeType,...u([{default:t.defaultProjectId,param:"project",value:e.project},{default:t.defaultOrganizationId,param:"organization",value:e.organization}]),...u([{param:"size",value:e.size},{param:"base_snapshot",value:e.baseSnapshot}])}),jv=(e,t)=>({volume_id:e.volumeId}),Gv=(e,t)=>({bucket:e.bucket,key:e.key}),Bv=(e,t)=>({...u([{param:"volume_id",value:e.volumeId},{param:"snapshot_id",value:e.snapshotId}])}),Mv=(e,t)=>({volume_type:e.volumeType}),Fv=(e,t)=>({action:e.action,name:e.name,volumes:e.volumes!==void 0?Object.entries(e.volumes).reduce((a,[s,o])=>({...a,[s]:Mv(o)}),{}):void 0}),Dd=(e,t)=>({id:e.id,name:e.name}),Qs=(e,t)=>({arch:e.arch,bootcmdargs:e.bootcmdargs,default:e.default,dtb:e.dtb,id:e.id,initrd:e.initrd,kernel:e.kernel,organization:e.organization,project:e.project,public:e.public,title:e.title,zone:e.zone}),Xs=(e,t)=>({creation_date:e.creationDate,export_uri:e.exportUri,id:e.id,modification_date:e.modificationDate,name:e.name,organization:e.organization,project:e.project,server:e.server!==void 0?Dd(e.server):void 0,size:e.size,state:e.state,tags:e.tags,volume_type:e.volumeType,zone:e.zone}),Ud=(e,t)=>({id:e.id,name:e.name,size:e.size,volume_type:e.volumeType}),Zv=(e,t)=>({arch:e.arch,creation_date:e.creationDate,default_bootscript:e.defaultBootscript!==void 0?Qs(e.defaultBootscript):void 0,extra_volumes:e.extraVolumes!==void 0?Object.entries(e.extraVolumes).reduce((a,[s,o])=>({...a,[s]:Xs(o)}),{}):void 0,from_server:e.fromServer,modification_date:e.modificationDate,name:e.name,organization:e.organization??t.defaultOrganizationId,project:e.project??t.defaultProjectId,public:e.public,root_volume:e.rootVolume!==void 0?Ud(e.rootVolume):void 0,state:e.state,tags:e.tags}),Jv=(e,t)=>({name:e.name,organization:e.organization??t.defaultOrganizationId,policy_mode:e.policyMode,policy_type:e.policyType,project:e.project??t.defaultProjectId,tags:e.tags}),Hv=(e,t)=>({servers:e.servers}),Kv=(e,t)=>({creation_date:e.creationDate,description:e.description,enable_default_security:e.enableDefaultSecurity,inbound_default_policy:e.inboundDefaultPolicy,modification_date:e.modificationDate,name:e.name,organization:e.organization??t.defaultOrganizationId,organization_default:e.organizationDefault,outbound_default_policy:e.outboundDefaultPolicy,project:e.project??t.defaultProjectId,project_default:e.projectDefault,servers:e.servers!==void 0?e.servers.map(a=>Dd(a)):void 0,stateful:e.stateful,tags:e.tags}),Wv=(e,t)=>({action:e.action,dest_port_from:e.destPortFrom,dest_port_to:e.destPortTo,direction:e.direction,editable:e.editable,id:e.id,ip_range:e.ipRange,position:e.position,protocol:e.protocol}),Qv=(e,t)=>({action:e.action,dest_port_from:e.destPortFrom,dest_port_to:e.destPortTo,direction:e.direction,editable:e.editable,id:e.id,ip_range:e.ipRange,position:e.position,protocol:e.protocol,zone:e.zone}),Xv=(e,t)=>({rules:e.rules!==void 0?e.rules.map(a=>Qv(a)):void 0}),Yv=(e,t)=>({arch:e.arch,creation_date:e.creationDate,default_bootscript:e.defaultBootscript!==void 0?Qs(e.defaultBootscript):void 0,extra_volumes:Object.entries(e.extraVolumes).reduce((a,[s,o])=>({...a,[s]:Xs(o)}),{}),from_server:e.fromServer,id:e.id,modification_date:e.modificationDate,name:e.name,organization:e.organization,project:e.project,public:e.public,root_volume:e.rootVolume!==void 0?Ud(e.rootVolume):void 0,state:e.state,tags:e.tags,zone:e.zone}),qv=(e,t)=>({id:e.id,name:e.name,organization:e.organization,policy_mode:e.policyMode,policy_respected:e.policyRespected,policy_type:e.policyType,project:e.project,tags:e.tags,zone:e.zone}),ey=(e,t)=>({id:e.id,mac_address:e.macAddress,private_network_id:e.privateNetworkId,server_id:e.serverId,state:e.state,tags:e.tags}),ty=(e,t)=>({id:e.id,name:e.name}),Gr=(e,t)=>({address:e.address,dynamic:e.dynamic,family:e.family,gateway:e.gateway,id:e.id,ipam_id:e.ipamId,netmask:e.netmask,provisioning_mode:e.provisioningMode,state:e.state,tags:e.tags}),iy=(e,t)=>({address:e.address,gateway:e.gateway,netmask:e.netmask}),ay=(e,t)=>({cluster_id:e.clusterId,hypervisor_id:e.hypervisorId,node_id:e.nodeId,platform_id:e.platformId,zone_id:e.zoneId}),ny=(e,t)=>({reason:e.reason,start_date:e.startDate}),sy=(e,t)=>({allowed_actions:e.allowedActions!==void 0?e.allowedActions:void 0,arch:e.arch,boot_type:e.bootType,bootscript:e.bootscript!==void 0?Qs(e.bootscript):void 0,commercial_type:e.commercialType,creation_date:e.creationDate,dynamic_ip_required:e.dynamicIpRequired,enable_ipv6:e.enableIpv6,hostname:e.hostname,image:e.image!==void 0?Yv(e.image):void 0,ipv6:e.ipv6!==void 0?iy(e.ipv6):void 0,location:e.location!==void 0?ay(e.location):void 0,maintenances:e.maintenances!==void 0?e.maintenances.map(a=>ny(a)):void 0,modification_date:e.modificationDate,name:e.name,organization:e.organization??t.defaultOrganizationId,placement_group:e.placementGroup!==void 0?qv(e.placementGroup):void 0,private_ip:e.privateIp,private_nics:e.privateNics!==void 0?e.privateNics.map(a=>ey(a)):void 0,project:e.project??t.defaultProjectId,protected:e.protected,public_ip:e.publicIp!==void 0?Gr(e.publicIp):void 0,public_ips:e.publicIps!==void 0?e.publicIps.map(a=>Gr(a)):void 0,routed_ip_enabled:e.routedIpEnabled,security_group:e.securityGroup!==void 0?ty(e.securityGroup):void 0,state:e.state,state_detail:e.stateDetail,tags:e.tags,volumes:e.volumes!==void 0?Object.entries(e.volumes).reduce((a,[s,o])=>({...a,[s]:Xs(o)}),{}):void 0}),oy=(e,t)=>({id:e.id,name:e.name}),ry=(e,t)=>({base_volume:e.baseVolume!==void 0?oy(e.baseVolume):void 0,creation_date:e.creationDate,id:e.id,modification_date:e.modificationDate,name:e.name,organization:e.organization??t.defaultOrganizationId,project:e.project??t.defaultProjectId,size:e.size,state:e.state,tags:e.tags,volume_type:e.volumeType}),py=(e,t)=>({id:e.id}),dy=(e,t)=>({arch:e.arch,extra_volumes:e.extraVolumes!==void 0?Object.entries(e.extraVolumes).reduce((a,[s,o])=>({...a,[s]:py(o)}),{}):void 0,name:e.name,public:e.public,tags:e.tags}),ly=(e,t)=>({reverse:e.reverse,server:e.server,tags:e.tags,type:e.type}),cy=(e,t)=>({name:e.name,policy_mode:e.policyMode,policy_type:e.policyType,tags:e.tags}),my=(e,t)=>({servers:e.servers}),hy=(e,t)=>({tags:e.tags}),gy=(e,t)=>({description:e.description,enable_default_security:e.enableDefaultSecurity,inbound_default_policy:e.inboundDefaultPolicy,name:e.name,organization_default:e.organizationDefault,outbound_default_policy:e.outboundDefaultPolicy,project_default:e.projectDefault,stateful:e.stateful,tags:e.tags}),uy=(e,t)=>({action:e.action,dest_port_from:e.destPortFrom,dest_port_to:e.destPortTo,direction:e.direction,ip_range:e.ipRange,position:e.position,protocol:e.protocol}),fy=(e,t)=>({id:e.id,name:e.name}),vy=(e,t)=>({boot_type:e.bootType,bootscript:e.bootscript,commercial_type:e.commercialType,dynamic_ip_required:e.dynamicIpRequired,enable_ipv6:e.enableIpv6,name:e.name,placement_group:e.placementGroup,private_nics:e.privateNics,protected:e.protected,public_ips:e.publicIps,routed_ip_enabled:e.routedIpEnabled,security_group:e.securityGroup!==void 0?fy(e.securityGroup):void 0,tags:e.tags,volumes:e.volumes!==void 0?Object.entries(e.volumes).reduce((a,[s,o])=>({...a,[s]:Od(o)}),{}):void 0}),yy=(e,t)=>({name:e.name,tags:e.tags}),_y=(e,t)=>({name:e.name,size:e.size,tags:e.tags}),z={"Content-Type":"application/json; charset=utf-8"},wy=class extends w{static LOCALITIES=["fr-par-1","fr-par-2","fr-par-3","nl-ams-1","nl-ams-2","nl-ams-3","pl-waw-1","pl-waw-2","pl-waw-3"];getServerTypesAvailability=(t={})=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/products/servers/availability`,urlParams:d(["page",t.page],["per_page",t.perPage??this.client.settings.defaultPageSize])},V7);listServersTypes=(t={})=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/products/servers`,urlParams:d(["page",t.page],["per_page",t.perPage??this.client.settings.defaultPageSize])},iv);listVolumesTypes=(t={})=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/products/volumes`,urlParams:d(["page",t.page],["per_page",t.perPage??this.client.settings.defaultPageSize])},pv);pageOfListServers=(t={})=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers`,urlParams:d(["commercial_type",t.commercialType],["name",t.name],["order",t.order],["organization",t.organization],["page",t.page],["per_page",t.perPage??this.client.settings.defaultPageSize],["private_ip",t.privateIp],["private_network",t.privateNetwork],["private_networks",t.privateNetworks&&t.privateNetworks.length>0?t.privateNetworks.join(","):void 0],["private_nic_mac_address",t.privateNicMacAddress],["project",t.project],["servers",t.servers&&t.servers.length>0?t.servers.join(","):void 0],["state",t.state],["tags",t.tags&&t.tags.length>0?t.tags.join(","):void 0],["without_ip",t.withoutIp])},Q7);listServers=(t={})=>c("servers",this.pageOfListServers,t);_createServer=t=>this.client.fetch({body:JSON.stringify(kv(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers`},S7);deleteServer=t=>this.client.fetch({method:"DELETE",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}`});getServer=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}`},k7);_setServer=t=>this.client.fetch({body:JSON.stringify(sy(t,this.client.settings)),headers:z,method:"PUT",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("id",t.id)}`},vv);_updateServer=t=>this.client.fetch({body:JSON.stringify(vy(t,this.client.settings)),headers:z,method:"PATCH",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}`},Rv);listServerActions=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/action`},K7);serverAction=t=>this.client.fetch({body:JSON.stringify(Fv(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/action`},lv);listServerUserData=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/user_data`},W7);deleteServerUserData=t=>this.client.fetch({method:"DELETE",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/user_data/${i("key",t.key)}`});attachServerVolume=t=>this.client.fetch({body:JSON.stringify(Av(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/attach-volume`},g7);detachServerVolume=t=>this.client.fetch({body:JSON.stringify(jv(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/detach-volume`},R7);pageOfListImages=(t={})=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/images`,urlParams:d(["arch",t.arch],["name",t.name],["organization",t.organization],["page",t.page],["per_page",t.perPage??this.client.settings.defaultPageSize],["project",t.project],["public",t.public],["tags",t.tags])},M7);listImages=(t={})=>c("images",this.pageOfListImages,t);getImage=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/images/${i("imageId",t.imageId)}`},C7);createImage=t=>this.client.fetch({body:JSON.stringify(Nv(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/images`},u7);_setImage=t=>this.client.fetch({body:JSON.stringify(Zv(t,this.client.settings)),headers:z,method:"PUT",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/images/${i("id",t.id)}`},cv);updateImage=t=>this.client.fetch({body:JSON.stringify(dy(t,this.client.settings)),headers:z,method:"PATCH",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/images/${i("imageId",t.imageId)}`},_v);deleteImage=t=>this.client.fetch({method:"DELETE",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/images/${i("imageId",t.imageId)}`});pageOfListSnapshots=(t={})=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/snapshots`,urlParams:d(["base_volume_id",t.baseVolumeId],["name",t.name],["organization",t.organization],["page",t.page],["per_page",t.perPage??this.client.settings.defaultPageSize],["project",t.project],["tags",t.tags])},av);listSnapshots=(t={})=>c("snapshots",this.pageOfListSnapshots,t);createSnapshot=(t={})=>this.client.fetch({body:JSON.stringify(xv(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/snapshots`},I7);getSnapshot=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/snapshots/${i("snapshotId",t.snapshotId)}`},j7);_setSnapshot=t=>this.client.fetch({body:JSON.stringify(ry(t,this.client.settings)),headers:z,method:"PUT",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/snapshots/${i("snapshotId",t.snapshotId)}`},yv);updateSnapshot=t=>this.client.fetch({body:JSON.stringify(yy(t,this.client.settings)),headers:z,method:"PATCH",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/snapshots/${i("snapshotId",t.snapshotId)}`},Ev);deleteSnapshot=t=>this.client.fetch({method:"DELETE",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/snapshots/${i("snapshotId",t.snapshotId)}`});exportSnapshot=t=>this.client.fetch({body:JSON.stringify(Gv(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/snapshots/${i("snapshotId",t.snapshotId)}/export`},E7);pageOfListVolumes=(t={})=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/volumes`,urlParams:d(["name",t.name],["organization",t.organization],["page",t.page],["per_page",t.perPage??this.client.settings.defaultPageSize],["project",t.project],["tags",t.tags&&t.tags.length>0?t.tags.join(","):void 0],["volume_type",t.volumeType])},nv);listVolumes=(t={})=>c("volumes",this.pageOfListVolumes,t);createVolume=(t={})=>this.client.fetch({body:JSON.stringify(Vv(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/volumes`},T7);getVolume=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/volumes/${i("volumeId",t.volumeId)}`},G7);updateVolume=t=>this.client.fetch({body:JSON.stringify(_y(t,this.client.settings)),headers:z,method:"PATCH",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/volumes/${i("volumeId",t.volumeId)}`},zv);deleteVolume=t=>this.client.fetch({method:"DELETE",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/volumes/${i("volumeId",t.volumeId)}`});pageOfListSecurityGroups=(t={})=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups`,urlParams:d(["name",t.name],["organization",t.organization],["page",t.page],["per_page",t.perPage??this.client.settings.defaultPageSize],["project",t.project],["project_default",t.projectDefault],["tags",t.tags&&t.tags.length>0?t.tags.join(","):void 0])},H7);listSecurityGroups=(t={})=>c("securityGroups",this.pageOfListSecurityGroups,t);createSecurityGroup=t=>this.client.fetch({body:JSON.stringify(Dv(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups`},_7);getSecurityGroup=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups/${i("securityGroupId",t.securityGroupId)}`},D7);deleteSecurityGroup=t=>this.client.fetch({method:"DELETE",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups/${i("securityGroupId",t.securityGroupId)}`});_setSecurityGroup=t=>this.client.fetch({body:JSON.stringify(Kv(t,this.client.settings)),headers:z,method:"PUT",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups/${i("id",t.id)}`},gv);updateSecurityGroup=t=>this.client.fetch({body:JSON.stringify(gy(t,this.client.settings)),headers:z,method:"PATCH",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups/${i("securityGroupId",t.securityGroupId)}`},Iv);listDefaultSecurityGroupRules=(t={})=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups/default/rules`},jr);pageOfListSecurityGroupRules=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups/${i("securityGroupId",t.securityGroupId)}/rules`,urlParams:d(["page",t.page],["per_page",t.perPage??this.client.settings.defaultPageSize])},jr);listSecurityGroupRules=t=>c("rules",this.pageOfListSecurityGroupRules,t);createSecurityGroupRule=t=>this.client.fetch({body:JSON.stringify(Uv(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups/${i("securityGroupId",t.securityGroupId)}/rules`},w7);setSecurityGroupRules=t=>this.client.fetch({body:JSON.stringify(Xv(t,this.client.settings)),headers:z,method:"PUT",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups/${i("securityGroupId",t.securityGroupId)}/rules`},fv);deleteSecurityGroupRule=t=>this.client.fetch({method:"DELETE",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups/${i("securityGroupId",t.securityGroupId)}/rules/${i("securityGroupRuleId",t.securityGroupRuleId)}`});getSecurityGroupRule=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups/${i("securityGroupId",t.securityGroupId)}/rules/${i("securityGroupRuleId",t.securityGroupRuleId)}`},U7);_setSecurityGroupRule=t=>this.client.fetch({body:JSON.stringify(Wv(t,this.client.settings)),headers:z,method:"PUT",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups/${i("securityGroupId",t.securityGroupId)}/rules/${i("securityGroupRuleId",t.securityGroupRuleId)}`},uv);updateSecurityGroupRule=t=>this.client.fetch({body:JSON.stringify(uy(t,this.client.settings)),headers:z,method:"PATCH",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/security_groups/${i("securityGroupId",t.securityGroupId)}/rules/${i("securityGroupRuleId",t.securityGroupRuleId)}`},Tv);pageOfListPlacementGroups=(t={})=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/placement_groups`,urlParams:d(["name",t.name],["organization",t.organization],["page",t.page],["per_page",t.perPage??this.client.settings.defaultPageSize],["project",t.project],["tags",t.tags&&t.tags.length>0?t.tags.join(","):void 0])},Z7);listPlacementGroups=(t={})=>c("placementGroups",this.pageOfListPlacementGroups,t);createPlacementGroup=(t={})=>this.client.fetch({body:JSON.stringify(Lv(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/placement_groups`},v7);getPlacementGroup=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/placement_groups/${i("placementGroupId",t.placementGroupId)}`},$7);setPlacementGroup=t=>this.client.fetch({body:JSON.stringify(Jv(t,this.client.settings)),headers:z,method:"PUT",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/placement_groups/${i("placementGroupId",t.placementGroupId)}`},mv);updatePlacementGroup=t=>this.client.fetch({body:JSON.stringify(cy(t,this.client.settings)),headers:z,method:"PATCH",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/placement_groups/${i("placementGroupId",t.placementGroupId)}`},Sv);deletePlacementGroup=t=>this.client.fetch({method:"DELETE",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/placement_groups/${i("placementGroupId",t.placementGroupId)}`});getPlacementGroupServers=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/placement_groups/${i("placementGroupId",t.placementGroupId)}/servers`},L7);setPlacementGroupServers=t=>this.client.fetch({body:JSON.stringify(Hv(t,this.client.settings)),headers:z,method:"PUT",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/placement_groups/${i("placementGroupId",t.placementGroupId)}/servers`},hv);updatePlacementGroupServers=t=>this.client.fetch({body:JSON.stringify(my(t,this.client.settings)),headers:z,method:"PATCH",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/placement_groups/${i("placementGroupId",t.placementGroupId)}/servers`},bv);pageOfListIps=(t={})=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips`,urlParams:d(["name",t.name],["organization",t.organization],["page",t.page],["per_page",t.perPage??this.client.settings.defaultPageSize],["project",t.project],["tags",t.tags&&t.tags.length>0?t.tags.join(","):void 0],["type",t.type])},F7);listIps=(t={})=>c("ips",this.pageOfListIps,t);createIp=(t={})=>this.client.fetch({body:JSON.stringify($v(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips`},f7);getIp=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips/${i("ip",t.ip)}`},N7);updateIp=t=>this.client.fetch({body:JSON.stringify(ly(t,this.client.settings)),headers:z,method:"PATCH",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips/${i("ip",t.ip)}`},wv);deleteIp=t=>this.client.fetch({method:"DELETE",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips/${i("ip",t.ip)}`});pageOfListPrivateNICs=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/private_nics`,urlParams:d(["page",t.page],["per_page",t.perPage??this.client.settings.defaultPageSize],["tags",t.tags&&t.tags.length>0?t.tags.join(","):void 0])},J7);listPrivateNICs=t=>c("privateNics",this.pageOfListPrivateNICs,t);createPrivateNIC=t=>this.client.fetch({body:JSON.stringify(Ov(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/private_nics`},y7);getPrivateNIC=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/private_nics/${i("privateNicId",t.privateNicId)}`},O7);updatePrivateNIC=t=>this.client.fetch({body:JSON.stringify(hy(t,this.client.settings)),headers:z,method:"PATCH",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/private_nics/${i("privateNicId",t.privateNicId)}`},fa);deletePrivateNIC=t=>this.client.fetch({method:"DELETE",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/private_nics/${i("privateNicId",t.privateNicId)}`});pageOfListBootscripts=(t={})=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/bootscripts`,urlParams:d(["arch",t.arch],["default",t.default],["page",t.page],["per_page",t.perPage??this.client.settings.defaultPageSize],["public",t.public],["title",t.title])},B7);listBootscripts=(t={})=>c("bootscripts",this.pageOfListBootscripts,t);getBootscript=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/bootscripts/${i("bootscriptId",t.bootscriptId)}`},z7);getDashboard=(t={})=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/dashboard`,urlParams:d(["organization",t.organization],["project",t.project])},A7);planBlockMigration=(t={})=>this.client.fetch({body:JSON.stringify(Bv(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/block-migration/plan`},dv);applyBlockMigration=t=>this.client.fetch({body:JSON.stringify(Pv(t,this.client.settings)),headers:z,method:"POST",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/block-migration/apply`})},kd=["creating"],Sy=["pending"],xd=["syncing"],by=["syncing"],Iy=["pending"],Vd=["starting","stopping"],jd=["snapshotting","importing","exporting"],Ty=["pending","started","retry"],Ry=["snapshotting","fetching","resizing","saving","hotsyncing"],Gd=["snapshotting","fetching","resizing","saving","hotsyncing"],ns=e=>{if(e===void 0)throw new TypeError("object was found undefined");return e},As=class extends wy{waitForImage=(t,a)=>Re(async()=>{let s=await this.getImage(t).then(o=>o.image);return{done:!kd.includes(s.state),value:s}},Te(a?.minDelay??1,a?.maxDelay??30),a?.timeout);waitForPrivateNIC=(t,a)=>Re(async()=>{let s=await this.getPrivateNIC(t).then(o=>o.privateNic);return{done:!xd.includes(s.state),value:s}},Te(a?.minDelay??1,a?.maxDelay??30),a?.timeout);waitForServer=(t,a)=>Re(async()=>{let s=await this.getServer(t).then(o=>o.server);return{done:!Vd.includes(s.state),value:s}},Te(a?.minDelay??1,a?.maxDelay??30),a?.timeout);waitForSnapshot=(t,a)=>Re(async()=>{let s=await this.getSnapshot(t).then(o=>o.snapshot);return{done:!jd.includes(s.state),value:s}},Te(a?.minDelay??1,a?.maxDelay??30),a?.timeout);waitForVolume=(t,a)=>Re(async()=>{let s=await this.getVolume(t).then(o=>o.volume);return{done:!Gd.includes(s.state),value:s}},Te(a?.minDelay??1,a?.maxDelay??30),a?.timeout);updateServer=t=>this._updateServer(t);createServer=t=>this._createServer(t);serverActionAndWait=async(t,a)=>{let s=await this.serverAction(t).then(()=>this.waitForServer({serverId:t.serverId,zone:t.zone},a)),o;switch(t.action){case"poweron":case"reboot":o="running";break;case"poweroff":o="stopped";break;case"stop_in_place":o="stopped in place";break}if(o&&s.state!==o)throw new Error(`expected state ${o} but found ${s.state}: ${s.stateDetail}`);return s};attachVolume=async t=>{let a=await this.getServer({serverId:t.serverId,zone:t.zone}).then(m=>ns(m.server?.volumes)),s={};for(let[m,h]of Object.entries(a))s[m]={id:h.id,name:h.name};let o=!1,l=Object.keys(a).length;for(let m=0;m<=l;m+=1){let h=m.toString();if(!(h in s)){s[h]={id:t.volumeId,name:t.volumeId},o=!0;break}}if(!o)throw new Error(`could not find key to attach volume ${t.volumeId}`);return this.updateServer({serverId:t.serverId,volumes:s,zone:t.zone}).then(m=>m)};detachVolume=async t=>{let a=await this.getVolume({volumeId:t.volumeId,zone:t.zone}).then(o=>ns(o.volume?.server?.id)).then(o=>this.getServer({serverId:o,zone:t.zone})).then(o=>ns(o.server)),s={};for(let[o,l]of Object.entries(a.volumes))l.id!==t.volumeId&&(s[o]={id:l.id,name:l.name});return this.updateServer({serverId:a.id,volumes:s,zone:t.zone}).then(o=>o)};getServerUserData=t=>this.client.fetch({method:"GET",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/user_data/${i("key",t.key)}`});setServerUserData=t=>this.client.fetch({body:t.content,headers:{"Content-Type":"text/plain"},method:"PATCH",path:`/instance/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/servers/${i("serverId",t.serverId)}/user_data/${i("key",t.key)}`})},Ey=Object.freeze({__proto__:null,API:As,IMAGE_TRANSIENT_STATUSES:kd,IP_TRANSIENT_STATUSES:Sy,PRIVATE_NIC_TRANSIENT_STATUSES:xd,SECURITY_GROUP_TRANSIENT_STATUSES:by,SERVER_IP_TRANSIENT_STATUSES:Iy,SERVER_TRANSIENT_STATUSES:Vd,SNAPSHOT_TRANSIENT_STATUSES:jd,TASK_TRANSIENT_STATUSES:Ty,VOLUME_SERVER_TRANSIENT_STATUSES:Ry,VOLUME_TRANSIENT_STATUSES:Gd}),zy=Object.freeze({__proto__:null,v1:Ey}),Bd=["enabling","disabling"],Br=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DeviceMessageFiltersRule' failed as data isn't a dictionary.");return{policy:e.policy,topics:e.topics}},Py=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DeviceMessageFilters' failed as data isn't a dictionary.");return{publish:e.publish?Br(e.publish):void 0,subscribe:e.subscribe?Br(e.subscribe):void 0}},at=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Device' failed as data isn't a dictionary.");return{allowInsecure:e.allow_insecure,allowMultipleConnections:e.allow_multiple_connections,createdAt:p(e.created_at),description:e.description,hasCustomCertificate:e.has_custom_certificate,hubId:e.hub_id,id:e.id,isConnected:e.is_connected,lastActivityAt:p(e.last_activity_at),messageFilters:e.message_filters?Py(e.message_filters):void 0,name:e.name,status:e.status,updatedAt:p(e.updated_at)}},Ys=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Network' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),endpoint:e.endpoint,hubId:e.hub_id,id:e.id,name:e.name,topicPrefix:e.topic_prefix,type:e.type}},Ay=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'HubTwinsGraphiteConfig' failed as data isn't a dictionary.");return{pushUri:e.push_uri}},kt=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Hub' failed as data isn't a dictionary.");return{connectedDeviceCount:e.connected_device_count,createdAt:p(e.created_at),deviceCount:e.device_count,disableEvents:e.disable_events,enableDeviceAutoProvisioning:e.enable_device_auto_provisioning,enabled:e.enabled,endpoint:e.endpoint,eventsTopicPrefix:e.events_topic_prefix,hasCustomCa:e.has_custom_ca,id:e.id,name:e.name,organizationId:e.organization_id,productPlan:e.product_plan,projectId:e.project_id,region:e.region,status:e.status,twinsGraphiteConfig:e.twins_graphite_config?Ay(e.twins_graphite_config):void 0,updatedAt:p(e.updated_at)}},Md=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Certificate' failed as data isn't a dictionary.");return{crt:e.crt,key:e.key}},Cy=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CreateDeviceResponse' failed as data isn't a dictionary.");return{certificate:e.certificate?Md(e.certificate):void 0,device:e.device?at(e.device):void 0}},Ny=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CreateNetworkResponse' failed as data isn't a dictionary.");return{network:e.network?Ys(e.network):void 0,secret:e.secret}},$y=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetDeviceCertificateResponse' failed as data isn't a dictionary.");return{certificatePem:e.certificate_pem,device:e.device?at(e.device):void 0}},Ly=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetDeviceMetricsResponse' failed as data isn't a dictionary.");return{metrics:r(e.metrics,Tt)}},Oy=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetHubCAResponse' failed as data isn't a dictionary.");return{caCertPem:e.ca_cert_pem}},Dy=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GetHubMetricsResponse' failed as data isn't a dictionary.");return{metrics:r(e.metrics,Tt)}},Uy=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDevicesResponse' failed as data isn't a dictionary.");return{devices:r(e.devices,at),totalCount:e.total_count}},ky=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListHubsResponse' failed as data isn't a dictionary.");return{hubs:r(e.hubs,kt),totalCount:e.total_count}},xy=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListNetworksResponse' failed as data isn't a dictionary.");return{networks:r(e.networks,Ys),totalCount:e.total_count}},Vy=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RouteSummary' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),hubId:e.hub_id,id:e.id,name:e.name,topic:e.topic,type:e.type,updatedAt:p(e.updated_at)}},jy=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRoutesResponse' failed as data isn't a dictionary.");return{routes:r(e.routes,Vy),totalCount:e.total_count}},Gy=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTwinDocumentsResponseDocumentSummary' failed as data isn't a dictionary.");return{documentName:e.document_name}},By=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTwinDocumentsResponse' failed as data isn't a dictionary.");return{documents:r(e.documents,Gy)}},My=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RenewDeviceCertificateResponse' failed as data isn't a dictionary.");return{certificate:e.certificate?Md(e.certificate):void 0,device:e.device?at(e.device):void 0}},Fy=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RouteDatabaseConfig' failed as data isn't a dictionary.");return{dbname:e.dbname,engine:e.engine,host:e.host,password:e.password,port:e.port,query:e.query,username:e.username}},Zy=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RouteRestConfig' failed as data isn't a dictionary.");return{headers:e.headers,uri:e.uri,verb:e.verb}},Jy=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RouteS3Config' failed as data isn't a dictionary.");return{bucketName:e.bucket_name,bucketRegion:e.bucket_region,objectPrefix:e.object_prefix,strategy:e.strategy}},ss=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Route' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),dbConfig:e.db_config?Fy(e.db_config):void 0,hubId:e.hub_id,id:e.id,name:e.name,restConfig:e.rest_config?Zy(e.rest_config):void 0,s3Config:e.s3_config?Jy(e.s3_config):void 0,topic:e.topic,type:e.type,updatedAt:p(e.updated_at)}},Hy=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetDeviceCertificateResponse' failed as data isn't a dictionary.");return{certificatePem:e.certificate_pem,device:e.device?at(e.device):void 0}},os=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'TwinDocument' failed as data isn't a dictionary.");return{data:e.data,documentName:e.document_name,twinId:e.twin_id,version:e.version}},Mr=(e,t)=>({policy:e.policy,topics:e.topics}),Fd=(e,t)=>({publish:e.publish!==void 0?Mr(e.publish):void 0,subscribe:e.subscribe!==void 0?Mr(e.subscribe):void 0}),Ky=(e,t)=>({allow_insecure:e.allowInsecure,allow_multiple_connections:e.allowMultipleConnections,description:e.description,hub_id:e.hubId,message_filters:e.messageFilters!==void 0?Fd(e.messageFilters):void 0,name:e.name||_("device")}),Zd=(e,t)=>({push_uri:e.pushUri}),Wy=(e,t)=>({disable_events:e.disableEvents,events_topic_prefix:e.eventsTopicPrefix,name:e.name||_("hub"),product_plan:e.productPlan,project_id:e.projectId??t.defaultProjectId,...u([{param:"twins_graphite_config",value:e.twinsGraphiteConfig!==void 0?Zd(e.twinsGraphiteConfig):void 0}])}),Qy=(e,t)=>({hub_id:e.hubId,name:e.name||_("network"),topic_prefix:e.topicPrefix,type:e.type}),Xy=(e,t)=>({dbname:e.dbname,engine:e.engine,host:e.host,password:e.password,port:e.port,query:e.query,username:e.username}),Yy=(e,t)=>({headers:e.headers,uri:e.uri,verb:e.verb}),qy=(e,t)=>({bucket_name:e.bucketName,bucket_region:e.bucketRegion,object_prefix:e.objectPrefix,strategy:e.strategy}),e_=(e,t)=>({hub_id:e.hubId,name:e.name||_("route"),topic:e.topic,...u([{param:"s3_config",value:e.s3Config!==void 0?qy(e.s3Config):void 0},{param:"db_config",value:e.dbConfig!==void 0?Xy(e.dbConfig):void 0},{param:"rest_config",value:e.restConfig!==void 0?Yy(e.restConfig):void 0}])}),t_=(e,t)=>({data:e.data,version:e.version}),i_=(e,t)=>({data:e.data,version:e.version}),a_=(e,t)=>({certificate_pem:e.certificatePem}),n_=(e,t)=>({ca_cert_pem:e.caCertPem,challenge_cert_pem:e.challengeCertPem}),s_=(e,t)=>({allow_insecure:e.allowInsecure,allow_multiple_connections:e.allowMultipleConnections,description:e.description,hub_id:e.hubId,message_filters:e.messageFilters!==void 0?Fd(e.messageFilters):void 0}),o_=(e,t)=>({disable_events:e.disableEvents,enable_device_auto_provisioning:e.enableDeviceAutoProvisioning,events_topic_prefix:e.eventsTopicPrefix,name:e.name,product_plan:e.productPlan,...u([{param:"twins_graphite_config",value:e.twinsGraphiteConfig!==void 0?Zd(e.twinsGraphiteConfig):void 0}])}),r_=(e,t)=>({dbname:e.dbname,engine:e.engine,host:e.host,password:e.password,port:e.port,query:e.query,username:e.username}),p_=(e,t)=>({headers:e.headers,uri:e.uri,verb:e.verb}),d_=(e,t)=>({bucket_name:e.bucketName,bucket_region:e.bucketRegion,object_prefix:e.objectPrefix,strategy:e.strategy}),l_=(e,t)=>({name:e.name,topic:e.topic,...u([{param:"s3_config",value:e.s3Config!==void 0?d_(e.s3Config):void 0},{param:"db_config",value:e.dbConfig!==void 0?r_(e.dbConfig):void 0},{param:"rest_config",value:e.restConfig!==void 0?p_(e.restConfig):void 0}])}),ne={"Content-Type":"application/json; charset=utf-8"},c_=class extends w{static LOCALITIES=["fr-par"];pageOfListHubs=(t={})=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hubs`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},ky);listHubs=(t={})=>c("hubs",this.pageOfListHubs,t);createHub=t=>this.client.fetch({body:JSON.stringify(Wy(t,this.client.settings)),headers:ne,method:"POST",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hubs`},kt);getHub=t=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hubs/${i("hubId",t.hubId)}`},kt);waitForHub=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Bd.includes(s.status))),this.getHub,t,a);updateHub=t=>this.client.fetch({body:JSON.stringify(o_(t,this.client.settings)),headers:ne,method:"PATCH",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hubs/${i("hubId",t.hubId)}`},kt);enableHub=t=>this.client.fetch({body:"{}",headers:ne,method:"POST",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hubs/${i("hubId",t.hubId)}/enable`},kt);disableHub=t=>this.client.fetch({body:"{}",headers:ne,method:"POST",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hubs/${i("hubId",t.hubId)}/disable`},kt);deleteHub=t=>this.client.fetch({method:"DELETE",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hubs/${i("hubId",t.hubId)}`,urlParams:d(["delete_devices",t.deleteDevices])});getHubMetrics=t=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hubs/${i("hubId",t.hubId)}/metrics`,urlParams:d(["start_date",t.startDate])},Dy);setHubCA=t=>this.client.fetch({body:JSON.stringify(n_(t,this.client.settings)),headers:ne,method:"POST",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hubs/${i("hubId",t.hubId)}/ca`},kt);getHubCA=t=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hubs/${i("hubId",t.hubId)}/ca`},Oy);pageOfListDevices=(t={})=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/devices`,urlParams:d(["allow_insecure",t.allowInsecure],["hub_id",t.hubId],["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["status",t.status])},Uy);listDevices=(t={})=>c("devices",this.pageOfListDevices,t);createDevice=t=>this.client.fetch({body:JSON.stringify(Ky(t,this.client.settings)),headers:ne,method:"POST",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/devices`},Cy);getDevice=t=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/devices/${i("deviceId",t.deviceId)}`},at);updateDevice=t=>this.client.fetch({body:JSON.stringify(s_(t,this.client.settings)),headers:ne,method:"PATCH",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/devices/${i("deviceId",t.deviceId)}`},at);enableDevice=t=>this.client.fetch({body:"{}",headers:ne,method:"POST",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/devices/${i("deviceId",t.deviceId)}/enable`},at);disableDevice=t=>this.client.fetch({body:"{}",headers:ne,method:"POST",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/devices/${i("deviceId",t.deviceId)}/disable`},at);renewDeviceCertificate=t=>this.client.fetch({body:"{}",headers:ne,method:"POST",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/devices/${i("deviceId",t.deviceId)}/renew-certificate`},My);setDeviceCertificate=t=>this.client.fetch({body:JSON.stringify(a_(t,this.client.settings)),headers:ne,method:"PUT",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/devices/${i("deviceId",t.deviceId)}/certificate`},Hy);getDeviceCertificate=t=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/devices/${i("deviceId",t.deviceId)}/certificate`},$y);deleteDevice=t=>this.client.fetch({method:"DELETE",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/devices/${i("deviceId",t.deviceId)}`});getDeviceMetrics=t=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/devices/${i("deviceId",t.deviceId)}/metrics`,urlParams:d(["start_date",t.startDate])},Ly);pageOfListRoutes=(t={})=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/routes`,urlParams:d(["hub_id",t.hubId],["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},jy);listRoutes=(t={})=>c("routes",this.pageOfListRoutes,t);createRoute=t=>this.client.fetch({body:JSON.stringify(e_(t,this.client.settings)),headers:ne,method:"POST",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/routes`},ss);updateRoute=t=>this.client.fetch({body:JSON.stringify(l_(t,this.client.settings)),headers:ne,method:"PATCH",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/routes/${i("routeId",t.routeId)}`},ss);getRoute=t=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/routes/${i("routeId",t.routeId)}`},ss);deleteRoute=t=>this.client.fetch({method:"DELETE",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/routes/${i("routeId",t.routeId)}`});pageOfListNetworks=(t={})=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/networks`,urlParams:d(["hub_id",t.hubId],["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["topic_prefix",t.topicPrefix])},xy);listNetworks=(t={})=>c("networks",this.pageOfListNetworks,t);createNetwork=t=>this.client.fetch({body:JSON.stringify(Qy(t,this.client.settings)),headers:ne,method:"POST",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/networks`},Ny);getNetwork=t=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/networks/${i("networkId",t.networkId)}`},Ys);deleteNetwork=t=>this.client.fetch({method:"DELETE",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/networks/${i("networkId",t.networkId)}`});getTwinDocument=t=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/twins/${i("twinId",t.twinId)}/documents/${i("documentName",t.documentName)}`},os);putTwinDocument=t=>this.client.fetch({body:JSON.stringify(i_(t,this.client.settings)),headers:ne,method:"PUT",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/twins/${i("twinId",t.twinId)}/documents/${i("documentName",t.documentName)}`},os);patchTwinDocument=t=>this.client.fetch({body:JSON.stringify(t_(t,this.client.settings)),headers:ne,method:"PATCH",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/twins/${i("twinId",t.twinId)}/documents/${i("documentName",t.documentName)}`},os);deleteTwinDocument=t=>this.client.fetch({method:"DELETE",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/twins/${i("twinId",t.twinId)}/documents/${i("documentName",t.documentName)}`});listTwinDocuments=t=>this.client.fetch({method:"GET",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/twins/${i("twinId",t.twinId)}`},By);deleteTwinDocuments=t=>this.client.fetch({method:"DELETE",path:`/iot/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/twins/${i("twinId",t.twinId)}`})},m_=Object.freeze({__proto__:null,API:c_,HUB_TRANSIENT_STATUSES:Bd}),h_=Object.freeze({__proto__:null,v1:m_}),g_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Resource' failed as data isn't a dictionary.");return{id:e.id,macAddress:e.mac_address,name:e.name,type:e.type}},u_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Reverse' failed as data isn't a dictionary.");return{address:e.address,hostname:e.hostname}},f_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Source' failed as data isn't a dictionary.");return{privateNetworkId:e.private_network_id,subnetId:e.subnet_id,zonal:e.zonal}},Xa=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'IP' failed as data isn't a dictionary.");return{address:e.address,createdAt:p(e.created_at),id:e.id,isIpv6:e.is_ipv6,projectId:e.project_id,region:e.region,resource:e.resource?g_(e.resource):void 0,reverses:r(e.reverses,u_),source:f_(e.source),tags:e.tags,updatedAt:p(e.updated_at),zone:e.zone}},v_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListIPsResponse' failed as data isn't a dictionary.");return{ips:r(e.ips,Xa),totalCount:e.total_count}},y_=(e,t)=>({...u([{param:"zonal",value:e.zonal},{param:"private_network_id",value:e.privateNetworkId},{param:"subnet_id",value:e.subnetId}])}),__=(e,t)=>({address:e.address,is_ipv6:e.isIpv6,project_id:e.projectId??t.defaultProjectId,source:y_(e.source),tags:e.tags}),w_=(e,t)=>({address:e.address,hostname:e.hostname}),S_=(e,t)=>({reverses:e.reverses!==void 0?e.reverses.map(a=>w_(a)):void 0,tags:e.tags}),rs={"Content-Type":"application/json; charset=utf-8"},b_=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];bookIP=t=>this.client.fetch({body:JSON.stringify(__(t,this.client.settings)),headers:rs,method:"POST",path:`/ipam/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/ips`},Xa);releaseIP=t=>this.client.fetch({body:"{}",headers:rs,method:"DELETE",path:`/ipam/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/ips/${i("ipId",t.ipId)}`});getIP=t=>this.client.fetch({method:"GET",path:`/ipam/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/ips/${i("ipId",t.ipId)}`},Xa);updateIP=t=>this.client.fetch({body:JSON.stringify(S_(t,this.client.settings)),headers:rs,method:"PATCH",path:`/ipam/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/ips/${i("ipId",t.ipId)}`},Xa);pageOfListIPs=(t={})=>this.client.fetch({method:"GET",path:`/ipam/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/ips`,urlParams:d(["attached",t.attached],["is_ipv6",t.isIpv6],["mac_address",t.macAddress],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["resource_id",t.resourceId],["resource_name",t.resourceName],["resource_type",t.resourceType],["tags",t.tags],...Object.entries(u([{param:"zonal",value:t.zonal},{param:"private_network_id",value:t.privateNetworkId}])))},v_);listIPs=(t={})=>c("ips",this.pageOfListIPs,t)},I_={resourceName:{maxLength:63,minLength:2}},T_=Object.freeze({__proto__:null,ListIPsRequest:I_}),R_=Object.freeze({__proto__:null,API:b_,ValidationRules:T_}),E_=Object.freeze({__proto__:null,v1:R_}),Jd=["queued","publishing"],Hd=["queued","pinning"],Hi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Name' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),key:e.key,name:e.name,nameId:e.name_id,projectId:e.project_id,region:e.region,status:e.status,tags:e.tags,updatedAt:p(e.updated_at),value:e.value}},z_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PinCIDMeta' failed as data isn't a dictionary.");return{id:e.id}},P_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PinCID' failed as data isn't a dictionary.");return{cid:e.cid,meta:e.meta?z_(e.meta):void 0,name:e.name,origins:e.origins}},A_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PinInfo' failed as data isn't a dictionary.");return{id:e.id,progress:e.progress,size:e.size,statusDetails:e.status_details,url:e.url}},aa=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Pin' failed as data isn't a dictionary.");return{cid:e.cid?P_(e.cid):void 0,createdAt:p(e.created_at),delegates:e.delegates,info:e.info?A_(e.info):void 0,pinId:e.pin_id,status:e.status}},Ya=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Volume' failed as data isn't a dictionary.");return{countPin:e.count_pin,createdAt:p(e.created_at),id:e.id,name:e.name,projectId:e.project_id,region:e.region,size:e.size,tags:e.tags,updatedAt:p(e.updated_at)}},C_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ExportKeyNameResponse' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),nameId:e.name_id,privateKey:e.private_key,projectId:e.project_id,publicKey:e.public_key,updatedAt:p(e.updated_at)}},N_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListNamesResponse' failed as data isn't a dictionary.");return{names:r(e.names,Hi),totalCount:e.total_count}},$_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListPinsResponse' failed as data isn't a dictionary.");return{pins:r(e.pins,aa),totalCount:e.total_count}},L_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListVolumesResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,volumes:r(e.volumes,Ya)}},O_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ReplacePinResponse' failed as data isn't a dictionary.");return{pin:e.pin?aa(e.pin):void 0}},D_=(e,t)=>({cid:e.cid,name:e.name,origins:e.origins,volume_id:e.volumeId}),U_=(e,t)=>({name:e.name,url:e.url,volume_id:e.volumeId}),k_=(e,t)=>({name:e.name,project_id:e.projectId??t.defaultProjectId}),x_=(e,t)=>({name:e.name,project_id:e.projectId??t.defaultProjectId,value:e.value}),V_=(e,t)=>({name:e.name,private_key:e.privateKey,project_id:e.projectId??t.defaultProjectId,value:e.value}),j_=(e,t)=>({name:e.name,tags:e.tags,value:e.value}),G_=(e,t)=>({cid:e.cid,name:e.name,origins:e.origins,volume_id:e.volumeId}),B_=(e,t)=>({name:e.name,tags:e.tags}),vt={"Content-Type":"application/json; charset=utf-8"},M_=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];createVolume=t=>this.client.fetch({body:JSON.stringify(k_(t,this.client.settings)),headers:vt,method:"POST",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/volumes`},Ya);getVolume=t=>this.client.fetch({method:"GET",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/volumes/${i("volumeId",t.volumeId)}`},Ya);pageOfListVolumes=(t={})=>this.client.fetch({method:"GET",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/volumes`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId??this.client.settings.defaultProjectId])},L_);listVolumes=(t={})=>c("volumes",this.pageOfListVolumes,t);updateVolume=t=>this.client.fetch({body:JSON.stringify(B_(t,this.client.settings)),headers:vt,method:"PATCH",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/volumes/${i("volumeId",t.volumeId)}`},Ya);deleteVolume=t=>this.client.fetch({method:"DELETE",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/volumes/${i("volumeId",t.volumeId)}`});createPinByURL=t=>this.client.fetch({body:JSON.stringify(U_(t,this.client.settings)),headers:vt,method:"POST",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/pins/create-by-url`},aa);createPinByCID=t=>this.client.fetch({body:JSON.stringify(D_(t,this.client.settings)),headers:vt,method:"POST",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/pins/create-by-cid`},aa);replacePin=t=>this.client.fetch({body:JSON.stringify(G_(t,this.client.settings)),headers:vt,method:"POST",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/pins/${i("pinId",t.pinId)}/replace`},O_);getPin=t=>this.client.fetch({method:"GET",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/pins/${i("pinId",t.pinId)}`,urlParams:d(["volume_id",t.volumeId])},aa);waitForPin=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Hd.includes(s.status))),this.getPin,t,a);pageOfListPins=t=>this.client.fetch({method:"GET",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/pins`,urlParams:d(["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["status",t.status],["volume_id",t.volumeId])},$_);listPins=t=>c("pins",this.pageOfListPins,t);deletePin=t=>this.client.fetch({method:"DELETE",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/pins/${i("pinId",t.pinId)}`,urlParams:d(["volume_id",t.volumeId])})},Cs=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];createName=t=>this.client.fetch({body:JSON.stringify(x_(t,this.client.settings)),headers:vt,method:"POST",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/names`},Hi);getName=t=>this.client.fetch({method:"GET",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/names/${i("nameId",t.nameId)}`},Hi);waitForName=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Jd.includes(s.status))),this.getName,t,a);deleteName=t=>this.client.fetch({method:"DELETE",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/names/${i("nameId",t.nameId)}`});pageOfListNames=(t={})=>this.client.fetch({method:"GET",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/names`,urlParams:d(["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},N_);listNames=(t={})=>c("names",this.pageOfListNames,t);updateName=t=>this.client.fetch({body:JSON.stringify(j_(t,this.client.settings)),headers:vt,method:"PATCH",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/names/${i("nameId",t.nameId)}`},Hi);exportKeyName=t=>this.client.fetch({method:"GET",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/names/${i("nameId",t.nameId)}/export-key`},C_);importKeyName=t=>this.client.fetch({body:JSON.stringify(V_(t,this.client.settings)),headers:vt,method:"POST",path:`/ipfs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/names/import-key`},Hi)},F_=Object.freeze({__proto__:null,API:M_,IpnsAPI:Cs,NAME_TRANSIENT_STATUSES:Jd,PIN_TRANSIENT_STATUSES:Hd}),Z_=Object.freeze({__proto__:null,v1alpha1:F_}),J_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CronSchedule' failed as data isn't a dictionary.");return{schedule:e.schedule,timezone:e.timezone}},qa=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'JobDefinition' failed as data isn't a dictionary.");return{command:e.command,cpuLimit:e.cpu_limit,createdAt:p(e.created_at),cronSchedule:e.cron_schedule?J_(e.cron_schedule):void 0,description:e.description,environmentVariables:e.environment_variables,id:e.id,imageUri:e.image_uri,jobTimeout:e.job_timeout,localStorageCapacity:e.local_storage_capacity,memoryLimit:e.memory_limit,name:e.name,projectId:e.project_id,region:e.region,updatedAt:p(e.updated_at)}},vn=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'JobRun' failed as data isn't a dictionary.");return{command:e.command,cpuLimit:e.cpu_limit,createdAt:p(e.created_at),environmentVariables:e.environment_variables,errorMessage:e.error_message,exitCode:e.exit_code,id:e.id,jobDefinitionId:e.job_definition_id,localStorageCapacity:e.local_storage_capacity,memoryLimit:e.memory_limit,region:e.region,runDuration:e.run_duration,startedAt:p(e.started_at),state:e.state,terminatedAt:p(e.terminated_at),updatedAt:p(e.updated_at)}},H_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListJobDefinitionsResponse' failed as data isn't a dictionary.");return{jobDefinitions:r(e.job_definitions,qa),totalCount:e.total_count}},K_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListJobRunsResponse' failed as data isn't a dictionary.");return{jobRuns:r(e.job_runs,vn),totalCount:e.total_count}},W_=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'StartJobDefinitionResponse' failed as data isn't a dictionary.");return{jobRuns:r(e.job_runs,vn)}},Q_=(e,t)=>({schedule:e.schedule,timezone:e.timezone}),X_=(e,t)=>({command:e.command,cpu_limit:e.cpuLimit,cron_schedule:e.cronSchedule!==void 0?Q_(e.cronSchedule):void 0,description:e.description,environment_variables:e.environmentVariables!==void 0?e.environmentVariables:void 0,image_uri:e.imageUri,job_timeout:e.jobTimeout,local_storage_capacity:e.localStorageCapacity,memory_limit:e.memoryLimit,name:e.name||_("job"),project_id:e.projectId??t.defaultProjectId}),Y_=(e,t)=>({command:e.command,environment_variables:e.environmentVariables,replicas:e.replicas}),q_=(e,t)=>({schedule:e.schedule,timezone:e.timezone}),ew=(e,t)=>({command:e.command,cpu_limit:e.cpuLimit,cron_schedule:e.cronSchedule!==void 0?q_(e.cronSchedule):void 0,description:e.description,environment_variables:e.environmentVariables,image_uri:e.imageUri,job_timeout:e.jobTimeout,local_storage_capacity:e.localStorageCapacity,memory_limit:e.memoryLimit,name:e.name}),ka={"Content-Type":"application/json; charset=utf-8"},tw=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];createJobDefinition=t=>this.client.fetch({body:JSON.stringify(X_(t,this.client.settings)),headers:ka,method:"POST",path:`/serverless-jobs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/job-definitions`},qa);getJobDefinition=t=>this.client.fetch({method:"GET",path:`/serverless-jobs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/job-definitions/${i("jobDefinitionId",t.jobDefinitionId)}`},qa);pageOfListJobDefinitions=(t={})=>this.client.fetch({method:"GET",path:`/serverless-jobs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/job-definitions`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},H_);listJobDefinitions=(t={})=>c("jobDefinitions",this.pageOfListJobDefinitions,t);updateJobDefinition=t=>this.client.fetch({body:JSON.stringify(ew(t,this.client.settings)),headers:ka,method:"PATCH",path:`/serverless-jobs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/job-definitions/${i("jobDefinitionId",t.jobDefinitionId)}`},qa);deleteJobDefinition=t=>this.client.fetch({method:"DELETE",path:`/serverless-jobs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/job-definitions/${i("jobDefinitionId",t.jobDefinitionId)}`});startJobDefinition=t=>this.client.fetch({body:JSON.stringify(Y_(t,this.client.settings)),headers:ka,method:"POST",path:`/serverless-jobs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/job-definitions/${i("jobDefinitionId",t.jobDefinitionId)}/start`},W_);getJobRun=t=>this.client.fetch({method:"GET",path:`/serverless-jobs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/job-runs/${i("jobRunId",t.jobRunId)}`},vn);stopJobRun=t=>this.client.fetch({body:"{}",headers:ka,method:"POST",path:`/serverless-jobs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/job-runs/${i("jobRunId",t.jobRunId)}/stop`},vn);pageOfListJobRuns=(t={})=>this.client.fetch({method:"GET",path:`/serverless-jobs/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/job-runs`,urlParams:d(["job_definition_id",t.jobDefinitionId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},K_);listJobRuns=(t={})=>c("jobRuns",this.pageOfListJobRuns,t)},iw=["queued","scheduled","running"],aw={cpuLimit:{greaterThan:0},imageUri:{pattern:/^((?:(?:(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))*|\[(?:[a-fA-F0-9:]+)\])(?::[0-9]+)?\/)?[a-z0-9]+(?:(?:[._]|__|[-]+)[a-z0-9]+)*(?:\/[a-z0-9]+(?:(?:[._]|__|[-]+)[a-z0-9]+)*)*)(?::([\w][\w.-]{0,127}))?(?:@([A-Za-z][A-Za-z0-9]*(?:[-_+.][A-Za-z][A-Za-z0-9]*)*[:][[:xdigit:]]{32,}))?$/},localStorageCapacity:{greaterThan:0},memoryLimit:{greaterThan:0},name:{pattern:/^[A-Za-z0-9-_]{3,50}$/}},nw={schedule:{maxLength:255,minLength:1},timezone:{maxLength:255,minLength:1}},sw={schedule:{maxLength:255,minLength:1},timezone:{maxLength:255,minLength:1}},ow={page:{greaterThanOrEqual:1},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:1e3}},rw={page:{greaterThanOrEqual:1},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:1e3}},pw={replicas:{greaterThan:0}},dw={cpuLimit:{greaterThan:0},imageUri:{pattern:/^((?:(?:(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))*|\[(?:[a-fA-F0-9:]+)\])(?::[0-9]+)?\/)?[a-z0-9]+(?:(?:[._]|__|[-]+)[a-z0-9]+)*(?:\/[a-z0-9]+(?:(?:[._]|__|[-]+)[a-z0-9]+)*)*)(?::([\w][\w.-]{0,127}))?(?:@([A-Za-z][A-Za-z0-9]*(?:[-_+.][A-Za-z][A-Za-z0-9]*)*[:][[:xdigit:]]{32,}))?$/},localStorageCapacity:{greaterThan:0},memoryLimit:{greaterThan:0},name:{pattern:/^[A-Za-z0-9-_]{3,50}$/}},lw={schedule:{maxLength:255,minLength:1},timezone:{maxLength:255,minLength:1}},cw=Object.freeze({__proto__:null,CreateJobDefinitionRequest:aw,CreateJobDefinitionRequestCronScheduleConfig:nw,CronSchedule:sw,ListJobDefinitionsRequest:ow,ListJobRunsRequest:rw,StartJobDefinitionRequest:pw,UpdateJobDefinitionRequest:dw,UpdateJobDefinitionRequestCronScheduleConfig:lw}),mw=Object.freeze({__proto__:null,API:tw,JOB_RUN_TRANSIENT_STATUSES:iw,ValidationRules:cw}),hw=Object.freeze({__proto__:null,v1alpha1:mw}),Kd=["creating","deleting","updating"],Wd=["creating","deleting","rebooting","upgrading","starting","registering"],Qd=["deleting","scaling","upgrading"],gw=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PoolUpgradePolicy' failed as data isn't a dictionary.");return{maxSurge:e.max_surge,maxUnavailable:e.max_unavailable}},oi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Pool' failed as data isn't a dictionary.");return{autohealing:e.autohealing,autoscaling:e.autoscaling,clusterId:e.cluster_id,containerRuntime:e.container_runtime,createdAt:p(e.created_at),id:e.id,kubeletArgs:e.kubelet_args,maxSize:e.max_size,minSize:e.min_size,name:e.name,nodeType:e.node_type,placementGroupId:e.placement_group_id,publicIpDisabled:e.public_ip_disabled,region:e.region,rootVolumeSize:e.root_volume_size,rootVolumeType:e.root_volume_type,size:e.size,status:e.status,tags:e.tags,updatedAt:p(e.updated_at),upgradePolicy:e.upgrade_policy?gw(e.upgrade_policy):void 0,version:e.version,zone:e.zone}},qs=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Version' failed as data isn't a dictionary.");return{availableAdmissionPlugins:e.available_admission_plugins,availableCnis:e.available_cnis,availableContainerRuntimes:e.available_container_runtimes,availableFeatureGates:e.available_feature_gates,availableKubeletArgs:e.available_kubelet_args,label:e.label,name:e.name,region:e.region}},uw=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'MaintenanceWindow' failed as data isn't a dictionary.");return{day:e.day,startHour:e.start_hour}},fw=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ClusterAutoUpgrade' failed as data isn't a dictionary.");return{enabled:e.enabled,maintenanceWindow:e.maintenance_window?uw(e.maintenance_window):void 0}},vw=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ClusterAutoscalerConfig' failed as data isn't a dictionary.");return{balanceSimilarNodeGroups:e.balance_similar_node_groups,estimator:e.estimator,expander:e.expander,expendablePodsPriorityCutoff:e.expendable_pods_priority_cutoff,ignoreDaemonsetsUtilization:e.ignore_daemonsets_utilization,maxGracefulTerminationSec:e.max_graceful_termination_sec,scaleDownDelayAfterAdd:e.scale_down_delay_after_add,scaleDownDisabled:e.scale_down_disabled,scaleDownUnneededTime:e.scale_down_unneeded_time,scaleDownUtilizationThreshold:e.scale_down_utilization_threshold}},yw=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ClusterOpenIDConnectConfig' failed as data isn't a dictionary.");return{clientId:e.client_id,groupsClaim:e.groups_claim,groupsPrefix:e.groups_prefix,issuerUrl:e.issuer_url,requiredClaim:e.required_claim,usernameClaim:e.username_claim,usernamePrefix:e.username_prefix}},ut=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Cluster' failed as data isn't a dictionary.");return{admissionPlugins:e.admission_plugins,apiserverCertSans:e.apiserver_cert_sans,autoUpgrade:e.auto_upgrade?fw(e.auto_upgrade):void 0,autoscalerConfig:e.autoscaler_config?vw(e.autoscaler_config):void 0,clusterUrl:e.cluster_url,cni:e.cni,commitmentEndsAt:p(e.commitment_ends_at),createdAt:p(e.created_at),description:e.description,dnsWildcard:e.dns_wildcard,featureGates:e.feature_gates,id:e.id,name:e.name,openIdConnectConfig:e.open_id_connect_config?yw(e.open_id_connect_config):void 0,organizationId:e.organization_id,privateNetworkId:e.private_network_id,projectId:e.project_id,region:e.region,status:e.status,tags:e.tags,type:e.type,updatedAt:p(e.updated_at),upgradeAvailable:e.upgrade_available,version:e.version}},Ki=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Node' failed as data isn't a dictionary.");return{clusterId:e.cluster_id,conditions:e.conditions?e.conditions:void 0,createdAt:p(e.created_at),errorMessage:e.error_message,id:e.id,name:e.name,poolId:e.pool_id,providerId:e.provider_id,publicIpV4:e.public_ip_v4,publicIpV6:e.public_ip_v6,region:e.region,status:e.status,updatedAt:p(e.updated_at)}},_w=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ExternalNodeCoreV1Taint' failed as data isn't a dictionary.");return{effect:e.effect,key:e.key,value:e.value}},ww=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ExternalNode' failed as data isn't a dictionary.");return{clusterCa:e.cluster_ca,clusterUrl:e.cluster_url,cniPluginsVersion:e.cni_plugins_version,containerdVersion:e.containerd_version,externalIp:e.external_ip,id:e.id,kubeToken:e.kube_token,kubeletConfig:e.kubelet_config,name:e.name,nodeLabels:e.node_labels,nodeTaints:r(e.node_taints,_w),poolVersion:e.pool_version,runcVersion:e.runc_version}},Xd=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ClusterType' failed as data isn't a dictionary.");return{auditLogsSupported:e.audit_logs_supported,availability:e.availability,commitmentDelay:e.commitment_delay,dedicated:e.dedicated,maxNodes:e.max_nodes,memory:e.memory,name:e.name,resiliency:e.resiliency,sla:e.sla}},Sw=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListClusterAvailableTypesResponse' failed as data isn't a dictionary.");return{clusterTypes:r(e.cluster_types,Xd),totalCount:e.total_count}},bw=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListClusterAvailableVersionsResponse' failed as data isn't a dictionary.");return{versions:r(e.versions,qs)}},Iw=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListClusterTypesResponse' failed as data isn't a dictionary.");return{clusterTypes:r(e.cluster_types,Xd),totalCount:e.total_count}},Tw=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListClustersResponse' failed as data isn't a dictionary.");return{clusters:r(e.clusters,ut),totalCount:e.total_count}},Rw=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListNodesResponse' failed as data isn't a dictionary.");return{nodes:r(e.nodes,Ki),totalCount:e.total_count}},Ew=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListPoolsResponse' failed as data isn't a dictionary.");return{pools:r(e.pools,oi),totalCount:e.total_count}},zw=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListVersionsResponse' failed as data isn't a dictionary.");return{versions:r(e.versions,qs)}},Yd=(e,t)=>({day:e.day,start_hour:e.startHour}),Pw=(e,t)=>({max_surge:e.maxSurge,max_unavailable:e.maxUnavailable}),Aw=(e,t)=>({enable:e.enable,maintenance_window:e.maintenanceWindow!==void 0?Yd(e.maintenanceWindow):void 0}),Cw=(e,t)=>({balance_similar_node_groups:e.balanceSimilarNodeGroups,estimator:e.estimator,expander:e.expander,expendable_pods_priority_cutoff:e.expendablePodsPriorityCutoff,ignore_daemonsets_utilization:e.ignoreDaemonsetsUtilization,max_graceful_termination_sec:e.maxGracefulTerminationSec,scale_down_delay_after_add:e.scaleDownDelayAfterAdd,scale_down_disabled:e.scaleDownDisabled,scale_down_unneeded_time:e.scaleDownUnneededTime,scale_down_utilization_threshold:e.scaleDownUtilizationThreshold}),Nw=(e,t)=>({client_id:e.clientId,groups_claim:e.groupsClaim,groups_prefix:e.groupsPrefix,issuer_url:e.issuerUrl,required_claim:e.requiredClaim,username_claim:e.usernameClaim,username_prefix:e.usernamePrefix}),$w=(e,t)=>({autohealing:e.autohealing,autoscaling:e.autoscaling,container_runtime:e.containerRuntime,kubelet_args:e.kubeletArgs,max_size:e.maxSize,min_size:e.minSize,name:e.name,node_type:e.nodeType,placement_group_id:e.placementGroupId,public_ip_disabled:e.publicIpDisabled,root_volume_size:e.rootVolumeSize,root_volume_type:e.rootVolumeType,size:e.size,tags:e.tags,upgrade_policy:e.upgradePolicy!==void 0?Pw(e.upgradePolicy):void 0,zone:e.zone}),Lw=(e,t)=>({admission_plugins:e.admissionPlugins,apiserver_cert_sans:e.apiserverCertSans,auto_upgrade:e.autoUpgrade!==void 0?Aw(e.autoUpgrade):void 0,autoscaler_config:e.autoscalerConfig!==void 0?Cw(e.autoscalerConfig):void 0,cni:e.cni,description:e.description,feature_gates:e.featureGates,name:e.name||_("k8s"),open_id_connect_config:e.openIdConnectConfig!==void 0?Nw(e.openIdConnectConfig):void 0,pools:e.pools!==void 0?e.pools.map(a=>$w(a)):void 0,private_network_id:e.privateNetworkId,tags:e.tags,type:e.type,version:e.version,...u([{default:t.defaultProjectId,param:"project_id",value:e.projectId},{default:t.defaultOrganizationId,param:"organization_id",value:e.organizationId}])}),Ow=(e,t)=>({max_surge:e.maxSurge,max_unavailable:e.maxUnavailable}),Dw=(e,t)=>({autohealing:e.autohealing,autoscaling:e.autoscaling,container_runtime:e.containerRuntime,kubelet_args:e.kubeletArgs!==void 0?e.kubeletArgs:void 0,max_size:e.maxSize,min_size:e.minSize,name:e.name||_("pool"),node_type:e.nodeType,placement_group_id:e.placementGroupId,public_ip_disabled:e.publicIpDisabled,root_volume_size:e.rootVolumeSize,root_volume_type:e.rootVolumeType,size:e.size,tags:e.tags,upgrade_policy:e.upgradePolicy!==void 0?Ow(e.upgradePolicy):void 0,zone:e.zone??t.defaultZone}),Uw=(e,t)=>({private_network_id:e.privateNetworkId}),kw=(e,t)=>({type:e.type}),xw=(e,t)=>({enable:e.enable,maintenance_window:e.maintenanceWindow!==void 0?Yd(e.maintenanceWindow):void 0}),Vw=(e,t)=>({balance_similar_node_groups:e.balanceSimilarNodeGroups,estimator:e.estimator,expander:e.expander,expendable_pods_priority_cutoff:e.expendablePodsPriorityCutoff,ignore_daemonsets_utilization:e.ignoreDaemonsetsUtilization,max_graceful_termination_sec:e.maxGracefulTerminationSec,scale_down_delay_after_add:e.scaleDownDelayAfterAdd,scale_down_disabled:e.scaleDownDisabled,scale_down_unneeded_time:e.scaleDownUnneededTime,scale_down_utilization_threshold:e.scaleDownUtilizationThreshold}),jw=(e,t)=>({client_id:e.clientId,groups_claim:e.groupsClaim,groups_prefix:e.groupsPrefix,issuer_url:e.issuerUrl,required_claim:e.requiredClaim,username_claim:e.usernameClaim,username_prefix:e.usernamePrefix}),Gw=(e,t)=>({admission_plugins:e.admissionPlugins,apiserver_cert_sans:e.apiserverCertSans,auto_upgrade:e.autoUpgrade!==void 0?xw(e.autoUpgrade):void 0,autoscaler_config:e.autoscalerConfig!==void 0?Vw(e.autoscalerConfig):void 0,description:e.description,feature_gates:e.featureGates,name:e.name,open_id_connect_config:e.openIdConnectConfig!==void 0?jw(e.openIdConnectConfig):void 0,tags:e.tags}),Bw=(e,t)=>({max_surge:e.maxSurge,max_unavailable:e.maxUnavailable}),Mw=(e,t)=>({autohealing:e.autohealing,autoscaling:e.autoscaling,kubelet_args:e.kubeletArgs,max_size:e.maxSize,min_size:e.minSize,size:e.size,tags:e.tags,upgrade_policy:e.upgradePolicy!==void 0?Bw(e.upgradePolicy):void 0}),Fw=(e,t)=>({upgrade_pools:e.upgradePools,version:e.version}),Zw=(e,t)=>({version:e.version}),Se={"Content-Type":"application/json; charset=utf-8"},Jw=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];pageOfListClusters=(t={})=>this.client.fetch({method:"GET",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["private_network_id",t.privateNetworkId],["project_id",t.projectId],["status",t.status],["type",t.type])},Tw);listClusters=(t={})=>c("clusters",this.pageOfListClusters,t);createCluster=t=>this.client.fetch({body:JSON.stringify(Lw(t,this.client.settings)),headers:Se,method:"POST",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters`},ut);getCluster=t=>this.client.fetch({method:"GET",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters/${i("clusterId",t.clusterId)}`},ut);waitForCluster=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Kd.includes(s.status))),this.getCluster,t,a);updateCluster=t=>this.client.fetch({body:JSON.stringify(Gw(t,this.client.settings)),headers:Se,method:"PATCH",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters/${i("clusterId",t.clusterId)}`},ut);deleteCluster=t=>this.client.fetch({method:"DELETE",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters/${i("clusterId",t.clusterId)}`,urlParams:d(["with_additional_resources",t.withAdditionalResources])},ut);upgradeCluster=t=>this.client.fetch({body:JSON.stringify(Fw(t,this.client.settings)),headers:Se,method:"POST",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters/${i("clusterId",t.clusterId)}/upgrade`},ut);setClusterType=t=>this.client.fetch({body:JSON.stringify(kw(t,this.client.settings)),headers:Se,method:"POST",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters/${i("clusterId",t.clusterId)}/set-type`},ut);listClusterAvailableVersions=t=>this.client.fetch({method:"GET",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters/${i("clusterId",t.clusterId)}/available-versions`},bw);listClusterAvailableTypes=t=>this.client.fetch({method:"GET",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters/${i("clusterId",t.clusterId)}/available-types`},Sw);_getClusterKubeConfig=t=>this.client.fetch({method:"GET",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters/${i("clusterId",t.clusterId)}/kubeconfig`,urlParams:d(["dl",1],["redacted",t.redacted]),responseType:"blob"});resetClusterAdminToken=t=>this.client.fetch({body:"{}",headers:Se,method:"POST",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters/${i("clusterId",t.clusterId)}/reset-admin-token`});migrateToPrivateNetworkCluster=t=>this.client.fetch({body:JSON.stringify(Uw(t,this.client.settings)),headers:Se,method:"POST",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters/${i("clusterId",t.clusterId)}/migrate-to-private-network`},ut);pageOfListPools=t=>this.client.fetch({method:"GET",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters/${i("clusterId",t.clusterId)}/pools`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["status",t.status])},Ew);listPools=t=>c("pools",this.pageOfListPools,t);createPool=t=>this.client.fetch({body:JSON.stringify(Dw(t,this.client.settings)),headers:Se,method:"POST",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters/${i("clusterId",t.clusterId)}/pools`},oi);getPool=t=>this.client.fetch({method:"GET",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/pools/${i("poolId",t.poolId)}`},oi);waitForPool=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Qd.includes(s.status))),this.getPool,t,a);upgradePool=t=>this.client.fetch({body:JSON.stringify(Zw(t,this.client.settings)),headers:Se,method:"POST",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/pools/${i("poolId",t.poolId)}/upgrade`},oi);updatePool=t=>this.client.fetch({body:JSON.stringify(Mw(t,this.client.settings)),headers:Se,method:"PATCH",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/pools/${i("poolId",t.poolId)}`},oi);deletePool=t=>this.client.fetch({method:"DELETE",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/pools/${i("poolId",t.poolId)}`},oi);createExternalNode=t=>this.client.fetch({body:"{}",headers:Se,method:"POST",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/pools/${i("poolId",t.poolId)}/external-nodes`},ww);pageOfListNodes=t=>this.client.fetch({method:"GET",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/clusters/${i("clusterId",t.clusterId)}/nodes`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["pool_id",t.poolId],["status",t.status])},Rw);listNodes=t=>c("nodes",this.pageOfListNodes,t);getNode=t=>this.client.fetch({method:"GET",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/nodes/${i("nodeId",t.nodeId)}`},Ki);waitForNode=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Wd.includes(s.status))),this.getNode,t,a);replaceNode=t=>this.client.fetch({body:"{}",headers:Se,method:"POST",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/nodes/${i("nodeId",t.nodeId)}/replace`},Ki);rebootNode=t=>this.client.fetch({body:"{}",headers:Se,method:"POST",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/nodes/${i("nodeId",t.nodeId)}/reboot`},Ki);deleteNode=t=>this.client.fetch({method:"DELETE",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/nodes/${i("nodeId",t.nodeId)}`,urlParams:d(["replace",t.replace],["skip_drain",t.skipDrain])},Ki);listVersions=(t={})=>this.client.fetch({method:"GET",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/versions`},zw);getVersion=t=>this.client.fetch({method:"GET",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/versions/${i("versionName",t.versionName)}`},qs);pageOfListClusterTypes=(t={})=>this.client.fetch({method:"GET",path:`/k8s/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/cluster-types`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},Iw);listClusterTypes=(t={})=>c("clusterTypes",this.pageOfListClusterTypes,t)},Ns=class extends Jw{getClusterKubeConfig=t=>this._getClusterKubeConfig(t)},Hw={name:{minLength:1}},Kw={scaleDownUtilizationThreshold:{greaterThan:0,lessThan:1}},Ww={clientId:{minLength:1},groupsPrefix:{minLength:1},usernameClaim:{minLength:1},usernamePrefix:{minLength:1}},Qw={name:{minLength:1}},Xw={name:{minLength:1}},Yw={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},qw={name:{minLength:1},page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},eS={name:{minLength:1},page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},tS={name:{minLength:1},page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},iS={startHour:{lessThanOrEqual:23}},aS={name:{minLength:1}},nS={scaleDownUtilizationThreshold:{greaterThan:0,lessThan:1}},sS=Object.freeze({__proto__:null,CreateClusterRequest:Hw,CreateClusterRequestAutoscalerConfig:Kw,CreateClusterRequestOpenIDConnectConfig:Ww,CreateClusterRequestPoolConfig:Qw,CreatePoolRequest:Xw,ListClusterTypesRequest:Yw,ListClustersRequest:qw,ListNodesRequest:eS,ListPoolsRequest:tS,MaintenanceWindow:iS,UpdateClusterRequest:aS,UpdateClusterRequestAutoscalerConfig:nS}),oS=Object.freeze({__proto__:null,API:Ns,CLUSTER_TRANSIENT_STATUSES:Kd,NODE_TRANSIENT_STATUSES:Wd,POOL_TRANSIENT_STATUSES:Qd,ValidationRules:sS}),rS=Object.freeze({__proto__:null,v1:oS}),eo=["pending"],to=["pending","migrating"],ya=["pending","migrating","to_create","creating","to_delete","deleting"],io=["pending"],yt=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Ip' failed as data isn't a dictionary.");return{id:e.id,ipAddress:e.ip_address,lbId:e.lb_id,organizationId:e.organization_id,projectId:e.project_id,region:e.region,reverse:e.reverse,zone:e.zone}},pS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SubscriberEmailConfig' failed as data isn't a dictionary.");return{email:e.email}},dS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SubscriberWebhookConfig' failed as data isn't a dictionary.");return{uri:e.uri}},_t=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Subscriber' failed as data isn't a dictionary.");return{emailConfig:e.email_config?pS(e.email_config):void 0,id:e.id,name:e.name,webhookConfig:e.webhook_config?dS(e.webhook_config):void 0}},lS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'HealthCheckHttpConfig' failed as data isn't a dictionary.");return{code:e.code,hostHeader:e.host_header,method:e.method,uri:e.uri}},cS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'HealthCheckHttpsConfig' failed as data isn't a dictionary.");return{code:e.code,hostHeader:e.host_header,method:e.method,sni:e.sni,uri:e.uri}},mS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'HealthCheckLdapConfig' failed as data isn't a dictionary.");return{}},hS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'HealthCheckMysqlConfig' failed as data isn't a dictionary.");return{user:e.user}},gS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'HealthCheckPgsqlConfig' failed as data isn't a dictionary.");return{user:e.user}},uS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'HealthCheckRedisConfig' failed as data isn't a dictionary.");return{}},fS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'HealthCheckTcpConfig' failed as data isn't a dictionary.");return{}},ao=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'HealthCheck' failed as data isn't a dictionary.");return{checkDelay:e.check_delay,checkMaxRetries:e.check_max_retries,checkSendProxy:e.check_send_proxy,checkTimeout:e.check_timeout,httpConfig:e.http_config?lS(e.http_config):void 0,httpsConfig:e.https_config?cS(e.https_config):void 0,ldapConfig:e.ldap_config?mS(e.ldap_config):void 0,mysqlConfig:e.mysql_config?hS(e.mysql_config):void 0,pgsqlConfig:e.pgsql_config?gS(e.pgsql_config):void 0,port:e.port,redisConfig:e.redis_config?uS(e.redis_config):void 0,tcpConfig:e.tcp_config?fS(e.tcp_config):void 0,transientCheckDelay:e.transient_check_delay}},vS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Instance' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,ipAddress:e.ip_address,region:e.region,status:e.status,updatedAt:p(e.updated_at),zone:e.zone}},ie=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Lb' failed as data isn't a dictionary.");return{backendCount:e.backend_count,createdAt:p(e.created_at),description:e.description,frontendCount:e.frontend_count,id:e.id,instances:r(e.instances,vS),ip:r(e.ip,yt),name:e.name,organizationId:e.organization_id,privateNetworkCount:e.private_network_count,projectId:e.project_id,region:e.region,routeCount:e.route_count,sslCompatibilityLevel:e.ssl_compatibility_level,status:e.status,subscriber:e.subscriber?_t(e.subscriber):void 0,tags:e.tags,type:e.type,updatedAt:p(e.updated_at),zone:e.zone}},re=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Backend' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),failoverHost:e.failover_host,forwardPort:e.forward_port,forwardPortAlgorithm:e.forward_port_algorithm,forwardProtocol:e.forward_protocol,healthCheck:e.health_check?ao(e.health_check):void 0,id:e.id,ignoreSslServerVerify:e.ignore_ssl_server_verify,lb:e.lb?ie(e.lb):void 0,maxConnections:e.max_connections,maxRetries:e.max_retries,name:e.name,onMarkedDownAction:e.on_marked_down_action,pool:e.pool,proxyProtocol:e.proxy_protocol,redispatchAttemptCount:e.redispatch_attempt_count,sendProxyV2:e.send_proxy_v2,sslBridging:e.ssl_bridging,stickySessions:e.sticky_sessions,stickySessionsCookieName:e.sticky_sessions_cookie_name,timeoutConnect:e.timeout_connect,timeoutQueue:e.timeout_queue,timeoutServer:e.timeout_server,timeoutTunnel:e.timeout_tunnel,updatedAt:p(e.updated_at)}},wt=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Certificate' failed as data isn't a dictionary.");return{commonName:e.common_name,createdAt:p(e.created_at),fingerprint:e.fingerprint,id:e.id,lb:e.lb?ie(e.lb):void 0,name:e.name,notValidAfter:p(e.not_valid_after),notValidBefore:p(e.not_valid_before),status:e.status,statusDetails:e.status_details,subjectAlternativeName:e.subject_alternative_name,type:e.type,updatedAt:p(e.updated_at)}},St=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Frontend' failed as data isn't a dictionary.");return{backend:e.backend?re(e.backend):void 0,certificate:e.certificate?wt(e.certificate):void 0,certificateIds:e.certificate_ids,createdAt:p(e.created_at),enableHttp3:e.enable_http3,id:e.id,inboundPort:e.inbound_port,lb:e.lb?ie(e.lb):void 0,name:e.name,timeoutClient:e.timeout_client,updatedAt:p(e.updated_at)}},yS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AclActionRedirect' failed as data isn't a dictionary.");return{code:e.code,target:e.target,type:e.type}},_S=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AclAction' failed as data isn't a dictionary.");return{redirect:e.redirect?yS(e.redirect):void 0,type:e.type}},wS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AclMatch' failed as data isn't a dictionary.");return{httpFilter:e.http_filter,httpFilterOption:e.http_filter_option,httpFilterValue:e.http_filter_value,invert:e.invert,ipSubnet:e.ip_subnet}},bt=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Acl' failed as data isn't a dictionary.");return{action:e.action?_S(e.action):void 0,createdAt:p(e.created_at),description:e.description,frontend:e.frontend?St(e.frontend):void 0,id:e.id,index:e.index,match:e.match?wS(e.match):void 0,name:e.name,updatedAt:p(e.updated_at)}},SS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PrivateNetworkDHCPConfig' failed as data isn't a dictionary.");return{ipId:e.ip_id}},bS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PrivateNetworkIpamConfig' failed as data isn't a dictionary.");return{}},IS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PrivateNetworkStaticConfig' failed as data isn't a dictionary.");return{ipAddress:e.ip_address?e.ip_address:void 0}},no=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PrivateNetwork' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),dhcpConfig:e.dhcp_config?SS(e.dhcp_config):void 0,ipamConfig:e.ipam_config?bS(e.ipam_config):void 0,ipamIds:e.ipam_ids,lb:e.lb?ie(e.lb):void 0,privateNetworkId:e.private_network_id,staticConfig:e.static_config?IS(e.static_config):void 0,status:e.status,updatedAt:p(e.updated_at)}},TS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RouteMatch' failed as data isn't a dictionary.");return{hostHeader:e.host_header,sni:e.sni}},Bt=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Route' failed as data isn't a dictionary.");return{backendId:e.backend_id,createdAt:p(e.created_at),frontendId:e.frontend_id,id:e.id,match:e.match?TS(e.match):void 0,updatedAt:p(e.updated_at)}},qd=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'BackendServerStats' failed as data isn't a dictionary.");return{backendId:e.backend_id,instanceId:e.instance_id,ip:e.ip,lastHealthCheckStatus:e.last_health_check_status,serverState:e.server_state,serverStateChangedAt:p(e.server_state_changed_at)}},e1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'LbStats' failed as data isn't a dictionary.");return{backendServersStats:r(e.backend_servers_stats,qd)}},t1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListAclResponse' failed as data isn't a dictionary.");return{acls:r(e.acls,bt),totalCount:e.total_count}},i1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListBackendStatsResponse' failed as data isn't a dictionary.");return{backendServersStats:r(e.backend_servers_stats,qd),totalCount:e.total_count}},a1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListBackendsResponse' failed as data isn't a dictionary.");return{backends:r(e.backends,re),totalCount:e.total_count}},n1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListCertificatesResponse' failed as data isn't a dictionary.");return{certificates:r(e.certificates,wt),totalCount:e.total_count}},s1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListFrontendsResponse' failed as data isn't a dictionary.");return{frontends:r(e.frontends,St),totalCount:e.total_count}},o1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListIpsResponse' failed as data isn't a dictionary.");return{ips:r(e.ips,yt),totalCount:e.total_count}},r1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListLbPrivateNetworksResponse' failed as data isn't a dictionary.");return{privateNetwork:r(e.private_network,no),totalCount:e.total_count}},RS=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'LbType' failed as data isn't a dictionary.");return{description:e.description,name:e.name,region:e.region,stockStatus:e.stock_status,zone:e.zone}},p1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListLbTypesResponse' failed as data isn't a dictionary.");return{lbTypes:r(e.lb_types,RS),totalCount:e.total_count}},d1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListLbsResponse' failed as data isn't a dictionary.");return{lbs:r(e.lbs,ie),totalCount:e.total_count}},l1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListRoutesResponse' failed as data isn't a dictionary.");return{routes:r(e.routes,Bt),totalCount:e.total_count}},c1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSubscriberResponse' failed as data isn't a dictionary.");return{subscribers:r(e.subscribers,_t),totalCount:e.total_count}},ES=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetAclsResponse' failed as data isn't a dictionary.");return{acls:r(e.acls,bt),totalCount:e.total_count}},zS=(e,t)=>({server_ip:e.serverIp}),m1=(e,t)=>({ip_id:e.ipId}),h1=(e,t)=>({}),g1=(e,t)=>({ip_address:e.ipAddress}),PS=(e,t)=>({...u([{param:"static_config",value:e.staticConfig!==void 0?g1(e.staticConfig):void 0},{param:"dhcp_config",value:e.dhcpConfig!==void 0?m1(e.dhcpConfig):void 0},{param:"ipam_config",value:e.ipamConfig!==void 0?h1(e.ipamConfig):void 0}])}),AS=(e,t)=>({code:e.code,target:e.target,type:e.type}),_a=(e,t)=>({redirect:e.redirect!==void 0?AS(e.redirect):void 0,type:e.type}),wa=(e,t)=>({http_filter:e.httpFilter,http_filter_option:e.httpFilterOption,http_filter_value:e.httpFilterValue,invert:e.invert,ip_subnet:e.ipSubnet}),CS=(e,t)=>({action:_a(e.action),description:e.description,index:e.index,match:e.match!==void 0?wa(e.match):void 0,name:e.name||_("acl")}),so=(e,t)=>({code:e.code,host_header:e.hostHeader,method:e.method,uri:e.uri}),oo=(e,t)=>({code:e.code,host_header:e.hostHeader,method:e.method,sni:e.sni,uri:e.uri}),ro=(e,t)=>({}),po=(e,t)=>({user:e.user}),lo=(e,t)=>({user:e.user}),co=(e,t)=>({}),mo=(e,t)=>({}),u1=(e,t)=>({check_delay:e.checkDelay,check_max_retries:e.checkMaxRetries,check_send_proxy:e.checkSendProxy,check_timeout:e.checkTimeout,port:e.port,transient_check_delay:e.transientCheckDelay,...u([{param:"tcp_config",value:e.tcpConfig!==void 0?mo(e.tcpConfig):void 0},{param:"mysql_config",value:e.mysqlConfig!==void 0?po(e.mysqlConfig):void 0},{param:"pgsql_config",value:e.pgsqlConfig!==void 0?lo(e.pgsqlConfig):void 0},{param:"ldap_config",value:e.ldapConfig!==void 0?ro(e.ldapConfig):void 0},{param:"redis_config",value:e.redisConfig!==void 0?co(e.redisConfig):void 0},{param:"http_config",value:e.httpConfig!==void 0?so(e.httpConfig):void 0},{param:"https_config",value:e.httpsConfig!==void 0?oo(e.httpsConfig):void 0}])}),NS=(e,t)=>({failover_host:e.failoverHost,forward_port:e.forwardPort,forward_port_algorithm:e.forwardPortAlgorithm,forward_protocol:e.forwardProtocol,health_check:u1(e.healthCheck),ignore_ssl_server_verify:e.ignoreSslServerVerify,max_connections:e.maxConnections,max_retries:e.maxRetries,name:e.name||_("lbb"),on_marked_down_action:e.onMarkedDownAction,proxy_protocol:e.proxyProtocol,redispatch_attempt_count:e.redispatchAttemptCount,send_proxy_v2:e.sendProxyV2,server_ip:e.serverIp,ssl_bridging:e.sslBridging,sticky_sessions:e.stickySessions,sticky_sessions_cookie_name:e.stickySessionsCookieName,timeout_connect:e.timeoutConnect,timeout_queue:e.timeoutQueue,timeout_server:e.timeoutServer,timeout_tunnel:e.timeoutTunnel}),f1=(e,t)=>({certificate_chain:e.certificateChain}),v1=(e,t)=>({common_name:e.commonName,subject_alternative_name:e.subjectAlternativeName}),$S=(e,t)=>({name:e.name||_("certificate"),...u([{param:"letsencrypt",value:e.letsencrypt!==void 0?v1(e.letsencrypt):void 0},{param:"custom_certificate",value:e.customCertificate!==void 0?f1(e.customCertificate):void 0}])}),LS=(e,t)=>({backend_id:e.backendId,certificate_id:e.certificateId,certificate_ids:e.certificateIds,enable_http3:e.enableHttp3,inbound_port:e.inboundPort,name:e.name||_("lbf"),timeout_client:e.timeoutClient}),OS=(e,t)=>({is_ipv6:e.isIpv6,reverse:e.reverse,...u([{default:t.defaultProjectId,param:"project_id",value:e.projectId},{default:t.defaultOrganizationId,param:"organization_id",value:e.organizationId}])}),DS=(e,t)=>({assign_flexible_ip:e.assignFlexibleIp,assign_flexible_ipv6:e.assignFlexibleIpv6,description:e.description,ip_id:e.ipId,ip_ids:e.ipIds,name:e.name||_("lb"),ssl_compatibility_level:e.sslCompatibilityLevel,tags:e.tags,type:e.type,...u([{default:t.defaultProjectId,param:"project_id",value:e.projectId},{default:t.defaultOrganizationId,param:"organization_id",value:e.organizationId}])}),Pn=(e,t)=>({...u([{param:"sni",value:e.sni},{param:"host_header",value:e.hostHeader}])}),US=(e,t)=>({backend_id:e.backendId,frontend_id:e.frontendId,match:e.match!==void 0?Pn(e.match):void 0}),An=(e,t)=>({email:e.email}),Cn=(e,t)=>({uri:e.uri}),kS=(e,t)=>({name:e.name,...u([{default:t.defaultProjectId,param:"project_id",value:e.projectId},{default:t.defaultOrganizationId,param:"organization_id",value:e.organizationId}]),...u([{param:"email_config",value:e.emailConfig!==void 0?An(e.emailConfig):void 0},{param:"webhook_config",value:e.webhookConfig!==void 0?Cn(e.webhookConfig):void 0}])}),xS=(e,t)=>({type:e.type}),VS=(e,t)=>({server_ip:e.serverIp}),jS=(e,t)=>({server_ip:e.serverIp}),GS=(e,t)=>({subscriber_id:e.subscriberId}),BS=(e,t)=>({action:_a(e.action),description:e.description,index:e.index,match:e.match!==void 0?wa(e.match):void 0,name:e.name}),MS=(e,t)=>({failover_host:e.failoverHost,forward_port:e.forwardPort,forward_port_algorithm:e.forwardPortAlgorithm,forward_protocol:e.forwardProtocol,ignore_ssl_server_verify:e.ignoreSslServerVerify,max_connections:e.maxConnections,max_retries:e.maxRetries,name:e.name,on_marked_down_action:e.onMarkedDownAction,proxy_protocol:e.proxyProtocol,redispatch_attempt_count:e.redispatchAttemptCount,send_proxy_v2:e.sendProxyV2,ssl_bridging:e.sslBridging,sticky_sessions:e.stickySessions,sticky_sessions_cookie_name:e.stickySessionsCookieName,timeout_connect:e.timeoutConnect,timeout_queue:e.timeoutQueue,timeout_server:e.timeoutServer,timeout_tunnel:e.timeoutTunnel}),FS=(e,t)=>({name:e.name}),ZS=(e,t)=>({backend_id:e.backendId,certificate_id:e.certificateId,certificate_ids:e.certificateIds,enable_http3:e.enableHttp3,inbound_port:e.inboundPort,name:e.name,timeout_client:e.timeoutClient}),JS=(e,t)=>({check_delay:e.checkDelay,check_max_retries:e.checkMaxRetries,check_send_proxy:e.checkSendProxy,check_timeout:e.checkTimeout,port:e.port,transient_check_delay:e.transientCheckDelay,...u([{param:"tcp_config",value:e.tcpConfig!==void 0?mo(e.tcpConfig):void 0},{param:"mysql_config",value:e.mysqlConfig!==void 0?po(e.mysqlConfig):void 0},{param:"pgsql_config",value:e.pgsqlConfig!==void 0?lo(e.pgsqlConfig):void 0},{param:"ldap_config",value:e.ldapConfig!==void 0?ro(e.ldapConfig):void 0},{param:"redis_config",value:e.redisConfig!==void 0?co(e.redisConfig):void 0},{param:"http_config",value:e.httpConfig!==void 0?so(e.httpConfig):void 0},{param:"https_config",value:e.httpsConfig!==void 0?oo(e.httpsConfig):void 0}])}),HS=(e,t)=>({lb_id:e.lbId,reverse:e.reverse}),KS=(e,t)=>({description:e.description,name:e.name,ssl_compatibility_level:e.sslCompatibilityLevel,tags:e.tags}),WS=(e,t)=>({backend_id:e.backendId,match:e.match!==void 0?Pn(e.match):void 0}),QS=(e,t)=>({name:e.name,...u([{param:"email_config",value:e.emailConfig!==void 0?An(e.emailConfig):void 0},{param:"webhook_config",value:e.webhookConfig!==void 0?Cn(e.webhookConfig):void 0}])}),XS=(e,t)=>({server_ip:e.serverIp}),YS=(e,t)=>({...u([{param:"static_config",value:e.staticConfig!==void 0?g1(e.staticConfig):void 0},{param:"dhcp_config",value:e.dhcpConfig!==void 0?m1(e.dhcpConfig):void 0},{param:"ipam_config",value:e.ipamConfig!==void 0?h1(e.ipamConfig):void 0}])}),qS=(e,t)=>({action:_a(e.action),description:e.description,index:e.index,match:e.match!==void 0?wa(e.match):void 0,name:e.name||_("acl")}),eb=(e,t)=>({failover_host:e.failoverHost,forward_port:e.forwardPort,forward_port_algorithm:e.forwardPortAlgorithm,forward_protocol:e.forwardProtocol,health_check:u1(e.healthCheck),ignore_ssl_server_verify:e.ignoreSslServerVerify,max_connections:e.maxConnections,max_retries:e.maxRetries,name:e.name||_("lbb"),on_marked_down_action:e.onMarkedDownAction,proxy_protocol:e.proxyProtocol,redispatch_attempt_count:e.redispatchAttemptCount,send_proxy_v2:e.sendProxyV2,server_ip:e.serverIp,ssl_bridging:e.sslBridging,sticky_sessions:e.stickySessions,sticky_sessions_cookie_name:e.stickySessionsCookieName,timeout_connect:e.timeoutConnect,timeout_queue:e.timeoutQueue,timeout_server:e.timeoutServer,timeout_tunnel:e.timeoutTunnel}),tb=(e,t)=>({name:e.name||_("certificate"),...u([{param:"letsencrypt",value:e.letsencrypt!==void 0?v1(e.letsencrypt):void 0},{param:"custom_certificate",value:e.customCertificate!==void 0?f1(e.customCertificate):void 0}])}),ib=(e,t)=>({backend_id:e.backendId,certificate_id:e.certificateId,certificate_ids:e.certificateIds,enable_http3:e.enableHttp3,inbound_port:e.inboundPort,name:e.name||_("lbf"),timeout_client:e.timeoutClient}),ab=(e,t)=>({is_ipv6:e.isIpv6,reverse:e.reverse,...u([{default:t.defaultProjectId,param:"project_id",value:e.projectId},{default:t.defaultOrganizationId,param:"organization_id",value:e.organizationId}])}),nb=(e,t)=>({assign_flexible_ip:e.assignFlexibleIp,assign_flexible_ipv6:e.assignFlexibleIpv6,description:e.description,ip_id:e.ipId,ip_ids:e.ipIds,name:e.name||_("lb"),ssl_compatibility_level:e.sslCompatibilityLevel,tags:e.tags,type:e.type,...u([{default:t.defaultProjectId,param:"project_id",value:e.projectId},{default:t.defaultOrganizationId,param:"organization_id",value:e.organizationId}])}),sb=(e,t)=>({backend_id:e.backendId,frontend_id:e.frontendId,match:e.match!==void 0?Pn(e.match):void 0}),ob=(e,t)=>({name:e.name,...u([{default:t.defaultProjectId,param:"project_id",value:e.projectId},{default:t.defaultOrganizationId,param:"organization_id",value:e.organizationId}]),...u([{param:"email_config",value:e.emailConfig!==void 0?An(e.emailConfig):void 0},{param:"webhook_config",value:e.webhookConfig!==void 0?Cn(e.webhookConfig):void 0}])}),rb=(e,t)=>({type:e.type}),pb=(e,t)=>({server_ip:e.serverIp}),db=(e,t)=>({action:_a(e.action),description:e.description,index:e.index,match:e.match!==void 0?wa(e.match):void 0,name:e.name}),lb=(e,t)=>({acls:e.acls.map(a=>db(a))}),cb=(e,t)=>({server_ip:e.serverIp}),mb=(e,t)=>({subscriber_id:e.subscriberId}),hb=(e,t)=>({action:_a(e.action),description:e.description,index:e.index,match:e.match!==void 0?wa(e.match):void 0,name:e.name}),gb=(e,t)=>({failover_host:e.failoverHost,forward_port:e.forwardPort,forward_port_algorithm:e.forwardPortAlgorithm,forward_protocol:e.forwardProtocol,ignore_ssl_server_verify:e.ignoreSslServerVerify,max_connections:e.maxConnections,max_retries:e.maxRetries,name:e.name,on_marked_down_action:e.onMarkedDownAction,proxy_protocol:e.proxyProtocol,redispatch_attempt_count:e.redispatchAttemptCount,send_proxy_v2:e.sendProxyV2,ssl_bridging:e.sslBridging,sticky_sessions:e.stickySessions,sticky_sessions_cookie_name:e.stickySessionsCookieName,timeout_connect:e.timeoutConnect,timeout_queue:e.timeoutQueue,timeout_server:e.timeoutServer,timeout_tunnel:e.timeoutTunnel}),ub=(e,t)=>({name:e.name}),fb=(e,t)=>({backend_id:e.backendId,certificate_id:e.certificateId,certificate_ids:e.certificateIds,enable_http3:e.enableHttp3,inbound_port:e.inboundPort,name:e.name,timeout_client:e.timeoutClient}),vb=(e,t)=>({check_delay:e.checkDelay,check_max_retries:e.checkMaxRetries,check_send_proxy:e.checkSendProxy,check_timeout:e.checkTimeout,port:e.port,transient_check_delay:e.transientCheckDelay,...u([{param:"tcp_config",value:e.tcpConfig!==void 0?mo(e.tcpConfig):void 0},{param:"mysql_config",value:e.mysqlConfig!==void 0?po(e.mysqlConfig):void 0},{param:"pgsql_config",value:e.pgsqlConfig!==void 0?lo(e.pgsqlConfig):void 0},{param:"ldap_config",value:e.ldapConfig!==void 0?ro(e.ldapConfig):void 0},{param:"redis_config",value:e.redisConfig!==void 0?co(e.redisConfig):void 0},{param:"http_config",value:e.httpConfig!==void 0?so(e.httpConfig):void 0},{param:"https_config",value:e.httpsConfig!==void 0?oo(e.httpsConfig):void 0}])}),yb=(e,t)=>({lb_id:e.lbId,reverse:e.reverse}),_b=(e,t)=>({description:e.description,name:e.name,ssl_compatibility_level:e.sslCompatibilityLevel,tags:e.tags}),wb=(e,t)=>({backend_id:e.backendId,match:e.match!==void 0?Pn(e.match):void 0}),Sb=(e,t)=>({name:e.name,...u([{param:"email_config",value:e.emailConfig!==void 0?An(e.emailConfig):void 0},{param:"webhook_config",value:e.webhookConfig!==void 0?Cn(e.webhookConfig):void 0}])}),S={"Content-Type":"application/json; charset=utf-8"},$s=class extends w{static LOCALITIES=["fr-par-1","fr-par-2","nl-ams-1","nl-ams-2","nl-ams-3","pl-waw-1","pl-waw-2","pl-waw-3"];pageOfListLbs=(t={})=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["tags",t.tags])},d1);listLbs=(t={})=>c("lbs",this.pageOfListLbs,t);createLb=t=>this.client.fetch({body:JSON.stringify(nb(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs`},ie);getLb=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}`},ie);waitForLb=(t,a)=>v(a?.stop??(s=>Promise.resolve(!ya.includes(s.status))),this.getLb,t,a);updateLb=t=>this.client.fetch({body:JSON.stringify(_b(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}`},ie);deleteLb=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}`,urlParams:d(["release_ip",t.releaseIp])});migrateLb=t=>this.client.fetch({body:JSON.stringify(rb(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}/migrate`},ie);pageOfListIPs=(t={})=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips`,urlParams:d(["ip_address",t.ipAddress],["ip_type",t.ipType],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},o1);listIPs=(t={})=>c("ips",this.pageOfListIPs,t);createIp=t=>this.client.fetch({body:JSON.stringify(ab(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips`},yt);getIp=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips/${i("ipId",t.ipId)}`},yt);releaseIp=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips/${i("ipId",t.ipId)}`});updateIp=t=>this.client.fetch({body:JSON.stringify(yb(t,this.client.settings)),headers:S,method:"PATCH",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips/${i("ipId",t.ipId)}`},yt);pageOfListBackends=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}/backends`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},a1);listBackends=t=>c("backends",this.pageOfListBackends,t);createBackend=t=>this.client.fetch({body:JSON.stringify(eb(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}/backends`},re);getBackend=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/backends/${i("backendId",t.backendId)}`},re);updateBackend=t=>this.client.fetch({body:JSON.stringify(gb(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/backends/${i("backendId",t.backendId)}`},re);deleteBackend=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/backends/${i("backendId",t.backendId)}`});addBackendServers=t=>this.client.fetch({body:JSON.stringify(XS(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/backends/${i("backendId",t.backendId)}/servers`},re);removeBackendServers=t=>this.client.fetch({body:JSON.stringify(pb(t,this.client.settings)),headers:S,method:"DELETE",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/backends/${i("backendId",t.backendId)}/servers`},re);setBackendServers=t=>this.client.fetch({body:JSON.stringify(cb(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/backends/${i("backendId",t.backendId)}/servers`},re);updateHealthCheck=t=>this.client.fetch({body:JSON.stringify(vb(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/backends/${i("backendId",t.backendId)}/healthcheck`},ao);pageOfListFrontends=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}/frontends`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},s1);listFrontends=t=>c("frontends",this.pageOfListFrontends,t);createFrontend=t=>this.client.fetch({body:JSON.stringify(ib(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}/frontends`},St);getFrontend=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/frontends/${i("frontendId",t.frontendId)}`},St);updateFrontend=t=>this.client.fetch({body:JSON.stringify(fb(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/frontends/${i("frontendId",t.frontendId)}`},St);deleteFrontend=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/frontends/${i("frontendId",t.frontendId)}`});pageOfListRoutes=(t={})=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/routes`,urlParams:d(["frontend_id",t.frontendId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},l1);listRoutes=(t={})=>c("routes",this.pageOfListRoutes,t);createRoute=t=>this.client.fetch({body:JSON.stringify(sb(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/routes`},Bt);getRoute=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/routes/${i("routeId",t.routeId)}`},Bt);updateRoute=t=>this.client.fetch({body:JSON.stringify(wb(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/routes/${i("routeId",t.routeId)}`},Bt);deleteRoute=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/routes/${i("routeId",t.routeId)}`});getLbStats=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}/stats`,urlParams:d(["backend_id",t.backendId])},e1);pageOfListBackendStats=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}/backend-stats`,urlParams:d(["backend_id",t.backendId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},i1);listBackendStats=t=>c("backendServersStats",this.pageOfListBackendStats,t);pageOfListAcls=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/frontends/${i("frontendId",t.frontendId)}/acls`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},t1);listAcls=t=>c("acls",this.pageOfListAcls,t);createAcl=t=>this.client.fetch({body:JSON.stringify(qS(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/frontends/${i("frontendId",t.frontendId)}/acls`},bt);getAcl=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/acls/${i("aclId",t.aclId)}`},bt);updateAcl=t=>this.client.fetch({body:JSON.stringify(hb(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/acls/${i("aclId",t.aclId)}`},bt);deleteAcl=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/acls/${i("aclId",t.aclId)}`});setAcls=t=>this.client.fetch({body:JSON.stringify(lb(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/frontends/${i("frontendId",t.frontendId)}/acls`},ES);createCertificate=t=>this.client.fetch({body:JSON.stringify(tb(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}/certificates`},wt);pageOfListCertificates=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}/certificates`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},n1);listCertificates=t=>c("certificates",this.pageOfListCertificates,t);getCertificate=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/certificates/${i("certificateId",t.certificateId)}`},wt);waitForCertificate=(t,a)=>v(a?.stop??(s=>Promise.resolve(!eo.includes(s.status))),this.getCertificate,t,a);updateCertificate=t=>this.client.fetch({body:JSON.stringify(ub(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/certificates/${i("certificateId",t.certificateId)}`},wt);deleteCertificate=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/certificates/${i("certificateId",t.certificateId)}`});pageOfListLbTypes=(t={})=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lb-types`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},p1);listLbTypes=(t={})=>c("lbTypes",this.pageOfListLbTypes,t);createSubscriber=t=>this.client.fetch({body:JSON.stringify(ob(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/subscribers`},_t);getSubscriber=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/subscribers/${i("subscriberId",t.subscriberId)}`},_t);pageOfListSubscriber=(t={})=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/subscribers`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},c1);listSubscriber=(t={})=>c("subscribers",this.pageOfListSubscriber,t);updateSubscriber=t=>this.client.fetch({body:JSON.stringify(Sb(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/subscribers/${i("subscriberId",t.subscriberId)}`},_t);deleteSubscriber=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lb/subscription/${i("subscriberId",t.subscriberId)}`});subscribeToLb=t=>this.client.fetch({body:JSON.stringify(mb(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lb/${i("lbId",t.lbId)}/subscribe`},ie);unsubscribeFromLb=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lb/${i("lbId",t.lbId)}/unsubscribe`},ie);pageOfListLbPrivateNetworks=t=>this.client.fetch({method:"GET",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}/private-networks`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},r1);listLbPrivateNetworks=t=>c("privateNetwork",this.pageOfListLbPrivateNetworks,t);attachPrivateNetwork=t=>this.client.fetch({body:JSON.stringify(YS(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}/attach`},no);detachPrivateNetwork=t=>this.client.fetch({body:"{}",headers:S,method:"POST",path:`/lb/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/lbs/${i("lbId",t.lbId)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}/detach`})},bb=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];pageOfListLbs=(t={})=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["tags",t.tags])},d1);listLbs=(t={})=>c("lbs",this.pageOfListLbs,t);createLb=t=>this.client.fetch({body:JSON.stringify(DS(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs`},ie);getLb=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}`},ie);waitForLb=(t,a)=>v(a?.stop??(s=>Promise.resolve(!ya.includes(s.status))),this.getLb,t,a);updateLb=t=>this.client.fetch({body:JSON.stringify(KS(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}`},ie);deleteLb=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}`,urlParams:d(["release_ip",t.releaseIp])});migrateLb=t=>this.client.fetch({body:JSON.stringify(xS(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}/migrate`},ie);pageOfListIPs=(t={})=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/ips`,urlParams:d(["ip_address",t.ipAddress],["ip_type",t.ipType],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},o1);listIPs=(t={})=>c("ips",this.pageOfListIPs,t);createIp=t=>this.client.fetch({body:JSON.stringify(OS(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/ips`},yt);getIp=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/ips/${i("ipId",t.ipId)}`},yt);releaseIp=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/ips/${i("ipId",t.ipId)}`});updateIp=t=>this.client.fetch({body:JSON.stringify(HS(t,this.client.settings)),headers:S,method:"PATCH",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/ips/${i("ipId",t.ipId)}`},yt);pageOfListBackends=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}/backends`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},a1);listBackends=t=>c("backends",this.pageOfListBackends,t);createBackend=t=>this.client.fetch({body:JSON.stringify(NS(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}/backends`},re);getBackend=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backends/${i("backendId",t.backendId)}`},re);updateBackend=t=>this.client.fetch({body:JSON.stringify(MS(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backends/${i("backendId",t.backendId)}`},re);deleteBackend=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backends/${i("backendId",t.backendId)}`});addBackendServers=t=>this.client.fetch({body:JSON.stringify(zS(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backends/${i("backendId",t.backendId)}/servers`},re);removeBackendServers=t=>this.client.fetch({body:JSON.stringify(VS(t,this.client.settings)),headers:S,method:"DELETE",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backends/${i("backendId",t.backendId)}/servers`},re);setBackendServers=t=>this.client.fetch({body:JSON.stringify(jS(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backends/${i("backendId",t.backendId)}/servers`},re);updateHealthCheck=t=>this.client.fetch({body:JSON.stringify(JS(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backends/${i("backendId",t.backendId)}/healthcheck`},ao);pageOfListFrontends=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}/frontends`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},s1);listFrontends=t=>c("frontends",this.pageOfListFrontends,t);createFrontend=t=>this.client.fetch({body:JSON.stringify(LS(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}/frontends`},St);getFrontend=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/frontends/${i("frontendId",t.frontendId)}`},St);updateFrontend=t=>this.client.fetch({body:JSON.stringify(ZS(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/frontends/${i("frontendId",t.frontendId)}`},St);deleteFrontend=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/frontends/${i("frontendId",t.frontendId)}`});pageOfListRoutes=(t={})=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/routes`,urlParams:d(["frontend_id",t.frontendId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},l1);listRoutes=(t={})=>c("routes",this.pageOfListRoutes,t);createRoute=t=>this.client.fetch({body:JSON.stringify(US(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/routes`},Bt);getRoute=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/routes/${i("routeId",t.routeId)}`},Bt);updateRoute=t=>this.client.fetch({body:JSON.stringify(WS(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/routes/${i("routeId",t.routeId)}`},Bt);deleteRoute=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/routes/${i("routeId",t.routeId)}`});getLbStats=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}/stats`,urlParams:d(["backend_id",t.backendId])},e1);pageOfListBackendStats=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}/backend-stats`,urlParams:d(["backend_id",t.backendId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},i1);listBackendStats=t=>c("backendServersStats",this.pageOfListBackendStats,t);pageOfListAcls=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/frontends/${i("frontendId",t.frontendId)}/acls`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},t1);listAcls=t=>c("acls",this.pageOfListAcls,t);createAcl=t=>this.client.fetch({body:JSON.stringify(CS(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/frontends/${i("frontendId",t.frontendId)}/acls`},bt);getAcl=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/acls/${i("aclId",t.aclId)}`},bt);updateAcl=t=>this.client.fetch({body:JSON.stringify(BS(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/acls/${i("aclId",t.aclId)}`},bt);deleteAcl=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/acls/${i("aclId",t.aclId)}`});createCertificate=t=>this.client.fetch({body:JSON.stringify($S(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}/certificates`},wt);pageOfListCertificates=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}/certificates`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},n1);listCertificates=t=>c("certificates",this.pageOfListCertificates,t);getCertificate=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/certificates/${i("certificateId",t.certificateId)}`},wt);waitForCertificate=(t,a)=>v(a?.stop??(s=>Promise.resolve(!eo.includes(s.status))),this.getCertificate,t,a);updateCertificate=t=>this.client.fetch({body:JSON.stringify(FS(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/certificates/${i("certificateId",t.certificateId)}`},wt);deleteCertificate=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/certificates/${i("certificateId",t.certificateId)}`});pageOfListLbTypes=(t={})=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lb-types`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},p1);listLbTypes=(t={})=>c("lbTypes",this.pageOfListLbTypes,t);createSubscriber=t=>this.client.fetch({body:JSON.stringify(kS(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/subscribers`},_t);getSubscriber=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/subscribers/${i("subscriberId",t.subscriberId)}`},_t);pageOfListSubscriber=(t={})=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/subscribers`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},c1);listSubscriber=(t={})=>c("subscribers",this.pageOfListSubscriber,t);updateSubscriber=t=>this.client.fetch({body:JSON.stringify(QS(t,this.client.settings)),headers:S,method:"PUT",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/subscribers/${i("subscriberId",t.subscriberId)}`},_t);deleteSubscriber=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lb/subscriber/${i("subscriberId",t.subscriberId)}`});subscribeToLb=t=>this.client.fetch({body:JSON.stringify(GS(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lb/${i("lbId",t.lbId)}/subscribe`},ie);unsubscribeFromLb=t=>this.client.fetch({method:"DELETE",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lb/${i("lbId",t.lbId)}/unsubscribe`},ie);pageOfListLbPrivateNetworks=t=>this.client.fetch({method:"GET",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}/private-networks`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},r1);listLbPrivateNetworks=t=>c("privateNetwork",this.pageOfListLbPrivateNetworks,t);attachPrivateNetwork=t=>this.client.fetch({body:JSON.stringify(PS(t,this.client.settings)),headers:S,method:"POST",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}/attach`},no);detachPrivateNetwork=t=>this.client.fetch({body:"{}",headers:S,method:"POST",path:`/lb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/lbs/${i("lbId",t.lbId)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}/detach`})},Ls=class extends bb{waitForLbPrivateNetworks=(t,a)=>Re(async()=>{let s=await this.listLbPrivateNetworks({lbId:t.lbId,region:t.region}).all().then(o=>({privateNetwork:o,totalCount:o.length}));return{done:s.privateNetwork.find(o=>io.includes(o.status))===void 0,value:s}},Te(a?.minDelay??1,a?.maxDelay??30),a?.timeout);waitForLbInstances=(t,a)=>Re(async()=>{let s=await this.getLb(t);return{done:!ya.includes(s.status)&&s.instances.find(o=>to.includes(o.status))===void 0,value:s}},Te(a?.minDelay??1,a?.maxDelay??30),a?.timeout)},Os=class extends $s{waitForLbPrivateNetworks=(t,a)=>Re(async()=>{let s=await this.listLbPrivateNetworks({lbId:t.lbId,zone:t.zone}).all().then(o=>({privateNetwork:o,totalCount:o.length}));return{done:s.privateNetwork.find(o=>io.includes(o.status))===void 0,value:s}},Te(a?.minDelay??1,a?.maxDelay??30),a?.timeout);waitForLbInstances=(t,a)=>Re(async()=>{let s=await this.getLb(t);return{done:!ya.includes(s.status)&&s.instances.find(o=>to.includes(o.status))===void 0,value:s}},Te(a?.minDelay??1,a?.maxDelay??30),a?.timeout)},Ib=Object.freeze({__proto__:null,API:Ls,CERTIFICATE_TRANSIENT_STATUSES:eo,INSTANCE_TRANSIENT_STATUSES:to,LB_TRANSIENT_STATUSES:ya,PRIVATE_NETWORK_TRANSIENT_STATUSES:io,ZonedAPI:Os}),Tb=Object.freeze({__proto__:null,v1:Ib}),y1=["creating","deploying","deleting"],Rb=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EndpointPrivateNetworkDetails' failed as data isn't a dictionary.");return{privateNetworkId:e.private_network_id}},Eb=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EndpointPublicAccessDetails' failed as data isn't a dictionary.");return{}},Ds=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Endpoint' failed as data isn't a dictionary.");return{disableAuth:e.disable_auth,id:e.id,privateNetwork:e.private_network?Rb(e.private_network):void 0,publicAccess:e.public_access?Eb(e.public_access):void 0,url:e.url}},Wi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Deployment' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),endpoints:r(e.endpoints,Ds),errorMessage:e.error_message,id:e.id,maxSize:e.max_size,minSize:e.min_size,modelName:e.model_name,name:e.name,nodeType:e.node_type,projectId:e.project_id,region:e.region,size:e.size,status:e.status,tags:e.tags,updatedAt:p(e.updated_at)}},zb=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ModelS3Model' failed as data isn't a dictionary.");return{nodeType:e.node_type,pythonDependencies:e.python_dependencies,s3Url:e.s3_url,tritonServerVersion:e.triton_server_version}},_1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Model' failed as data isn't a dictionary.");return{compatibleNodeTypes:e.compatible_node_types,createdAt:p(e.created_at),description:e.description,hasEula:e.has_eula,id:e.id,isPublic:e.is_public,name:e.name,projectId:e.project_id,provider:e.provider,quantizationLevel:e.quantization_level,region:e.region,s3Model:e.s3_model?zb(e.s3_model):void 0,tags:e.tags,updatedAt:p(e.updated_at)}},ho=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ACLRule' failed as data isn't a dictionary.");return{description:e.description,id:e.id,ip:e.ip}},Pb=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AddDeploymentACLRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,ho)}},Ab=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Eula' failed as data isn't a dictionary.");return{content:e.content}},Cb=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDeploymentACLRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,ho),totalCount:e.total_count}},Nb=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDeploymentsResponse' failed as data isn't a dictionary.");return{deployments:r(e.deployments,Wi),totalCount:e.total_count}},$b=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListModelsResponse' failed as data isn't a dictionary.");return{models:r(e.models,_1),totalCount:e.total_count}},Lb=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'NodeType' failed as data isn't a dictionary.");return{beta:e.beta,createdAt:p(e.created_at),description:e.description,disabled:e.disabled,gpus:e.gpus,memory:e.memory,name:e.name,region:e.region,stockStatus:e.stock_status,updatedAt:p(e.updated_at),vcpus:e.vcpus,vram:e.vram}},Ob=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListNodeTypesResponse' failed as data isn't a dictionary.");return{nodeTypes:r(e.node_types,Lb),totalCount:e.total_count}},Db=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetDeploymentACLRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,ho)}},w1=(e,t)=>({description:e.description,ip:e.ip}),Ub=(e,t)=>({acls:e.acls!==void 0?e.acls.map(a=>w1(a)):void 0}),kb=(e,t)=>({private_network_id:e.privateNetworkId}),xb=(e,t)=>({}),S1=(e,t)=>({disable_auth:e.disableAuth,...u([{param:"public",value:e.public!==void 0?xb(e.public):void 0},{param:"private_network",value:e.privateNetwork!==void 0?kb(e.privateNetwork):void 0}])}),Vb=(e,t)=>({accept_eula:e.acceptEula,endpoints:e.endpoints.map(a=>S1(a)),max_size:e.maxSize,min_size:e.minSize,model_name:e.modelName,name:e.name||_("llm"),node_type:e.nodeType,project_id:e.projectId??t.defaultProjectId,tags:e.tags}),jb=(e,t)=>({deployment_id:e.deploymentId,endpoint:S1(e.endpoint)}),Gb=(e,t)=>({acls:e.acls!==void 0?e.acls.map(a=>w1(a)):void 0}),Bb=(e,t)=>({max_size:e.maxSize,min_size:e.minSize,name:e.name,tags:e.tags}),Mb=(e,t)=>({disable_auth:e.disableAuth}),ti={"Content-Type":"application/json; charset=utf-8"},Fb=class extends w{static LOCALITIES=["fr-par"];pageOfListDeployments=(t={})=>this.client.fetch({method:"GET",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/deployments`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["tags",t.tags])},Nb);listDeployments=(t={})=>c("deployments",this.pageOfListDeployments,t);getDeployment=t=>this.client.fetch({method:"GET",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/deployments/${i("deploymentId",t.deploymentId)}`},Wi);waitForDeployment=(t,a)=>v(a?.stop??(s=>Promise.resolve(!y1.includes(s.status))),this.getDeployment,t,a);createDeployment=t=>this.client.fetch({body:JSON.stringify(Vb(t,this.client.settings)),headers:ti,method:"POST",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/deployments`},Wi);updateDeployment=t=>this.client.fetch({body:JSON.stringify(Bb(t,this.client.settings)),headers:ti,method:"PATCH",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/deployments/${i("deploymentId",t.deploymentId)}`},Wi);deleteDeployment=t=>this.client.fetch({method:"DELETE",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/deployments/${i("deploymentId",t.deploymentId)}`},Wi);getDeploymentCertificate=t=>this.client.fetch({method:"GET",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/deployments/${i("deploymentId",t.deploymentId)}/certificate`,urlParams:d(["dl",1]),responseType:"blob"});createEndpoint=t=>this.client.fetch({body:JSON.stringify(jb(t,this.client.settings)),headers:ti,method:"POST",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/endpoints`},Ds);updateEndpoint=t=>this.client.fetch({body:JSON.stringify(Mb(t,this.client.settings)),headers:ti,method:"PATCH",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/endpoints/${i("endpointId",t.endpointId)}`},Ds);deleteEndpoint=t=>this.client.fetch({method:"DELETE",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/endpoints/${i("endpointId",t.endpointId)}`});pageOfListDeploymentACLRules=t=>this.client.fetch({method:"GET",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/deployments/${i("deploymentId",t.deploymentId)}/acls`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},Cb);listDeploymentACLRules=t=>c("rules",this.pageOfListDeploymentACLRules,t);addDeploymentACLRules=t=>this.client.fetch({body:JSON.stringify(Ub(t,this.client.settings)),headers:ti,method:"POST",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/deployments/${i("deploymentId",t.deploymentId)}/acls`},Pb);setDeploymentACLRules=t=>this.client.fetch({body:JSON.stringify(Gb(t,this.client.settings)),headers:ti,method:"PUT",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/deployments/${i("deploymentId",t.deploymentId)}/acls`},Db);deleteDeploymentACLRule=t=>this.client.fetch({method:"DELETE",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/acls/${i("aclId",t.aclId)}`});pageOfListModels=(t={})=>this.client.fetch({method:"GET",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/models`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["tags",t.tags])},$b);listModels=(t={})=>c("models",this.pageOfListModels,t);getModel=t=>this.client.fetch({method:"GET",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/models/${i("modelId",t.modelId)}`},_1);getModelEula=t=>this.client.fetch({method:"GET",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/models/${i("modelId",t.modelId)}/eula`},Ab);pageOfListNodeTypes=t=>this.client.fetch({method:"GET",path:`/llm-inference/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/node-types`,urlParams:d(["include_disabled_types",t.includeDisabledTypes],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},Ob);listNodeTypes=t=>c("nodeTypes",this.pageOfListNodeTypes,t)},Zb={maxSize:{greaterThanOrEqual:1,lessThanOrEqual:50},minSize:{greaterThanOrEqual:1,lessThanOrEqual:50},modelName:{maxLength:255,minLength:0,pattern:/^[\w-_]+\/[\w-_.]+(:[\w]+)?$/},name:{maxLength:255,minLength:1,pattern:/^[A-Za-z0-9-_]+$/},nodeType:{maxLength:64,minLength:1}},Jb={name:{maxLength:255,minLength:1}},Hb={name:{maxLength:255,minLength:1}},Kb={maxSize:{greaterThanOrEqual:1,lessThanOrEqual:50},minSize:{greaterThanOrEqual:1,lessThanOrEqual:50},name:{maxLength:255,minLength:1}},Wb=Object.freeze({__proto__:null,CreateDeploymentRequest:Zb,ListDeploymentsRequest:Jb,ListModelsRequest:Hb,UpdateDeploymentRequest:Kb}),Qb=Object.freeze({__proto__:null,API:Fb,DEPLOYMENT_TRANSIENT_STATUSES:y1,ValidationRules:Wb}),Xb=Object.freeze({__proto__:null,v1beta1:Qb}),b1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Category' failed as data isn't a dictionary.");return{description:e.description,id:e.id,name:e.name}},I1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Image' failed as data isn't a dictionary.");return{categories:e.categories,createdAt:p(e.created_at),description:e.description,id:e.id,label:e.label,logo:e.logo,name:e.name,updatedAt:p(e.updated_at),validUntil:p(e.valid_until)}},T1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'LocalImage' failed as data isn't a dictionary.");return{arch:e.arch,compatibleCommercialTypes:e.compatible_commercial_types,id:e.id,label:e.label,type:e.type,zone:e.zone}},R1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Version' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,name:e.name,publishedAt:p(e.published_at),updatedAt:p(e.updated_at)}},Yb=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListCategoriesResponse' failed as data isn't a dictionary.");return{categories:r(e.categories,b1),totalCount:e.total_count}},qb=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListImagesResponse' failed as data isn't a dictionary.");return{images:r(e.images,I1),totalCount:e.total_count}},eI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListLocalImagesResponse' failed as data isn't a dictionary.");return{localImages:r(e.local_images,T1),totalCount:e.total_count}},tI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListVersionsResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,versions:r(e.versions,R1)}},iI=class extends w{pageOfListImages=t=>this.client.fetch({method:"GET",path:"/marketplace/v2/images",urlParams:d(["arch",t.arch],["category",t.category],["include_eol",t.includeEol],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},qb);listImages=t=>c("images",this.pageOfListImages,t);getImage=t=>this.client.fetch({method:"GET",path:`/marketplace/v2/images/${i("imageId",t.imageId)}`},I1);pageOfListVersions=t=>this.client.fetch({method:"GET",path:"/marketplace/v2/versions",urlParams:d(["image_id",t.imageId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},tI);listVersions=t=>c("versions",this.pageOfListVersions,t);getVersion=t=>this.client.fetch({method:"GET",path:`/marketplace/v2/versions/${i("versionId",t.versionId)}`},R1);pageOfListLocalImages=(t={})=>this.client.fetch({method:"GET",path:"/marketplace/v2/local-images",urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["type",t.type],["zone",t.zone],...Object.entries(u([{param:"image_id",value:t.imageId},{param:"version_id",value:t.versionId},{param:"image_label",value:t.imageLabel}])))},eI);listLocalImages=(t={})=>c("localImages",this.pageOfListLocalImages,t);getLocalImage=t=>this.client.fetch({method:"GET",path:`/marketplace/v2/local-images/${i("localImageId",t.localImageId)}`},T1);pageOfListCategories=(t={})=>this.client.fetch({method:"GET",path:"/marketplace/v2/categories",urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},Yb);listCategories=(t={})=>c("categories",this.pageOfListCategories,t);getCategory=t=>this.client.fetch({method:"GET",path:`/marketplace/v2/categories/${i("categoryId",t.categoryId)}`},b1)},aI=Object.freeze({__proto__:null,API:iI}),nI=Object.freeze({__proto__:null,v2:aI}),en=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'NatsAccount' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),endpoint:e.endpoint,id:e.id,name:e.name,projectId:e.project_id,region:e.region,updatedAt:p(e.updated_at)}},sI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'File' failed as data isn't a dictionary.");return{content:e.content,name:e.name}},Us=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'NatsCredentials' failed as data isn't a dictionary.");return{checksum:e.checksum,createdAt:p(e.created_at),credentials:e.credentials?sI(e.credentials):void 0,id:e.id,name:e.name,natsAccountId:e.nats_account_id,updatedAt:p(e.updated_at)}},oI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SnsPermissions' failed as data isn't a dictionary.");return{canManage:e.can_manage,canPublish:e.can_publish,canReceive:e.can_receive}},tn=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SnsCredentials' failed as data isn't a dictionary.");return{accessKey:e.access_key,createdAt:p(e.created_at),id:e.id,name:e.name,permissions:e.permissions?oI(e.permissions):void 0,projectId:e.project_id,region:e.region,secretChecksum:e.secret_checksum,secretKey:e.secret_key,updatedAt:p(e.updated_at)}},rI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SqsPermissions' failed as data isn't a dictionary.");return{canManage:e.can_manage,canPublish:e.can_publish,canReceive:e.can_receive}},an=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SqsCredentials' failed as data isn't a dictionary.");return{accessKey:e.access_key,createdAt:p(e.created_at),id:e.id,name:e.name,permissions:e.permissions?rI(e.permissions):void 0,projectId:e.project_id,region:e.region,secretChecksum:e.secret_checksum,secretKey:e.secret_key,updatedAt:p(e.updated_at)}},pI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListNatsAccountsResponse' failed as data isn't a dictionary.");return{natsAccounts:r(e.nats_accounts,en),totalCount:e.total_count}},dI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListNatsCredentialsResponse' failed as data isn't a dictionary.");return{natsCredentials:r(e.nats_credentials,Us),totalCount:e.total_count}},lI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSnsCredentialsResponse' failed as data isn't a dictionary.");return{snsCredentials:r(e.sns_credentials,tn),totalCount:e.total_count}},cI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSqsCredentialsResponse' failed as data isn't a dictionary.");return{sqsCredentials:r(e.sqs_credentials,an),totalCount:e.total_count}},ps=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SnsInfo' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),projectId:e.project_id,region:e.region,snsEndpointUrl:e.sns_endpoint_url,status:e.status,updatedAt:p(e.updated_at)}},ds=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SqsInfo' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),projectId:e.project_id,region:e.region,sqsEndpointUrl:e.sqs_endpoint_url,status:e.status,updatedAt:p(e.updated_at)}},mI=(e,t)=>({name:e.name||_("mnq"),project_id:e.projectId??t.defaultProjectId}),hI=(e,t)=>({name:e.name||_("mnq"),nats_account_id:e.natsAccountId}),gI=(e,t)=>({name:e.name}),uI=(e,t)=>({project_id:e.projectId??t.defaultProjectId}),E1=(e,t)=>({can_manage:e.canManage,can_publish:e.canPublish,can_receive:e.canReceive}),fI=(e,t)=>({name:e.name||_("mnq_sns"),permissions:e.permissions!==void 0?E1(e.permissions):void 0,project_id:e.projectId??t.defaultProjectId}),vI=(e,t)=>({project_id:e.projectId??t.defaultProjectId}),yI=(e,t)=>({name:e.name,permissions:e.permissions!==void 0?E1(e.permissions):void 0}),_I=(e,t)=>({project_id:e.projectId??t.defaultProjectId}),z1=(e,t)=>({can_manage:e.canManage,can_publish:e.canPublish,can_receive:e.canReceive}),wI=(e,t)=>({name:e.name||_("mnq_sqs"),permissions:e.permissions!==void 0?z1(e.permissions):void 0,project_id:e.projectId??t.defaultProjectId}),SI=(e,t)=>({project_id:e.projectId??t.defaultProjectId}),bI=(e,t)=>({name:e.name,permissions:e.permissions!==void 0?z1(e.permissions):void 0}),Oe={"Content-Type":"application/json; charset=utf-8"},ks=class extends w{static LOCALITIES=["fr-par","nl-ams"];createNatsAccount=(t={})=>this.client.fetch({body:JSON.stringify(mI(t,this.client.settings)),headers:Oe,method:"POST",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/nats-accounts`},en);deleteNatsAccount=t=>this.client.fetch({method:"DELETE",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/nats-accounts/${i("natsAccountId",t.natsAccountId)}`});updateNatsAccount=t=>this.client.fetch({body:JSON.stringify(gI(t,this.client.settings)),headers:Oe,method:"PATCH",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/nats-accounts/${i("natsAccountId",t.natsAccountId)}`},en);getNatsAccount=t=>this.client.fetch({method:"GET",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/nats-accounts/${i("natsAccountId",t.natsAccountId)}`},en);pageOfListNatsAccounts=(t={})=>this.client.fetch({method:"GET",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/nats-accounts`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},pI);listNatsAccounts=(t={})=>c("natsAccounts",this.pageOfListNatsAccounts,t);createNatsCredentials=t=>this.client.fetch({body:JSON.stringify(hI(t,this.client.settings)),headers:Oe,method:"POST",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/nats-credentials`},Us);deleteNatsCredentials=t=>this.client.fetch({method:"DELETE",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/nats-credentials/${i("natsCredentialsId",t.natsCredentialsId)}`});getNatsCredentials=t=>this.client.fetch({method:"GET",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/nats-credentials/${i("natsCredentialsId",t.natsCredentialsId)}`},Us);pageOfListNatsCredentials=(t={})=>this.client.fetch({method:"GET",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/nats-credentials`,urlParams:d(["nats_account_id",t.natsAccountId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},dI);listNatsCredentials=(t={})=>c("natsCredentials",this.pageOfListNatsCredentials,t)},xs=class extends w{static LOCALITIES=["fr-par","nl-ams"];activateSns=(t={})=>this.client.fetch({body:JSON.stringify(uI(t,this.client.settings)),headers:Oe,method:"POST",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/activate-sns`},ps);getSnsInfo=(t={})=>this.client.fetch({method:"GET",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/sns-info`,urlParams:d(["project_id",t.projectId??this.client.settings.defaultProjectId])},ps);deactivateSns=(t={})=>this.client.fetch({body:JSON.stringify(vI(t,this.client.settings)),headers:Oe,method:"POST",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/deactivate-sns`},ps);createSnsCredentials=(t={})=>this.client.fetch({body:JSON.stringify(fI(t,this.client.settings)),headers:Oe,method:"POST",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/sns-credentials`},tn);deleteSnsCredentials=t=>this.client.fetch({method:"DELETE",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/sns-credentials/${i("snsCredentialsId",t.snsCredentialsId)}`});updateSnsCredentials=t=>this.client.fetch({body:JSON.stringify(yI(t,this.client.settings)),headers:Oe,method:"PATCH",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/sns-credentials/${i("snsCredentialsId",t.snsCredentialsId)}`},tn);getSnsCredentials=t=>this.client.fetch({method:"GET",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/sns-credentials/${i("snsCredentialsId",t.snsCredentialsId)}`},tn);pageOfListSnsCredentials=(t={})=>this.client.fetch({method:"GET",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/sns-credentials`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},lI);listSnsCredentials=(t={})=>c("snsCredentials",this.pageOfListSnsCredentials,t)},Vs=class extends w{static LOCALITIES=["fr-par","nl-ams"];activateSqs=(t={})=>this.client.fetch({body:JSON.stringify(_I(t,this.client.settings)),headers:Oe,method:"POST",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/activate-sqs`},ds);getSqsInfo=(t={})=>this.client.fetch({method:"GET",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/sqs-info`,urlParams:d(["project_id",t.projectId??this.client.settings.defaultProjectId])},ds);deactivateSqs=(t={})=>this.client.fetch({body:JSON.stringify(SI(t,this.client.settings)),headers:Oe,method:"POST",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/deactivate-sqs`},ds);createSqsCredentials=(t={})=>this.client.fetch({body:JSON.stringify(wI(t,this.client.settings)),headers:Oe,method:"POST",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/sqs-credentials`},an);deleteSqsCredentials=t=>this.client.fetch({method:"DELETE",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/sqs-credentials/${i("sqsCredentialsId",t.sqsCredentialsId)}`});updateSqsCredentials=t=>this.client.fetch({body:JSON.stringify(bI(t,this.client.settings)),headers:Oe,method:"PATCH",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/sqs-credentials/${i("sqsCredentialsId",t.sqsCredentialsId)}`},an);getSqsCredentials=t=>this.client.fetch({method:"GET",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/sqs-credentials/${i("sqsCredentialsId",t.sqsCredentialsId)}`},an);pageOfListSqsCredentials=(t={})=>this.client.fetch({method:"GET",path:`/mnq/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/sqs-credentials`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},cI);listSqsCredentials=(t={})=>c("sqsCredentials",this.pageOfListSqsCredentials,t)},II={name:{maxLength:64,minLength:1}},TI={name:{maxLength:64,minLength:1}},RI={name:{maxLength:500,minLength:1}},EI={name:{maxLength:64,minLength:1}},zI={name:{maxLength:500,minLength:1}},PI={name:{maxLength:500,minLength:1}},AI={name:{maxLength:500,minLength:1}},CI={accessKey:{minLength:1},name:{maxLength:500,minLength:1}},NI={name:{maxLength:500,minLength:1}},$I={name:{maxLength:500,minLength:1}},LI={accessKey:{minLength:1},name:{maxLength:500,minLength:1}},OI=Object.freeze({__proto__:null,NatsAccount:II,NatsApiCreateNatsAccountRequest:TI,NatsApiCreateNatsCredentialsRequest:RI,NatsApiUpdateNatsAccountRequest:EI,NatsCredentials:zI,SnsApiCreateSnsCredentialsRequest:PI,SnsApiUpdateSnsCredentialsRequest:AI,SnsCredentials:CI,SqsApiCreateSqsCredentialsRequest:NI,SqsApiUpdateSqsCredentialsRequest:$I,SqsCredentials:LI}),DI=Object.freeze({__proto__:null,NatsAPI:ks,SnsAPI:xs,SqsAPI:Vs,ValidationRules:OI}),UI=Object.freeze({__proto__:null,v1beta1:DI}),P1=["creating","restoring","deleting","exporting"],A1=["creating"],C1=["provisioning","configuring","deleting","autohealing","initializing","backuping","snapshotting","restarting"],kI=["ongoing"],N1=["provisioning","initializing","deleting","configuring","promoting"],$1=["creating","restoring","deleting"],xI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EndpointDirectAccessDetails' failed as data isn't a dictionary.");return{}},VI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EndpointLoadBalancerDetails' failed as data isn't a dictionary.");return{}},jI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EndpointPrivateNetworkDetails' failed as data isn't a dictionary.");return{privateNetworkId:e.private_network_id,serviceIp:e.service_ip,zone:e.zone}},fi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Endpoint' failed as data isn't a dictionary.");return{directAccess:e.direct_access?xI(e.direct_access):void 0,hostname:e.hostname,id:e.id,ip:e.ip,loadBalancer:e.load_balancer?VI(e.load_balancer):void 0,name:e.name,port:e.port,privateNetwork:e.private_network?jI(e.private_network):void 0}},L1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Maintenance' failed as data isn't a dictionary.");return{closedAt:p(e.closed_at),forcedAt:p(e.forced_at),reason:e.reason,startsAt:p(e.starts_at),status:e.status,stopsAt:p(e.stops_at)}},ri=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ReadReplica' failed as data isn't a dictionary.");return{endpoints:r(e.endpoints,fi),id:e.id,instanceId:e.instance_id,region:e.region,sameZone:e.same_zone,status:e.status}},xt=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DatabaseBackup' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),databaseName:e.database_name,downloadUrl:e.download_url,downloadUrlExpiresAt:p(e.download_url_expires_at),expiresAt:p(e.expires_at),id:e.id,instanceId:e.instance_id,instanceName:e.instance_name,name:e.name,region:e.region,sameRegion:e.same_region,size:e.size,status:e.status,updatedAt:p(e.updated_at)}},O1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Database' failed as data isn't a dictionary.");return{managed:e.managed,name:e.name,owner:e.owner,size:e.size}},go=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'InstanceLog' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),downloadUrl:e.download_url,expiresAt:p(e.expires_at),id:e.id,nodeName:e.node_name,region:e.region,status:e.status}},GI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'BackupSchedule' failed as data isn't a dictionary.");return{disabled:e.disabled,frequency:e.frequency,nextRunAt:p(e.next_run_at),retention:e.retention}},ga=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'InstanceSetting' failed as data isn't a dictionary.");return{name:e.name,value:e.value}},BI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'LogsPolicy' failed as data isn't a dictionary.");return{maxAgeRetention:e.max_age_retention,totalDiskRetention:e.total_disk_retention}},MI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'UpgradableVersion' failed as data isn't a dictionary.");return{id:e.id,minorVersion:e.minor_version,name:e.name,version:e.version}},FI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Volume' failed as data isn't a dictionary.");return{class:e.class,size:e.size,type:e.type}},Fe=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Instance' failed as data isn't a dictionary.");return{backupSameRegion:e.backup_same_region,backupSchedule:e.backup_schedule?GI(e.backup_schedule):void 0,createdAt:p(e.created_at),endpoint:e.endpoint?fi(e.endpoint):void 0,endpoints:r(e.endpoints,fi),engine:e.engine,id:e.id,initSettings:r(e.init_settings,ga),isHaCluster:e.is_ha_cluster,logsPolicy:e.logs_policy?BI(e.logs_policy):void 0,maintenances:r(e.maintenances,L1),name:e.name,nodeType:e.node_type,organizationId:e.organization_id,projectId:e.project_id,readReplicas:r(e.read_replicas,ri),region:e.region,settings:r(e.settings,ga),status:e.status,tags:e.tags,upgradableVersion:r(e.upgradable_version,MI),volume:e.volume?FI(e.volume):void 0}},D1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Privilege' failed as data isn't a dictionary.");return{databaseName:e.database_name,permission:e.permission,userName:e.user_name}},ZI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SnapshotVolumeType' failed as data isn't a dictionary.");return{class:e.class,type:e.type}},Qi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Snapshot' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),expiresAt:p(e.expires_at),id:e.id,instanceId:e.instance_id,instanceName:e.instance_name,name:e.name,nodeType:e.node_type,region:e.region,size:e.size,status:e.status,updatedAt:p(e.updated_at),volumeType:e.volume_type?ZI(e.volume_type):void 0}},js=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'User' failed as data isn't a dictionary.");return{isAdmin:e.is_admin,name:e.name}},Nn=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ACLRule' failed as data isn't a dictionary.");return{action:e.action,description:e.description,direction:e.direction,ip:e.ip,port:e.port,protocol:e.protocol}},JI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AddInstanceACLRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,Nn)}},HI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AddInstanceSettingsResponse' failed as data isn't a dictionary.");return{settings:r(e.settings,ga)}},KI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DeleteInstanceACLRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,Nn)}},WI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DeleteInstanceSettingsResponse' failed as data isn't a dictionary.");return{settings:r(e.settings,ga)}},QI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'InstanceMetrics' failed as data isn't a dictionary.");return{timeseries:r(e.timeseries,Tt)}},XI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDatabaseBackupsResponse' failed as data isn't a dictionary.");return{databaseBackups:r(e.database_backups,xt),totalCount:e.total_count}},Fr=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EngineSetting' failed as data isn't a dictionary.");return{defaultValue:e.default_value,description:e.description,floatMax:e.float_max,floatMin:e.float_min,hotConfigurable:e.hot_configurable,intMax:e.int_max,intMin:e.int_min,name:e.name,propertyType:e.property_type,stringConstraint:e.string_constraint,unit:e.unit}},YI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EngineVersion' failed as data isn't a dictionary.");return{availableInitSettings:r(e.available_init_settings,Fr),availableSettings:r(e.available_settings,Fr),beta:e.beta,disabled:e.disabled,endOfLife:p(e.end_of_life),name:e.name,version:e.version}},qI=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DatabaseEngine' failed as data isn't a dictionary.");return{logoUrl:e.logo_url,name:e.name,region:e.region,versions:r(e.versions,YI)}},eT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDatabaseEnginesResponse' failed as data isn't a dictionary.");return{engines:r(e.engines,qI),totalCount:e.total_count}},tT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDatabasesResponse' failed as data isn't a dictionary.");return{databases:r(e.databases,O1),totalCount:e.total_count}},iT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListInstanceACLRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,Nn),totalCount:e.total_count}},aT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListInstanceLogsDetailsResponseInstanceLogDetail' failed as data isn't a dictionary.");return{logName:e.log_name,size:e.size}},nT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListInstanceLogsDetailsResponse' failed as data isn't a dictionary.");return{details:r(e.details,aT)}},sT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListInstanceLogsResponse' failed as data isn't a dictionary.");return{instanceLogs:r(e.instance_logs,go)}},oT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListInstancesResponse' failed as data isn't a dictionary.");return{instances:r(e.instances,Fe),totalCount:e.total_count}},rT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'NodeTypeVolumeConstraintSizes' failed as data isn't a dictionary.");return{maxSize:e.max_size,minSize:e.min_size}},pT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'NodeTypeVolumeType' failed as data isn't a dictionary.");return{chunkSize:e.chunk_size,class:e.class,description:e.description,maxSize:e.max_size,minSize:e.min_size,type:e.type}},dT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'NodeType' failed as data isn't a dictionary.");return{availableVolumeTypes:r(e.available_volume_types,pT),beta:e.beta,description:e.description,disabled:e.disabled,generation:e.generation,instanceRange:e.instance_range,isBssdCompatible:e.is_bssd_compatible,isHaRequired:e.is_ha_required,memory:e.memory,name:e.name,region:e.region,stockStatus:e.stock_status,vcpus:e.vcpus,volumeConstraint:e.volume_constraint?rT(e.volume_constraint):void 0}},lT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListNodeTypesResponse' failed as data isn't a dictionary.");return{nodeTypes:r(e.node_types,dT),totalCount:e.total_count}},cT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListPrivilegesResponse' failed as data isn't a dictionary.");return{privileges:r(e.privileges,D1),totalCount:e.total_count}},mT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSnapshotsResponse' failed as data isn't a dictionary.");return{snapshots:r(e.snapshots,Qi),totalCount:e.total_count}},hT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListUsersResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,users:r(e.users,js)}},gT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PrepareInstanceLogsResponse' failed as data isn't a dictionary.");return{instanceLogs:r(e.instance_logs,go)}},uT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetInstanceACLRulesResponse' failed as data isn't a dictionary.");return{rules:r(e.rules,Nn)}},fT=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetInstanceSettingsResponse' failed as data isn't a dictionary.");return{settings:r(e.settings,ga)}},U1=(e,t)=>({description:e.description,ip:e.ip}),vT=(e,t)=>({rules:e.rules.map(a=>U1(a))}),uo=(e,t)=>({name:e.name,value:e.value}),yT=(e,t)=>({settings:e.settings.map(a=>uo(a))}),_T=(e,t)=>({name:e.name,node_type:e.nodeType}),wT=(e,t)=>({database_name:e.databaseName,expires_at:e.expiresAt,instance_id:e.instanceId,name:e.name||_("bkp")}),ST=(e,t)=>({name:e.name}),bT=(e,t)=>({}),IT=(e,t)=>({}),TT=(e,t)=>({private_network_id:e.privateNetworkId,...u([{param:"service_ip",value:e.serviceIp},{param:"ipam_config",value:e.ipamConfig!==void 0?bT(e.ipamConfig):void 0}])}),k1=(e,t)=>({...u([{param:"load_balancer",value:e.loadBalancer!==void 0?IT(e.loadBalancer):void 0},{param:"private_network",value:e.privateNetwork!==void 0?TT(e.privateNetwork):void 0}])}),RT=(e,t)=>({endpoint_spec:e.endpointSpec!==void 0?k1(e.endpointSpec):void 0}),ET=(e,t)=>({instance_name:e.instanceName,is_ha_cluster:e.isHaCluster,node_type:e.nodeType}),zT=(e,t)=>({backup_same_region:e.backupSameRegion,disable_backup:e.disableBackup,engine:e.engine,init_endpoints:e.initEndpoints!==void 0?e.initEndpoints.map(a=>k1(a)):void 0,init_settings:e.initSettings!==void 0?e.initSettings.map(a=>uo(a)):void 0,is_ha_cluster:e.isHaCluster,name:e.name||_("ins"),node_type:e.nodeType,password:e.password,tags:e.tags,user_name:e.userName,volume_size:e.volumeSize,volume_type:e.volumeType,...u([{default:t.defaultProjectId,param:"project_id",value:e.projectId},{default:t.defaultOrganizationId,param:"organization_id",value:e.organizationId}])}),PT=(e,t)=>({}),AT=(e,t)=>({}),CT=(e,t)=>({private_network_id:e.privateNetworkId,...u([{param:"service_ip",value:e.serviceIp},{param:"ipam_config",value:e.ipamConfig!==void 0?PT(e.ipamConfig):void 0}])}),x1=(e,t)=>({...u([{param:"direct_access",value:e.directAccess!==void 0?AT(e.directAccess):void 0},{param:"private_network",value:e.privateNetwork!==void 0?CT(e.privateNetwork):void 0}])}),NT=(e,t)=>({endpoint_spec:e.endpointSpec.map(a=>x1(a))}),$T=(e,t)=>({endpoint_spec:e.endpointSpec!==void 0?e.endpointSpec.map(a=>x1(a)):void 0,instance_id:e.instanceId,same_zone:e.sameZone}),LT=(e,t)=>({expires_at:e.expiresAt,name:e.name||_("snp")}),OT=(e,t)=>({is_admin:e.isAdmin,name:e.name,password:e.password}),DT=(e,t)=>({acl_rule_ips:e.aclRuleIps}),UT=(e,t)=>({setting_names:e.settingNames}),kT=(e,t)=>({instance_id:e.instanceId}),xT=(e,t)=>({end_date:e.endDate,start_date:e.startDate}),VT=(e,t)=>({log_name:e.logName}),jT=(e,t)=>({database_name:e.databaseName,instance_id:e.instanceId}),GT=(e,t)=>({rules:e.rules.map(a=>U1(a))}),BT=(e,t)=>({settings:e.settings.map(a=>uo(a))}),MT=(e,t)=>({database_name:e.databaseName,permission:e.permission,user_name:e.userName}),FT=(e,t)=>({expires_at:e.expiresAt,name:e.name}),ZT=(e,t)=>({max_age_retention:e.maxAgeRetention,total_disk_retention:e.totalDiskRetention}),JT=(e,t)=>({backup_same_region:e.backupSameRegion,backup_schedule_frequency:e.backupScheduleFrequency,backup_schedule_retention:e.backupScheduleRetention,backup_schedule_start_hour:e.backupScheduleStartHour,is_backup_schedule_disabled:e.isBackupScheduleDisabled,logs_policy:e.logsPolicy!==void 0?ZT(e.logsPolicy):void 0,name:e.name,tags:e.tags}),HT=(e,t)=>({expires_at:e.expiresAt,name:e.name}),KT=(e,t)=>({is_admin:e.isAdmin,password:e.password}),WT=(e,t)=>({upgradable_version_id:e.upgradableVersionId,with_endpoints:e.withEndpoints}),QT=(e,t)=>({...u([{param:"node_type",value:e.nodeType},{param:"enable_ha",value:e.enableHa},{param:"volume_size",value:e.volumeSize},{param:"volume_type",value:e.volumeType},{param:"upgradable_version_id",value:e.upgradableVersionId},{param:"major_upgrade_workflow",value:e.majorUpgradeWorkflow!==void 0?WT(e.majorUpgradeWorkflow):void 0}])}),A={"Content-Type":"application/json; charset=utf-8"},XT=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];pageOfListDatabaseEngines=(t={})=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/database-engines`,urlParams:d(["name",t.name],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["version",t.version])},eT);listDatabaseEngines=(t={})=>c("engines",this.pageOfListDatabaseEngines,t);pageOfListNodeTypes=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/node-types`,urlParams:d(["include_disabled_types",t.includeDisabledTypes],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},lT);listNodeTypes=t=>c("nodeTypes",this.pageOfListNodeTypes,t);pageOfListDatabaseBackups=(t={})=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backups`,urlParams:d(["instance_id",t.instanceId],["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},XI);listDatabaseBackups=(t={})=>c("databaseBackups",this.pageOfListDatabaseBackups,t);createDatabaseBackup=t=>this.client.fetch({body:JSON.stringify(wT(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backups`},xt);getDatabaseBackup=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backups/${i("databaseBackupId",t.databaseBackupId)}`},xt);waitForDatabaseBackup=(t,a)=>v(a?.stop??(s=>Promise.resolve(!P1.includes(s.status))),this.getDatabaseBackup,t,a);updateDatabaseBackup=t=>this.client.fetch({body:JSON.stringify(FT(t,this.client.settings)),headers:A,method:"PATCH",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backups/${i("databaseBackupId",t.databaseBackupId)}`},xt);deleteDatabaseBackup=t=>this.client.fetch({method:"DELETE",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backups/${i("databaseBackupId",t.databaseBackupId)}`},xt);restoreDatabaseBackup=t=>this.client.fetch({body:JSON.stringify(jT(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backups/${i("databaseBackupId",t.databaseBackupId)}/restore`},xt);exportDatabaseBackup=t=>this.client.fetch({body:"{}",headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backups/${i("databaseBackupId",t.databaseBackupId)}/export`},xt);upgradeInstance=t=>this.client.fetch({body:JSON.stringify(QT(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/upgrade`},Fe);pageOfListInstances=(t={})=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["tags",t.tags])},oT);listInstances=(t={})=>c("instances",this.pageOfListInstances,t);getInstance=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}`},Fe);waitForInstance=(t,a)=>v(a?.stop??(s=>Promise.resolve(!C1.includes(s.status))),this.getInstance,t,a);createInstance=t=>this.client.fetch({body:JSON.stringify(zT(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances`},Fe);updateInstance=t=>this.client.fetch({body:JSON.stringify(JT(t,this.client.settings)),headers:A,method:"PATCH",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}`},Fe);deleteInstance=t=>this.client.fetch({method:"DELETE",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}`},Fe);cloneInstance=t=>this.client.fetch({body:JSON.stringify(_T(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/clone`},Fe);restartInstance=t=>this.client.fetch({body:"{}",headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/restart`},Fe);getInstanceCertificate=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/certificate`,urlParams:d(["dl",1]),responseType:"blob"});renewInstanceCertificate=t=>this.client.fetch({body:"{}",headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/renew-certificate`});getInstanceMetrics=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/metrics`,urlParams:d(["end_date",t.endDate],["metric_name",t.metricName],["start_date",t.startDate])},QI);createReadReplica=t=>this.client.fetch({body:JSON.stringify($T(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/read-replicas`},ri);getReadReplica=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/read-replicas/${i("readReplicaId",t.readReplicaId)}`},ri);waitForReadReplica=(t,a)=>v(a?.stop??(s=>Promise.resolve(!N1.includes(s.status))),this.getReadReplica,t,a);deleteReadReplica=t=>this.client.fetch({method:"DELETE",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/read-replicas/${i("readReplicaId",t.readReplicaId)}`},ri);resetReadReplica=t=>this.client.fetch({body:"{}",headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/read-replicas/${i("readReplicaId",t.readReplicaId)}/reset`},ri);promoteReadReplica=t=>this.client.fetch({body:"{}",headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/read-replicas/${i("readReplicaId",t.readReplicaId)}/promote`},Fe);createReadReplicaEndpoint=t=>this.client.fetch({body:JSON.stringify(NT(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/read-replicas/${i("readReplicaId",t.readReplicaId)}/endpoints`},ri);prepareInstanceLogs=t=>this.client.fetch({body:JSON.stringify(xT(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/prepare-logs`},gT);listInstanceLogs=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/logs`,urlParams:d(["order_by",t.orderBy])},sT);getInstanceLog=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/logs/${i("instanceLogId",t.instanceLogId)}`},go);waitForInstanceLog=(t,a)=>v(a?.stop??(s=>Promise.resolve(!A1.includes(s.status))),this.getInstanceLog,t,a);purgeInstanceLogs=t=>this.client.fetch({body:JSON.stringify(VT(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/purge-logs`});listInstanceLogsDetails=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/logs-details`},nT);addInstanceSettings=t=>this.client.fetch({body:JSON.stringify(yT(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/settings`},HI);deleteInstanceSettings=t=>this.client.fetch({body:JSON.stringify(UT(t,this.client.settings)),headers:A,method:"DELETE",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/settings`},WI);setInstanceSettings=t=>this.client.fetch({body:JSON.stringify(BT(t,this.client.settings)),headers:A,method:"PUT",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/settings`},fT);pageOfListInstanceACLRules=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/acls`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},iT);listInstanceACLRules=t=>c("rules",this.pageOfListInstanceACLRules,t);addInstanceACLRules=t=>this.client.fetch({body:JSON.stringify(vT(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/acls`},JI);setInstanceACLRules=t=>this.client.fetch({body:JSON.stringify(GT(t,this.client.settings)),headers:A,method:"PUT",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/acls`},uT);deleteInstanceACLRules=t=>this.client.fetch({body:JSON.stringify(DT(t,this.client.settings)),headers:A,method:"DELETE",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/acls`},KI);pageOfListUsers=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/users`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},hT);listUsers=t=>c("users",this.pageOfListUsers,t);createUser=t=>this.client.fetch({body:JSON.stringify(OT(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/users`},js);updateUser=t=>this.client.fetch({body:JSON.stringify(KT(t,this.client.settings)),headers:A,method:"PATCH",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/users/${i("name",t.name)}`},js);deleteUser=t=>this.client.fetch({method:"DELETE",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/users/${i("name",t.name)}`});pageOfListDatabases=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/databases`,urlParams:d(["managed",t.managed],["name",t.name],["order_by",t.orderBy],["owner",t.owner],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},tT);listDatabases=t=>c("databases",this.pageOfListDatabases,t);createDatabase=t=>this.client.fetch({body:JSON.stringify(ST(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/databases`},O1);deleteDatabase=t=>this.client.fetch({method:"DELETE",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/databases/${i("name",t.name)}`});pageOfListPrivileges=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/privileges`,urlParams:d(["database_name",t.databaseName],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["user_name",t.userName])},cT);listPrivileges=t=>c("privileges",this.pageOfListPrivileges,t);setPrivilege=t=>this.client.fetch({body:JSON.stringify(MT(t,this.client.settings)),headers:A,method:"PUT",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/privileges`},D1);pageOfListSnapshots=(t={})=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/snapshots`,urlParams:d(["instance_id",t.instanceId],["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},mT);listSnapshots=(t={})=>c("snapshots",this.pageOfListSnapshots,t);getSnapshot=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/snapshots/${i("snapshotId",t.snapshotId)}`},Qi);waitForSnapshot=(t,a)=>v(a?.stop??(s=>Promise.resolve(!$1.includes(s.status))),this.getSnapshot,t,a);createSnapshot=t=>this.client.fetch({body:JSON.stringify(LT(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/snapshots`},Qi);updateSnapshot=t=>this.client.fetch({body:JSON.stringify(HT(t,this.client.settings)),headers:A,method:"PATCH",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/snapshots/${i("snapshotId",t.snapshotId)}`},Qi);deleteSnapshot=t=>this.client.fetch({method:"DELETE",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/snapshots/${i("snapshotId",t.snapshotId)}`},Qi);createInstanceFromSnapshot=t=>this.client.fetch({body:JSON.stringify(ET(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/snapshots/${i("snapshotId",t.snapshotId)}/create-instance`},Fe);createEndpoint=t=>this.client.fetch({body:JSON.stringify(RT(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/endpoints`},fi);deleteEndpoint=t=>this.client.fetch({method:"DELETE",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/endpoints/${i("endpointId",t.endpointId)}`});getEndpoint=t=>this.client.fetch({method:"GET",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/endpoints/${i("endpointId",t.endpointId)}`},fi);migrateEndpoint=t=>this.client.fetch({body:JSON.stringify(kT(t,this.client.settings)),headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/endpoints/${i("endpointId",t.endpointId)}/migrate`},fi);applyInstanceMaintenance=t=>this.client.fetch({body:"{}",headers:A,method:"POST",path:`/rdb/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/instances/${i("instanceId",t.instanceId)}/apply-maintenance`},L1)},YT={backupScheduleStartHour:{lessThanOrEqual:23}},qT=Object.freeze({__proto__:null,UpdateInstanceRequest:YT}),eR=Object.freeze({__proto__:null,API:XT,DATABASE_BACKUP_TRANSIENT_STATUSES:P1,INSTANCE_LOG_TRANSIENT_STATUSES:A1,INSTANCE_TRANSIENT_STATUSES:C1,MAINTENANCE_TRANSIENT_STATUSES:kI,READ_REPLICA_TRANSIENT_STATUSES:N1,SNAPSHOT_TRANSIENT_STATUSES:$1,ValidationRules:qT}),tR=Object.freeze({__proto__:null,v1:eR}),V1=["provisioning","configuring","deleting","autohealing","initializing"],$n=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ACLRule' failed as data isn't a dictionary.");return{description:e.description,id:e.id,ipCidr:e.ip_cidr}},iR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PrivateNetwork' failed as data isn't a dictionary.");return{id:e.id,provisioningMode:e.provisioning_mode,serviceIps:e.service_ips,zone:e.zone}},aR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PublicNetwork' failed as data isn't a dictionary.");return{}},ua=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Endpoint' failed as data isn't a dictionary.");return{id:e.id,ips:e.ips,port:e.port,privateNetwork:e.private_network?iR(e.private_network):void 0,publicNetwork:e.public_network?aR(e.public_network):void 0}},j1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ClusterSetting' failed as data isn't a dictionary.");return{name:e.name,value:e.value}},Ze=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Cluster' failed as data isn't a dictionary.");return{aclRules:r(e.acl_rules,$n),clusterSettings:r(e.cluster_settings,j1),clusterSize:e.cluster_size,createdAt:p(e.created_at),endpoints:r(e.endpoints,ua),id:e.id,name:e.name,nodeType:e.node_type,projectId:e.project_id,status:e.status,tags:e.tags,tlsEnabled:e.tls_enabled,updatedAt:p(e.updated_at),upgradableVersions:e.upgradable_versions,userName:e.user_name,version:e.version,zone:e.zone}},nR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AddAclRulesResponse' failed as data isn't a dictionary.");return{aclRules:r(e.acl_rules,$n),totalCount:e.total_count}},sR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AddEndpointsResponse' failed as data isn't a dictionary.");return{endpoints:r(e.endpoints,ua),totalCount:e.total_count}},oR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ClusterMetricsResponse' failed as data isn't a dictionary.");return{timeseries:r(e.timeseries,Tt)}},Zr=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ClusterSettingsResponse' failed as data isn't a dictionary.");return{settings:r(e.settings,j1)}},rR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AvailableClusterSetting' failed as data isn't a dictionary.");return{defaultValue:e.default_value,deprecated:e.deprecated,description:e.description,maxValue:e.max_value,minValue:e.min_value,name:e.name,regex:e.regex,type:e.type}},pR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ClusterVersion' failed as data isn't a dictionary.");return{availableSettings:r(e.available_settings,rR),endOfLifeAt:p(e.end_of_life_at),logoUrl:e.logo_url,version:e.version,zone:e.zone}},dR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListClusterVersionsResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,versions:r(e.versions,pR)}},lR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListClustersResponse' failed as data isn't a dictionary.");return{clusters:r(e.clusters,Ze),totalCount:e.total_count}},cR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'NodeType' failed as data isn't a dictionary.");return{beta:e.beta,description:e.description,disabled:e.disabled,memory:e.memory,name:e.name,stockStatus:e.stock_status,vcpus:e.vcpus,zone:e.zone}},mR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListNodeTypesResponse' failed as data isn't a dictionary.");return{nodeTypes:r(e.node_types,cR),totalCount:e.total_count}},hR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetAclRulesResponse' failed as data isn't a dictionary.");return{aclRules:r(e.acl_rules,$n)}},gR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetEndpointsResponse' failed as data isn't a dictionary.");return{endpoints:r(e.endpoints,ua)}},fo=(e,t)=>({description:e.description,ip_cidr:e.ipCidr}),uR=(e,t)=>({acl_rules:e.aclRules.map(a=>fo(a))}),vo=(e,t)=>({name:e.name,value:e.value}),fR=(e,t)=>({settings:e.settings.map(a=>vo(a))}),vR=(e,t)=>({}),G1=(e,t)=>({id:e.id,ipam_config:e.ipamConfig!==void 0?vR(e.ipamConfig):void 0,service_ips:e.serviceIps}),B1=(e,t)=>({}),yo=(e,t)=>({...u([{param:"private_network",value:e.privateNetwork!==void 0?G1(e.privateNetwork):void 0},{param:"public_network",value:e.publicNetwork!==void 0?B1(e.publicNetwork):void 0}])}),yR=(e,t)=>({endpoints:e.endpoints.map(a=>yo(a))}),_R=(e,t)=>({acl_rules:e.aclRules!==void 0?e.aclRules.map(a=>fo(a)):void 0,cluster_settings:e.clusterSettings!==void 0?e.clusterSettings.map(a=>vo(a)):void 0,cluster_size:e.clusterSize,endpoints:e.endpoints!==void 0?e.endpoints.map(a=>yo(a)):void 0,name:e.name||_("ins"),node_type:e.nodeType,password:e.password,project_id:e.projectId??t.defaultProjectId,tags:e.tags,tls_enabled:e.tlsEnabled,user_name:e.userName,version:e.version}),wR=(e,t)=>({...u([{param:"version",value:e.version},{param:"node_type",value:e.nodeType},{param:"cluster_size",value:e.clusterSize}])}),SR=(e,t)=>({acl_rules:e.aclRules.map(a=>fo(a))}),bR=(e,t)=>({settings:e.settings.map(a=>vo(a))}),IR=(e,t)=>({endpoints:e.endpoints.map(a=>yo(a))}),TR=(e,t)=>({name:e.name,password:e.password,tags:e.tags,user_name:e.userName}),RR=(e,t)=>({...u([{param:"private_network",value:e.privateNetwork!==void 0?G1(e.privateNetwork):void 0},{param:"public_network",value:e.publicNetwork!==void 0?B1(e.publicNetwork):void 0}])}),$e={"Content-Type":"application/json; charset=utf-8"},ER=class extends w{static LOCALITIES=["fr-par-1","fr-par-2","nl-ams-1","nl-ams-2","pl-waw-1","pl-waw-2"];createCluster=t=>this.client.fetch({body:JSON.stringify(_R(t,this.client.settings)),headers:$e,method:"POST",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters`},Ze);updateCluster=t=>this.client.fetch({body:JSON.stringify(TR(t,this.client.settings)),headers:$e,method:"PATCH",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}`},Ze);getCluster=t=>this.client.fetch({method:"GET",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}`},Ze);waitForCluster=(t,a)=>v(a?.stop??(s=>Promise.resolve(!V1.includes(s.status))),this.getCluster,t,a);pageOfListClusters=(t={})=>this.client.fetch({method:"GET",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["tags",t.tags],["version",t.version])},lR);listClusters=(t={})=>c("clusters",this.pageOfListClusters,t);migrateCluster=t=>this.client.fetch({body:JSON.stringify(wR(t,this.client.settings)),headers:$e,method:"POST",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}/migrate`},Ze);deleteCluster=t=>this.client.fetch({method:"DELETE",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}`},Ze);getClusterMetrics=t=>this.client.fetch({method:"GET",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}/metrics`,urlParams:d(["end_at",t.endAt],["metric_name",t.metricName],["start_at",t.startAt])},oR);pageOfListNodeTypes=t=>this.client.fetch({method:"GET",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/node-types`,urlParams:d(["include_disabled_types",t.includeDisabledTypes],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},mR);listNodeTypes=t=>c("nodeTypes",this.pageOfListNodeTypes,t);pageOfListClusterVersions=t=>this.client.fetch({method:"GET",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/cluster-versions`,urlParams:d(["include_beta",t.includeBeta],["include_deprecated",t.includeDeprecated],["include_disabled",t.includeDisabled],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["version",t.version])},dR);listClusterVersions=t=>c("versions",this.pageOfListClusterVersions,t);getClusterCertificate=t=>this.client.fetch({method:"GET",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}/certificate`,urlParams:d(["dl",1]),responseType:"blob"});renewClusterCertificate=t=>this.client.fetch({body:"{}",headers:$e,method:"POST",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}/renew-certificate`},Ze);addClusterSettings=t=>this.client.fetch({body:JSON.stringify(fR(t,this.client.settings)),headers:$e,method:"POST",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}/settings`},Zr);deleteClusterSetting=t=>this.client.fetch({method:"DELETE",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}/settings/${i("settingName",t.settingName)}`},Ze);setClusterSettings=t=>this.client.fetch({body:JSON.stringify(bR(t,this.client.settings)),headers:$e,method:"PUT",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}/settings`},Zr);setAclRules=t=>this.client.fetch({body:JSON.stringify(SR(t,this.client.settings)),headers:$e,method:"PUT",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}/acls`},hR);addAclRules=t=>this.client.fetch({body:JSON.stringify(uR(t,this.client.settings)),headers:$e,method:"POST",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}/acls`},nR);deleteAclRule=t=>this.client.fetch({method:"DELETE",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/acls/${i("aclId",t.aclId)}`},Ze);getAclRule=t=>this.client.fetch({method:"GET",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/acls/${i("aclId",t.aclId)}`},$n);setEndpoints=t=>this.client.fetch({body:JSON.stringify(IR(t,this.client.settings)),headers:$e,method:"PUT",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}/endpoints`},gR);addEndpoints=t=>this.client.fetch({body:JSON.stringify(yR(t,this.client.settings)),headers:$e,method:"POST",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/clusters/${i("clusterId",t.clusterId)}/endpoints`},sR);deleteEndpoint=t=>this.client.fetch({method:"DELETE",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/endpoints/${i("endpointId",t.endpointId)}`},Ze);getEndpoint=t=>this.client.fetch({method:"GET",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/endpoints/${i("endpointId",t.endpointId)}`},ua);updateEndpoint=t=>this.client.fetch({body:JSON.stringify(RR(t,this.client.settings)),headers:$e,method:"PATCH",path:`/redis/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/endpoints/${i("endpointId",t.endpointId)}`},ua)},zR=Object.freeze({__proto__:null,API:ER,CLUSTER_TRANSIENT_STATUSES:V1}),PR=Object.freeze({__proto__:null,v1:zR}),M1=["deleting"],F1=["deleting"],Z1=["deleting"],nn=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Image' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,name:e.name,namespaceId:e.namespace_id,size:e.size,status:e.status,statusMessage:e.status_message,tags:e.tags,updatedAt:p(e.updated_at),visibility:e.visibility}},Xi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Namespace' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),description:e.description,endpoint:e.endpoint,id:e.id,imageCount:e.image_count,isPublic:e.is_public,name:e.name,organizationId:e.organization_id,projectId:e.project_id,region:e.region,size:e.size,status:e.status,statusMessage:e.status_message,updatedAt:p(e.updated_at)}},Gs=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Tag' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),digest:e.digest,id:e.id,imageId:e.image_id,name:e.name,status:e.status,updatedAt:p(e.updated_at)}},AR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListImagesResponse' failed as data isn't a dictionary.");return{images:r(e.images,nn),totalCount:e.total_count}},CR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListNamespacesResponse' failed as data isn't a dictionary.");return{namespaces:r(e.namespaces,Xi),totalCount:e.total_count}},NR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTagsResponse' failed as data isn't a dictionary.");return{tags:r(e.tags,Gs),totalCount:e.total_count}},$R=(e,t)=>({description:e.description,is_public:e.isPublic,name:e.name||_("ns"),...u([{default:t.defaultProjectId,param:"project_id",value:e.projectId},{default:t.defaultOrganizationId,param:"organization_id",value:e.organizationId}])}),LR=(e,t)=>({visibility:e.visibility}),OR=(e,t)=>({description:e.description,is_public:e.isPublic}),ls={"Content-Type":"application/json; charset=utf-8"},DR=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];pageOfListNamespaces=(t={})=>this.client.fetch({method:"GET",path:`/registry/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},CR);listNamespaces=(t={})=>c("namespaces",this.pageOfListNamespaces,t);getNamespace=t=>this.client.fetch({method:"GET",path:`/registry/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces/${i("namespaceId",t.namespaceId)}`},Xi);waitForNamespace=(t,a)=>v(a?.stop??(s=>Promise.resolve(!F1.includes(s.status))),this.getNamespace,t,a);createNamespace=t=>this.client.fetch({body:JSON.stringify($R(t,this.client.settings)),headers:ls,method:"POST",path:`/registry/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces`},Xi);updateNamespace=t=>this.client.fetch({body:JSON.stringify(OR(t,this.client.settings)),headers:ls,method:"PATCH",path:`/registry/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces/${i("namespaceId",t.namespaceId)}`},Xi);deleteNamespace=t=>this.client.fetch({method:"DELETE",path:`/registry/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/namespaces/${i("namespaceId",t.namespaceId)}`},Xi);pageOfListImages=(t={})=>this.client.fetch({method:"GET",path:`/registry/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/images`,urlParams:d(["name",t.name],["namespace_id",t.namespaceId],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},AR);listImages=(t={})=>c("images",this.pageOfListImages,t);getImage=t=>this.client.fetch({method:"GET",path:`/registry/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/images/${i("imageId",t.imageId)}`},nn);waitForImage=(t,a)=>v(a?.stop??(s=>Promise.resolve(!M1.includes(s.status))),this.getImage,t,a);updateImage=t=>this.client.fetch({body:JSON.stringify(LR(t,this.client.settings)),headers:ls,method:"PATCH",path:`/registry/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/images/${i("imageId",t.imageId)}`},nn);deleteImage=t=>this.client.fetch({method:"DELETE",path:`/registry/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/images/${i("imageId",t.imageId)}`},nn);pageOfListTags=t=>this.client.fetch({method:"GET",path:`/registry/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/images/${i("imageId",t.imageId)}/tags`,urlParams:d(["name",t.name],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},NR);listTags=t=>c("tags",this.pageOfListTags,t);getTag=t=>this.client.fetch({method:"GET",path:`/registry/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/tags/${i("tagId",t.tagId)}`},Gs);waitForTag=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Z1.includes(s.status))),this.getTag,t,a);deleteTag=t=>this.client.fetch({method:"DELETE",path:`/registry/v1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/tags/${i("tagId",t.tagId)}`,urlParams:d(["force",t.force])},Gs)},UR=Object.freeze({__proto__:null,API:DR,IMAGE_TRANSIENT_STATUSES:M1,NAMESPACE_TRANSIENT_STATUSES:F1,TAG_TRANSIENT_STATUSES:Z1}),kR=Object.freeze({__proto__:null,v1:UR}),J1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Folder' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,name:e.name,path:e.path,projectId:e.project_id,region:e.region}},xR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EphemeralProperties' failed as data isn't a dictionary.");return{action:e.action,expiresAt:p(e.expires_at),expiresOnceAccessed:e.expires_once_accessed}},et=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SecretVersion' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),description:e.description,ephemeralProperties:e.ephemeral_properties?xR(e.ephemeral_properties):void 0,isLatest:e.is_latest,revision:e.revision,secretId:e.secret_id,status:e.status,updatedAt:p(e.updated_at)}},VR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EphemeralPolicy' failed as data isn't a dictionary.");return{action:e.action,expiresOnceAccessed:e.expires_once_accessed,timeToLive:e.time_to_live}},Vt=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Secret' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),description:e.description,ephemeralPolicy:e.ephemeral_policy?VR(e.ephemeral_policy):void 0,id:e.id,isManaged:e.is_managed,isProtected:e.is_protected,name:e.name,path:e.path,projectId:e.project_id,region:e.region,status:e.status,tags:e.tags,type:e.type,updatedAt:p(e.updated_at),versionCount:e.version_count}},Jr=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AccessSecretVersionResponse' failed as data isn't a dictionary.");return{data:e.data,dataCrc32:e.data_crc32,revision:e.revision,secretId:e.secret_id}},jR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListFoldersResponse' failed as data isn't a dictionary.");return{folders:r(e.folders,J1),totalCount:e.total_count}},Hr=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSecretVersionsResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,versions:r(e.versions,et)}},GR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSecretsResponse' failed as data isn't a dictionary.");return{secrets:r(e.secrets,Vt),totalCount:e.total_count}},BR=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTagsResponse' failed as data isn't a dictionary.");return{tags:e.tags,totalCount:e.total_count}},MR=(e,t)=>({product:e.product,product_name:e.productName}),FR=(e,t)=>({name:e.name,path:e.path,project_id:e.projectId??t.defaultProjectId}),H1=(e,t)=>({action:e.action,expires_once_accessed:e.expiresOnceAccessed,time_to_live:e.timeToLive}),ZR=(e,t)=>({description:e.description,ephemeral_policy:e.ephemeralPolicy!==void 0?H1(e.ephemeralPolicy):void 0,is_protected:e.isProtected,name:e.name,path:e.path,project_id:e.projectId??t.defaultProjectId,tags:e.tags,type:e.type}),JR=(e,t)=>({additional_chars:e.additionalChars,length:e.length,no_digits:e.noDigits,no_lowercase_letters:e.noLowercaseLetters,no_uppercase_letters:e.noUppercaseLetters}),HR=(e,t)=>({data:e.data,data_crc32:e.dataCrc32,description:e.description,disable_previous:e.disablePrevious,password_generation:e.passwordGeneration!==void 0?JR(e.passwordGeneration):void 0}),KR=(e,t)=>({additional_chars:e.additionalChars,description:e.description,disable_previous:e.disablePrevious,length:e.length,no_digits:e.noDigits,no_lowercase_letters:e.noLowercaseLetters,no_uppercase_letters:e.noUppercaseLetters}),WR=(e,t)=>({description:e.description,ephemeral_policy:e.ephemeralPolicy!==void 0?H1(e.ephemeralPolicy):void 0,name:e.name,path:e.path,tags:e.tags}),QR=(e,t)=>({action:e.action,expires_at:e.expiresAt,expires_once_accessed:e.expiresOnceAccessed}),XR=(e,t)=>({description:e.description,ephemeral_properties:e.ephemeralProperties!==void 0?QR(e.ephemeralProperties):void 0}),be={"Content-Type":"application/json; charset=utf-8"},YR=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];createSecret=t=>this.client.fetch({body:JSON.stringify(ZR(t,this.client.settings)),headers:be,method:"POST",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets`},Vt);createFolder=t=>this.client.fetch({body:JSON.stringify(FR(t,this.client.settings)),headers:be,method:"POST",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/folders`},J1);getSecret=t=>this.client.fetch({method:"GET",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}`},Vt);getSecretByName=t=>this.client.fetch({method:"GET",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets-by-name/${i("secretName",t.secretName)}`,urlParams:d(["project_id",t.projectId])},Vt);updateSecret=t=>this.client.fetch({body:JSON.stringify(WR(t,this.client.settings)),headers:be,method:"PATCH",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}`},Vt);pageOfListSecrets=(t={})=>this.client.fetch({method:"GET",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets`,urlParams:d(["is_ephemeral",t.isEphemeral],["is_managed",t.isManaged],["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["path",t.path],["project_id",t.projectId],["tags",t.tags])},GR);listSecrets=(t={})=>c("secrets",this.pageOfListSecrets,t);pageOfListFolders=(t={})=>this.client.fetch({method:"GET",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/folders`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["path",t.path],["project_id",t.projectId])},jR);listFolders=(t={})=>c("folders",this.pageOfListFolders,t);deleteSecret=t=>this.client.fetch({method:"DELETE",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}`});deleteFolder=t=>this.client.fetch({method:"DELETE",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/folders/${i("folderId",t.folderId)}`});protectSecret=t=>this.client.fetch({body:"{}",headers:be,method:"POST",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/protect`},Vt);unprotectSecret=t=>this.client.fetch({body:"{}",headers:be,method:"POST",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/unprotect`},Vt);addSecretOwner=t=>this.client.fetch({body:JSON.stringify(MR(t,this.client.settings)),headers:be,method:"POST",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/add-owner`});createSecretVersion=t=>this.client.fetch({body:JSON.stringify(HR(t,this.client.settings)),headers:be,method:"POST",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions`},et);generatePassword=t=>this.client.fetch({body:JSON.stringify(KR(t,this.client.settings)),headers:be,method:"POST",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/generate-password`},et);getSecretVersion=t=>this.client.fetch({method:"GET",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions/${i("revision",t.revision)}`},et);getSecretVersionByName=t=>this.client.fetch({method:"GET",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets-by-name/${i("secretName",t.secretName)}/versions/${i("revision",t.revision)}`,urlParams:d(["project_id",t.projectId])},et);updateSecretVersion=t=>this.client.fetch({body:JSON.stringify(XR(t,this.client.settings)),headers:be,method:"PATCH",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions/${i("revision",t.revision)}`},et);pageOfListSecretVersions=t=>this.client.fetch({method:"GET",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["status",t.status])},Hr);listSecretVersions=t=>c("versions",this.pageOfListSecretVersions,t);pageOfListSecretVersionsByName=t=>this.client.fetch({method:"GET",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets-by-name/${i("secretName",t.secretName)}/versions`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["status",t.status])},Hr);listSecretVersionsByName=t=>c("versions",this.pageOfListSecretVersionsByName,t);enableSecretVersion=t=>this.client.fetch({body:"{}",headers:be,method:"POST",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions/${i("revision",t.revision)}/enable`},et);disableSecretVersion=t=>this.client.fetch({body:"{}",headers:be,method:"POST",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions/${i("revision",t.revision)}/disable`},et);accessSecretVersion=t=>this.client.fetch({method:"GET",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions/${i("revision",t.revision)}/access`},Jr);accessSecretVersionByName=t=>this.client.fetch({method:"GET",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets-by-name/${i("secretName",t.secretName)}/versions/${i("revision",t.revision)}/access`,urlParams:d(["project_id",t.projectId])},Jr);destroySecretVersion=t=>this.client.fetch({body:"{}",headers:be,method:"POST",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions/${i("revision",t.revision)}/destroy`},et);pageOfListTags=(t={})=>this.client.fetch({method:"GET",path:`/secret-manager/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/tags`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},BR);listTags=(t={})=>c("tags",this.pageOfListTags,t)},qR=Object.freeze({__proto__:null,API:YR}),eE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EphemeralProperties' failed as data isn't a dictionary.");return{action:e.action,expiresAt:p(e.expires_at),expiresOnceAccessed:e.expires_once_accessed}},pi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SecretVersion' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),description:e.description,ephemeralProperties:e.ephemeral_properties?eE(e.ephemeral_properties):void 0,latest:e.latest,revision:e.revision,secretId:e.secret_id,status:e.status,updatedAt:p(e.updated_at)}},K1=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EphemeralPolicy' failed as data isn't a dictionary.");return{action:e.action,expiresOnceAccessed:e.expires_once_accessed,timeToLive:e.time_to_live}},di=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Secret' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),description:e.description,ephemeralPolicy:e.ephemeral_policy?K1(e.ephemeral_policy):void 0,id:e.id,managed:e.managed,name:e.name,path:e.path,projectId:e.project_id,protected:e.protected,region:e.region,status:e.status,tags:e.tags,type:e.type,updatedAt:p(e.updated_at),versionCount:e.version_count}},tE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AccessSecretVersionResponse' failed as data isn't a dictionary.");return{data:e.data,dataCrc32:e.data_crc32,revision:e.revision,secretId:e.secret_id,type:e.type}},iE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'BrowseSecretsResponseItemFolderDetails' failed as data isn't a dictionary.");return{}},aE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'BrowseSecretsResponseItemSecretDetails' failed as data isn't a dictionary.");return{ephemeralPolicy:e.ephemeral_policy?K1(e.ephemeral_policy):void 0,id:e.id,protected:e.protected,tags:e.tags,versionCount:e.version_count}},nE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'BrowseSecretsResponseItem' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),folder:e.folder?iE(e.folder):void 0,name:e.name,secret:e.secret?aE(e.secret):void 0,updatedAt:p(e.updated_at)}},sE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'BrowseSecretsResponse' failed as data isn't a dictionary.");return{currentPath:e.current_path,items:r(e.items,nE),totalCount:e.total_count}},oE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSecretVersionsResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,versions:r(e.versions,pi)}},rE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListSecretsResponse' failed as data isn't a dictionary.");return{secrets:r(e.secrets,di),totalCount:e.total_count}},pE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListTagsResponse' failed as data isn't a dictionary.");return{tags:e.tags,totalCount:e.total_count}},dE=(e,t)=>({product:e.product}),W1=(e,t)=>({action:e.action,expires_once_accessed:e.expiresOnceAccessed,time_to_live:e.timeToLive}),lE=(e,t)=>({description:e.description,ephemeral_policy:e.ephemeralPolicy!==void 0?W1(e.ephemeralPolicy):void 0,name:e.name,path:e.path,project_id:e.projectId??t.defaultProjectId,protected:e.protected,tags:e.tags,type:e.type}),cE=(e,t)=>({data:e.data,data_crc32:e.dataCrc32,description:e.description,disable_previous:e.disablePrevious}),mE=(e,t)=>({description:e.description,ephemeral_policy:e.ephemeralPolicy!==void 0?W1(e.ephemeralPolicy):void 0,name:e.name,path:e.path,tags:e.tags}),hE=(e,t)=>({action:e.action,expires_at:e.expiresAt,expires_once_accessed:e.expiresOnceAccessed}),gE=(e,t)=>({description:e.description,ephemeral_properties:e.ephemeralProperties!==void 0?hE(e.ephemeralProperties):void 0}),qe={"Content-Type":"application/json; charset=utf-8"},uE=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];createSecret=t=>this.client.fetch({body:JSON.stringify(lE(t,this.client.settings)),headers:qe,method:"POST",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets`},di);getSecret=t=>this.client.fetch({method:"GET",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}`},di);updateSecret=t=>this.client.fetch({body:JSON.stringify(mE(t,this.client.settings)),headers:qe,method:"PATCH",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}`},di);deleteSecret=t=>this.client.fetch({method:"DELETE",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}`});pageOfListSecrets=(t={})=>this.client.fetch({method:"GET",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets`,urlParams:d(["ephemeral",t.ephemeral],["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["path",t.path],["project_id",t.projectId],["tags",t.tags],["type",t.type])},rE);listSecrets=(t={})=>c("secrets",this.pageOfListSecrets,t);browseSecrets=t=>this.client.fetch({method:"GET",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/browse`,urlParams:d(["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["prefix",t.prefix],["project_id",t.projectId],["tags",t.tags])},sE);protectSecret=t=>this.client.fetch({body:"{}",headers:qe,method:"POST",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/protect`},di);unprotectSecret=t=>this.client.fetch({body:"{}",headers:qe,method:"POST",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/unprotect`},di);addSecretOwner=t=>this.client.fetch({body:JSON.stringify(dE(t,this.client.settings)),headers:qe,method:"POST",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/add-owner`});createSecretVersion=t=>this.client.fetch({body:JSON.stringify(cE(t,this.client.settings)),headers:qe,method:"POST",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions`},pi);getSecretVersion=t=>this.client.fetch({method:"GET",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions/${i("revision",t.revision)}`},pi);updateSecretVersion=t=>this.client.fetch({body:JSON.stringify(gE(t,this.client.settings)),headers:qe,method:"PATCH",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions/${i("revision",t.revision)}`},pi);deleteSecretVersion=t=>this.client.fetch({method:"DELETE",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions/${i("revision",t.revision)}`});pageOfListSecretVersions=t=>this.client.fetch({method:"GET",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["status",t.status])},oE);listSecretVersions=t=>c("versions",this.pageOfListSecretVersions,t);accessSecretVersion=t=>this.client.fetch({method:"GET",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions/${i("revision",t.revision)}/access`},tE);enableSecretVersion=t=>this.client.fetch({body:"{}",headers:qe,method:"POST",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions/${i("revision",t.revision)}/enable`},pi);disableSecretVersion=t=>this.client.fetch({body:"{}",headers:qe,method:"POST",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/secrets/${i("secretId",t.secretId)}/versions/${i("revision",t.revision)}/disable`},pi);pageOfListTags=(t={})=>this.client.fetch({method:"GET",path:`/secret-manager/v1beta1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/tags`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId??this.client.settings.defaultProjectId])},pE);listTags=(t={})=>c("tags",this.pageOfListTags,t)},fE=Object.freeze({__proto__:null,API:uE}),vE=Object.freeze({__proto__:null,v1alpha1:qR,v1beta1:fE}),Q1=["creating","deleting","restoring"],Bs=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DatabaseBackup' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),databaseId:e.database_id,downloadUrl:e.download_url,downloadUrlExpiresAt:p(e.download_url_expires_at),expiresAt:p(e.expires_at),id:e.id,organizationId:e.organization_id,projectId:e.project_id,region:e.region,size:e.size,status:e.status}},li=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Database' failed as data isn't a dictionary.");return{cpuCurrent:e.cpu_current,cpuMax:e.cpu_max,cpuMin:e.cpu_min,createdAt:p(e.created_at),endpoint:e.endpoint,engineMajorVersion:e.engine_major_version,id:e.id,name:e.name,organizationId:e.organization_id,projectId:e.project_id,region:e.region,started:e.started,status:e.status}},yE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDatabaseBackupsResponse' failed as data isn't a dictionary.");return{backups:r(e.backups,Bs),totalCount:e.total_count}},_E=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDatabasesResponse' failed as data isn't a dictionary.");return{databases:r(e.databases,li),totalCount:e.total_count}},wE=(e,t)=>({cpu_max:e.cpuMax,cpu_min:e.cpuMin,from_backup_id:e.fromBackupId,name:e.name,project_id:e.projectId??t.defaultProjectId}),SE=(e,t)=>({backup_id:e.backupId}),bE=(e,t)=>({cpu_max:e.cpuMax,cpu_min:e.cpuMin}),xa={"Content-Type":"application/json; charset=utf-8"},IE=class extends w{static LOCALITIES=["fr-par"];createDatabase=t=>this.client.fetch({body:JSON.stringify(wE(t,this.client.settings)),headers:xa,method:"POST",path:`/serverless-sqldb/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/databases`},li);getDatabase=t=>this.client.fetch({method:"GET",path:`/serverless-sqldb/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/databases/${i("databaseId",t.databaseId)}`},li);waitForDatabase=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Q1.includes(s.status))),this.getDatabase,t,a);deleteDatabase=t=>this.client.fetch({method:"DELETE",path:`/serverless-sqldb/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/databases/${i("databaseId",t.databaseId)}`},li);pageOfListDatabases=(t={})=>this.client.fetch({method:"GET",path:`/serverless-sqldb/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/databases`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize],["project_id",t.projectId??this.client.settings.defaultProjectId])},_E);listDatabases=(t={})=>c("databases",this.pageOfListDatabases,t);updateDatabase=t=>this.client.fetch({body:JSON.stringify(bE(t,this.client.settings)),headers:xa,method:"PATCH",path:`/serverless-sqldb/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/databases/${i("databaseId",t.databaseId)}`},li);restoreDatabaseFromBackup=t=>this.client.fetch({body:JSON.stringify(SE(t,this.client.settings)),headers:xa,method:"POST",path:`/serverless-sqldb/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/databases/${i("databaseId",t.databaseId)}/restore`},li);getDatabaseBackup=t=>this.client.fetch({method:"GET",path:`/serverless-sqldb/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backups/${i("backupId",t.backupId)}`},Bs);pageOfListDatabaseBackups=t=>this.client.fetch({method:"GET",path:`/serverless-sqldb/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backups`,urlParams:d(["database_id",t.databaseId],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize],["project_id",t.projectId])},yE);listDatabaseBackups=t=>c("backups",this.pageOfListDatabaseBackups,t);exportDatabaseBackup=t=>this.client.fetch({body:"{}",headers:xa,method:"POST",path:`/serverless-sqldb/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/backups/${i("backupId",t.backupId)}/export`},Bs)},TE={cpuMax:{greaterThanOrEqual:1,lessThanOrEqual:15},cpuMin:{lessThanOrEqual:15},fromBackupId:{ignoreEmpty:!0},name:{maxLength:63,minLength:1}},RE={cpuCurrent:{lessThanOrEqual:15},cpuMax:{greaterThanOrEqual:1,lessThanOrEqual:15},cpuMin:{lessThanOrEqual:15}},EE={page:{greaterThanOrEqual:1},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:1e3}},zE={page:{greaterThanOrEqual:1},pageSize:{greaterThanOrEqual:1,lessThanOrEqual:1e3}},PE={cpuMax:{greaterThanOrEqual:1,lessThanOrEqual:15},cpuMin:{lessThanOrEqual:15}},AE=Object.freeze({__proto__:null,CreateDatabaseRequest:TE,Database:RE,ListDatabaseBackupsRequest:EE,ListDatabasesRequest:zE,UpdateDatabaseRequest:PE}),CE=Object.freeze({__proto__:null,API:IE,DATABASE_TRANSIENT_STATUSES:Q1,ValidationRules:AE}),NE=Object.freeze({__proto__:null,v1alpha1:CE}),$E=Object.freeze({__proto__:null}),X1=["running"],jt=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Human' failed as data isn't a dictionary.");return{altitudeInMeter:e.altitude_in_meter,altitudeInMillimeter:e.altitude_in_millimeter,createdAt:p(e.created_at),eyesColor:e.eyes_color,fingersCount:e.fingers_count,hairCount:e.hair_count,height:e.height,id:e.id,isHappy:e.is_happy,name:e.name,organizationId:e.organization_id,projectId:e.project_id,shoeSize:e.shoe_size,status:e.status,updatedAt:p(e.updated_at)}},LE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListHumansResponse' failed as data isn't a dictionary.");return{humans:r(e.humans,jt),totalCount:e.total_count}},OE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'RegisterResponse' failed as data isn't a dictionary.");return{accessKey:e.access_key,secretKey:e.secret_key}},DE=(e,t)=>({altitude_in_meter:e.altitudeInMeter,altitude_in_millimeter:e.altitudeInMillimeter,eyes_color:e.eyesColor,fingers_count:e.fingersCount,hair_count:e.hairCount,height:e.height,is_happy:e.isHappy,name:e.name,shoe_size:e.shoeSize,...u([{default:t.defaultProjectId,param:"project_id",value:e.projectId},{default:t.defaultOrganizationId,param:"organization_id",value:e.organizationId}])}),UE=(e,t)=>({username:e.username}),kE=(e,t)=>({altitude_in_meter:e.altitudeInMeter,altitude_in_millimeter:e.altitudeInMillimeter,eyes_color:e.eyesColor,fingers_count:e.fingersCount,hair_count:e.hairCount,height:e.height,is_happy:e.isHappy,name:e.name,shoe_size:e.shoeSize}),Oi={"Content-Type":"application/json; charset=utf-8"},xE=class extends w{register=t=>this.client.fetch({body:JSON.stringify(UE(t,this.client.settings)),headers:Oi,method:"POST",path:"/test/v1/register"},OE);pageOfListHumans=(t={})=>this.client.fetch({method:"GET",path:"/test/v1/humans",urlParams:d(["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},LE);listHumans=(t={})=>c("humans",this.pageOfListHumans,t);getHuman=t=>this.client.fetch({method:"GET",path:`/test/v1/humans/${i("humanId",t.humanId)}`},jt);waitForHuman=(t,a)=>v(a?.stop??(s=>Promise.resolve(!X1.includes(s.status))),this.getHuman,t,a);createHuman=t=>this.client.fetch({body:JSON.stringify(DE(t,this.client.settings)),headers:Oi,method:"POST",path:"/test/v1/humans"},jt);updateHuman=t=>this.client.fetch({body:JSON.stringify(kE(t,this.client.settings)),headers:Oi,method:"PATCH",path:`/test/v1/humans/${i("humanId",t.humanId)}`},jt);deleteHuman=t=>this.client.fetch({method:"DELETE",path:`/test/v1/humans/${i("humanId",t.humanId)}`},jt);runHuman=t=>this.client.fetch({body:"{}",headers:Oi,method:"POST",path:`/test/v1/humans/${i("humanId",t.humanId)}/run`},jt);smokeHuman=t=>this.client.fetch({body:"{}",headers:Oi,method:"POST",path:`/test/v1/humans/${i("humanId",t.humanId)}/smoke`},jt)},VE=Object.freeze({__proto__:null,API:xE,HUMAN_TRANSIENT_STATUSES:X1}),jE=Object.freeze({__proto__:null,v1:VE}),Y1=["pending"],q1=["new","sending"],GE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'EmailTry' failed as data isn't a dictionary.");return{code:e.code,message:e.message,rank:e.rank,triedAt:p(e.tried_at)}},yn=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Email' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),flags:e.flags,id:e.id,lastTries:r(e.last_tries,GE),mailFrom:e.mail_from,mailRcpt:e.mail_rcpt,messageId:e.message_id,projectId:e.project_id,rcptTo:e.rcpt_to,rcptType:e.rcpt_type,status:e.status,statusDetails:e.status_details,subject:e.subject,tryCount:e.try_count,updatedAt:p(e.updated_at)}},BE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainRecordsDMARC' failed as data isn't a dictionary.");return{name:e.name,value:e.value}},ME=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainRecords' failed as data isn't a dictionary.");return{dmarc:e.dmarc?BE(e.dmarc):void 0}},FE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainReputation' failed as data isn't a dictionary.");return{previousScore:e.previous_score,previousScoredAt:p(e.previous_scored_at),score:e.score,scoredAt:p(e.scored_at),status:e.status}},ZE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainStatistics' failed as data isn't a dictionary.");return{canceledCount:e.canceled_count,failedCount:e.failed_count,sentCount:e.sent_count,totalCount:e.total_count}},Yi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Domain' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),dkimConfig:e.dkim_config,id:e.id,lastError:e.last_error,lastValidAt:p(e.last_valid_at),name:e.name,nextCheckAt:p(e.next_check_at),organizationId:e.organization_id,projectId:e.project_id,records:e.records?ME(e.records):void 0,region:e.region,reputation:e.reputation?FE(e.reputation):void 0,revokedAt:p(e.revoked_at),spfConfig:e.spf_config,statistics:e.statistics?ZE(e.statistics):void 0,status:e.status}},JE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'CreateEmailResponse' failed as data isn't a dictionary.");return{emails:r(e.emails,yn)}},HE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainLastStatusDkimRecord' failed as data isn't a dictionary.");return{error:e.error,lastValidAt:p(e.last_valid_at),status:e.status}},KE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainLastStatusDmarcRecord' failed as data isn't a dictionary.");return{error:e.error,lastValidAt:p(e.last_valid_at),status:e.status}},WE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainLastStatusSpfRecord' failed as data isn't a dictionary.");return{error:e.error,lastValidAt:p(e.last_valid_at),status:e.status}},QE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DomainLastStatus' failed as data isn't a dictionary.");return{dkimRecord:e.dkim_record?HE(e.dkim_record):void 0,dmarcRecord:e.dmarc_record?KE(e.dmarc_record):void 0,domainId:e.domain_id,domainName:e.domain_name,spfRecord:e.spf_record?WE(e.spf_record):void 0}},XE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDomainsResponse' failed as data isn't a dictionary.");return{domains:r(e.domains,Yi),totalCount:e.total_count}},YE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListEmailsResponse' failed as data isn't a dictionary.");return{emails:r(e.emails,yn),totalCount:e.total_count}},qE=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Statistics' failed as data isn't a dictionary.");return{canceledCount:e.canceled_count,failedCount:e.failed_count,newCount:e.new_count,sendingCount:e.sending_count,sentCount:e.sent_count,totalCount:e.total_count}},ez=(e,t)=>({accept_tos:e.acceptTos,domain_name:e.domainName,project_id:e.projectId??t.defaultProjectId}),Va=(e,t)=>({email:e.email,name:e.name}),tz=(e,t)=>({content:e.content,name:e.name,type:e.type}),iz=(e,t)=>({key:e.key,value:e.value}),az=(e,t)=>({additional_headers:e.additionalHeaders!==void 0?e.additionalHeaders.map(a=>iz(a)):void 0,attachments:e.attachments!==void 0?e.attachments.map(a=>tz(a)):void 0,bcc:e.bcc!==void 0?e.bcc.map(a=>Va(a)):void 0,cc:e.cc!==void 0?e.cc.map(a=>Va(a)):void 0,from:e.from!==void 0?Va(e.from):void 0,html:e.html,project_id:e.projectId??t.defaultProjectId,send_before:e.sendBefore,subject:e.subject,text:e.text,to:e.to!==void 0?e.to.map(a=>Va(a)):void 0}),Di={"Content-Type":"application/json; charset=utf-8"},nz=class extends w{static LOCALITIES=["fr-par"];createEmail=t=>this.client.fetch({body:JSON.stringify(az(t,this.client.settings)),headers:Di,method:"POST",path:`/transactional-email/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/emails`},JE);getEmail=t=>this.client.fetch({method:"GET",path:`/transactional-email/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/emails/${i("emailId",t.emailId)}`},yn);waitForEmail=(t,a)=>v(a?.stop??(s=>Promise.resolve(!q1.includes(s.status))),this.getEmail,t,a);pageOfListEmails=(t={})=>this.client.fetch({method:"GET",path:`/transactional-email/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/emails`,urlParams:d(["domain_id",t.domainId],["flags",t.flags],["mail_from",t.mailFrom],["mail_rcpt",t.mailRcpt],["mail_to",t.mailTo],["message_id",t.messageId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["search",t.search],["since",t.since],["statuses",t.statuses],["subject",t.subject],["until",t.until])},YE);listEmails=(t={})=>c("emails",this.pageOfListEmails,t);getStatistics=(t={})=>this.client.fetch({method:"GET",path:`/transactional-email/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/statistics`,urlParams:d(["domain_id",t.domainId],["mail_from",t.mailFrom],["project_id",t.projectId],["since",t.since],["until",t.until])},qE);cancelEmail=t=>this.client.fetch({body:"{}",headers:Di,method:"POST",path:`/transactional-email/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/emails/${i("emailId",t.emailId)}/cancel`},yn);createDomain=t=>this.client.fetch({body:JSON.stringify(ez(t,this.client.settings)),headers:Di,method:"POST",path:`/transactional-email/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains`},Yi);getDomain=t=>this.client.fetch({method:"GET",path:`/transactional-email/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains/${i("domainId",t.domainId)}`},Yi);waitForDomain=(t,a)=>v(a?.stop??(s=>Promise.resolve(!Y1.includes(s.status))),this.getDomain,t,a);pageOfListDomains=(t={})=>this.client.fetch({method:"GET",path:`/transactional-email/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains`,urlParams:d(["name",t.name],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["status",t.status])},XE);listDomains=(t={})=>c("domains",this.pageOfListDomains,t);revokeDomain=t=>this.client.fetch({body:"{}",headers:Di,method:"POST",path:`/transactional-email/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains/${i("domainId",t.domainId)}/revoke`},Yi);checkDomain=t=>this.client.fetch({body:"{}",headers:Di,method:"POST",path:`/transactional-email/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains/${i("domainId",t.domainId)}/check`},Yi);getDomainLastStatus=t=>this.client.fetch({method:"GET",path:`/transactional-email/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains/${i("domainId",t.domainId)}/verification`},QE)},sz=Object.freeze({__proto__:null,API:nz,DOMAIN_TRANSIENT_STATUSES:Y1,EMAIL_TRANSIENT_STATUSES:q1}),oz=Object.freeze({__proto__:null,v1alpha1:sz}),sn=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PrivateNetwork' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,name:e.name,organizationId:e.organization_id,projectId:e.project_id,subnets:e.subnets,tags:e.tags,updatedAt:p(e.updated_at),zone:e.zone}},rz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListPrivateNetworksResponse' failed as data isn't a dictionary.");return{privateNetworks:r(e.private_networks,sn),totalCount:e.total_count}},pz=(e,t)=>({name:e.name||_("pn"),project_id:e.projectId??t.defaultProjectId,subnets:e.subnets,tags:e.tags}),dz=(e,t)=>({name:e.name,subnets:e.subnets,tags:e.tags}),Kr={"Content-Type":"application/json; charset=utf-8"},lz=class extends w{static LOCALITIES=["fr-par-1","fr-par-2","fr-par-3","nl-ams-1","nl-ams-2","nl-ams-3","pl-waw-1","pl-waw-2"];pageOfListPrivateNetworks=(t={})=>this.client.fetch({method:"GET",path:`/vpc/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/private-networks`,urlParams:d(["include_regional",t.includeRegional],["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["private_network_ids",t.privateNetworkIds],["project_id",t.projectId],["tags",t.tags])},rz);listPrivateNetworks=(t={})=>c("privateNetworks",this.pageOfListPrivateNetworks,t);createPrivateNetwork=(t={})=>this.client.fetch({body:JSON.stringify(pz(t,this.client.settings)),headers:Kr,method:"POST",path:`/vpc/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/private-networks`},sn);getPrivateNetwork=t=>this.client.fetch({method:"GET",path:`/vpc/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}`},sn);updatePrivateNetwork=t=>this.client.fetch({body:JSON.stringify(dz(t,this.client.settings)),headers:Kr,method:"PATCH",path:`/vpc/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}`},sn);deletePrivateNetwork=t=>this.client.fetch({method:"DELETE",path:`/vpc/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}`})},cz=Object.freeze({__proto__:null,API:lz}),mz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Subnet' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,subnet:e.subnet,updatedAt:p(e.updated_at)}},qi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PrivateNetwork' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),dhcpEnabled:e.dhcp_enabled,id:e.id,name:e.name,organizationId:e.organization_id,projectId:e.project_id,region:e.region,subnets:r(e.subnets,mz),tags:e.tags,updatedAt:p(e.updated_at),vpcId:e.vpc_id}},ea=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'VPC' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),id:e.id,isDefault:e.is_default,name:e.name,organizationId:e.organization_id,privateNetworkCount:e.private_network_count,projectId:e.project_id,region:e.region,routingEnabled:e.routing_enabled,tags:e.tags,updatedAt:p(e.updated_at)}},hz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'AddSubnetsResponse' failed as data isn't a dictionary.");return{subnets:e.subnets}},gz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DeleteSubnetsResponse' failed as data isn't a dictionary.");return{subnets:e.subnets}},uz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListPrivateNetworksResponse' failed as data isn't a dictionary.");return{privateNetworks:r(e.private_networks,qi),totalCount:e.total_count}},fz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListVPCsResponse' failed as data isn't a dictionary.");return{totalCount:e.total_count,vpcs:r(e.vpcs,ea)}},vz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetSubnetsResponse' failed as data isn't a dictionary.");return{subnets:e.subnets}},yz=(e,t)=>({subnets:e.subnets}),_z=(e,t)=>({name:e.name||_("pn"),project_id:e.projectId??t.defaultProjectId,subnets:e.subnets,tags:e.tags,vpc_id:e.vpcId}),wz=(e,t)=>({enable_routing:e.enableRouting,name:e.name||_("vpc"),project_id:e.projectId??t.defaultProjectId,tags:e.tags}),Sz=(e,t)=>({subnets:e.subnets}),bz=(e,t)=>({private_network_ids:e.privateNetworkIds,...u([{default:t.defaultOrganizationId,param:"organization_id",value:e.organizationId},{default:t.defaultProjectId,param:"project_id",value:e.projectId}])}),Iz=(e,t)=>({subnets:e.subnets}),Tz=(e,t)=>({name:e.name,tags:e.tags}),Rz=(e,t)=>({name:e.name,tags:e.tags}),Be={"Content-Type":"application/json; charset=utf-8"},Ez=class extends w{static LOCALITIES=["fr-par","nl-ams","pl-waw"];pageOfListVPCs=(t={})=>this.client.fetch({method:"GET",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/vpcs`,urlParams:d(["is_default",t.isDefault],["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["routing_enabled",t.routingEnabled],["tags",t.tags])},fz);listVPCs=(t={})=>c("vpcs",this.pageOfListVPCs,t);createVPC=t=>this.client.fetch({body:JSON.stringify(wz(t,this.client.settings)),headers:Be,method:"POST",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/vpcs`},ea);getVPC=t=>this.client.fetch({method:"GET",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/vpcs/${i("vpcId",t.vpcId)}`},ea);updateVPC=t=>this.client.fetch({body:JSON.stringify(Rz(t,this.client.settings)),headers:Be,method:"PATCH",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/vpcs/${i("vpcId",t.vpcId)}`},ea);deleteVPC=t=>this.client.fetch({method:"DELETE",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/vpcs/${i("vpcId",t.vpcId)}`});pageOfListPrivateNetworks=(t={})=>this.client.fetch({method:"GET",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/private-networks`,urlParams:d(["dhcp_enabled",t.dhcpEnabled],["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["private_network_ids",t.privateNetworkIds],["project_id",t.projectId],["tags",t.tags],["vpc_id",t.vpcId])},uz);listPrivateNetworks=(t={})=>c("privateNetworks",this.pageOfListPrivateNetworks,t);createPrivateNetwork=(t={})=>this.client.fetch({body:JSON.stringify(_z(t,this.client.settings)),headers:Be,method:"POST",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/private-networks`},qi);getPrivateNetwork=t=>this.client.fetch({method:"GET",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}`},qi);updatePrivateNetwork=t=>this.client.fetch({body:JSON.stringify(Tz(t,this.client.settings)),headers:Be,method:"PATCH",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}`},qi);deletePrivateNetwork=t=>this.client.fetch({method:"DELETE",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}`});migrateZonalPrivateNetworks=(t={})=>this.client.fetch({body:JSON.stringify(bz(t,this.client.settings)),headers:Be,method:"POST",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/private-networks/migrate-zonal`});enableDHCP=t=>this.client.fetch({body:"{}",headers:Be,method:"POST",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}/enable-dhcp`},qi);enableRouting=t=>this.client.fetch({body:"{}",headers:Be,method:"POST",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/vpcs/${i("vpcId",t.vpcId)}/enable-routing`},ea);setSubnets=t=>this.client.fetch({body:JSON.stringify(Iz(t,this.client.settings)),headers:Be,method:"PUT",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}/subnets`},vz);addSubnets=t=>this.client.fetch({body:JSON.stringify(yz(t,this.client.settings)),headers:Be,method:"POST",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}/subnets`},hz);deleteSubnets=t=>this.client.fetch({body:JSON.stringify(Sz(t,this.client.settings)),headers:Be,method:"DELETE",path:`/vpc/v2/regions/${i("region",t.region??this.client.settings.defaultRegion)}/private-networks/${i("privateNetworkId",t.privateNetworkId)}/subnets`},gz)},zz=Object.freeze({__proto__:null,API:Ez}),Pz=Object.freeze({__proto__:null,v1:cz,v2:zz}),el=["attaching","configuring","detaching"],tl=["allocating","configuring","stopping","deleting"],na=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DHCP' failed as data isn't a dictionary.");return{address:e.address,createdAt:p(e.created_at),dnsLocalName:e.dns_local_name,dnsSearch:e.dns_search,dnsServersOverride:e.dns_servers_override,enableDynamic:e.enable_dynamic,id:e.id,organizationId:e.organization_id,poolHigh:e.pool_high,poolLow:e.pool_low,projectId:e.project_id,pushDefaultRoute:e.push_default_route,pushDnsServer:e.push_dns_server,rebindTimer:e.rebind_timer,renewTimer:e.renew_timer,subnet:e.subnet,updatedAt:p(e.updated_at),validLifetime:e.valid_lifetime,zone:e.zone}},Az=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'IpamConfig' failed as data isn't a dictionary.");return{ipamIpId:e.ipam_ip_id,pushDefaultRoute:e.push_default_route}},sa=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GatewayNetwork' failed as data isn't a dictionary.");return{address:e.address,createdAt:p(e.created_at),dhcp:e.dhcp?na(e.dhcp):void 0,enableDhcp:e.enable_dhcp,enableMasquerade:e.enable_masquerade,gatewayId:e.gateway_id,id:e.id,ipamConfig:e.ipam_config?Az(e.ipam_config):void 0,macAddress:e.mac_address,privateNetworkId:e.private_network_id,status:e.status,updatedAt:p(e.updated_at),zone:e.zone}},oa=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'IP' failed as data isn't a dictionary.");return{address:e.address,createdAt:p(e.created_at),gatewayId:e.gateway_id,id:e.id,organizationId:e.organization_id,projectId:e.project_id,reverse:e.reverse,tags:e.tags,updatedAt:p(e.updated_at),zone:e.zone}},ra=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DHCPEntry' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),gatewayNetworkId:e.gateway_network_id,hostname:e.hostname,id:e.id,ipAddress:e.ip_address,macAddress:e.mac_address,type:e.type,updatedAt:p(e.updated_at),zone:e.zone}},il=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'GatewayType' failed as data isn't a dictionary.");return{bandwidth:e.bandwidth,name:e.name,zone:e.zone}},ci=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Gateway' failed as data isn't a dictionary.");return{bastionEnabled:e.bastion_enabled,bastionPort:e.bastion_port,canUpgradeTo:e.can_upgrade_to,createdAt:p(e.created_at),gatewayNetworks:r(e.gateway_networks,sa),id:e.id,ip:e.ip?oa(e.ip):void 0,ipMobilityEnabled:e.ip_mobility_enabled,isLegacy:e.is_legacy,name:e.name,organizationId:e.organization_id,projectId:e.project_id,smtpEnabled:e.smtp_enabled,status:e.status,tags:e.tags,type:e.type?il(e.type):void 0,updatedAt:p(e.updated_at),upstreamDnsServers:e.upstream_dns_servers,version:e.version,zone:e.zone}},pa=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'PATRule' failed as data isn't a dictionary.");return{createdAt:p(e.created_at),gatewayId:e.gateway_id,id:e.id,privateIp:e.private_ip,privatePort:e.private_port,protocol:e.protocol,publicPort:e.public_port,updatedAt:p(e.updated_at),zone:e.zone}},Cz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDHCPEntriesResponse' failed as data isn't a dictionary.");return{dhcpEntries:r(e.dhcp_entries,ra),totalCount:e.total_count}},Nz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListDHCPsResponse' failed as data isn't a dictionary.");return{dhcps:r(e.dhcps,na),totalCount:e.total_count}},$z=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListGatewayNetworksResponse' failed as data isn't a dictionary.");return{gatewayNetworks:r(e.gateway_networks,sa),totalCount:e.total_count}},Lz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListGatewayTypesResponse' failed as data isn't a dictionary.");return{types:r(e.types,il)}},Oz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListGatewaysResponse' failed as data isn't a dictionary.");return{gateways:r(e.gateways,ci),totalCount:e.total_count}},Dz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListIPsResponse' failed as data isn't a dictionary.");return{ips:r(e.ips,oa),totalCount:e.total_count}},Uz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListPATRulesResponse' failed as data isn't a dictionary.");return{patRules:r(e.pat_rules,pa),totalCount:e.total_count}},kz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetDHCPEntriesResponse' failed as data isn't a dictionary.");return{dhcpEntries:r(e.dhcp_entries,ra)}},xz=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'SetPATRulesResponse' failed as data isn't a dictionary.");return{patRules:r(e.pat_rules,pa)}},al=(e,t)=>({address:e.address,dns_local_name:e.dnsLocalName,dns_search:e.dnsSearch,dns_servers_override:e.dnsServersOverride,enable_dynamic:e.enableDynamic,pool_high:e.poolHigh,pool_low:e.poolLow,project_id:e.projectId??t.defaultProjectId,push_default_route:e.pushDefaultRoute,push_dns_server:e.pushDnsServer,rebind_timer:e.rebindTimer,renew_timer:e.renewTimer,subnet:e.subnet,valid_lifetime:e.validLifetime}),Vz=(e,t)=>({gateway_network_id:e.gatewayNetworkId,ip_address:e.ipAddress,mac_address:e.macAddress}),jz=(e,t)=>({ipam_ip_id:e.ipamIpId,push_default_route:e.pushDefaultRoute}),Gz=(e,t)=>({enable_dhcp:e.enableDhcp,enable_masquerade:e.enableMasquerade,gateway_id:e.gatewayId,private_network_id:e.privateNetworkId,...u([{param:"dhcp_id",value:e.dhcpId},{param:"dhcp",value:e.dhcp!==void 0?al(e.dhcp,t):void 0},{param:"address",value:e.address},{param:"ipam_config",value:e.ipamConfig!==void 0?jz(e.ipamConfig):void 0}])}),Bz=(e,t)=>({bastion_port:e.bastionPort,enable_bastion:e.enableBastion,enable_smtp:e.enableSmtp,ip_id:e.ipId,name:e.name||_("gw"),project_id:e.projectId??t.defaultProjectId,tags:e.tags,type:e.type,upstream_dns_servers:e.upstreamDnsServers}),Mz=(e,t)=>({project_id:e.projectId??t.defaultProjectId,tags:e.tags}),Fz=(e,t)=>({gateway_id:e.gatewayId,private_ip:e.privateIp,private_port:e.privatePort,protocol:e.protocol,public_port:e.publicPort}),Zz=(e,t)=>({ip_address:e.ipAddress,mac_address:e.macAddress}),Jz=(e,t)=>({dhcp_entries:e.dhcpEntries!==void 0?e.dhcpEntries.map(a=>Zz(a)):void 0,gateway_network_id:e.gatewayNetworkId}),Hz=(e,t)=>({private_ip:e.privateIp,private_port:e.privatePort,protocol:e.protocol,public_port:e.publicPort}),Kz=(e,t)=>({gateway_id:e.gatewayId,pat_rules:e.patRules.map(a=>Hz(a))}),Wz=(e,t)=>({ip_address:e.ipAddress}),Qz=(e,t)=>({address:e.address,dns_local_name:e.dnsLocalName,dns_search:e.dnsSearch,dns_servers_override:e.dnsServersOverride,enable_dynamic:e.enableDynamic,pool_high:e.poolHigh,pool_low:e.poolLow,push_default_route:e.pushDefaultRoute,push_dns_server:e.pushDnsServer,rebind_timer:e.rebindTimer,renew_timer:e.renewTimer,subnet:e.subnet,valid_lifetime:e.validLifetime}),Xz=(e,t)=>({ipam_ip_id:e.ipamIpId,push_default_route:e.pushDefaultRoute}),Yz=(e,t)=>({enable_dhcp:e.enableDhcp,enable_masquerade:e.enableMasquerade,...u([{param:"dhcp_id",value:e.dhcpId},{param:"address",value:e.address},{param:"ipam_config",value:e.ipamConfig!==void 0?Xz(e.ipamConfig):void 0}])}),qz=(e,t)=>({bastion_port:e.bastionPort,enable_bastion:e.enableBastion,enable_smtp:e.enableSmtp,name:e.name,tags:e.tags,upstream_dns_servers:e.upstreamDnsServers}),eP=(e,t)=>({gateway_id:e.gatewayId,reverse:e.reverse,tags:e.tags}),tP=(e,t)=>({private_ip:e.privateIp,private_port:e.privatePort,protocol:e.protocol,public_port:e.publicPort}),te={"Content-Type":"application/json; charset=utf-8"},iP=class extends w{static LOCALITIES=["fr-par-1","fr-par-2","nl-ams-1","nl-ams-2","nl-ams-3","pl-waw-1","pl-waw-2","pl-waw-3"];pageOfListGateways=(t={})=>this.client.fetch({method:"GET",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateways`,urlParams:d(["name",t.name],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["private_network_id",t.privateNetworkId],["project_id",t.projectId],["status",t.status],["tags",t.tags],["type",t.type])},Oz);listGateways=(t={})=>c("gateways",this.pageOfListGateways,t);getGateway=t=>this.client.fetch({method:"GET",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateways/${i("gatewayId",t.gatewayId)}`},ci);waitForGateway=(t,a)=>v(a?.stop??(s=>Promise.resolve(!tl.includes(s.status))),this.getGateway,t,a);createGateway=t=>this.client.fetch({body:JSON.stringify(Bz(t,this.client.settings)),headers:te,method:"POST",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateways`},ci);updateGateway=t=>this.client.fetch({body:JSON.stringify(qz(t,this.client.settings)),headers:te,method:"PATCH",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateways/${i("gatewayId",t.gatewayId)}`},ci);deleteGateway=t=>this.client.fetch({method:"DELETE",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateways/${i("gatewayId",t.gatewayId)}`,urlParams:d(["cleanup_dhcp",t.cleanupDhcp])});upgradeGateway=t=>this.client.fetch({body:"{}",headers:te,method:"POST",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateways/${i("gatewayId",t.gatewayId)}/upgrade`},ci);enableIPMobility=t=>this.client.fetch({body:"{}",headers:te,method:"POST",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateways/${i("gatewayId",t.gatewayId)}/enable-ip-mobility`});pageOfListGatewayNetworks=(t={})=>this.client.fetch({method:"GET",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateway-networks`,urlParams:d(["dhcp_id",t.dhcpId],["enable_masquerade",t.enableMasquerade],["gateway_id",t.gatewayId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["private_network_id",t.privateNetworkId],["status",t.status])},$z);listGatewayNetworks=(t={})=>c("gatewayNetworks",this.pageOfListGatewayNetworks,t);getGatewayNetwork=t=>this.client.fetch({method:"GET",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateway-networks/${i("gatewayNetworkId",t.gatewayNetworkId)}`},sa);waitForGatewayNetwork=(t,a)=>v(a?.stop??(s=>Promise.resolve(!el.includes(s.status))),this.getGatewayNetwork,t,a);createGatewayNetwork=t=>this.client.fetch({body:JSON.stringify(Gz(t,this.client.settings)),headers:te,method:"POST",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateway-networks`},sa);updateGatewayNetwork=t=>this.client.fetch({body:JSON.stringify(Yz(t,this.client.settings)),headers:te,method:"PATCH",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateway-networks/${i("gatewayNetworkId",t.gatewayNetworkId)}`},sa);deleteGatewayNetwork=t=>this.client.fetch({method:"DELETE",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateway-networks/${i("gatewayNetworkId",t.gatewayNetworkId)}`,urlParams:d(["cleanup_dhcp",t.cleanupDhcp])});pageOfListDHCPs=(t={})=>this.client.fetch({method:"GET",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/dhcps`,urlParams:d(["address",t.address],["has_address",t.hasAddress],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId])},Nz);listDHCPs=(t={})=>c("dhcps",this.pageOfListDHCPs,t);getDHCP=t=>this.client.fetch({method:"GET",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/dhcps/${i("dhcpId",t.dhcpId)}`},na);createDHCP=t=>this.client.fetch({body:JSON.stringify(al(t,this.client.settings)),headers:te,method:"POST",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/dhcps`},na);updateDHCP=t=>this.client.fetch({body:JSON.stringify(Qz(t,this.client.settings)),headers:te,method:"PATCH",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/dhcps/${i("dhcpId",t.dhcpId)}`},na);deleteDHCP=t=>this.client.fetch({method:"DELETE",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/dhcps/${i("dhcpId",t.dhcpId)}`});pageOfListDHCPEntries=(t={})=>this.client.fetch({method:"GET",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/dhcp-entries`,urlParams:d(["gateway_network_id",t.gatewayNetworkId],["hostname",t.hostname],["ip_address",t.ipAddress],["mac_address",t.macAddress],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["type",t.type])},Cz);listDHCPEntries=(t={})=>c("dhcpEntries",this.pageOfListDHCPEntries,t);getDHCPEntry=t=>this.client.fetch({method:"GET",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/dhcp-entries/${i("dhcpEntryId",t.dhcpEntryId)}`},ra);createDHCPEntry=t=>this.client.fetch({body:JSON.stringify(Vz(t,this.client.settings)),headers:te,method:"POST",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/dhcp-entries`},ra);updateDHCPEntry=t=>this.client.fetch({body:JSON.stringify(Wz(t,this.client.settings)),headers:te,method:"PATCH",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/dhcp-entries/${i("dhcpEntryId",t.dhcpEntryId)}`},ra);setDHCPEntries=t=>this.client.fetch({body:JSON.stringify(Jz(t,this.client.settings)),headers:te,method:"PUT",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/dhcp-entries`},kz);deleteDHCPEntry=t=>this.client.fetch({method:"DELETE",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/dhcp-entries/${i("dhcpEntryId",t.dhcpEntryId)}`});pageOfListPATRules=(t={})=>this.client.fetch({method:"GET",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/pat-rules`,urlParams:d(["gateway_id",t.gatewayId],["order_by",t.orderBy],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["private_ip",t.privateIp],["protocol",t.protocol])},Uz);listPATRules=(t={})=>c("patRules",this.pageOfListPATRules,t);getPATRule=t=>this.client.fetch({method:"GET",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/pat-rules/${i("patRuleId",t.patRuleId)}`},pa);createPATRule=t=>this.client.fetch({body:JSON.stringify(Fz(t,this.client.settings)),headers:te,method:"POST",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/pat-rules`},pa);updatePATRule=t=>this.client.fetch({body:JSON.stringify(tP(t,this.client.settings)),headers:te,method:"PATCH",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/pat-rules/${i("patRuleId",t.patRuleId)}`},pa);setPATRules=t=>this.client.fetch({body:JSON.stringify(Kz(t,this.client.settings)),headers:te,method:"PUT",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/pat-rules`},xz);deletePATRule=t=>this.client.fetch({method:"DELETE",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/pat-rules/${i("patRuleId",t.patRuleId)}`});listGatewayTypes=(t={})=>this.client.fetch({method:"GET",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateway-types`},Lz);pageOfListIPs=(t={})=>this.client.fetch({method:"GET",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips`,urlParams:d(["is_free",t.isFree],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["reverse",t.reverse],["tags",t.tags])},Dz);listIPs=(t={})=>c("ips",this.pageOfListIPs,t);getIP=t=>this.client.fetch({method:"GET",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips/${i("ipId",t.ipId)}`},oa);createIP=(t={})=>this.client.fetch({body:JSON.stringify(Mz(t,this.client.settings)),headers:te,method:"POST",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips`},oa);updateIP=t=>this.client.fetch({body:JSON.stringify(eP(t,this.client.settings)),headers:te,method:"PATCH",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips/${i("ipId",t.ipId)}`},oa);deleteIP=t=>this.client.fetch({method:"DELETE",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/ips/${i("ipId",t.ipId)}`});refreshSSHKeys=t=>this.client.fetch({body:"{}",headers:te,method:"POST",path:`/vpc-gw/v1/zones/${i("zone",t.zone??this.client.settings.defaultZone)}/gateways/${i("gatewayId",t.gatewayId)}/refresh-ssh-keys`},ci)},aP=Object.freeze({__proto__:null,API:iP,GATEWAY_NETWORK_TRANSIENT_STATUSES:el,GATEWAY_TRANSIENT_STATUSES:tl}),nP=Object.freeze({__proto__:null,v1:aP}),nl=["delivering","deleting","migrating"],sP=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'HostingCpanelUrls' failed as data isn't a dictionary.");return{dashboard:e.dashboard,webmail:e.webmail}},oP=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'HostingOption' failed as data isn't a dictionary.");return{id:e.id,name:e.name}},mi=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Hosting' failed as data isn't a dictionary.");return{controlPanelName:e.control_panel_name,cpanelUrls:e.cpanel_urls?sP(e.cpanel_urls):void 0,createdAt:p(e.created_at),dnsStatus:e.dns_status,domain:e.domain,id:e.id,ipv4:e.ipv4,ipv6:e.ipv6,offerEndOfLife:e.offer_end_of_life,offerId:e.offer_id,offerName:e.offer_name,options:r(e.options,oP),organizationId:e.organization_id,platformGroup:e.platform_group,platformHostname:e.platform_hostname,platformNumber:e.platform_number,projectId:e.project_id,protected:e.protected,region:e.region,status:e.status,tags:e.tags,updatedAt:p(e.updated_at),username:e.username}},rP=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DnsRecord' failed as data isn't a dictionary.");return{name:e.name,priority:e.priority,status:e.status,ttl:e.ttl,type:e.type,value:e.value}},pP=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Nameserver' failed as data isn't a dictionary.");return{hostname:e.hostname,isDefault:e.is_default,status:e.status}},dP=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'DnsRecords' failed as data isn't a dictionary.");return{nameServers:r(e.name_servers,pP),records:r(e.records,rP),status:e.status}},lP=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ControlPanel' failed as data isn't a dictionary.");return{available:e.available,logoUrl:e.logo_url,name:e.name}},cP=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListControlPanelsResponse' failed as data isn't a dictionary.");return{controlPanels:r(e.control_panels,lP),totalCount:e.total_count}},mP=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListHostingsResponse' failed as data isn't a dictionary.");return{hostings:r(e.hostings,mi),totalCount:e.total_count}},hP=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'OfferProduct' failed as data isn't a dictionary.");return{databasesQuota:e.databases_quota,emailAccountsQuota:e.email_accounts_quota,emailStorageQuota:e.email_storage_quota,hostingStorageQuota:e.hosting_storage_quota,maxAddonDomains:e.max_addon_domains,name:e.name,option:e.option,ram:e.ram,supportIncluded:e.support_included,vCpu:e.v_cpu}},gP=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'Offer' failed as data isn't a dictionary.");return{available:e.available,billingOperationPath:e.billing_operation_path,controlPanelName:e.control_panel_name,endOfLife:e.end_of_life,id:e.id,price:e.price?L(e.price):void 0,product:e.product?hP(e.product):void 0,quotaWarnings:e.quota_warnings}},uP=e=>{if(!n(e))throw new TypeError("Unmarshalling the type 'ListOffersResponse' failed as data isn't a dictionary.");return{offers:r(e.offers,gP)}},fP=(e,t)=>({update_all_records:e.updateAllRecords,update_mail_record:e.updateMailRecord,update_nameservers:e.updateNameservers,update_web_record:e.updateWebRecord}),vP=(e,t)=>({domain:e.domain,domain_configuration:e.domainConfiguration!==void 0?fP(e.domainConfiguration):void 0,email:e.email,language:e.language,offer_id:e.offerId,option_ids:e.optionIds,project_id:e.projectId??t.defaultProjectId,tags:e.tags}),yP=(e,t)=>({email:e.email,offer_id:e.offerId,option_ids:e.optionIds,protected:e.protected,tags:e.tags}),cs={"Content-Type":"application/json; charset=utf-8"},Ms=class extends w{static LOCALITIES=["fr-par","nl-ams"];createHosting=t=>this.client.fetch({body:JSON.stringify(vP(t,this.client.settings)),headers:cs,method:"POST",path:`/webhosting/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hostings`},mi);pageOfListHostings=(t={})=>this.client.fetch({method:"GET",path:`/webhosting/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hostings`,urlParams:d(["control_panels",t.controlPanels],["domain",t.domain],["order_by",t.orderBy],["organization_id",t.organizationId],["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize],["project_id",t.projectId],["statuses",t.statuses],["tags",t.tags])},mP);listHostings=(t={})=>c("hostings",this.pageOfListHostings,t);getHosting=t=>this.client.fetch({method:"GET",path:`/webhosting/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hostings/${i("hostingId",t.hostingId)}`},mi);waitForHosting=(t,a)=>v(a?.stop??(s=>Promise.resolve(!nl.includes(s.status))),this.getHosting,t,a);updateHosting=t=>this.client.fetch({body:JSON.stringify(yP(t,this.client.settings)),headers:cs,method:"PATCH",path:`/webhosting/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hostings/${i("hostingId",t.hostingId)}`},mi);deleteHosting=t=>this.client.fetch({method:"DELETE",path:`/webhosting/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hostings/${i("hostingId",t.hostingId)}`},mi);restoreHosting=t=>this.client.fetch({body:"{}",headers:cs,method:"POST",path:`/webhosting/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/hostings/${i("hostingId",t.hostingId)}/restore`},mi);getDomainDnsRecords=t=>this.client.fetch({method:"GET",path:`/webhosting/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/domains/${i("domain",t.domain)}/dns-records`},dP);listOffers=t=>this.client.fetch({method:"GET",path:`/webhosting/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/offers`,urlParams:d(["control_panels",t.controlPanels],["hosting_id",t.hostingId],["only_options",t.onlyOptions],["order_by",t.orderBy],["without_options",t.withoutOptions])},uP);pageOfListControlPanels=(t={})=>this.client.fetch({method:"GET",path:`/webhosting/v1alpha1/regions/${i("region",t.region??this.client.settings.defaultRegion)}/control-panels`,urlParams:d(["page",t.page],["page_size",t.pageSize??this.client.settings.defaultPageSize])},cP);listControlPanels=(t={})=>c("controlPanels",this.pageOfListControlPanels,t)},_P={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},wP={page:{greaterThan:0},pageSize:{greaterThan:0,lessThanOrEqual:100}},SP=Object.freeze({__proto__:null,ListControlPanelsRequest:_P,ListHostingsRequest:wP}),bP=Object.freeze({__proto__:null,API:Ms,HOSTING_TRANSIENT_STATUSES:nl,ValidationRules:SP}),IP=Object.freeze({__proto__:null,v1alpha1:bP});f.API=w;f.Account=dh;f.AppleSilicon=wh;f.BareMetal=m2;f.Billing=O2;f.Block=i6;f.Cockpit=N6;f.Container=pg;f.Dedibox=xu;f.DocumentDB=Yf;f.Domain=s5;f.Errors=Um;f.FlexibleIP=b5;f.Function=a8;f.IAM=r7;f.IOT=h_;f.IPAM=E_;f.IPFS=Z_;f.Instance=zy;f.Jobs=hw;f.K8S=rS;f.LB=Tb;f.LLMInference=Xb;f.MNQ=UI;f.Marketplace=nI;f.RDB=tR;f.Redis=PR;f.Registry=kR;f.Secret=vE;f.ServerlessSQLDB=NE;f.Std=$E;f.Test=jE;f.TransactionalEmail=oz;f.VPC=Pz;f.VPCGW=nP;f.Webhosting=IP;f.addAsyncHeaderInterceptor=Yr;f.authenticateWithSessionToken=Zc;f.createAdvancedClient=sp;f.createClient=Dm;f.createExponentialBackoffStrategy=Te;f.enableConsoleLogger=Nc;f.enrichForPagination=c;f.isJSONObject=n;f.marshalMoney=Fm;f.marshalScwFile=Mm;f.marshalTimeSeries=Jm;f.resolveOneOf=u;f.setLogger=Qr;f.tryAtIntervals=Re;f.unmarshalArrayOfObject=r;f.unmarshalDate=p;f.unmarshalMapOfObject=It;f.unmarshalMoney=L;f.unmarshalScwFile=Bm;f.unmarshalServiceInfo=Gm;f.unmarshalTimeSeries=Tt;f.unmarshalTimeSeriesPoint=op;f.urlParams=d;f.validatePathParam=i;f.waitForResource=v;f.withAdditionalInterceptors=em;f.withDefaultPageSize=Xc;f.withHTTPClient=Qc;f.withProfile=tp;f.withUserAgent=Yc;f.withUserAgentSuffix=qc});var pl=ve(Ln=>{"use strict";var Zt=require("process"),TP=require("node:os"),RP=require("node:path"),ol=require("node:process"),EP=require("fs");function zP(e){var t=Object.create(null);return e&&Object.keys(e).forEach(function(a){if(a!=="default"){var s=Object.getOwnPropertyDescriptor(e,a);Object.defineProperty(t,a,s.get?s:{enumerable:!0,get:function(){return e[a]}})}}),t.default=e,Object.freeze(t)}var _o=zP(RP),Rt=function(e){return e.ScwConfigPath="SCW_CONFIG_PATH",e.ScwAccessKey="SCW_ACCESS_KEY",e.ScwSecretKey="SCW_SECRET_KEY",e.ScwAPIURL="SCW_API_URL",e.ScwDefaultOrganizationId="SCW_DEFAULT_ORGANIZATION_ID",e.ScwDefaultProjectId="SCW_DEFAULT_PROJECT_ID",e.ScwDefaultRegion="SCW_DEFAULT_REGION",e.ScwDefaultZone="SCW_DEFAULT_ZONE",e}({}),PP=()=>{let e=ol.env.XDG_CONFIG_HOME;return typeof e=="string"&&e.length>0?_o.join(e,"scw"):_o.join(TP.homedir(),".config","scw")},AP=()=>{let e=ol.env[Rt.ScwConfigPath];return typeof e=="string"&&e.length>0?e:_o.join(PP(),"config.yaml")},CP=/(^|\s)[;#]/,NP=/^\s*([^]+):\s*$/,$P=/^\s*(.+?)\s*:\s*(.+?)\s*$/,LP=e=>{let t=!1,a="default",s={};return typeof e!="string"||e.split(/\r?\n/).forEach(o=>{let l=o.split(CP)[0],m=NP.exec(l);if(m)a=void 0,m[1]==="profiles"?t=!0:t&&([,a]=m);else if(a){let h=$P.exec(l);h&&(typeof s[a]!="object"&&(s[a]={}),[,,s[a][h[1]]]=h)}}),s},OP=e=>{let t=EP.readFileSync(e,"utf-8");return LP(t)},DP=e=>({accessKey:e.access_key,apiURL:e.api_url,defaultOrganizationId:e.default_organization_id,defaultProjectId:e.default_project_id,defaultRegion:e.default_region,defaultZone:e.default_zone,secretKey:e.secret_key}),UP=()=>({accessKey:Zt.env[Rt.ScwAccessKey],apiURL:Zt.env[Rt.ScwAPIURL],defaultOrganizationId:Zt.env[Rt.ScwDefaultOrganizationId],defaultProjectId:Zt.env[Rt.ScwDefaultProjectId],defaultRegion:Zt.env[Rt.ScwDefaultRegion],defaultZone:Zt.env[Rt.ScwDefaultZone],secretKey:Zt.env[Rt.ScwSecretKey]}),rl=e=>{let t=e?.filepath??AP();if(typeof t!="string"||t.length===0)throw new Error("Could not find the path to the configuration file.");let a=OP(t);return Object.keys(a).reduce((s,o)=>({...s,[o]:DP(a[o])}),{})},kP=e=>{let t=rl(e),a=e?.profileName??"default",s=t[a];if(typeof s!="object")throw new Error(`Could not find the desired profile '${a}' in the configuration file.`);return s};Ln.loadAllProfilesFromConfigurationFile=rl;Ln.loadProfileFromConfigurationFile=kP;Ln.loadProfileFromEnvironmentValues=UP});var HP={};Ol(HP,{default:()=>JP});module.exports=Dl(HP);var Na=Ir();if(!global.fetch){let e=Na.fetch.bind({});global.fetch=e,global.fetch.polyfill=!0,global.Response=Na.Response,global.Headers=Na.Headers,global.Request=Na.Request}var Q=require("@raycast/api");var K=require("react");var ce=function(e){return e.ERROR="error",e.IDLE="idle",e.LOADING="loading",e.SUCCESS="success",e}({}),$a="Key should be a string",La=20;var ei=class e{static maxConcurrent=La;static started=0;static cachedData={};static queue={};isCalled=!1;isCancelled=!0;status=ce.IDLE;observers=[];loadCount=0;isFirstLoading=!0;constructor(t){this.key=t.key,this.method=t.method,t.enabled&&(this.status=ce.LOADING),this.data=e.cachedData[this.key],t.notifyChanges&&this.observers.push(t.notifyChanges)}notifyChanges(){this.timeout&&clearTimeout(this.timeout),this.timeout=setTimeout(()=>{this.observers.forEach(t=>t())})}getData(){return e.cachedData[this.key]}tryLaunch=async()=>(e.started<e.maxConcurrent?(e.started+=1,e.queue[this.key]=this.launch()):e.queue[this.key]=new Promise(t=>{setTimeout(t)}).then(this.tryLaunch),e.queue[this.key]);load=async(t=!1)=>((t||!this.isCalled)&&(this.isCalled=!0,this.status!==ce.LOADING&&(this.status=ce.LOADING,this.notifyChanges()),e.queue[this.key]=this.tryLaunch()),e.queue[this.key]);launch=async()=>{try{this.isCancelled=!1,this.loadCount+=1;let t=await this.method();return this.isCancelled||(e.cachedData[this.key]=t,this.status=ce.SUCCESS,this.data=t,this.error=void 0,this.dataUpdatedAt=Date.now()),this.isCalled=!1,this.isFirstLoading=!1,e.started-=1,delete e.queue[this.key],this.notifyChanges(),t}catch(t){if(this.isCancelled||(this.status=ce.ERROR,this.error=t),this.isCalled=!1,this.isFirstLoading=!1,e.started-=1,delete e.queue[this.key],this.notifyChanges(),!this.isCancelled)throw t;return}};clearData(){e.cachedData[this.key]=void 0}cancel(){e.started-=1,delete e.queue[this.key],this.isCancelled=!0,this.status=ce.IDLE}addObserver(t){this.observers.push(t)}removeObserver(t){let a=this.observers.indexOf(t);a>-1&&this.observers.splice(a,1)}};var Tr=require("react/jsx-runtime"),Rr=(0,K.createContext)(void 0),Cc=({children:e,cacheKeyPrefix:t="",onError:a,maxConcurrentRequests:s=La})=>{let o=(0,K.useRef)({}),l=(0,K.useCallback)(b=>`${t?`${t}-`:""}${b}`,[t]),m=(0,K.useCallback)(b=>o.current[l(b)],[l]),h=(0,K.useCallback)((b,V)=>{if(ei.maxConcurrent!==s&&(ei.maxConcurrent=s),b&&typeof b=="string"){let M=new ei({...V,key:l(b)});return o.current[M.key]=M,M}throw new Error($a)},[l,s]),g=(0,K.useCallback)((b,V)=>{let M=m(b);return M||h(b,V)},[h,m]),P=(0,K.useCallback)(b=>{if(b&&typeof b=="string")m(b)?.clearData();else throw new Error($a)},[m]),J=(0,K.useCallback)(()=>{Object.values(o.current).forEach(b=>{b.clearData()})},[]),X=(0,K.useCallback)(async b=>{if(b&&typeof b=="string")await m(b)?.load(!0);else throw new Error($a)},[m]),xe=(0,K.useCallback)(async()=>{await Promise.all(Object.values(o.current).map(b=>b.load(!0)))},[]),G=(0,K.useCallback)(b=>b?m(b)?.getData():Object.values(o.current).reduce((V,M)=>({...V,[M.key]:M.getData()}),{}),[m]),R=(0,K.useCallback)(b=>b?m(b)?()=>m(b)?.load(!0):void 0:Object.entries(o.current).reduce((V,[M,{load:E}])=>({...V,[M]:()=>E(!0)}),{}),[m]),B=(0,K.useMemo)(()=>({addRequest:h,cacheKeyPrefix:t,clearAllCachedData:J,clearCachedData:P,getCachedData:G,getOrAddRequest:g,getReloads:R,getRequest:m,onError:a,reload:X,reloadAll:xe}),[h,t,J,P,G,g,m,R,a,X,xe]);return(0,Tr.jsx)(Rr.Provider,{value:B,children:e})},ts=()=>(0,K.useContext)(Rr),Dt=Cc;var D=require("react");var Er=e=>Array.isArray(e)?e.filter(t=>t!=null).map(t=>t instanceof Date?t.toISOString():t?.toString()).join("."):e.toString();var se=(e,t,{enabled:a=!0,onError:s,onSuccess:o,keepPreviousData:l=!1,needPolling:m=!0,pollingInterval:h,initialData:g,dataLifetime:P}={})=>{let{getOrAddRequest:J,onError:X}=ts(),xe=(0,D.useRef)(t),G=(0,D.useRef)(o),R=(0,D.useRef)(s??X),B=(0,D.useRef)(m),[,b]=(0,D.useState)(0),V=(0,D.useCallback)(()=>{b(rt=>rt+1)},[]),M=(0,D.useMemo)(()=>Er(e),[e]),E=J(M,{enabled:a,method:xe.current});(0,D.useEffect)(()=>(E.addObserver(V),()=>{E.removeObserver(V)}),[E,V]);let Ve=(0,D.useMemo)(()=>!!(a&&(!E.dataUpdatedAt||!P||E.dataUpdatedAt&&P&&E.dataUpdatedAt+P<Date.now())),[a,E.dataUpdatedAt,P]),fe=(0,D.useRef)(Ve),We=(0,D.useRef)(E.data),Ti=E.status===ce.LOADING||fe.current,Il=E.status===ce.SUCCESS,Tl=E.status===ce.ERROR,Rl=E.status===ce.IDLE&&!a,El=!!(h&&(typeof m=="function"&&(E.isFirstLoading||m(E.data))||typeof m!="function"&&m)),zl=(0,D.useCallback)(()=>E.load(!0).then(G.current).catch(R.current),[E]);return(0,D.useEffect)(()=>{B.current=m},[m]),(0,D.useEffect)(()=>{E.method=t},[t,E]),(0,D.useEffect)(()=>{G.current=o},[o]),(0,D.useEffect)(()=>{R.current=s??X},[s,X]),(0,D.useEffect)(()=>{l&&(We.current=E.data)},[E.data,l]),(0,D.useEffect)(()=>{if(Ve){let rt=()=>{},Ia=G.current??rt,Gn=R.current??rt;E.load().then(Ia).catch(Gn)}fe.current=!1},[Ve,E]),(0,D.useEffect)(()=>{let rt;return h&&(rt=setInterval(()=>{if(B.current&&typeof B.current=="function"&&B.current(E.data)||typeof B.current!="function"&&B.current&&!E.isCalled){let Ia=()=>{},Gn=G.current??Ia,Pl=R.current??Ia;E.load(!0).then(Gn).catch(Pl)}},h)),()=>{rt&&clearInterval(rt)}},[h,E]),{data:E.isFirstLoading?g:E.data,error:E.error,isError:Tl,isIdle:Rl,isLoading:Ti,isPolling:El,isSuccess:Il,previousData:We.current,reload:zl}};var Et=require("@raycast/api"),Un=require("react");var y=Uo(sl());var De=require("@raycast/api"),ll=Uo(pl()),{error:xP}=console,wo=e=>e instanceof Error?e.message:String(e);var dl=async(e,t)=>{let a={title:t,message:wo(e),primaryAction:{style:De.Alert.ActionStyle.Destructive,title:"Open Preferences",onAction:()=>{(0,De.openExtensionPreferences)().then().catch(xP)}}};await(0,De.confirmAlert)(a)},cl=()=>{try{let{accessKey:e,secretKey:t,defaultOrganizationId:a,defaultRegion:s,defaultZone:o,profileName:l}=(0,De.getPreferenceValues)();if(l)try{return(0,ll.loadProfileFromConfigurationFile)({profileName:l})}catch{dl("Your profile is not well configure, check your file ~/.config/scw/config.yaml",`Profile Config ${l}`).then().catch(()=>{})}return{accessKey:e,secretKey:t,defaultOrganizationId:a,defaultRegion:s,defaultZone:o}}catch(e){throw dl(wo(e),"Get Preferences").catch(()=>{}),new Error(wo(e))}};var pe=()=>(()=>{let t=cl(),a=(0,y.createAdvancedClient)((0,y.withProfile)(t),(0,y.withUserAgent)("Raycast"));return(0,y.enableConsoleLogger)("silent"),{appleSiliconV1Alpha1:new y.AppleSilicon.v1alpha1.API(a),blockV1Alpha1:new y.Block.v1alpha1.API(a),cockpitV1Beta1:new y.Cockpit.v1beta1.API(a),containerV1Beta1:new y.Container.v1beta1.API(a),documentDBV1Beta1:new y.DocumentDB.v1beta1.API(a),domainRegistrarV2beta1:new y.Domain.v2beta1.RegistrarAPI(a),domainV2beta1:new y.Domain.v2beta1.API(a),elasticMetalV1:new y.BareMetal.v1.API(a),functionV1beta1:new y.Function.v1beta1.API(a),iamV1alpha1:new y.IAM.v1alpha1.API(a),instanceV1:new y.Instance.v1.API(a),iotV1:new y.IOT.v1.API(a),ipamV1:new y.IPAM.v1.API(a),ipfsV1Alpha1:new y.IPFS.v1alpha1.API(a),jobsV1alpha1:new y.Jobs.v1alpha1.API(a),k8sV1:new y.K8S.v1.API(a),loadbalancerV1:new y.LB.v1.ZonedAPI(a),vpcV2:new y.VPC.v2.API(a),publicGatewaysV1:new y.VPCGW.v1.API(a),redisV1:new y.Redis.v1.API(a),registryV1:new y.Registry.v1.API(a),relationalDatabaseV1:new y.RDB.v1.API(a),secretManager:new y.Secret.v1beta1.API(a),transactionalEmailV1alpha1:new y.TransactionalEmail.v1alpha1.API(a),webhostingV1alpha1:new y.Webhosting.v1alpha1.API(a)}})();var So=(e,t)=>{let{iamV1alpha1:a}=pe(),s=["iam","api-keys","all",Object.entries(e).sort()].flat(3);return se(s,()=>a.listAPIKeys(e).all(),t)};var bo=(e,t)=>{let{iamV1alpha1:a}=pe(),s=["iam","application",Object.entries(e).sort()].flat(3);return se(s,async()=>a.getApplication(e),t)};var Sa=(e,t)=>{let{iamV1alpha1:a}=pe(),s=["iam","applications","all",Object.entries(e).sort()].flat(3);return se(s,async()=>a.listApplications(e).all(),t)};var Io=(e,t)=>{let{iamV1alpha1:a}=pe(),s=["iam","groups","all",Object.entries(e).sort()].flat(3);return se(s,async()=>a.listGroups(e).all(),t)};var To=(e,t)=>{let{iamV1alpha1:a}=pe(),s=["iam","policies","all",Object.entries(e).sort()].flat(3);return se(s,async()=>a.listPolicies(e).all(),t)};var Ro=(e,t)=>{let{iamV1alpha1:a}=pe(),s=["iam","user",Object.entries(e).sort()].flat(3);return se(s,async()=>a.getUser(e),t)};var ba=(e,t)=>{let{iamV1alpha1:a}=pe(),s=["iam","users","all",Object.entries(e).sort()].flat(3);return se(s,async()=>a.listUsers(e).all(),t)};var Ue=require("@raycast/api");var Jt=require("@raycast/api");var oe=require("react/jsx-runtime"),VP=({userId:e})=>{let{data:t}=Ro({userId:e});return(0,oe.jsxs)(oe.Fragment,{children:[(0,oe.jsx)(Jt.List.Item.Detail.Metadata.Separator,{}),(0,oe.jsx)(Jt.List.Item.Detail.Metadata.Label,{title:"User ID",text:e,icon:{source:"dark/iam-user.svg"}}),(0,oe.jsx)(Jt.List.Item.Detail.Metadata.Label,{title:"User Email",text:t?.email,icon:{source:"dark/iam-user.svg"}})]})},jP=({applicationId:e})=>{let{data:t}=bo({applicationId:e});return(0,oe.jsxs)(oe.Fragment,{children:[(0,oe.jsx)(Jt.List.Item.Detail.Metadata.Separator,{}),(0,oe.jsx)(Jt.List.Item.Detail.Metadata.Label,{title:"Application ID",text:e,icon:{source:"dark/iam-application.svg"}}),(0,oe.jsx)(Jt.List.Item.Detail.Metadata.Label,{title:"Application Name",text:t?.name,icon:{source:"dark/iam-application.svg"}})]})},ml=({apiKey:e})=>e.userId?(0,oe.jsx)(VP,{userId:e.userId}):e.applicationId?(0,oe.jsx)(jP,{applicationId:e.applicationId}):null;var ue=require("react/jsx-runtime"),Eo=({apiKey:e})=>(0,ue.jsx)(Ue.List.Item.Detail,{metadata:(0,ue.jsxs)(Ue.List.Item.Detail.Metadata,{children:[(0,ue.jsx)(Ue.List.Item.Detail.Metadata.Label,{title:"Access Key",text:e.accessKey}),(0,ue.jsx)(Ue.List.Item.Detail.Metadata.Label,{title:"Description",text:e.description}),(0,ue.jsx)(Ue.List.Item.Detail.Metadata.Label,{title:"Creation IP",text:e.creationIp}),(0,ue.jsx)(Ue.List.Item.Detail.Metadata.Label,{title:"Default Project Id",text:e.defaultProjectId}),(0,ue.jsx)(Ue.List.Item.Detail.Metadata.Separator,{}),(0,ue.jsx)(Ue.List.Item.Detail.Metadata.Label,{title:"Created At",text:e.createdAt?.toDateString()}),(0,ue.jsx)(Ue.List.Item.Detail.Metadata.Label,{title:"Updated At",text:e.updatedAt?.toDateString()}),(0,ue.jsx)(Ue.List.Item.Detail.Metadata.Label,{title:"Expiration Date",text:e.expiresAt?.toDateString()??"Never"}),(0,ue.jsx)(ml,{apiKey:e})]})});var On=require("@raycast/api"),Dn=require("react/jsx-runtime"),GP=["access_key_asc","access_key_desc","created_at_asc","created_at_desc","expires_at_asc","expires_at_desc","updated_at_asc","updated_at_desc"],zo=({setOrderBy:e})=>(0,Dn.jsx)(On.List.Dropdown,{tooltip:"Select OrderBy",storeValue:!0,onChange:e,children:(0,Dn.jsx)(On.List.Dropdown.Section,{title:"Select OrderBy",children:GP.map(t=>(0,Dn.jsx)(On.List.Dropdown.Item,{title:t,value:t},t))})});var nt=require("react/jsx-runtime"),kn=()=>{let[e,t]=(0,Un.useReducer)(h=>!h,!1),[a,s]=(0,Un.useState)("access_key_asc"),{data:o=[],isLoading:l}=So({orderBy:a});return(0,nt.jsxs)(Et.List,{isLoading:l&&!o,isShowingDetail:e,searchBarPlaceholder:"Search API Keys \u2026",searchBarAccessory:(0,nt.jsx)(zo,{setOrderBy:h=>s(h)}),children:[o.map(h=>(0,nt.jsx)(Et.List.Item,{title:h.accessKey,subtitle:h.description,detail:(0,nt.jsx)(Eo,{apiKey:h}),actions:(0,nt.jsx)(Et.ActionPanel,{children:(0,nt.jsx)(Et.Action,{title:"More Information",onAction:t})})},h.accessKey)),(0,nt.jsx)(Et.List.EmptyView,{title:"No API Keys found"})]})};var Je=require("@raycast/api"),fl=require("react");var ae=require("@raycast/api"),Ee=require("react/jsx-runtime"),BP=e=>e.status==="activated"?{source:ae.Icon.CircleFilled,tintColor:ae.Color.Green}:e.status==="invitation_pending"?{source:ae.Icon.CircleProgress,tintColor:ae.Color.Blue}:null,hl=({user:e})=>(0,Ee.jsx)(ae.List.Item.Detail,{metadata:(0,Ee.jsxs)(ae.List.Item.Detail.Metadata,{children:[(0,Ee.jsx)(ae.List.Item.Detail.Metadata.Label,{title:"Email",text:e.email}),(0,Ee.jsx)(ae.List.Item.Detail.Metadata.Label,{title:"2FA Enabled",text:e.mfa?"Yes":"No"}),(0,Ee.jsx)(ae.List.Item.Detail.Metadata.Separator,{}),(0,Ee.jsx)(ae.List.Item.Detail.Metadata.Label,{title:"Status",text:e.status,icon:BP(e)}),(0,Ee.jsx)(ae.List.Item.Detail.Metadata.Label,{title:"Type",text:e.type}),(0,Ee.jsx)(ae.List.Item.Detail.Metadata.Separator,{}),(0,Ee.jsx)(ae.List.Item.Detail.Metadata.Label,{title:"Created At",text:e.createdAt?.toDateString()}),(0,Ee.jsx)(ae.List.Item.Detail.Metadata.Label,{title:"Updated At",text:e.updatedAt?.toDateString()})]})});var bi=require("@raycast/api");var gl="https://console.scaleway.com";var MP=()=>`${gl}/iam/users`,Po=e=>`${MP()}/${e.id}/overview`;var Ii=require("react/jsx-runtime"),ul=({user:e,toggleIsDetailOpen:t})=>(0,Ii.jsxs)(bi.ActionPanel,{children:[(0,Ii.jsx)(bi.Action,{title:"More Information",onAction:t}),(0,Ii.jsx)(bi.Action.OpenInBrowser,{url:Po(e)}),(0,Ii.jsx)(bi.Action.CopyToClipboard,{content:Po(e)})]});var Ht=require("react/jsx-runtime"),Ao=()=>{let[e,t]=(0,fl.useReducer)(l=>!l,!1),{data:a=[],isLoading:s}=ba({orderBy:"created_at_desc"});return(0,Ht.jsxs)(Je.List,{isLoading:s&&!a,isShowingDetail:e,searchBarPlaceholder:"Search Users \u2026",children:[a.map(l=>(0,Ht.jsx)(Je.List.Item,{title:l.email,subtitle:l.type,icon:{source:{dark:"iam-user@dark.svg",light:"iam-user@light.svg"}},accessories:[{text:"2FA",icon:l.mfa?{source:Je.Icon.Checkmark,tintColor:Je.Color.Green}:{source:Je.Icon.XMarkCircleFilled,tintColor:Je.Color.Red}}],detail:(0,Ht.jsx)(hl,{user:l}),actions:(0,Ht.jsx)(ul,{user:l,toggleIsDetailOpen:t})},l.id)),(0,Ht.jsx)(Je.List.EmptyView,{title:"No Users found"})]})};var Pt=require("@raycast/api"),yl=require("react");var st=require("@raycast/api"),He=require("react/jsx-runtime"),vl=({application:e})=>(0,He.jsx)(st.List.Item.Detail,{metadata:(0,He.jsxs)(st.List.Item.Detail.Metadata,{children:[(0,He.jsx)(st.List.Item.Detail.Metadata.Label,{title:"Name",text:e.name}),(0,He.jsx)(st.List.Item.Detail.Metadata.Label,{title:"Description",text:e.description}),(0,He.jsx)(st.List.Item.Detail.Metadata.Label,{title:"API Keys link",text:e.nbApiKeys.toString()}),(0,He.jsx)(st.List.Item.Detail.Metadata.Separator,{}),(0,He.jsx)(st.List.Item.Detail.Metadata.Label,{title:"Created At",text:e.createdAt?.toDateString()}),(0,He.jsx)(st.List.Item.Detail.Metadata.Label,{title:"Updated At",text:e.updatedAt?.toDateString()})]})});var zt=require("react/jsx-runtime"),Co=()=>{let[e,t]=(0,yl.useReducer)(l=>!l,!1),{data:a=[],isLoading:s}=Sa({orderBy:"created_at_desc"});return(0,zt.jsxs)(Pt.List,{isLoading:s&&!a,isShowingDetail:e,searchBarPlaceholder:"Search Applications \u2026",children:[a.map(l=>(0,zt.jsx)(Pt.List.Item,{title:l.name,subtitle:l.description,icon:{source:{dark:"iam-application@dark.svg",light:"iam-application@light.svg"}},detail:(0,zt.jsx)(vl,{application:l}),actions:(0,zt.jsx)(Pt.ActionPanel,{children:(0,zt.jsx)(Pt.Action,{title:"More Information",onAction:t})})},l.id)),(0,zt.jsx)(Pt.List.EmptyView,{title:"No Applications found"})]})};var Ct=require("@raycast/api"),wl=require("react");var de=require("@raycast/api");var Z=require("react/jsx-runtime"),_l=({group:e})=>{let{data:t}=ba({userIds:e.userIds},{enabled:e.userIds.length>=1}),{data:a}=Sa({applicationIds:e.applicationIds},{enabled:e.applicationIds.length>=1});return(0,Z.jsx)(de.List.Item.Detail,{metadata:(0,Z.jsxs)(de.List.Item.Detail.Metadata,{children:[(0,Z.jsx)(de.List.Item.Detail.Metadata.Label,{title:"Name",text:e.name}),(0,Z.jsx)(de.List.Item.Detail.Metadata.Label,{title:"Description",text:e.description}),(0,Z.jsx)(de.List.Item.Detail.Metadata.Separator,{}),(0,Z.jsx)(de.List.Item.Detail.Metadata.Label,{title:"Created At",text:e.createdAt?.toDateString()}),(0,Z.jsx)(de.List.Item.Detail.Metadata.Label,{title:"Updated At",text:e.updatedAt?.toDateString()}),a?(0,Z.jsxs)(Z.Fragment,{children:[(0,Z.jsx)(de.List.Item.Detail.Metadata.Separator,{}),(0,Z.jsx)(de.List.Item.Detail.Metadata.TagList,{title:"Applications",children:a.map(s=>(0,Z.jsx)(de.List.Item.Detail.Metadata.TagList.Item,{text:s.name},s.id))})]}):null,t&&t.length>=1?(0,Z.jsxs)(Z.Fragment,{children:[(0,Z.jsx)(de.List.Item.Detail.Metadata.Separator,{}),(0,Z.jsx)(de.List.Item.Detail.Metadata.TagList,{title:"Users",children:t.map(s=>(0,Z.jsx)(de.List.Item.Detail.Metadata.TagList.Item,{text:s.email},s.id))})]}):null]})})};var At=require("react/jsx-runtime"),FP=e=>(e.applicationIds.length||0)+(e.userIds.length||0),No=()=>{let[e,t]=(0,wl.useReducer)(l=>!l,!1),{data:a=[],isLoading:s}=Io({orderBy:"created_at_desc"});return(0,At.jsxs)(Ct.List,{isLoading:s&&!a,isShowingDetail:e,searchBarPlaceholder:"Search Groups \u2026",children:[a.map(l=>(0,At.jsx)(Ct.List.Item,{title:l.name,subtitle:l.description,detail:(0,At.jsx)(_l,{group:l}),accessories:[{text:`Members: ${FP(l)}`}],actions:(0,At.jsx)(Ct.ActionPanel,{children:(0,At.jsx)(Ct.Action,{title:"More Information",onAction:t})})},l.id)),(0,At.jsx)(Ct.List.EmptyView,{title:"No Groups found"})]})};var Nt=require("@raycast/api"),jn=require("react");var Ke=require("@raycast/api"),ke=require("react/jsx-runtime"),$o=({policy:e})=>(0,ke.jsx)(Ke.List.Item.Detail,{metadata:(0,ke.jsxs)(Ke.List.Item.Detail.Metadata,{children:[(0,ke.jsx)(Ke.List.Item.Detail.Metadata.Label,{title:"Name",text:e.name}),(0,ke.jsx)(Ke.List.Item.Detail.Metadata.Label,{title:"Description",text:e.description}),(0,ke.jsx)(Ke.List.Item.Detail.Metadata.Label,{title:"ID",text:e.id}),(0,ke.jsx)(Ke.List.Item.Detail.Metadata.Separator,{}),(0,ke.jsx)(Ke.List.Item.Detail.Metadata.Label,{title:"Created At",text:e.createdAt?.toDateString()}),(0,ke.jsx)(Ke.List.Item.Detail.Metadata.Label,{title:"Updated At",text:e.updatedAt?.toDateString()}),(0,ke.jsx)(Ke.List.Item.Detail.Metadata.Separator,{})]})});var xn=require("@raycast/api"),Vn=require("react/jsx-runtime"),ZP=["created_at_asc","created_at_desc","policy_name_asc","policy_name_desc"],Lo=({setOrderBy:e})=>(0,Vn.jsx)(xn.List.Dropdown,{tooltip:"Select OrderBy",storeValue:!0,onChange:e,children:(0,Vn.jsx)(xn.List.Dropdown.Section,{title:"Select OrderBy",children:ZP.map(t=>(0,Vn.jsx)(xn.List.Dropdown.Item,{title:t,value:t},t))})});var ot=require("react/jsx-runtime"),Oo=()=>{let[e,t]=(0,jn.useReducer)(h=>!h,!1),[a,s]=(0,jn.useState)("policy_name_asc"),{data:o=[],isLoading:l}=To({orderBy:a});return(0,ot.jsxs)(Nt.List,{isLoading:l&&!o,isShowingDetail:e,searchBarPlaceholder:"Search Policies Keys \u2026",searchBarAccessory:(0,ot.jsx)(Lo,{setOrderBy:h=>s(h)}),children:[o.map(h=>(0,ot.jsx)(Nt.List.Item,{title:h.name,subtitle:h.description,icon:{source:{dark:"iam-policy@dark.svg",light:"iam-policy@light.svg"}},detail:(0,ot.jsx)($o,{policy:h}),actions:(0,ot.jsx)(Nt.ActionPanel,{children:(0,ot.jsx)(Nt.Action,{title:"More Information",onAction:t})})},h.id)),(0,ot.jsx)(Nt.List.EmptyView,{title:"No API Keys found"})]})};var C=require("react/jsx-runtime"),Sl=()=>(0,C.jsxs)(Q.Grid,{children:[(0,C.jsx)(Q.Grid.Item,{title:"Users",content:{source:{dark:"icons/iam-user@dark.svg",light:"icons/iam-user@light.svg"}},actions:(0,C.jsx)(Q.ActionPanel,{children:(0,C.jsx)(Q.Action.Push,{title:"List Users",target:(0,C.jsx)(Dt,{children:(0,C.jsx)(Ao,{})})})})},"Users"),(0,C.jsx)(Q.Grid.Item,{title:"Applications",content:{source:{dark:"icons/iam-application@dark.svg",light:"icons/iam-application@light.svg"}},actions:(0,C.jsx)(Q.ActionPanel,{children:(0,C.jsx)(Q.Action.Push,{title:"List Applications",target:(0,C.jsx)(Dt,{children:(0,C.jsx)(Co,{})})})})},"Applications"),(0,C.jsx)(Q.Grid.Item,{title:"Groups",content:{source:{dark:"icons/iam-group@dark.svg",light:"icons/iam-group@light.svg"}},actions:(0,C.jsx)(Q.ActionPanel,{children:(0,C.jsx)(Q.Action.Push,{title:"List Groups",target:(0,C.jsx)(Dt,{children:(0,C.jsx)(No,{})})})})},"Groups"),(0,C.jsx)(Q.Grid.Item,{title:"API Keys",content:{source:{dark:"icons/iam-policy@dark.svg",light:"icons/iam-policy@light.svg"}},actions:(0,C.jsx)(Q.ActionPanel,{children:(0,C.jsx)(Q.Action.Push,{title:"List API Keys",target:(0,C.jsx)(Dt,{children:(0,C.jsx)(kn,{})})})})},"keys"),(0,C.jsx)(Q.Grid.Item,{title:"Policies",content:{source:{dark:"icons/iam-policy@dark.svg",light:"icons/iam-policy@light.svg"}},actions:(0,C.jsx)(Q.ActionPanel,{children:(0,C.jsx)(Q.Action.Push,{title:"List Policies",target:(0,C.jsx)(Dt,{children:(0,C.jsx)(Oo,{})})})})},"policies")]});var bl=require("react/jsx-runtime"),JP=()=>(0,bl.jsx)(Sl,{});
