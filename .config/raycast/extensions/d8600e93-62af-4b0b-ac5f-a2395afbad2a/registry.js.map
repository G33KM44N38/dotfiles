{
  "version": 3,
  "sources": ["../node_modules/webidl-conversions/lib/index.js", "../node_modules/whatwg-url/lib/utils.js", "../node_modules/tr46/lib/mappingTable.json", "../node_modules/tr46/index.js", "../node_modules/whatwg-url/lib/url-state-machine.js", "../node_modules/whatwg-url/lib/URL-impl.js", "../node_modules/whatwg-url/lib/URL.js", "../node_modules/whatwg-url/lib/public-api.js", "../node_modules/node-fetch/lib/index.js", "../node_modules/cross-fetch/dist/node-ponyfill.js", "../node_modules/@scaleway/configuration-loader/dist/index.cjs", "../node_modules/@scaleway/sdk/dist/index.cjs", "../src/registry.tsx", "../node_modules/cross-fetch/dist/node-polyfill.js", "../node_modules/@scaleway/use-dataloader/dist/DataLoaderProvider.js", "../node_modules/@scaleway/use-dataloader/dist/constants.js", "../node_modules/@scaleway/use-dataloader/dist/dataloader.js", "../node_modules/@scaleway/use-dataloader/dist/useDataLoader.js", "../node_modules/@scaleway/use-dataloader/dist/helpers.js", "../src/products/registry/Images.tsx", "../src/helpers/getPreferenceUser.ts", "../src/constants.ts", "../src/products/registry/pages/images/ImageDetail.tsx", "../src/helpers/bytesToSize.ts", "../src/helpers/locality.ts", "../src/products/registry/status.ts", "../src/products/registry/pages/images/ImageAction.tsx", "../src/products/registry/urls.ts", "../src/products/registry/NamespaceAction.tsx", "../src/products/registry/pages/namespaces/NamespaceDetail.tsx", "../src/products/registry/pages/namespaces/NamespaceDropdown.tsx", "../src/products/registry/queries/useNamespacesQuery.ts", "../src/helpers/fetchLocalities.ts", "../src/helpers/useAPI.ts", "../src/products/registry/queries/useImagesQuery.ts", "../src/products/registry/Registry.tsx"],
  "sourcesContent": ["\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n", "\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n", "[[[0,44],\"disallowed_STD3_valid\"],[[45,46],\"valid\"],[[47,47],\"disallowed_STD3_valid\"],[[48,57],\"valid\"],[[58,64],\"disallowed_STD3_valid\"],[[65,65],\"mapped\",[97]],[[66,66],\"mapped\",[98]],[[67,67],\"mapped\",[99]],[[68,68],\"mapped\",[100]],[[69,69],\"mapped\",[101]],[[70,70],\"mapped\",[102]],[[71,71],\"mapped\",[103]],[[72,72],\"mapped\",[104]],[[73,73],\"mapped\",[105]],[[74,74],\"mapped\",[106]],[[75,75],\"mapped\",[107]],[[76,76],\"mapped\",[108]],[[77,77],\"mapped\",[109]],[[78,78],\"mapped\",[110]],[[79,79],\"mapped\",[111]],[[80,80],\"mapped\",[112]],[[81,81],\"mapped\",[113]],[[82,82],\"mapped\",[114]],[[83,83],\"mapped\",[115]],[[84,84],\"mapped\",[116]],[[85,85],\"mapped\",[117]],[[86,86],\"mapped\",[118]],[[87,87],\"mapped\",[119]],[[88,88],\"mapped\",[120]],[[89,89],\"mapped\",[121]],[[90,90],\"mapped\",[122]],[[91,96],\"disallowed_STD3_valid\"],[[97,122],\"valid\"],[[123,127],\"disallowed_STD3_valid\"],[[128,159],\"disallowed\"],[[160,160],\"disallowed_STD3_mapped\",[32]],[[161,167],\"valid\",[],\"NV8\"],[[168,168],\"disallowed_STD3_mapped\",[32,776]],[[169,169],\"valid\",[],\"NV8\"],[[170,170],\"mapped\",[97]],[[171,172],\"valid\",[],\"NV8\"],[[173,173],\"ignored\"],[[174,174],\"valid\",[],\"NV8\"],[[175,175],\"disallowed_STD3_mapped\",[32,772]],[[176,177],\"valid\",[],\"NV8\"],[[178,178],\"mapped\",[50]],[[179,179],\"mapped\",[51]],[[180,180],\"disallowed_STD3_mapped\",[32,769]],[[181,181],\"mapped\",[956]],[[182,182],\"valid\",[],\"NV8\"],[[183,183],\"valid\"],[[184,184],\"disallowed_STD3_mapped\",[32,807]],[[185,185],\"mapped\",[49]],[[186,186],\"mapped\",[111]],[[187,187],\"valid\",[],\"NV8\"],[[188,188],\"mapped\",[49,8260,52]],[[189,189],\"mapped\",[49,8260,50]],[[190,190],\"mapped\",[51,8260,52]],[[191,191],\"valid\",[],\"NV8\"],[[192,192],\"mapped\",[224]],[[193,193],\"mapped\",[225]],[[194,194],\"mapped\",[226]],[[195,195],\"mapped\",[227]],[[196,196],\"mapped\",[228]],[[197,197],\"mapped\",[229]],[[198,198],\"mapped\",[230]],[[199,199],\"mapped\",[231]],[[200,200],\"mapped\",[232]],[[201,201],\"mapped\",[233]],[[202,202],\"mapped\",[234]],[[203,203],\"mapped\",[235]],[[204,204],\"mapped\",[236]],[[205,205],\"mapped\",[237]],[[206,206],\"mapped\",[238]],[[207,207],\"mapped\",[239]],[[208,208],\"mapped\",[240]],[[209,209],\"mapped\",[241]],[[210,210],\"mapped\",[242]],[[211,211],\"mapped\",[243]],[[212,212],\"mapped\",[244]],[[213,213],\"mapped\",[245]],[[214,214],\"mapped\",[246]],[[215,215],\"valid\",[],\"NV8\"],[[216,216],\"mapped\",[248]],[[217,217],\"mapped\",[249]],[[218,218],\"mapped\",[250]],[[219,219],\"mapped\",[251]],[[220,220],\"mapped\",[252]],[[221,221],\"mapped\",[253]],[[222,222],\"mapped\",[254]],[[223,223],\"deviation\",[115,115]],[[224,246],\"valid\"],[[247,247],\"valid\",[],\"NV8\"],[[248,255],\"valid\"],[[256,256],\"mapped\",[257]],[[257,257],\"valid\"],[[258,258],\"mapped\",[259]],[[259,259],\"valid\"],[[260,260],\"mapped\",[261]],[[261,261],\"valid\"],[[262,262],\"mapped\",[263]],[[263,263],\"valid\"],[[264,264],\"mapped\",[265]],[[265,265],\"valid\"],[[266,266],\"mapped\",[267]],[[267,267],\"valid\"],[[268,268],\"mapped\",[269]],[[269,269],\"valid\"],[[270,270],\"mapped\",[271]],[[271,271],\"valid\"],[[272,272],\"mapped\",[273]],[[273,273],\"valid\"],[[274,274],\"mapped\",[275]],[[275,275],\"valid\"],[[276,276],\"mapped\",[277]],[[277,277],\"valid\"],[[278,278],\"mapped\",[279]],[[279,279],\"valid\"],[[280,280],\"mapped\",[281]],[[281,281],\"valid\"],[[282,282],\"mapped\",[283]],[[283,283],\"valid\"],[[284,284],\"mapped\",[285]],[[285,285],\"valid\"],[[286,286],\"mapped\",[287]],[[287,287],\"valid\"],[[288,288],\"mapped\",[289]],[[289,289],\"valid\"],[[290,290],\"mapped\",[291]],[[291,291],\"valid\"],[[292,292],\"mapped\",[293]],[[293,293],\"valid\"],[[294,294],\"mapped\",[295]],[[295,295],\"valid\"],[[296,296],\"mapped\",[297]],[[297,297],\"valid\"],[[298,298],\"mapped\",[299]],[[299,299],\"valid\"],[[300,300],\"mapped\",[301]],[[301,301],\"valid\"],[[302,302],\"mapped\",[303]],[[303,303],\"valid\"],[[304,304],\"mapped\",[105,775]],[[305,305],\"valid\"],[[306,307],\"mapped\",[105,106]],[[308,308],\"mapped\",[309]],[[309,309],\"valid\"],[[310,310],\"mapped\",[311]],[[311,312],\"valid\"],[[313,313],\"mapped\",[314]],[[314,314],\"valid\"],[[315,315],\"mapped\",[316]],[[316,316],\"valid\"],[[317,317],\"mapped\",[318]],[[318,318],\"valid\"],[[319,320],\"mapped\",[108,183]],[[321,321],\"mapped\",[322]],[[322,322],\"valid\"],[[323,323],\"mapped\",[324]],[[324,324],\"valid\"],[[325,325],\"mapped\",[326]],[[326,326],\"valid\"],[[327,327],\"mapped\",[328]],[[328,328],\"valid\"],[[329,329],\"mapped\",[700,110]],[[330,330],\"mapped\",[331]],[[331,331],\"valid\"],[[332,332],\"mapped\",[333]],[[333,333],\"valid\"],[[334,334],\"mapped\",[335]],[[335,335],\"valid\"],[[336,336],\"mapped\",[337]],[[337,337],\"valid\"],[[338,338],\"mapped\",[339]],[[339,339],\"valid\"],[[340,340],\"mapped\",[341]],[[341,341],\"valid\"],[[342,342],\"mapped\",[343]],[[343,343],\"valid\"],[[344,344],\"mapped\",[345]],[[345,345],\"valid\"],[[346,346],\"mapped\",[347]],[[347,347],\"valid\"],[[348,348],\"mapped\",[349]],[[349,349],\"valid\"],[[350,350],\"mapped\",[351]],[[351,351],\"valid\"],[[352,352],\"mapped\",[353]],[[353,353],\"valid\"],[[354,354],\"mapped\",[355]],[[355,355],\"valid\"],[[356,356],\"mapped\",[357]],[[357,357],\"valid\"],[[358,358],\"mapped\",[359]],[[359,359],\"valid\"],[[360,360],\"mapped\",[361]],[[361,361],\"valid\"],[[362,362],\"mapped\",[363]],[[363,363],\"valid\"],[[364,364],\"mapped\",[365]],[[365,365],\"valid\"],[[366,366],\"mapped\",[367]],[[367,367],\"valid\"],[[368,368],\"mapped\",[369]],[[369,369],\"valid\"],[[370,370],\"mapped\",[371]],[[371,371],\"valid\"],[[372,372],\"mapped\",[373]],[[373,373],\"valid\"],[[374,374],\"mapped\",[375]],[[375,375],\"valid\"],[[376,376],\"mapped\",[255]],[[377,377],\"mapped\",[378]],[[378,378],\"valid\"],[[379,379],\"mapped\",[380]],[[380,380],\"valid\"],[[381,381],\"mapped\",[382]],[[382,382],\"valid\"],[[383,383],\"mapped\",[115]],[[384,384],\"valid\"],[[385,385],\"mapped\",[595]],[[386,386],\"mapped\",[387]],[[387,387],\"valid\"],[[388,388],\"mapped\",[389]],[[389,389],\"valid\"],[[390,390],\"mapped\",[596]],[[391,391],\"mapped\",[392]],[[392,392],\"valid\"],[[393,393],\"mapped\",[598]],[[394,394],\"mapped\",[599]],[[395,395],\"mapped\",[396]],[[396,397],\"valid\"],[[398,398],\"mapped\",[477]],[[399,399],\"mapped\",[601]],[[400,400],\"mapped\",[603]],[[401,401],\"mapped\",[402]],[[402,402],\"valid\"],[[403,403],\"mapped\",[608]],[[404,404],\"mapped\",[611]],[[405,405],\"valid\"],[[406,406],\"mapped\",[617]],[[407,407],\"mapped\",[616]],[[408,408],\"mapped\",[409]],[[409,411],\"valid\"],[[412,412],\"mapped\",[623]],[[413,413],\"mapped\",[626]],[[414,414],\"valid\"],[[415,415],\"mapped\",[629]],[[416,416],\"mapped\",[417]],[[417,417],\"valid\"],[[418,418],\"mapped\",[419]],[[419,419],\"valid\"],[[420,420],\"mapped\",[421]],[[421,421],\"valid\"],[[422,422],\"mapped\",[640]],[[423,423],\"mapped\",[424]],[[424,424],\"valid\"],[[425,425],\"mapped\",[643]],[[426,427],\"valid\"],[[428,428],\"mapped\",[429]],[[429,429],\"valid\"],[[430,430],\"mapped\",[648]],[[431,431],\"mapped\",[432]],[[432,432],\"valid\"],[[433,433],\"mapped\",[650]],[[434,434],\"mapped\",[651]],[[435,435],\"mapped\",[436]],[[436,436],\"valid\"],[[437,437],\"mapped\",[438]],[[438,438],\"valid\"],[[439,439],\"mapped\",[658]],[[440,440],\"mapped\",[441]],[[441,443],\"valid\"],[[444,444],\"mapped\",[445]],[[445,451],\"valid\"],[[452,454],\"mapped\",[100,382]],[[455,457],\"mapped\",[108,106]],[[458,460],\"mapped\",[110,106]],[[461,461],\"mapped\",[462]],[[462,462],\"valid\"],[[463,463],\"mapped\",[464]],[[464,464],\"valid\"],[[465,465],\"mapped\",[466]],[[466,466],\"valid\"],[[467,467],\"mapped\",[468]],[[468,468],\"valid\"],[[469,469],\"mapped\",[470]],[[470,470],\"valid\"],[[471,471],\"mapped\",[472]],[[472,472],\"valid\"],[[473,473],\"mapped\",[474]],[[474,474],\"valid\"],[[475,475],\"mapped\",[476]],[[476,477],\"valid\"],[[478,478],\"mapped\",[479]],[[479,479],\"valid\"],[[480,480],\"mapped\",[481]],[[481,481],\"valid\"],[[482,482],\"mapped\",[483]],[[483,483],\"valid\"],[[484,484],\"mapped\",[485]],[[485,485],\"valid\"],[[486,486],\"mapped\",[487]],[[487,487],\"valid\"],[[488,488],\"mapped\",[489]],[[489,489],\"valid\"],[[490,490],\"mapped\",[491]],[[491,491],\"valid\"],[[492,492],\"mapped\",[493]],[[493,493],\"valid\"],[[494,494],\"mapped\",[495]],[[495,496],\"valid\"],[[497,499],\"mapped\",[100,122]],[[500,500],\"mapped\",[501]],[[501,501],\"valid\"],[[502,502],\"mapped\",[405]],[[503,503],\"mapped\",[447]],[[504,504],\"mapped\",[505]],[[505,505],\"valid\"],[[506,506],\"mapped\",[507]],[[507,507],\"valid\"],[[508,508],\"mapped\",[509]],[[509,509],\"valid\"],[[510,510],\"mapped\",[511]],[[511,511],\"valid\"],[[512,512],\"mapped\",[513]],[[513,513],\"valid\"],[[514,514],\"mapped\",[515]],[[515,515],\"valid\"],[[516,516],\"mapped\",[517]],[[517,517],\"valid\"],[[518,518],\"mapped\",[519]],[[519,519],\"valid\"],[[520,520],\"mapped\",[521]],[[521,521],\"valid\"],[[522,522],\"mapped\",[523]],[[523,523],\"valid\"],[[524,524],\"mapped\",[525]],[[525,525],\"valid\"],[[526,526],\"mapped\",[527]],[[527,527],\"valid\"],[[528,528],\"mapped\",[529]],[[529,529],\"valid\"],[[530,530],\"mapped\",[531]],[[531,531],\"valid\"],[[532,532],\"mapped\",[533]],[[533,533],\"valid\"],[[534,534],\"mapped\",[535]],[[535,535],\"valid\"],[[536,536],\"mapped\",[537]],[[537,537],\"valid\"],[[538,538],\"mapped\",[539]],[[539,539],\"valid\"],[[540,540],\"mapped\",[541]],[[541,541],\"valid\"],[[542,542],\"mapped\",[543]],[[543,543],\"valid\"],[[544,544],\"mapped\",[414]],[[545,545],\"valid\"],[[546,546],\"mapped\",[547]],[[547,547],\"valid\"],[[548,548],\"mapped\",[549]],[[549,549],\"valid\"],[[550,550],\"mapped\",[551]],[[551,551],\"valid\"],[[552,552],\"mapped\",[553]],[[553,553],\"valid\"],[[554,554],\"mapped\",[555]],[[555,555],\"valid\"],[[556,556],\"mapped\",[557]],[[557,557],\"valid\"],[[558,558],\"mapped\",[559]],[[559,559],\"valid\"],[[560,560],\"mapped\",[561]],[[561,561],\"valid\"],[[562,562],\"mapped\",[563]],[[563,563],\"valid\"],[[564,566],\"valid\"],[[567,569],\"valid\"],[[570,570],\"mapped\",[11365]],[[571,571],\"mapped\",[572]],[[572,572],\"valid\"],[[573,573],\"mapped\",[410]],[[574,574],\"mapped\",[11366]],[[575,576],\"valid\"],[[577,577],\"mapped\",[578]],[[578,578],\"valid\"],[[579,579],\"mapped\",[384]],[[580,580],\"mapped\",[649]],[[581,581],\"mapped\",[652]],[[582,582],\"mapped\",[583]],[[583,583],\"valid\"],[[584,584],\"mapped\",[585]],[[585,585],\"valid\"],[[586,586],\"mapped\",[587]],[[587,587],\"valid\"],[[588,588],\"mapped\",[589]],[[589,589],\"valid\"],[[590,590],\"mapped\",[591]],[[591,591],\"valid\"],[[592,680],\"valid\"],[[681,685],\"valid\"],[[686,687],\"valid\"],[[688,688],\"mapped\",[104]],[[689,689],\"mapped\",[614]],[[690,690],\"mapped\",[106]],[[691,691],\"mapped\",[114]],[[692,692],\"mapped\",[633]],[[693,693],\"mapped\",[635]],[[694,694],\"mapped\",[641]],[[695,695],\"mapped\",[119]],[[696,696],\"mapped\",[121]],[[697,705],\"valid\"],[[706,709],\"valid\",[],\"NV8\"],[[710,721],\"valid\"],[[722,727],\"valid\",[],\"NV8\"],[[728,728],\"disallowed_STD3_mapped\",[32,774]],[[729,729],\"disallowed_STD3_mapped\",[32,775]],[[730,730],\"disallowed_STD3_mapped\",[32,778]],[[731,731],\"disallowed_STD3_mapped\",[32,808]],[[732,732],\"disallowed_STD3_mapped\",[32,771]],[[733,733],\"disallowed_STD3_mapped\",[32,779]],[[734,734],\"valid\",[],\"NV8\"],[[735,735],\"valid\",[],\"NV8\"],[[736,736],\"mapped\",[611]],[[737,737],\"mapped\",[108]],[[738,738],\"mapped\",[115]],[[739,739],\"mapped\",[120]],[[740,740],\"mapped\",[661]],[[741,745],\"valid\",[],\"NV8\"],[[746,747],\"valid\",[],\"NV8\"],[[748,748],\"valid\"],[[749,749],\"valid\",[],\"NV8\"],[[750,750],\"valid\"],[[751,767],\"valid\",[],\"NV8\"],[[768,831],\"valid\"],[[832,832],\"mapped\",[768]],[[833,833],\"mapped\",[769]],[[834,834],\"valid\"],[[835,835],\"mapped\",[787]],[[836,836],\"mapped\",[776,769]],[[837,837],\"mapped\",[953]],[[838,846],\"valid\"],[[847,847],\"ignored\"],[[848,855],\"valid\"],[[856,860],\"valid\"],[[861,863],\"valid\"],[[864,865],\"valid\"],[[866,866],\"valid\"],[[867,879],\"valid\"],[[880,880],\"mapped\",[881]],[[881,881],\"valid\"],[[882,882],\"mapped\",[883]],[[883,883],\"valid\"],[[884,884],\"mapped\",[697]],[[885,885],\"valid\"],[[886,886],\"mapped\",[887]],[[887,887],\"valid\"],[[888,889],\"disallowed\"],[[890,890],\"disallowed_STD3_mapped\",[32,953]],[[891,893],\"valid\"],[[894,894],\"disallowed_STD3_mapped\",[59]],[[895,895],\"mapped\",[1011]],[[896,899],\"disallowed\"],[[900,900],\"disallowed_STD3_mapped\",[32,769]],[[901,901],\"disallowed_STD3_mapped\",[32,776,769]],[[902,902],\"mapped\",[940]],[[903,903],\"mapped\",[183]],[[904,904],\"mapped\",[941]],[[905,905],\"mapped\",[942]],[[906,906],\"mapped\",[943]],[[907,907],\"disallowed\"],[[908,908],\"mapped\",[972]],[[909,909],\"disallowed\"],[[910,910],\"mapped\",[973]],[[911,911],\"mapped\",[974]],[[912,912],\"valid\"],[[913,913],\"mapped\",[945]],[[914,914],\"mapped\",[946]],[[915,915],\"mapped\",[947]],[[916,916],\"mapped\",[948]],[[917,917],\"mapped\",[949]],[[918,918],\"mapped\",[950]],[[919,919],\"mapped\",[951]],[[920,920],\"mapped\",[952]],[[921,921],\"mapped\",[953]],[[922,922],\"mapped\",[954]],[[923,923],\"mapped\",[955]],[[924,924],\"mapped\",[956]],[[925,925],\"mapped\",[957]],[[926,926],\"mapped\",[958]],[[927,927],\"mapped\",[959]],[[928,928],\"mapped\",[960]],[[929,929],\"mapped\",[961]],[[930,930],\"disallowed\"],[[931,931],\"mapped\",[963]],[[932,932],\"mapped\",[964]],[[933,933],\"mapped\",[965]],[[934,934],\"mapped\",[966]],[[935,935],\"mapped\",[967]],[[936,936],\"mapped\",[968]],[[937,937],\"mapped\",[969]],[[938,938],\"mapped\",[970]],[[939,939],\"mapped\",[971]],[[940,961],\"valid\"],[[962,962],\"deviation\",[963]],[[963,974],\"valid\"],[[975,975],\"mapped\",[983]],[[976,976],\"mapped\",[946]],[[977,977],\"mapped\",[952]],[[978,978],\"mapped\",[965]],[[979,979],\"mapped\",[973]],[[980,980],\"mapped\",[971]],[[981,981],\"mapped\",[966]],[[982,982],\"mapped\",[960]],[[983,983],\"valid\"],[[984,984],\"mapped\",[985]],[[985,985],\"valid\"],[[986,986],\"mapped\",[987]],[[987,987],\"valid\"],[[988,988],\"mapped\",[989]],[[989,989],\"valid\"],[[990,990],\"mapped\",[991]],[[991,991],\"valid\"],[[992,992],\"mapped\",[993]],[[993,993],\"valid\"],[[994,994],\"mapped\",[995]],[[995,995],\"valid\"],[[996,996],\"mapped\",[997]],[[997,997],\"valid\"],[[998,998],\"mapped\",[999]],[[999,999],\"valid\"],[[1000,1000],\"mapped\",[1001]],[[1001,1001],\"valid\"],[[1002,1002],\"mapped\",[1003]],[[1003,1003],\"valid\"],[[1004,1004],\"mapped\",[1005]],[[1005,1005],\"valid\"],[[1006,1006],\"mapped\",[1007]],[[1007,1007],\"valid\"],[[1008,1008],\"mapped\",[954]],[[1009,1009],\"mapped\",[961]],[[1010,1010],\"mapped\",[963]],[[1011,1011],\"valid\"],[[1012,1012],\"mapped\",[952]],[[1013,1013],\"mapped\",[949]],[[1014,1014],\"valid\",[],\"NV8\"],[[1015,1015],\"mapped\",[1016]],[[1016,1016],\"valid\"],[[1017,1017],\"mapped\",[963]],[[1018,1018],\"mapped\",[1019]],[[1019,1019],\"valid\"],[[1020,1020],\"valid\"],[[1021,1021],\"mapped\",[891]],[[1022,1022],\"mapped\",[892]],[[1023,1023],\"mapped\",[893]],[[1024,1024],\"mapped\",[1104]],[[1025,1025],\"mapped\",[1105]],[[1026,1026],\"mapped\",[1106]],[[1027,1027],\"mapped\",[1107]],[[1028,1028],\"mapped\",[1108]],[[1029,1029],\"mapped\",[1109]],[[1030,1030],\"mapped\",[1110]],[[1031,1031],\"mapped\",[1111]],[[1032,1032],\"mapped\",[1112]],[[1033,1033],\"mapped\",[1113]],[[1034,1034],\"mapped\",[1114]],[[1035,1035],\"mapped\",[1115]],[[1036,1036],\"mapped\",[1116]],[[1037,1037],\"mapped\",[1117]],[[1038,1038],\"mapped\",[1118]],[[1039,1039],\"mapped\",[1119]],[[1040,1040],\"mapped\",[1072]],[[1041,1041],\"mapped\",[1073]],[[1042,1042],\"mapped\",[1074]],[[1043,1043],\"mapped\",[1075]],[[1044,1044],\"mapped\",[1076]],[[1045,1045],\"mapped\",[1077]],[[1046,1046],\"mapped\",[1078]],[[1047,1047],\"mapped\",[1079]],[[1048,1048],\"mapped\",[1080]],[[1049,1049],\"mapped\",[1081]],[[1050,1050],\"mapped\",[1082]],[[1051,1051],\"mapped\",[1083]],[[1052,1052],\"mapped\",[1084]],[[1053,1053],\"mapped\",[1085]],[[1054,1054],\"mapped\",[1086]],[[1055,1055],\"mapped\",[1087]],[[1056,1056],\"mapped\",[1088]],[[1057,1057],\"mapped\",[1089]],[[1058,1058],\"mapped\",[1090]],[[1059,1059],\"mapped\",[1091]],[[1060,1060],\"mapped\",[1092]],[[1061,1061],\"mapped\",[1093]],[[1062,1062],\"mapped\",[1094]],[[1063,1063],\"mapped\",[1095]],[[1064,1064],\"mapped\",[1096]],[[1065,1065],\"mapped\",[1097]],[[1066,1066],\"mapped\",[1098]],[[1067,1067],\"mapped\",[1099]],[[1068,1068],\"mapped\",[1100]],[[1069,1069],\"mapped\",[1101]],[[1070,1070],\"mapped\",[1102]],[[1071,1071],\"mapped\",[1103]],[[1072,1103],\"valid\"],[[1104,1104],\"valid\"],[[1105,1116],\"valid\"],[[1117,1117],\"valid\"],[[1118,1119],\"valid\"],[[1120,1120],\"mapped\",[1121]],[[1121,1121],\"valid\"],[[1122,1122],\"mapped\",[1123]],[[1123,1123],\"valid\"],[[1124,1124],\"mapped\",[1125]],[[1125,1125],\"valid\"],[[1126,1126],\"mapped\",[1127]],[[1127,1127],\"valid\"],[[1128,1128],\"mapped\",[1129]],[[1129,1129],\"valid\"],[[1130,1130],\"mapped\",[1131]],[[1131,1131],\"valid\"],[[1132,1132],\"mapped\",[1133]],[[1133,1133],\"valid\"],[[1134,1134],\"mapped\",[1135]],[[1135,1135],\"valid\"],[[1136,1136],\"mapped\",[1137]],[[1137,1137],\"valid\"],[[1138,1138],\"mapped\",[1139]],[[1139,1139],\"valid\"],[[1140,1140],\"mapped\",[1141]],[[1141,1141],\"valid\"],[[1142,1142],\"mapped\",[1143]],[[1143,1143],\"valid\"],[[1144,1144],\"mapped\",[1145]],[[1145,1145],\"valid\"],[[1146,1146],\"mapped\",[1147]],[[1147,1147],\"valid\"],[[1148,1148],\"mapped\",[1149]],[[1149,1149],\"valid\"],[[1150,1150],\"mapped\",[1151]],[[1151,1151],\"valid\"],[[1152,1152],\"mapped\",[1153]],[[1153,1153],\"valid\"],[[1154,1154],\"valid\",[],\"NV8\"],[[1155,1158],\"valid\"],[[1159,1159],\"valid\"],[[1160,1161],\"valid\",[],\"NV8\"],[[1162,1162],\"mapped\",[1163]],[[1163,1163],\"valid\"],[[1164,1164],\"mapped\",[1165]],[[1165,1165],\"valid\"],[[1166,1166],\"mapped\",[1167]],[[1167,1167],\"valid\"],[[1168,1168],\"mapped\",[1169]],[[1169,1169],\"valid\"],[[1170,1170],\"mapped\",[1171]],[[1171,1171],\"valid\"],[[1172,1172],\"mapped\",[1173]],[[1173,1173],\"valid\"],[[1174,1174],\"mapped\",[1175]],[[1175,1175],\"valid\"],[[1176,1176],\"mapped\",[1177]],[[1177,1177],\"valid\"],[[1178,1178],\"mapped\",[1179]],[[1179,1179],\"valid\"],[[1180,1180],\"mapped\",[1181]],[[1181,1181],\"valid\"],[[1182,1182],\"mapped\",[1183]],[[1183,1183],\"valid\"],[[1184,1184],\"mapped\",[1185]],[[1185,1185],\"valid\"],[[1186,1186],\"mapped\",[1187]],[[1187,1187],\"valid\"],[[1188,1188],\"mapped\",[1189]],[[1189,1189],\"valid\"],[[1190,1190],\"mapped\",[1191]],[[1191,1191],\"valid\"],[[1192,1192],\"mapped\",[1193]],[[1193,1193],\"valid\"],[[1194,1194],\"mapped\",[1195]],[[1195,1195],\"valid\"],[[1196,1196],\"mapped\",[1197]],[[1197,1197],\"valid\"],[[1198,1198],\"mapped\",[1199]],[[1199,1199],\"valid\"],[[1200,1200],\"mapped\",[1201]],[[1201,1201],\"valid\"],[[1202,1202],\"mapped\",[1203]],[[1203,1203],\"valid\"],[[1204,1204],\"mapped\",[1205]],[[1205,1205],\"valid\"],[[1206,1206],\"mapped\",[1207]],[[1207,1207],\"valid\"],[[1208,1208],\"mapped\",[1209]],[[1209,1209],\"valid\"],[[1210,1210],\"mapped\",[1211]],[[1211,1211],\"valid\"],[[1212,1212],\"mapped\",[1213]],[[1213,1213],\"valid\"],[[1214,1214],\"mapped\",[1215]],[[1215,1215],\"valid\"],[[1216,1216],\"disallowed\"],[[1217,1217],\"mapped\",[1218]],[[1218,1218],\"valid\"],[[1219,1219],\"mapped\",[1220]],[[1220,1220],\"valid\"],[[1221,1221],\"mapped\",[1222]],[[1222,1222],\"valid\"],[[1223,1223],\"mapped\",[1224]],[[1224,1224],\"valid\"],[[1225,1225],\"mapped\",[1226]],[[1226,1226],\"valid\"],[[1227,1227],\"mapped\",[1228]],[[1228,1228],\"valid\"],[[1229,1229],\"mapped\",[1230]],[[1230,1230],\"valid\"],[[1231,1231],\"valid\"],[[1232,1232],\"mapped\",[1233]],[[1233,1233],\"valid\"],[[1234,1234],\"mapped\",[1235]],[[1235,1235],\"valid\"],[[1236,1236],\"mapped\",[1237]],[[1237,1237],\"valid\"],[[1238,1238],\"mapped\",[1239]],[[1239,1239],\"valid\"],[[1240,1240],\"mapped\",[1241]],[[1241,1241],\"valid\"],[[1242,1242],\"mapped\",[1243]],[[1243,1243],\"valid\"],[[1244,1244],\"mapped\",[1245]],[[1245,1245],\"valid\"],[[1246,1246],\"mapped\",[1247]],[[1247,1247],\"valid\"],[[1248,1248],\"mapped\",[1249]],[[1249,1249],\"valid\"],[[1250,1250],\"mapped\",[1251]],[[1251,1251],\"valid\"],[[1252,1252],\"mapped\",[1253]],[[1253,1253],\"valid\"],[[1254,1254],\"mapped\",[1255]],[[1255,1255],\"valid\"],[[1256,1256],\"mapped\",[1257]],[[1257,1257],\"valid\"],[[1258,1258],\"mapped\",[1259]],[[1259,1259],\"valid\"],[[1260,1260],\"mapped\",[1261]],[[1261,1261],\"valid\"],[[1262,1262],\"mapped\",[1263]],[[1263,1263],\"valid\"],[[1264,1264],\"mapped\",[1265]],[[1265,1265],\"valid\"],[[1266,1266],\"mapped\",[1267]],[[1267,1267],\"valid\"],[[1268,1268],\"mapped\",[1269]],[[1269,1269],\"valid\"],[[1270,1270],\"mapped\",[1271]],[[1271,1271],\"valid\"],[[1272,1272],\"mapped\",[1273]],[[1273,1273],\"valid\"],[[1274,1274],\"mapped\",[1275]],[[1275,1275],\"valid\"],[[1276,1276],\"mapped\",[1277]],[[1277,1277],\"valid\"],[[1278,1278],\"mapped\",[1279]],[[1279,1279],\"valid\"],[[1280,1280],\"mapped\",[1281]],[[1281,1281],\"valid\"],[[1282,1282],\"mapped\",[1283]],[[1283,1283],\"valid\"],[[1284,1284],\"mapped\",[1285]],[[1285,1285],\"valid\"],[[1286,1286],\"mapped\",[1287]],[[1287,1287],\"valid\"],[[1288,1288],\"mapped\",[1289]],[[1289,1289],\"valid\"],[[1290,1290],\"mapped\",[1291]],[[1291,1291],\"valid\"],[[1292,1292],\"mapped\",[1293]],[[1293,1293],\"valid\"],[[1294,1294],\"mapped\",[1295]],[[1295,1295],\"valid\"],[[1296,1296],\"mapped\",[1297]],[[1297,1297],\"valid\"],[[1298,1298],\"mapped\",[1299]],[[1299,1299],\"valid\"],[[1300,1300],\"mapped\",[1301]],[[1301,1301],\"valid\"],[[1302,1302],\"mapped\",[1303]],[[1303,1303],\"valid\"],[[1304,1304],\"mapped\",[1305]],[[1305,1305],\"valid\"],[[1306,1306],\"mapped\",[1307]],[[1307,1307],\"valid\"],[[1308,1308],\"mapped\",[1309]],[[1309,1309],\"valid\"],[[1310,1310],\"mapped\",[1311]],[[1311,1311],\"valid\"],[[1312,1312],\"mapped\",[1313]],[[1313,1313],\"valid\"],[[1314,1314],\"mapped\",[1315]],[[1315,1315],\"valid\"],[[1316,1316],\"mapped\",[1317]],[[1317,1317],\"valid\"],[[1318,1318],\"mapped\",[1319]],[[1319,1319],\"valid\"],[[1320,1320],\"mapped\",[1321]],[[1321,1321],\"valid\"],[[1322,1322],\"mapped\",[1323]],[[1323,1323],\"valid\"],[[1324,1324],\"mapped\",[1325]],[[1325,1325],\"valid\"],[[1326,1326],\"mapped\",[1327]],[[1327,1327],\"valid\"],[[1328,1328],\"disallowed\"],[[1329,1329],\"mapped\",[1377]],[[1330,1330],\"mapped\",[1378]],[[1331,1331],\"mapped\",[1379]],[[1332,1332],\"mapped\",[1380]],[[1333,1333],\"mapped\",[1381]],[[1334,1334],\"mapped\",[1382]],[[1335,1335],\"mapped\",[1383]],[[1336,1336],\"mapped\",[1384]],[[1337,1337],\"mapped\",[1385]],[[1338,1338],\"mapped\",[1386]],[[1339,1339],\"mapped\",[1387]],[[1340,1340],\"mapped\",[1388]],[[1341,1341],\"mapped\",[1389]],[[1342,1342],\"mapped\",[1390]],[[1343,1343],\"mapped\",[1391]],[[1344,1344],\"mapped\",[1392]],[[1345,1345],\"mapped\",[1393]],[[1346,1346],\"mapped\",[1394]],[[1347,1347],\"mapped\",[1395]],[[1348,1348],\"mapped\",[1396]],[[1349,1349],\"mapped\",[1397]],[[1350,1350],\"mapped\",[1398]],[[1351,1351],\"mapped\",[1399]],[[1352,1352],\"mapped\",[1400]],[[1353,1353],\"mapped\",[1401]],[[1354,1354],\"mapped\",[1402]],[[1355,1355],\"mapped\",[1403]],[[1356,1356],\"mapped\",[1404]],[[1357,1357],\"mapped\",[1405]],[[1358,1358],\"mapped\",[1406]],[[1359,1359],\"mapped\",[1407]],[[1360,1360],\"mapped\",[1408]],[[1361,1361],\"mapped\",[1409]],[[1362,1362],\"mapped\",[1410]],[[1363,1363],\"mapped\",[1411]],[[1364,1364],\"mapped\",[1412]],[[1365,1365],\"mapped\",[1413]],[[1366,1366],\"mapped\",[1414]],[[1367,1368],\"disallowed\"],[[1369,1369],\"valid\"],[[1370,1375],\"valid\",[],\"NV8\"],[[1376,1376],\"disallowed\"],[[1377,1414],\"valid\"],[[1415,1415],\"mapped\",[1381,1410]],[[1416,1416],\"disallowed\"],[[1417,1417],\"valid\",[],\"NV8\"],[[1418,1418],\"valid\",[],\"NV8\"],[[1419,1420],\"disallowed\"],[[1421,1422],\"valid\",[],\"NV8\"],[[1423,1423],\"valid\",[],\"NV8\"],[[1424,1424],\"disallowed\"],[[1425,1441],\"valid\"],[[1442,1442],\"valid\"],[[1443,1455],\"valid\"],[[1456,1465],\"valid\"],[[1466,1466],\"valid\"],[[1467,1469],\"valid\"],[[1470,1470],\"valid\",[],\"NV8\"],[[1471,1471],\"valid\"],[[1472,1472],\"valid\",[],\"NV8\"],[[1473,1474],\"valid\"],[[1475,1475],\"valid\",[],\"NV8\"],[[1476,1476],\"valid\"],[[1477,1477],\"valid\"],[[1478,1478],\"valid\",[],\"NV8\"],[[1479,1479],\"valid\"],[[1480,1487],\"disallowed\"],[[1488,1514],\"valid\"],[[1515,1519],\"disallowed\"],[[1520,1524],\"valid\"],[[1525,1535],\"disallowed\"],[[1536,1539],\"disallowed\"],[[1540,1540],\"disallowed\"],[[1541,1541],\"disallowed\"],[[1542,1546],\"valid\",[],\"NV8\"],[[1547,1547],\"valid\",[],\"NV8\"],[[1548,1548],\"valid\",[],\"NV8\"],[[1549,1551],\"valid\",[],\"NV8\"],[[1552,1557],\"valid\"],[[1558,1562],\"valid\"],[[1563,1563],\"valid\",[],\"NV8\"],[[1564,1564],\"disallowed\"],[[1565,1565],\"disallowed\"],[[1566,1566],\"valid\",[],\"NV8\"],[[1567,1567],\"valid\",[],\"NV8\"],[[1568,1568],\"valid\"],[[1569,1594],\"valid\"],[[1595,1599],\"valid\"],[[1600,1600],\"valid\",[],\"NV8\"],[[1601,1618],\"valid\"],[[1619,1621],\"valid\"],[[1622,1624],\"valid\"],[[1625,1630],\"valid\"],[[1631,1631],\"valid\"],[[1632,1641],\"valid\"],[[1642,1645],\"valid\",[],\"NV8\"],[[1646,1647],\"valid\"],[[1648,1652],\"valid\"],[[1653,1653],\"mapped\",[1575,1652]],[[1654,1654],\"mapped\",[1608,1652]],[[1655,1655],\"mapped\",[1735,1652]],[[1656,1656],\"mapped\",[1610,1652]],[[1657,1719],\"valid\"],[[1720,1721],\"valid\"],[[1722,1726],\"valid\"],[[1727,1727],\"valid\"],[[1728,1742],\"valid\"],[[1743,1743],\"valid\"],[[1744,1747],\"valid\"],[[1748,1748],\"valid\",[],\"NV8\"],[[1749,1756],\"valid\"],[[1757,1757],\"disallowed\"],[[1758,1758],\"valid\",[],\"NV8\"],[[1759,1768],\"valid\"],[[1769,1769],\"valid\",[],\"NV8\"],[[1770,1773],\"valid\"],[[1774,1775],\"valid\"],[[1776,1785],\"valid\"],[[1786,1790],\"valid\"],[[1791,1791],\"valid\"],[[1792,1805],\"valid\",[],\"NV8\"],[[1806,1806],\"disallowed\"],[[1807,1807],\"disallowed\"],[[1808,1836],\"valid\"],[[1837,1839],\"valid\"],[[1840,1866],\"valid\"],[[1867,1868],\"disallowed\"],[[1869,1871],\"valid\"],[[1872,1901],\"valid\"],[[1902,1919],\"valid\"],[[1920,1968],\"valid\"],[[1969,1969],\"valid\"],[[1970,1983],\"disallowed\"],[[1984,2037],\"valid\"],[[2038,2042],\"valid\",[],\"NV8\"],[[2043,2047],\"disallowed\"],[[2048,2093],\"valid\"],[[2094,2095],\"disallowed\"],[[2096,2110],\"valid\",[],\"NV8\"],[[2111,2111],\"disallowed\"],[[2112,2139],\"valid\"],[[2140,2141],\"disallowed\"],[[2142,2142],\"valid\",[],\"NV8\"],[[2143,2207],\"disallowed\"],[[2208,2208],\"valid\"],[[2209,2209],\"valid\"],[[2210,2220],\"valid\"],[[2221,2226],\"valid\"],[[2227,2228],\"valid\"],[[2229,2274],\"disallowed\"],[[2275,2275],\"valid\"],[[2276,2302],\"valid\"],[[2303,2303],\"valid\"],[[2304,2304],\"valid\"],[[2305,2307],\"valid\"],[[2308,2308],\"valid\"],[[2309,2361],\"valid\"],[[2362,2363],\"valid\"],[[2364,2381],\"valid\"],[[2382,2382],\"valid\"],[[2383,2383],\"valid\"],[[2384,2388],\"valid\"],[[2389,2389],\"valid\"],[[2390,2391],\"valid\"],[[2392,2392],\"mapped\",[2325,2364]],[[2393,2393],\"mapped\",[2326,2364]],[[2394,2394],\"mapped\",[2327,2364]],[[2395,2395],\"mapped\",[2332,2364]],[[2396,2396],\"mapped\",[2337,2364]],[[2397,2397],\"mapped\",[2338,2364]],[[2398,2398],\"mapped\",[2347,2364]],[[2399,2399],\"mapped\",[2351,2364]],[[2400,2403],\"valid\"],[[2404,2405],\"valid\",[],\"NV8\"],[[2406,2415],\"valid\"],[[2416,2416],\"valid\",[],\"NV8\"],[[2417,2418],\"valid\"],[[2419,2423],\"valid\"],[[2424,2424],\"valid\"],[[2425,2426],\"valid\"],[[2427,2428],\"valid\"],[[2429,2429],\"valid\"],[[2430,2431],\"valid\"],[[2432,2432],\"valid\"],[[2433,2435],\"valid\"],[[2436,2436],\"disallowed\"],[[2437,2444],\"valid\"],[[2445,2446],\"disallowed\"],[[2447,2448],\"valid\"],[[2449,2450],\"disallowed\"],[[2451,2472],\"valid\"],[[2473,2473],\"disallowed\"],[[2474,2480],\"valid\"],[[2481,2481],\"disallowed\"],[[2482,2482],\"valid\"],[[2483,2485],\"disallowed\"],[[2486,2489],\"valid\"],[[2490,2491],\"disallowed\"],[[2492,2492],\"valid\"],[[2493,2493],\"valid\"],[[2494,2500],\"valid\"],[[2501,2502],\"disallowed\"],[[2503,2504],\"valid\"],[[2505,2506],\"disallowed\"],[[2507,2509],\"valid\"],[[2510,2510],\"valid\"],[[2511,2518],\"disallowed\"],[[2519,2519],\"valid\"],[[2520,2523],\"disallowed\"],[[2524,2524],\"mapped\",[2465,2492]],[[2525,2525],\"mapped\",[2466,2492]],[[2526,2526],\"disallowed\"],[[2527,2527],\"mapped\",[2479,2492]],[[2528,2531],\"valid\"],[[2532,2533],\"disallowed\"],[[2534,2545],\"valid\"],[[2546,2554],\"valid\",[],\"NV8\"],[[2555,2555],\"valid\",[],\"NV8\"],[[2556,2560],\"disallowed\"],[[2561,2561],\"valid\"],[[2562,2562],\"valid\"],[[2563,2563],\"valid\"],[[2564,2564],\"disallowed\"],[[2565,2570],\"valid\"],[[2571,2574],\"disallowed\"],[[2575,2576],\"valid\"],[[2577,2578],\"disallowed\"],[[2579,2600],\"valid\"],[[2601,2601],\"disallowed\"],[[2602,2608],\"valid\"],[[2609,2609],\"disallowed\"],[[2610,2610],\"valid\"],[[2611,2611],\"mapped\",[2610,2620]],[[2612,2612],\"disallowed\"],[[2613,2613],\"valid\"],[[2614,2614],\"mapped\",[2616,2620]],[[2615,2615],\"disallowed\"],[[2616,2617],\"valid\"],[[2618,2619],\"disallowed\"],[[2620,2620],\"valid\"],[[2621,2621],\"disallowed\"],[[2622,2626],\"valid\"],[[2627,2630],\"disallowed\"],[[2631,2632],\"valid\"],[[2633,2634],\"disallowed\"],[[2635,2637],\"valid\"],[[2638,2640],\"disallowed\"],[[2641,2641],\"valid\"],[[2642,2648],\"disallowed\"],[[2649,2649],\"mapped\",[2582,2620]],[[2650,2650],\"mapped\",[2583,2620]],[[2651,2651],\"mapped\",[2588,2620]],[[2652,2652],\"valid\"],[[2653,2653],\"disallowed\"],[[2654,2654],\"mapped\",[2603,2620]],[[2655,2661],\"disallowed\"],[[2662,2676],\"valid\"],[[2677,2677],\"valid\"],[[2678,2688],\"disallowed\"],[[2689,2691],\"valid\"],[[2692,2692],\"disallowed\"],[[2693,2699],\"valid\"],[[2700,2700],\"valid\"],[[2701,2701],\"valid\"],[[2702,2702],\"disallowed\"],[[2703,2705],\"valid\"],[[2706,2706],\"disallowed\"],[[2707,2728],\"valid\"],[[2729,2729],\"disallowed\"],[[2730,2736],\"valid\"],[[2737,2737],\"disallowed\"],[[2738,2739],\"valid\"],[[2740,2740],\"disallowed\"],[[2741,2745],\"valid\"],[[2746,2747],\"disallowed\"],[[2748,2757],\"valid\"],[[2758,2758],\"disallowed\"],[[2759,2761],\"valid\"],[[2762,2762],\"disallowed\"],[[2763,2765],\"valid\"],[[2766,2767],\"disallowed\"],[[2768,2768],\"valid\"],[[2769,2783],\"disallowed\"],[[2784,2784],\"valid\"],[[2785,2787],\"valid\"],[[2788,2789],\"disallowed\"],[[2790,2799],\"valid\"],[[2800,2800],\"valid\",[],\"NV8\"],[[2801,2801],\"valid\",[],\"NV8\"],[[2802,2808],\"disallowed\"],[[2809,2809],\"valid\"],[[2810,2816],\"disallowed\"],[[2817,2819],\"valid\"],[[2820,2820],\"disallowed\"],[[2821,2828],\"valid\"],[[2829,2830],\"disallowed\"],[[2831,2832],\"valid\"],[[2833,2834],\"disallowed\"],[[2835,2856],\"valid\"],[[2857,2857],\"disallowed\"],[[2858,2864],\"valid\"],[[2865,2865],\"disallowed\"],[[2866,2867],\"valid\"],[[2868,2868],\"disallowed\"],[[2869,2869],\"valid\"],[[2870,2873],\"valid\"],[[2874,2875],\"disallowed\"],[[2876,2883],\"valid\"],[[2884,2884],\"valid\"],[[2885,2886],\"disallowed\"],[[2887,2888],\"valid\"],[[2889,2890],\"disallowed\"],[[2891,2893],\"valid\"],[[2894,2901],\"disallowed\"],[[2902,2903],\"valid\"],[[2904,2907],\"disallowed\"],[[2908,2908],\"mapped\",[2849,2876]],[[2909,2909],\"mapped\",[2850,2876]],[[2910,2910],\"disallowed\"],[[2911,2913],\"valid\"],[[2914,2915],\"valid\"],[[2916,2917],\"disallowed\"],[[2918,2927],\"valid\"],[[2928,2928],\"valid\",[],\"NV8\"],[[2929,2929],\"valid\"],[[2930,2935],\"valid\",[],\"NV8\"],[[2936,2945],\"disallowed\"],[[2946,2947],\"valid\"],[[2948,2948],\"disallowed\"],[[2949,2954],\"valid\"],[[2955,2957],\"disallowed\"],[[2958,2960],\"valid\"],[[2961,2961],\"disallowed\"],[[2962,2965],\"valid\"],[[2966,2968],\"disallowed\"],[[2969,2970],\"valid\"],[[2971,2971],\"disallowed\"],[[2972,2972],\"valid\"],[[2973,2973],\"disallowed\"],[[2974,2975],\"valid\"],[[2976,2978],\"disallowed\"],[[2979,2980],\"valid\"],[[2981,2983],\"disallowed\"],[[2984,2986],\"valid\"],[[2987,2989],\"disallowed\"],[[2990,2997],\"valid\"],[[2998,2998],\"valid\"],[[2999,3001],\"valid\"],[[3002,3005],\"disallowed\"],[[3006,3010],\"valid\"],[[3011,3013],\"disallowed\"],[[3014,3016],\"valid\"],[[3017,3017],\"disallowed\"],[[3018,3021],\"valid\"],[[3022,3023],\"disallowed\"],[[3024,3024],\"valid\"],[[3025,3030],\"disallowed\"],[[3031,3031],\"valid\"],[[3032,3045],\"disallowed\"],[[3046,3046],\"valid\"],[[3047,3055],\"valid\"],[[3056,3058],\"valid\",[],\"NV8\"],[[3059,3066],\"valid\",[],\"NV8\"],[[3067,3071],\"disallowed\"],[[3072,3072],\"valid\"],[[3073,3075],\"valid\"],[[3076,3076],\"disallowed\"],[[3077,3084],\"valid\"],[[3085,3085],\"disallowed\"],[[3086,3088],\"valid\"],[[3089,3089],\"disallowed\"],[[3090,3112],\"valid\"],[[3113,3113],\"disallowed\"],[[3114,3123],\"valid\"],[[3124,3124],\"valid\"],[[3125,3129],\"valid\"],[[3130,3132],\"disallowed\"],[[3133,3133],\"valid\"],[[3134,3140],\"valid\"],[[3141,3141],\"disallowed\"],[[3142,3144],\"valid\"],[[3145,3145],\"disallowed\"],[[3146,3149],\"valid\"],[[3150,3156],\"disallowed\"],[[3157,3158],\"valid\"],[[3159,3159],\"disallowed\"],[[3160,3161],\"valid\"],[[3162,3162],\"valid\"],[[3163,3167],\"disallowed\"],[[3168,3169],\"valid\"],[[3170,3171],\"valid\"],[[3172,3173],\"disallowed\"],[[3174,3183],\"valid\"],[[3184,3191],\"disallowed\"],[[3192,3199],\"valid\",[],\"NV8\"],[[3200,3200],\"disallowed\"],[[3201,3201],\"valid\"],[[3202,3203],\"valid\"],[[3204,3204],\"disallowed\"],[[3205,3212],\"valid\"],[[3213,3213],\"disallowed\"],[[3214,3216],\"valid\"],[[3217,3217],\"disallowed\"],[[3218,3240],\"valid\"],[[3241,3241],\"disallowed\"],[[3242,3251],\"valid\"],[[3252,3252],\"disallowed\"],[[3253,3257],\"valid\"],[[3258,3259],\"disallowed\"],[[3260,3261],\"valid\"],[[3262,3268],\"valid\"],[[3269,3269],\"disallowed\"],[[3270,3272],\"valid\"],[[3273,3273],\"disallowed\"],[[3274,3277],\"valid\"],[[3278,3284],\"disallowed\"],[[3285,3286],\"valid\"],[[3287,3293],\"disallowed\"],[[3294,3294],\"valid\"],[[3295,3295],\"disallowed\"],[[3296,3297],\"valid\"],[[3298,3299],\"valid\"],[[3300,3301],\"disallowed\"],[[3302,3311],\"valid\"],[[3312,3312],\"disallowed\"],[[3313,3314],\"valid\"],[[3315,3328],\"disallowed\"],[[3329,3329],\"valid\"],[[3330,3331],\"valid\"],[[3332,3332],\"disallowed\"],[[3333,3340],\"valid\"],[[3341,3341],\"disallowed\"],[[3342,3344],\"valid\"],[[3345,3345],\"disallowed\"],[[3346,3368],\"valid\"],[[3369,3369],\"valid\"],[[3370,3385],\"valid\"],[[3386,3386],\"valid\"],[[3387,3388],\"disallowed\"],[[3389,3389],\"valid\"],[[3390,3395],\"valid\"],[[3396,3396],\"valid\"],[[3397,3397],\"disallowed\"],[[3398,3400],\"valid\"],[[3401,3401],\"disallowed\"],[[3402,3405],\"valid\"],[[3406,3406],\"valid\"],[[3407,3414],\"disallowed\"],[[3415,3415],\"valid\"],[[3416,3422],\"disallowed\"],[[3423,3423],\"valid\"],[[3424,3425],\"valid\"],[[3426,3427],\"valid\"],[[3428,3429],\"disallowed\"],[[3430,3439],\"valid\"],[[3440,3445],\"valid\",[],\"NV8\"],[[3446,3448],\"disallowed\"],[[3449,3449],\"valid\",[],\"NV8\"],[[3450,3455],\"valid\"],[[3456,3457],\"disallowed\"],[[3458,3459],\"valid\"],[[3460,3460],\"disallowed\"],[[3461,3478],\"valid\"],[[3479,3481],\"disallowed\"],[[3482,3505],\"valid\"],[[3506,3506],\"disallowed\"],[[3507,3515],\"valid\"],[[3516,3516],\"disallowed\"],[[3517,3517],\"valid\"],[[3518,3519],\"disallowed\"],[[3520,3526],\"valid\"],[[3527,3529],\"disallowed\"],[[3530,3530],\"valid\"],[[3531,3534],\"disallowed\"],[[3535,3540],\"valid\"],[[3541,3541],\"disallowed\"],[[3542,3542],\"valid\"],[[3543,3543],\"disallowed\"],[[3544,3551],\"valid\"],[[3552,3557],\"disallowed\"],[[3558,3567],\"valid\"],[[3568,3569],\"disallowed\"],[[3570,3571],\"valid\"],[[3572,3572],\"valid\",[],\"NV8\"],[[3573,3584],\"disallowed\"],[[3585,3634],\"valid\"],[[3635,3635],\"mapped\",[3661,3634]],[[3636,3642],\"valid\"],[[3643,3646],\"disallowed\"],[[3647,3647],\"valid\",[],\"NV8\"],[[3648,3662],\"valid\"],[[3663,3663],\"valid\",[],\"NV8\"],[[3664,3673],\"valid\"],[[3674,3675],\"valid\",[],\"NV8\"],[[3676,3712],\"disallowed\"],[[3713,3714],\"valid\"],[[3715,3715],\"disallowed\"],[[3716,3716],\"valid\"],[[3717,3718],\"disallowed\"],[[3719,3720],\"valid\"],[[3721,3721],\"disallowed\"],[[3722,3722],\"valid\"],[[3723,3724],\"disallowed\"],[[3725,3725],\"valid\"],[[3726,3731],\"disallowed\"],[[3732,3735],\"valid\"],[[3736,3736],\"disallowed\"],[[3737,3743],\"valid\"],[[3744,3744],\"disallowed\"],[[3745,3747],\"valid\"],[[3748,3748],\"disallowed\"],[[3749,3749],\"valid\"],[[3750,3750],\"disallowed\"],[[3751,3751],\"valid\"],[[3752,3753],\"disallowed\"],[[3754,3755],\"valid\"],[[3756,3756],\"disallowed\"],[[3757,3762],\"valid\"],[[3763,3763],\"mapped\",[3789,3762]],[[3764,3769],\"valid\"],[[3770,3770],\"disallowed\"],[[3771,3773],\"valid\"],[[3774,3775],\"disallowed\"],[[3776,3780],\"valid\"],[[3781,3781],\"disallowed\"],[[3782,3782],\"valid\"],[[3783,3783],\"disallowed\"],[[3784,3789],\"valid\"],[[3790,3791],\"disallowed\"],[[3792,3801],\"valid\"],[[3802,3803],\"disallowed\"],[[3804,3804],\"mapped\",[3755,3737]],[[3805,3805],\"mapped\",[3755,3745]],[[3806,3807],\"valid\"],[[3808,3839],\"disallowed\"],[[3840,3840],\"valid\"],[[3841,3850],\"valid\",[],\"NV8\"],[[3851,3851],\"valid\"],[[3852,3852],\"mapped\",[3851]],[[3853,3863],\"valid\",[],\"NV8\"],[[3864,3865],\"valid\"],[[3866,3871],\"valid\",[],\"NV8\"],[[3872,3881],\"valid\"],[[3882,3892],\"valid\",[],\"NV8\"],[[3893,3893],\"valid\"],[[3894,3894],\"valid\",[],\"NV8\"],[[3895,3895],\"valid\"],[[3896,3896],\"valid\",[],\"NV8\"],[[3897,3897],\"valid\"],[[3898,3901],\"valid\",[],\"NV8\"],[[3902,3906],\"valid\"],[[3907,3907],\"mapped\",[3906,4023]],[[3908,3911],\"valid\"],[[3912,3912],\"disallowed\"],[[3913,3916],\"valid\"],[[3917,3917],\"mapped\",[3916,4023]],[[3918,3921],\"valid\"],[[3922,3922],\"mapped\",[3921,4023]],[[3923,3926],\"valid\"],[[3927,3927],\"mapped\",[3926,4023]],[[3928,3931],\"valid\"],[[3932,3932],\"mapped\",[3931,4023]],[[3933,3944],\"valid\"],[[3945,3945],\"mapped\",[3904,4021]],[[3946,3946],\"valid\"],[[3947,3948],\"valid\"],[[3949,3952],\"disallowed\"],[[3953,3954],\"valid\"],[[3955,3955],\"mapped\",[3953,3954]],[[3956,3956],\"valid\"],[[3957,3957],\"mapped\",[3953,3956]],[[3958,3958],\"mapped\",[4018,3968]],[[3959,3959],\"mapped\",[4018,3953,3968]],[[3960,3960],\"mapped\",[4019,3968]],[[3961,3961],\"mapped\",[4019,3953,3968]],[[3962,3968],\"valid\"],[[3969,3969],\"mapped\",[3953,3968]],[[3970,3972],\"valid\"],[[3973,3973],\"valid\",[],\"NV8\"],[[3974,3979],\"valid\"],[[3980,3983],\"valid\"],[[3984,3986],\"valid\"],[[3987,3987],\"mapped\",[3986,4023]],[[3988,3989],\"valid\"],[[3990,3990],\"valid\"],[[3991,3991],\"valid\"],[[3992,3992],\"disallowed\"],[[3993,3996],\"valid\"],[[3997,3997],\"mapped\",[3996,4023]],[[3998,4001],\"valid\"],[[4002,4002],\"mapped\",[4001,4023]],[[4003,4006],\"valid\"],[[4007,4007],\"mapped\",[4006,4023]],[[4008,4011],\"valid\"],[[4012,4012],\"mapped\",[4011,4023]],[[4013,4013],\"valid\"],[[4014,4016],\"valid\"],[[4017,4023],\"valid\"],[[4024,4024],\"valid\"],[[4025,4025],\"mapped\",[3984,4021]],[[4026,4028],\"valid\"],[[4029,4029],\"disallowed\"],[[4030,4037],\"valid\",[],\"NV8\"],[[4038,4038],\"valid\"],[[4039,4044],\"valid\",[],\"NV8\"],[[4045,4045],\"disallowed\"],[[4046,4046],\"valid\",[],\"NV8\"],[[4047,4047],\"valid\",[],\"NV8\"],[[4048,4049],\"valid\",[],\"NV8\"],[[4050,4052],\"valid\",[],\"NV8\"],[[4053,4056],\"valid\",[],\"NV8\"],[[4057,4058],\"valid\",[],\"NV8\"],[[4059,4095],\"disallowed\"],[[4096,4129],\"valid\"],[[4130,4130],\"valid\"],[[4131,4135],\"valid\"],[[4136,4136],\"valid\"],[[4137,4138],\"valid\"],[[4139,4139],\"valid\"],[[4140,4146],\"valid\"],[[4147,4149],\"valid\"],[[4150,4153],\"valid\"],[[4154,4159],\"valid\"],[[4160,4169],\"valid\"],[[4170,4175],\"valid\",[],\"NV8\"],[[4176,4185],\"valid\"],[[4186,4249],\"valid\"],[[4250,4253],\"valid\"],[[4254,4255],\"valid\",[],\"NV8\"],[[4256,4293],\"disallowed\"],[[4294,4294],\"disallowed\"],[[4295,4295],\"mapped\",[11559]],[[4296,4300],\"disallowed\"],[[4301,4301],\"mapped\",[11565]],[[4302,4303],\"disallowed\"],[[4304,4342],\"valid\"],[[4343,4344],\"valid\"],[[4345,4346],\"valid\"],[[4347,4347],\"valid\",[],\"NV8\"],[[4348,4348],\"mapped\",[4316]],[[4349,4351],\"valid\"],[[4352,4441],\"valid\",[],\"NV8\"],[[4442,4446],\"valid\",[],\"NV8\"],[[4447,4448],\"disallowed\"],[[4449,4514],\"valid\",[],\"NV8\"],[[4515,4519],\"valid\",[],\"NV8\"],[[4520,4601],\"valid\",[],\"NV8\"],[[4602,4607],\"valid\",[],\"NV8\"],[[4608,4614],\"valid\"],[[4615,4615],\"valid\"],[[4616,4678],\"valid\"],[[4679,4679],\"valid\"],[[4680,4680],\"valid\"],[[4681,4681],\"disallowed\"],[[4682,4685],\"valid\"],[[4686,4687],\"disallowed\"],[[4688,4694],\"valid\"],[[4695,4695],\"disallowed\"],[[4696,4696],\"valid\"],[[4697,4697],\"disallowed\"],[[4698,4701],\"valid\"],[[4702,4703],\"disallowed\"],[[4704,4742],\"valid\"],[[4743,4743],\"valid\"],[[4744,4744],\"valid\"],[[4745,4745],\"disallowed\"],[[4746,4749],\"valid\"],[[4750,4751],\"disallowed\"],[[4752,4782],\"valid\"],[[4783,4783],\"valid\"],[[4784,4784],\"valid\"],[[4785,4785],\"disallowed\"],[[4786,4789],\"valid\"],[[4790,4791],\"disallowed\"],[[4792,4798],\"valid\"],[[4799,4799],\"disallowed\"],[[4800,4800],\"valid\"],[[4801,4801],\"disallowed\"],[[4802,4805],\"valid\"],[[4806,4807],\"disallowed\"],[[4808,4814],\"valid\"],[[4815,4815],\"valid\"],[[4816,4822],\"valid\"],[[4823,4823],\"disallowed\"],[[4824,4846],\"valid\"],[[4847,4847],\"valid\"],[[4848,4878],\"valid\"],[[4879,4879],\"valid\"],[[4880,4880],\"valid\"],[[4881,4881],\"disallowed\"],[[4882,4885],\"valid\"],[[4886,4887],\"disallowed\"],[[4888,4894],\"valid\"],[[4895,4895],\"valid\"],[[4896,4934],\"valid\"],[[4935,4935],\"valid\"],[[4936,4954],\"valid\"],[[4955,4956],\"disallowed\"],[[4957,4958],\"valid\"],[[4959,4959],\"valid\"],[[4960,4960],\"valid\",[],\"NV8\"],[[4961,4988],\"valid\",[],\"NV8\"],[[4989,4991],\"disallowed\"],[[4992,5007],\"valid\"],[[5008,5017],\"valid\",[],\"NV8\"],[[5018,5023],\"disallowed\"],[[5024,5108],\"valid\"],[[5109,5109],\"valid\"],[[5110,5111],\"disallowed\"],[[5112,5112],\"mapped\",[5104]],[[5113,5113],\"mapped\",[5105]],[[5114,5114],\"mapped\",[5106]],[[5115,5115],\"mapped\",[5107]],[[5116,5116],\"mapped\",[5108]],[[5117,5117],\"mapped\",[5109]],[[5118,5119],\"disallowed\"],[[5120,5120],\"valid\",[],\"NV8\"],[[5121,5740],\"valid\"],[[5741,5742],\"valid\",[],\"NV8\"],[[5743,5750],\"valid\"],[[5751,5759],\"valid\"],[[5760,5760],\"disallowed\"],[[5761,5786],\"valid\"],[[5787,5788],\"valid\",[],\"NV8\"],[[5789,5791],\"disallowed\"],[[5792,5866],\"valid\"],[[5867,5872],\"valid\",[],\"NV8\"],[[5873,5880],\"valid\"],[[5881,5887],\"disallowed\"],[[5888,5900],\"valid\"],[[5901,5901],\"disallowed\"],[[5902,5908],\"valid\"],[[5909,5919],\"disallowed\"],[[5920,5940],\"valid\"],[[5941,5942],\"valid\",[],\"NV8\"],[[5943,5951],\"disallowed\"],[[5952,5971],\"valid\"],[[5972,5983],\"disallowed\"],[[5984,5996],\"valid\"],[[5997,5997],\"disallowed\"],[[5998,6000],\"valid\"],[[6001,6001],\"disallowed\"],[[6002,6003],\"valid\"],[[6004,6015],\"disallowed\"],[[6016,6067],\"valid\"],[[6068,6069],\"disallowed\"],[[6070,6099],\"valid\"],[[6100,6102],\"valid\",[],\"NV8\"],[[6103,6103],\"valid\"],[[6104,6107],\"valid\",[],\"NV8\"],[[6108,6108],\"valid\"],[[6109,6109],\"valid\"],[[6110,6111],\"disallowed\"],[[6112,6121],\"valid\"],[[6122,6127],\"disallowed\"],[[6128,6137],\"valid\",[],\"NV8\"],[[6138,6143],\"disallowed\"],[[6144,6149],\"valid\",[],\"NV8\"],[[6150,6150],\"disallowed\"],[[6151,6154],\"valid\",[],\"NV8\"],[[6155,6157],\"ignored\"],[[6158,6158],\"disallowed\"],[[6159,6159],\"disallowed\"],[[6160,6169],\"valid\"],[[6170,6175],\"disallowed\"],[[6176,6263],\"valid\"],[[6264,6271],\"disallowed\"],[[6272,6313],\"valid\"],[[6314,6314],\"valid\"],[[6315,6319],\"disallowed\"],[[6320,6389],\"valid\"],[[6390,6399],\"disallowed\"],[[6400,6428],\"valid\"],[[6429,6430],\"valid\"],[[6431,6431],\"disallowed\"],[[6432,6443],\"valid\"],[[6444,6447],\"disallowed\"],[[6448,6459],\"valid\"],[[6460,6463],\"disallowed\"],[[6464,6464],\"valid\",[],\"NV8\"],[[6465,6467],\"disallowed\"],[[6468,6469],\"valid\",[],\"NV8\"],[[6470,6509],\"valid\"],[[6510,6511],\"disallowed\"],[[6512,6516],\"valid\"],[[6517,6527],\"disallowed\"],[[6528,6569],\"valid\"],[[6570,6571],\"valid\"],[[6572,6575],\"disallowed\"],[[6576,6601],\"valid\"],[[6602,6607],\"disallowed\"],[[6608,6617],\"valid\"],[[6618,6618],\"valid\",[],\"XV8\"],[[6619,6621],\"disallowed\"],[[6622,6623],\"valid\",[],\"NV8\"],[[6624,6655],\"valid\",[],\"NV8\"],[[6656,6683],\"valid\"],[[6684,6685],\"disallowed\"],[[6686,6687],\"valid\",[],\"NV8\"],[[6688,6750],\"valid\"],[[6751,6751],\"disallowed\"],[[6752,6780],\"valid\"],[[6781,6782],\"disallowed\"],[[6783,6793],\"valid\"],[[6794,6799],\"disallowed\"],[[6800,6809],\"valid\"],[[6810,6815],\"disallowed\"],[[6816,6822],\"valid\",[],\"NV8\"],[[6823,6823],\"valid\"],[[6824,6829],\"valid\",[],\"NV8\"],[[6830,6831],\"disallowed\"],[[6832,6845],\"valid\"],[[6846,6846],\"valid\",[],\"NV8\"],[[6847,6911],\"disallowed\"],[[6912,6987],\"valid\"],[[6988,6991],\"disallowed\"],[[6992,7001],\"valid\"],[[7002,7018],\"valid\",[],\"NV8\"],[[7019,7027],\"valid\"],[[7028,7036],\"valid\",[],\"NV8\"],[[7037,7039],\"disallowed\"],[[7040,7082],\"valid\"],[[7083,7085],\"valid\"],[[7086,7097],\"valid\"],[[7098,7103],\"valid\"],[[7104,7155],\"valid\"],[[7156,7163],\"disallowed\"],[[7164,7167],\"valid\",[],\"NV8\"],[[7168,7223],\"valid\"],[[7224,7226],\"disallowed\"],[[7227,7231],\"valid\",[],\"NV8\"],[[7232,7241],\"valid\"],[[7242,7244],\"disallowed\"],[[7245,7293],\"valid\"],[[7294,7295],\"valid\",[],\"NV8\"],[[7296,7359],\"disallowed\"],[[7360,7367],\"valid\",[],\"NV8\"],[[7368,7375],\"disallowed\"],[[7376,7378],\"valid\"],[[7379,7379],\"valid\",[],\"NV8\"],[[7380,7410],\"valid\"],[[7411,7414],\"valid\"],[[7415,7415],\"disallowed\"],[[7416,7417],\"valid\"],[[7418,7423],\"disallowed\"],[[7424,7467],\"valid\"],[[7468,7468],\"mapped\",[97]],[[7469,7469],\"mapped\",[230]],[[7470,7470],\"mapped\",[98]],[[7471,7471],\"valid\"],[[7472,7472],\"mapped\",[100]],[[7473,7473],\"mapped\",[101]],[[7474,7474],\"mapped\",[477]],[[7475,7475],\"mapped\",[103]],[[7476,7476],\"mapped\",[104]],[[7477,7477],\"mapped\",[105]],[[7478,7478],\"mapped\",[106]],[[7479,7479],\"mapped\",[107]],[[7480,7480],\"mapped\",[108]],[[7481,7481],\"mapped\",[109]],[[7482,7482],\"mapped\",[110]],[[7483,7483],\"valid\"],[[7484,7484],\"mapped\",[111]],[[7485,7485],\"mapped\",[547]],[[7486,7486],\"mapped\",[112]],[[7487,7487],\"mapped\",[114]],[[7488,7488],\"mapped\",[116]],[[7489,7489],\"mapped\",[117]],[[7490,7490],\"mapped\",[119]],[[7491,7491],\"mapped\",[97]],[[7492,7492],\"mapped\",[592]],[[7493,7493],\"mapped\",[593]],[[7494,7494],\"mapped\",[7426]],[[7495,7495],\"mapped\",[98]],[[7496,7496],\"mapped\",[100]],[[7497,7497],\"mapped\",[101]],[[7498,7498],\"mapped\",[601]],[[7499,7499],\"mapped\",[603]],[[7500,7500],\"mapped\",[604]],[[7501,7501],\"mapped\",[103]],[[7502,7502],\"valid\"],[[7503,7503],\"mapped\",[107]],[[7504,7504],\"mapped\",[109]],[[7505,7505],\"mapped\",[331]],[[7506,7506],\"mapped\",[111]],[[7507,7507],\"mapped\",[596]],[[7508,7508],\"mapped\",[7446]],[[7509,7509],\"mapped\",[7447]],[[7510,7510],\"mapped\",[112]],[[7511,7511],\"mapped\",[116]],[[7512,7512],\"mapped\",[117]],[[7513,7513],\"mapped\",[7453]],[[7514,7514],\"mapped\",[623]],[[7515,7515],\"mapped\",[118]],[[7516,7516],\"mapped\",[7461]],[[7517,7517],\"mapped\",[946]],[[7518,7518],\"mapped\",[947]],[[7519,7519],\"mapped\",[948]],[[7520,7520],\"mapped\",[966]],[[7521,7521],\"mapped\",[967]],[[7522,7522],\"mapped\",[105]],[[7523,7523],\"mapped\",[114]],[[7524,7524],\"mapped\",[117]],[[7525,7525],\"mapped\",[118]],[[7526,7526],\"mapped\",[946]],[[7527,7527],\"mapped\",[947]],[[7528,7528],\"mapped\",[961]],[[7529,7529],\"mapped\",[966]],[[7530,7530],\"mapped\",[967]],[[7531,7531],\"valid\"],[[7532,7543],\"valid\"],[[7544,7544],\"mapped\",[1085]],[[7545,7578],\"valid\"],[[7579,7579],\"mapped\",[594]],[[7580,7580],\"mapped\",[99]],[[7581,7581],\"mapped\",[597]],[[7582,7582],\"mapped\",[240]],[[7583,7583],\"mapped\",[604]],[[7584,7584],\"mapped\",[102]],[[7585,7585],\"mapped\",[607]],[[7586,7586],\"mapped\",[609]],[[7587,7587],\"mapped\",[613]],[[7588,7588],\"mapped\",[616]],[[7589,7589],\"mapped\",[617]],[[7590,7590],\"mapped\",[618]],[[7591,7591],\"mapped\",[7547]],[[7592,7592],\"mapped\",[669]],[[7593,7593],\"mapped\",[621]],[[7594,7594],\"mapped\",[7557]],[[7595,7595],\"mapped\",[671]],[[7596,7596],\"mapped\",[625]],[[7597,7597],\"mapped\",[624]],[[7598,7598],\"mapped\",[626]],[[7599,7599],\"mapped\",[627]],[[7600,7600],\"mapped\",[628]],[[7601,7601],\"mapped\",[629]],[[7602,7602],\"mapped\",[632]],[[7603,7603],\"mapped\",[642]],[[7604,7604],\"mapped\",[643]],[[7605,7605],\"mapped\",[427]],[[7606,7606],\"mapped\",[649]],[[7607,7607],\"mapped\",[650]],[[7608,7608],\"mapped\",[7452]],[[7609,7609],\"mapped\",[651]],[[7610,7610],\"mapped\",[652]],[[7611,7611],\"mapped\",[122]],[[7612,7612],\"mapped\",[656]],[[7613,7613],\"mapped\",[657]],[[7614,7614],\"mapped\",[658]],[[7615,7615],\"mapped\",[952]],[[7616,7619],\"valid\"],[[7620,7626],\"valid\"],[[7627,7654],\"valid\"],[[7655,7669],\"valid\"],[[7670,7675],\"disallowed\"],[[7676,7676],\"valid\"],[[7677,7677],\"valid\"],[[7678,7679],\"valid\"],[[7680,7680],\"mapped\",[7681]],[[7681,7681],\"valid\"],[[7682,7682],\"mapped\",[7683]],[[7683,7683],\"valid\"],[[7684,7684],\"mapped\",[7685]],[[7685,7685],\"valid\"],[[7686,7686],\"mapped\",[7687]],[[7687,7687],\"valid\"],[[7688,7688],\"mapped\",[7689]],[[7689,7689],\"valid\"],[[7690,7690],\"mapped\",[7691]],[[7691,7691],\"valid\"],[[7692,7692],\"mapped\",[7693]],[[7693,7693],\"valid\"],[[7694,7694],\"mapped\",[7695]],[[7695,7695],\"valid\"],[[7696,7696],\"mapped\",[7697]],[[7697,7697],\"valid\"],[[7698,7698],\"mapped\",[7699]],[[7699,7699],\"valid\"],[[7700,7700],\"mapped\",[7701]],[[7701,7701],\"valid\"],[[7702,7702],\"mapped\",[7703]],[[7703,7703],\"valid\"],[[7704,7704],\"mapped\",[7705]],[[7705,7705],\"valid\"],[[7706,7706],\"mapped\",[7707]],[[7707,7707],\"valid\"],[[7708,7708],\"mapped\",[7709]],[[7709,7709],\"valid\"],[[7710,7710],\"mapped\",[7711]],[[7711,7711],\"valid\"],[[7712,7712],\"mapped\",[7713]],[[7713,7713],\"valid\"],[[7714,7714],\"mapped\",[7715]],[[7715,7715],\"valid\"],[[7716,7716],\"mapped\",[7717]],[[7717,7717],\"valid\"],[[7718,7718],\"mapped\",[7719]],[[7719,7719],\"valid\"],[[7720,7720],\"mapped\",[7721]],[[7721,7721],\"valid\"],[[7722,7722],\"mapped\",[7723]],[[7723,7723],\"valid\"],[[7724,7724],\"mapped\",[7725]],[[7725,7725],\"valid\"],[[7726,7726],\"mapped\",[7727]],[[7727,7727],\"valid\"],[[7728,7728],\"mapped\",[7729]],[[7729,7729],\"valid\"],[[7730,7730],\"mapped\",[7731]],[[7731,7731],\"valid\"],[[7732,7732],\"mapped\",[7733]],[[7733,7733],\"valid\"],[[7734,7734],\"mapped\",[7735]],[[7735,7735],\"valid\"],[[7736,7736],\"mapped\",[7737]],[[7737,7737],\"valid\"],[[7738,7738],\"mapped\",[7739]],[[7739,7739],\"valid\"],[[7740,7740],\"mapped\",[7741]],[[7741,7741],\"valid\"],[[7742,7742],\"mapped\",[7743]],[[7743,7743],\"valid\"],[[7744,7744],\"mapped\",[7745]],[[7745,7745],\"valid\"],[[7746,7746],\"mapped\",[7747]],[[7747,7747],\"valid\"],[[7748,7748],\"mapped\",[7749]],[[7749,7749],\"valid\"],[[7750,7750],\"mapped\",[7751]],[[7751,7751],\"valid\"],[[7752,7752],\"mapped\",[7753]],[[7753,7753],\"valid\"],[[7754,7754],\"mapped\",[7755]],[[7755,7755],\"valid\"],[[7756,7756],\"mapped\",[7757]],[[7757,7757],\"valid\"],[[7758,7758],\"mapped\",[7759]],[[7759,7759],\"valid\"],[[7760,7760],\"mapped\",[7761]],[[7761,7761],\"valid\"],[[7762,7762],\"mapped\",[7763]],[[7763,7763],\"valid\"],[[7764,7764],\"mapped\",[7765]],[[7765,7765],\"valid\"],[[7766,7766],\"mapped\",[7767]],[[7767,7767],\"valid\"],[[7768,7768],\"mapped\",[7769]],[[7769,7769],\"valid\"],[[7770,7770],\"mapped\",[7771]],[[7771,7771],\"valid\"],[[7772,7772],\"mapped\",[7773]],[[7773,7773],\"valid\"],[[7774,7774],\"mapped\",[7775]],[[7775,7775],\"valid\"],[[7776,7776],\"mapped\",[7777]],[[7777,7777],\"valid\"],[[7778,7778],\"mapped\",[7779]],[[7779,7779],\"valid\"],[[7780,7780],\"mapped\",[7781]],[[7781,7781],\"valid\"],[[7782,7782],\"mapped\",[7783]],[[7783,7783],\"valid\"],[[7784,7784],\"mapped\",[7785]],[[7785,7785],\"valid\"],[[7786,7786],\"mapped\",[7787]],[[7787,7787],\"valid\"],[[7788,7788],\"mapped\",[7789]],[[7789,7789],\"valid\"],[[7790,7790],\"mapped\",[7791]],[[7791,7791],\"valid\"],[[7792,7792],\"mapped\",[7793]],[[7793,7793],\"valid\"],[[7794,7794],\"mapped\",[7795]],[[7795,7795],\"valid\"],[[7796,7796],\"mapped\",[7797]],[[7797,7797],\"valid\"],[[7798,7798],\"mapped\",[7799]],[[7799,7799],\"valid\"],[[7800,7800],\"mapped\",[7801]],[[7801,7801],\"valid\"],[[7802,7802],\"mapped\",[7803]],[[7803,7803],\"valid\"],[[7804,7804],\"mapped\",[7805]],[[7805,7805],\"valid\"],[[7806,7806],\"mapped\",[7807]],[[7807,7807],\"valid\"],[[7808,7808],\"mapped\",[7809]],[[7809,7809],\"valid\"],[[7810,7810],\"mapped\",[7811]],[[7811,7811],\"valid\"],[[7812,7812],\"mapped\",[7813]],[[7813,7813],\"valid\"],[[7814,7814],\"mapped\",[7815]],[[7815,7815],\"valid\"],[[7816,7816],\"mapped\",[7817]],[[7817,7817],\"valid\"],[[7818,7818],\"mapped\",[7819]],[[7819,7819],\"valid\"],[[7820,7820],\"mapped\",[7821]],[[7821,7821],\"valid\"],[[7822,7822],\"mapped\",[7823]],[[7823,7823],\"valid\"],[[7824,7824],\"mapped\",[7825]],[[7825,7825],\"valid\"],[[7826,7826],\"mapped\",[7827]],[[7827,7827],\"valid\"],[[7828,7828],\"mapped\",[7829]],[[7829,7833],\"valid\"],[[7834,7834],\"mapped\",[97,702]],[[7835,7835],\"mapped\",[7777]],[[7836,7837],\"valid\"],[[7838,7838],\"mapped\",[115,115]],[[7839,7839],\"valid\"],[[7840,7840],\"mapped\",[7841]],[[7841,7841],\"valid\"],[[7842,7842],\"mapped\",[7843]],[[7843,7843],\"valid\"],[[7844,7844],\"mapped\",[7845]],[[7845,7845],\"valid\"],[[7846,7846],\"mapped\",[7847]],[[7847,7847],\"valid\"],[[7848,7848],\"mapped\",[7849]],[[7849,7849],\"valid\"],[[7850,7850],\"mapped\",[7851]],[[7851,7851],\"valid\"],[[7852,7852],\"mapped\",[7853]],[[7853,7853],\"valid\"],[[7854,7854],\"mapped\",[7855]],[[7855,7855],\"valid\"],[[7856,7856],\"mapped\",[7857]],[[7857,7857],\"valid\"],[[7858,7858],\"mapped\",[7859]],[[7859,7859],\"valid\"],[[7860,7860],\"mapped\",[7861]],[[7861,7861],\"valid\"],[[7862,7862],\"mapped\",[7863]],[[7863,7863],\"valid\"],[[7864,7864],\"mapped\",[7865]],[[7865,7865],\"valid\"],[[7866,7866],\"mapped\",[7867]],[[7867,7867],\"valid\"],[[7868,7868],\"mapped\",[7869]],[[7869,7869],\"valid\"],[[7870,7870],\"mapped\",[7871]],[[7871,7871],\"valid\"],[[7872,7872],\"mapped\",[7873]],[[7873,7873],\"valid\"],[[7874,7874],\"mapped\",[7875]],[[7875,7875],\"valid\"],[[7876,7876],\"mapped\",[7877]],[[7877,7877],\"valid\"],[[7878,7878],\"mapped\",[7879]],[[7879,7879],\"valid\"],[[7880,7880],\"mapped\",[7881]],[[7881,7881],\"valid\"],[[7882,7882],\"mapped\",[7883]],[[7883,7883],\"valid\"],[[7884,7884],\"mapped\",[7885]],[[7885,7885],\"valid\"],[[7886,7886],\"mapped\",[7887]],[[7887,7887],\"valid\"],[[7888,7888],\"mapped\",[7889]],[[7889,7889],\"valid\"],[[7890,7890],\"mapped\",[7891]],[[7891,7891],\"valid\"],[[7892,7892],\"mapped\",[7893]],[[7893,7893],\"valid\"],[[7894,7894],\"mapped\",[7895]],[[7895,7895],\"valid\"],[[7896,7896],\"mapped\",[7897]],[[7897,7897],\"valid\"],[[7898,7898],\"mapped\",[7899]],[[7899,7899],\"valid\"],[[7900,7900],\"mapped\",[7901]],[[7901,7901],\"valid\"],[[7902,7902],\"mapped\",[7903]],[[7903,7903],\"valid\"],[[7904,7904],\"mapped\",[7905]],[[7905,7905],\"valid\"],[[7906,7906],\"mapped\",[7907]],[[7907,7907],\"valid\"],[[7908,7908],\"mapped\",[7909]],[[7909,7909],\"valid\"],[[7910,7910],\"mapped\",[7911]],[[7911,7911],\"valid\"],[[7912,7912],\"mapped\",[7913]],[[7913,7913],\"valid\"],[[7914,7914],\"mapped\",[7915]],[[7915,7915],\"valid\"],[[7916,7916],\"mapped\",[7917]],[[7917,7917],\"valid\"],[[7918,7918],\"mapped\",[7919]],[[7919,7919],\"valid\"],[[7920,7920],\"mapped\",[7921]],[[7921,7921],\"valid\"],[[7922,7922],\"mapped\",[7923]],[[7923,7923],\"valid\"],[[7924,7924],\"mapped\",[7925]],[[7925,7925],\"valid\"],[[7926,7926],\"mapped\",[7927]],[[7927,7927],\"valid\"],[[7928,7928],\"mapped\",[7929]],[[7929,7929],\"valid\"],[[7930,7930],\"mapped\",[7931]],[[7931,7931],\"valid\"],[[7932,7932],\"mapped\",[7933]],[[7933,7933],\"valid\"],[[7934,7934],\"mapped\",[7935]],[[7935,7935],\"valid\"],[[7936,7943],\"valid\"],[[7944,7944],\"mapped\",[7936]],[[7945,7945],\"mapped\",[7937]],[[7946,7946],\"mapped\",[7938]],[[7947,7947],\"mapped\",[7939]],[[7948,7948],\"mapped\",[7940]],[[7949,7949],\"mapped\",[7941]],[[7950,7950],\"mapped\",[7942]],[[7951,7951],\"mapped\",[7943]],[[7952,7957],\"valid\"],[[7958,7959],\"disallowed\"],[[7960,7960],\"mapped\",[7952]],[[7961,7961],\"mapped\",[7953]],[[7962,7962],\"mapped\",[7954]],[[7963,7963],\"mapped\",[7955]],[[7964,7964],\"mapped\",[7956]],[[7965,7965],\"mapped\",[7957]],[[7966,7967],\"disallowed\"],[[7968,7975],\"valid\"],[[7976,7976],\"mapped\",[7968]],[[7977,7977],\"mapped\",[7969]],[[7978,7978],\"mapped\",[7970]],[[7979,7979],\"mapped\",[7971]],[[7980,7980],\"mapped\",[7972]],[[7981,7981],\"mapped\",[7973]],[[7982,7982],\"mapped\",[7974]],[[7983,7983],\"mapped\",[7975]],[[7984,7991],\"valid\"],[[7992,7992],\"mapped\",[7984]],[[7993,7993],\"mapped\",[7985]],[[7994,7994],\"mapped\",[7986]],[[7995,7995],\"mapped\",[7987]],[[7996,7996],\"mapped\",[7988]],[[7997,7997],\"mapped\",[7989]],[[7998,7998],\"mapped\",[7990]],[[7999,7999],\"mapped\",[7991]],[[8000,8005],\"valid\"],[[8006,8007],\"disallowed\"],[[8008,8008],\"mapped\",[8000]],[[8009,8009],\"mapped\",[8001]],[[8010,8010],\"mapped\",[8002]],[[8011,8011],\"mapped\",[8003]],[[8012,8012],\"mapped\",[8004]],[[8013,8013],\"mapped\",[8005]],[[8014,8015],\"disallowed\"],[[8016,8023],\"valid\"],[[8024,8024],\"disallowed\"],[[8025,8025],\"mapped\",[8017]],[[8026,8026],\"disallowed\"],[[8027,8027],\"mapped\",[8019]],[[8028,8028],\"disallowed\"],[[8029,8029],\"mapped\",[8021]],[[8030,8030],\"disallowed\"],[[8031,8031],\"mapped\",[8023]],[[8032,8039],\"valid\"],[[8040,8040],\"mapped\",[8032]],[[8041,8041],\"mapped\",[8033]],[[8042,8042],\"mapped\",[8034]],[[8043,8043],\"mapped\",[8035]],[[8044,8044],\"mapped\",[8036]],[[8045,8045],\"mapped\",[8037]],[[8046,8046],\"mapped\",[8038]],[[8047,8047],\"mapped\",[8039]],[[8048,8048],\"valid\"],[[8049,8049],\"mapped\",[940]],[[8050,8050],\"valid\"],[[8051,8051],\"mapped\",[941]],[[8052,8052],\"valid\"],[[8053,8053],\"mapped\",[942]],[[8054,8054],\"valid\"],[[8055,8055],\"mapped\",[943]],[[8056,8056],\"valid\"],[[8057,8057],\"mapped\",[972]],[[8058,8058],\"valid\"],[[8059,8059],\"mapped\",[973]],[[8060,8060],\"valid\"],[[8061,8061],\"mapped\",[974]],[[8062,8063],\"disallowed\"],[[8064,8064],\"mapped\",[7936,953]],[[8065,8065],\"mapped\",[7937,953]],[[8066,8066],\"mapped\",[7938,953]],[[8067,8067],\"mapped\",[7939,953]],[[8068,8068],\"mapped\",[7940,953]],[[8069,8069],\"mapped\",[7941,953]],[[8070,8070],\"mapped\",[7942,953]],[[8071,8071],\"mapped\",[7943,953]],[[8072,8072],\"mapped\",[7936,953]],[[8073,8073],\"mapped\",[7937,953]],[[8074,8074],\"mapped\",[7938,953]],[[8075,8075],\"mapped\",[7939,953]],[[8076,8076],\"mapped\",[7940,953]],[[8077,8077],\"mapped\",[7941,953]],[[8078,8078],\"mapped\",[7942,953]],[[8079,8079],\"mapped\",[7943,953]],[[8080,8080],\"mapped\",[7968,953]],[[8081,8081],\"mapped\",[7969,953]],[[8082,8082],\"mapped\",[7970,953]],[[8083,8083],\"mapped\",[7971,953]],[[8084,8084],\"mapped\",[7972,953]],[[8085,8085],\"mapped\",[7973,953]],[[8086,8086],\"mapped\",[7974,953]],[[8087,8087],\"mapped\",[7975,953]],[[8088,8088],\"mapped\",[7968,953]],[[8089,8089],\"mapped\",[7969,953]],[[8090,8090],\"mapped\",[7970,953]],[[8091,8091],\"mapped\",[7971,953]],[[8092,8092],\"mapped\",[7972,953]],[[8093,8093],\"mapped\",[7973,953]],[[8094,8094],\"mapped\",[7974,953]],[[8095,8095],\"mapped\",[7975,953]],[[8096,8096],\"mapped\",[8032,953]],[[8097,8097],\"mapped\",[8033,953]],[[8098,8098],\"mapped\",[8034,953]],[[8099,8099],\"mapped\",[8035,953]],[[8100,8100],\"mapped\",[8036,953]],[[8101,8101],\"mapped\",[8037,953]],[[8102,8102],\"mapped\",[8038,953]],[[8103,8103],\"mapped\",[8039,953]],[[8104,8104],\"mapped\",[8032,953]],[[8105,8105],\"mapped\",[8033,953]],[[8106,8106],\"mapped\",[8034,953]],[[8107,8107],\"mapped\",[8035,953]],[[8108,8108],\"mapped\",[8036,953]],[[8109,8109],\"mapped\",[8037,953]],[[8110,8110],\"mapped\",[8038,953]],[[8111,8111],\"mapped\",[8039,953]],[[8112,8113],\"valid\"],[[8114,8114],\"mapped\",[8048,953]],[[8115,8115],\"mapped\",[945,953]],[[8116,8116],\"mapped\",[940,953]],[[8117,8117],\"disallowed\"],[[8118,8118],\"valid\"],[[8119,8119],\"mapped\",[8118,953]],[[8120,8120],\"mapped\",[8112]],[[8121,8121],\"mapped\",[8113]],[[8122,8122],\"mapped\",[8048]],[[8123,8123],\"mapped\",[940]],[[8124,8124],\"mapped\",[945,953]],[[8125,8125],\"disallowed_STD3_mapped\",[32,787]],[[8126,8126],\"mapped\",[953]],[[8127,8127],\"disallowed_STD3_mapped\",[32,787]],[[8128,8128],\"disallowed_STD3_mapped\",[32,834]],[[8129,8129],\"disallowed_STD3_mapped\",[32,776,834]],[[8130,8130],\"mapped\",[8052,953]],[[8131,8131],\"mapped\",[951,953]],[[8132,8132],\"mapped\",[942,953]],[[8133,8133],\"disallowed\"],[[8134,8134],\"valid\"],[[8135,8135],\"mapped\",[8134,953]],[[8136,8136],\"mapped\",[8050]],[[8137,8137],\"mapped\",[941]],[[8138,8138],\"mapped\",[8052]],[[8139,8139],\"mapped\",[942]],[[8140,8140],\"mapped\",[951,953]],[[8141,8141],\"disallowed_STD3_mapped\",[32,787,768]],[[8142,8142],\"disallowed_STD3_mapped\",[32,787,769]],[[8143,8143],\"disallowed_STD3_mapped\",[32,787,834]],[[8144,8146],\"valid\"],[[8147,8147],\"mapped\",[912]],[[8148,8149],\"disallowed\"],[[8150,8151],\"valid\"],[[8152,8152],\"mapped\",[8144]],[[8153,8153],\"mapped\",[8145]],[[8154,8154],\"mapped\",[8054]],[[8155,8155],\"mapped\",[943]],[[8156,8156],\"disallowed\"],[[8157,8157],\"disallowed_STD3_mapped\",[32,788,768]],[[8158,8158],\"disallowed_STD3_mapped\",[32,788,769]],[[8159,8159],\"disallowed_STD3_mapped\",[32,788,834]],[[8160,8162],\"valid\"],[[8163,8163],\"mapped\",[944]],[[8164,8167],\"valid\"],[[8168,8168],\"mapped\",[8160]],[[8169,8169],\"mapped\",[8161]],[[8170,8170],\"mapped\",[8058]],[[8171,8171],\"mapped\",[973]],[[8172,8172],\"mapped\",[8165]],[[8173,8173],\"disallowed_STD3_mapped\",[32,776,768]],[[8174,8174],\"disallowed_STD3_mapped\",[32,776,769]],[[8175,8175],\"disallowed_STD3_mapped\",[96]],[[8176,8177],\"disallowed\"],[[8178,8178],\"mapped\",[8060,953]],[[8179,8179],\"mapped\",[969,953]],[[8180,8180],\"mapped\",[974,953]],[[8181,8181],\"disallowed\"],[[8182,8182],\"valid\"],[[8183,8183],\"mapped\",[8182,953]],[[8184,8184],\"mapped\",[8056]],[[8185,8185],\"mapped\",[972]],[[8186,8186],\"mapped\",[8060]],[[8187,8187],\"mapped\",[974]],[[8188,8188],\"mapped\",[969,953]],[[8189,8189],\"disallowed_STD3_mapped\",[32,769]],[[8190,8190],\"disallowed_STD3_mapped\",[32,788]],[[8191,8191],\"disallowed\"],[[8192,8202],\"disallowed_STD3_mapped\",[32]],[[8203,8203],\"ignored\"],[[8204,8205],\"deviation\",[]],[[8206,8207],\"disallowed\"],[[8208,8208],\"valid\",[],\"NV8\"],[[8209,8209],\"mapped\",[8208]],[[8210,8214],\"valid\",[],\"NV8\"],[[8215,8215],\"disallowed_STD3_mapped\",[32,819]],[[8216,8227],\"valid\",[],\"NV8\"],[[8228,8230],\"disallowed\"],[[8231,8231],\"valid\",[],\"NV8\"],[[8232,8238],\"disallowed\"],[[8239,8239],\"disallowed_STD3_mapped\",[32]],[[8240,8242],\"valid\",[],\"NV8\"],[[8243,8243],\"mapped\",[8242,8242]],[[8244,8244],\"mapped\",[8242,8242,8242]],[[8245,8245],\"valid\",[],\"NV8\"],[[8246,8246],\"mapped\",[8245,8245]],[[8247,8247],\"mapped\",[8245,8245,8245]],[[8248,8251],\"valid\",[],\"NV8\"],[[8252,8252],\"disallowed_STD3_mapped\",[33,33]],[[8253,8253],\"valid\",[],\"NV8\"],[[8254,8254],\"disallowed_STD3_mapped\",[32,773]],[[8255,8262],\"valid\",[],\"NV8\"],[[8263,8263],\"disallowed_STD3_mapped\",[63,63]],[[8264,8264],\"disallowed_STD3_mapped\",[63,33]],[[8265,8265],\"disallowed_STD3_mapped\",[33,63]],[[8266,8269],\"valid\",[],\"NV8\"],[[8270,8274],\"valid\",[],\"NV8\"],[[8275,8276],\"valid\",[],\"NV8\"],[[8277,8278],\"valid\",[],\"NV8\"],[[8279,8279],\"mapped\",[8242,8242,8242,8242]],[[8280,8286],\"valid\",[],\"NV8\"],[[8287,8287],\"disallowed_STD3_mapped\",[32]],[[8288,8288],\"ignored\"],[[8289,8291],\"disallowed\"],[[8292,8292],\"ignored\"],[[8293,8293],\"disallowed\"],[[8294,8297],\"disallowed\"],[[8298,8303],\"disallowed\"],[[8304,8304],\"mapped\",[48]],[[8305,8305],\"mapped\",[105]],[[8306,8307],\"disallowed\"],[[8308,8308],\"mapped\",[52]],[[8309,8309],\"mapped\",[53]],[[8310,8310],\"mapped\",[54]],[[8311,8311],\"mapped\",[55]],[[8312,8312],\"mapped\",[56]],[[8313,8313],\"mapped\",[57]],[[8314,8314],\"disallowed_STD3_mapped\",[43]],[[8315,8315],\"mapped\",[8722]],[[8316,8316],\"disallowed_STD3_mapped\",[61]],[[8317,8317],\"disallowed_STD3_mapped\",[40]],[[8318,8318],\"disallowed_STD3_mapped\",[41]],[[8319,8319],\"mapped\",[110]],[[8320,8320],\"mapped\",[48]],[[8321,8321],\"mapped\",[49]],[[8322,8322],\"mapped\",[50]],[[8323,8323],\"mapped\",[51]],[[8324,8324],\"mapped\",[52]],[[8325,8325],\"mapped\",[53]],[[8326,8326],\"mapped\",[54]],[[8327,8327],\"mapped\",[55]],[[8328,8328],\"mapped\",[56]],[[8329,8329],\"mapped\",[57]],[[8330,8330],\"disallowed_STD3_mapped\",[43]],[[8331,8331],\"mapped\",[8722]],[[8332,8332],\"disallowed_STD3_mapped\",[61]],[[8333,8333],\"disallowed_STD3_mapped\",[40]],[[8334,8334],\"disallowed_STD3_mapped\",[41]],[[8335,8335],\"disallowed\"],[[8336,8336],\"mapped\",[97]],[[8337,8337],\"mapped\",[101]],[[8338,8338],\"mapped\",[111]],[[8339,8339],\"mapped\",[120]],[[8340,8340],\"mapped\",[601]],[[8341,8341],\"mapped\",[104]],[[8342,8342],\"mapped\",[107]],[[8343,8343],\"mapped\",[108]],[[8344,8344],\"mapped\",[109]],[[8345,8345],\"mapped\",[110]],[[8346,8346],\"mapped\",[112]],[[8347,8347],\"mapped\",[115]],[[8348,8348],\"mapped\",[116]],[[8349,8351],\"disallowed\"],[[8352,8359],\"valid\",[],\"NV8\"],[[8360,8360],\"mapped\",[114,115]],[[8361,8362],\"valid\",[],\"NV8\"],[[8363,8363],\"valid\",[],\"NV8\"],[[8364,8364],\"valid\",[],\"NV8\"],[[8365,8367],\"valid\",[],\"NV8\"],[[8368,8369],\"valid\",[],\"NV8\"],[[8370,8373],\"valid\",[],\"NV8\"],[[8374,8376],\"valid\",[],\"NV8\"],[[8377,8377],\"valid\",[],\"NV8\"],[[8378,8378],\"valid\",[],\"NV8\"],[[8379,8381],\"valid\",[],\"NV8\"],[[8382,8382],\"valid\",[],\"NV8\"],[[8383,8399],\"disallowed\"],[[8400,8417],\"valid\",[],\"NV8\"],[[8418,8419],\"valid\",[],\"NV8\"],[[8420,8426],\"valid\",[],\"NV8\"],[[8427,8427],\"valid\",[],\"NV8\"],[[8428,8431],\"valid\",[],\"NV8\"],[[8432,8432],\"valid\",[],\"NV8\"],[[8433,8447],\"disallowed\"],[[8448,8448],\"disallowed_STD3_mapped\",[97,47,99]],[[8449,8449],\"disallowed_STD3_mapped\",[97,47,115]],[[8450,8450],\"mapped\",[99]],[[8451,8451],\"mapped\",[176,99]],[[8452,8452],\"valid\",[],\"NV8\"],[[8453,8453],\"disallowed_STD3_mapped\",[99,47,111]],[[8454,8454],\"disallowed_STD3_mapped\",[99,47,117]],[[8455,8455],\"mapped\",[603]],[[8456,8456],\"valid\",[],\"NV8\"],[[8457,8457],\"mapped\",[176,102]],[[8458,8458],\"mapped\",[103]],[[8459,8462],\"mapped\",[104]],[[8463,8463],\"mapped\",[295]],[[8464,8465],\"mapped\",[105]],[[8466,8467],\"mapped\",[108]],[[8468,8468],\"valid\",[],\"NV8\"],[[8469,8469],\"mapped\",[110]],[[8470,8470],\"mapped\",[110,111]],[[8471,8472],\"valid\",[],\"NV8\"],[[8473,8473],\"mapped\",[112]],[[8474,8474],\"mapped\",[113]],[[8475,8477],\"mapped\",[114]],[[8478,8479],\"valid\",[],\"NV8\"],[[8480,8480],\"mapped\",[115,109]],[[8481,8481],\"mapped\",[116,101,108]],[[8482,8482],\"mapped\",[116,109]],[[8483,8483],\"valid\",[],\"NV8\"],[[8484,8484],\"mapped\",[122]],[[8485,8485],\"valid\",[],\"NV8\"],[[8486,8486],\"mapped\",[969]],[[8487,8487],\"valid\",[],\"NV8\"],[[8488,8488],\"mapped\",[122]],[[8489,8489],\"valid\",[],\"NV8\"],[[8490,8490],\"mapped\",[107]],[[8491,8491],\"mapped\",[229]],[[8492,8492],\"mapped\",[98]],[[8493,8493],\"mapped\",[99]],[[8494,8494],\"valid\",[],\"NV8\"],[[8495,8496],\"mapped\",[101]],[[8497,8497],\"mapped\",[102]],[[8498,8498],\"disallowed\"],[[8499,8499],\"mapped\",[109]],[[8500,8500],\"mapped\",[111]],[[8501,8501],\"mapped\",[1488]],[[8502,8502],\"mapped\",[1489]],[[8503,8503],\"mapped\",[1490]],[[8504,8504],\"mapped\",[1491]],[[8505,8505],\"mapped\",[105]],[[8506,8506],\"valid\",[],\"NV8\"],[[8507,8507],\"mapped\",[102,97,120]],[[8508,8508],\"mapped\",[960]],[[8509,8510],\"mapped\",[947]],[[8511,8511],\"mapped\",[960]],[[8512,8512],\"mapped\",[8721]],[[8513,8516],\"valid\",[],\"NV8\"],[[8517,8518],\"mapped\",[100]],[[8519,8519],\"mapped\",[101]],[[8520,8520],\"mapped\",[105]],[[8521,8521],\"mapped\",[106]],[[8522,8523],\"valid\",[],\"NV8\"],[[8524,8524],\"valid\",[],\"NV8\"],[[8525,8525],\"valid\",[],\"NV8\"],[[8526,8526],\"valid\"],[[8527,8527],\"valid\",[],\"NV8\"],[[8528,8528],\"mapped\",[49,8260,55]],[[8529,8529],\"mapped\",[49,8260,57]],[[8530,8530],\"mapped\",[49,8260,49,48]],[[8531,8531],\"mapped\",[49,8260,51]],[[8532,8532],\"mapped\",[50,8260,51]],[[8533,8533],\"mapped\",[49,8260,53]],[[8534,8534],\"mapped\",[50,8260,53]],[[8535,8535],\"mapped\",[51,8260,53]],[[8536,8536],\"mapped\",[52,8260,53]],[[8537,8537],\"mapped\",[49,8260,54]],[[8538,8538],\"mapped\",[53,8260,54]],[[8539,8539],\"mapped\",[49,8260,56]],[[8540,8540],\"mapped\",[51,8260,56]],[[8541,8541],\"mapped\",[53,8260,56]],[[8542,8542],\"mapped\",[55,8260,56]],[[8543,8543],\"mapped\",[49,8260]],[[8544,8544],\"mapped\",[105]],[[8545,8545],\"mapped\",[105,105]],[[8546,8546],\"mapped\",[105,105,105]],[[8547,8547],\"mapped\",[105,118]],[[8548,8548],\"mapped\",[118]],[[8549,8549],\"mapped\",[118,105]],[[8550,8550],\"mapped\",[118,105,105]],[[8551,8551],\"mapped\",[118,105,105,105]],[[8552,8552],\"mapped\",[105,120]],[[8553,8553],\"mapped\",[120]],[[8554,8554],\"mapped\",[120,105]],[[8555,8555],\"mapped\",[120,105,105]],[[8556,8556],\"mapped\",[108]],[[8557,8557],\"mapped\",[99]],[[8558,8558],\"mapped\",[100]],[[8559,8559],\"mapped\",[109]],[[8560,8560],\"mapped\",[105]],[[8561,8561],\"mapped\",[105,105]],[[8562,8562],\"mapped\",[105,105,105]],[[8563,8563],\"mapped\",[105,118]],[[8564,8564],\"mapped\",[118]],[[8565,8565],\"mapped\",[118,105]],[[8566,8566],\"mapped\",[118,105,105]],[[8567,8567],\"mapped\",[118,105,105,105]],[[8568,8568],\"mapped\",[105,120]],[[8569,8569],\"mapped\",[120]],[[8570,8570],\"mapped\",[120,105]],[[8571,8571],\"mapped\",[120,105,105]],[[8572,8572],\"mapped\",[108]],[[8573,8573],\"mapped\",[99]],[[8574,8574],\"mapped\",[100]],[[8575,8575],\"mapped\",[109]],[[8576,8578],\"valid\",[],\"NV8\"],[[8579,8579],\"disallowed\"],[[8580,8580],\"valid\"],[[8581,8584],\"valid\",[],\"NV8\"],[[8585,8585],\"mapped\",[48,8260,51]],[[8586,8587],\"valid\",[],\"NV8\"],[[8588,8591],\"disallowed\"],[[8592,8682],\"valid\",[],\"NV8\"],[[8683,8691],\"valid\",[],\"NV8\"],[[8692,8703],\"valid\",[],\"NV8\"],[[8704,8747],\"valid\",[],\"NV8\"],[[8748,8748],\"mapped\",[8747,8747]],[[8749,8749],\"mapped\",[8747,8747,8747]],[[8750,8750],\"valid\",[],\"NV8\"],[[8751,8751],\"mapped\",[8750,8750]],[[8752,8752],\"mapped\",[8750,8750,8750]],[[8753,8799],\"valid\",[],\"NV8\"],[[8800,8800],\"disallowed_STD3_valid\"],[[8801,8813],\"valid\",[],\"NV8\"],[[8814,8815],\"disallowed_STD3_valid\"],[[8816,8945],\"valid\",[],\"NV8\"],[[8946,8959],\"valid\",[],\"NV8\"],[[8960,8960],\"valid\",[],\"NV8\"],[[8961,8961],\"valid\",[],\"NV8\"],[[8962,9000],\"valid\",[],\"NV8\"],[[9001,9001],\"mapped\",[12296]],[[9002,9002],\"mapped\",[12297]],[[9003,9082],\"valid\",[],\"NV8\"],[[9083,9083],\"valid\",[],\"NV8\"],[[9084,9084],\"valid\",[],\"NV8\"],[[9085,9114],\"valid\",[],\"NV8\"],[[9115,9166],\"valid\",[],\"NV8\"],[[9167,9168],\"valid\",[],\"NV8\"],[[9169,9179],\"valid\",[],\"NV8\"],[[9180,9191],\"valid\",[],\"NV8\"],[[9192,9192],\"valid\",[],\"NV8\"],[[9193,9203],\"valid\",[],\"NV8\"],[[9204,9210],\"valid\",[],\"NV8\"],[[9211,9215],\"disallowed\"],[[9216,9252],\"valid\",[],\"NV8\"],[[9253,9254],\"valid\",[],\"NV8\"],[[9255,9279],\"disallowed\"],[[9280,9290],\"valid\",[],\"NV8\"],[[9291,9311],\"disallowed\"],[[9312,9312],\"mapped\",[49]],[[9313,9313],\"mapped\",[50]],[[9314,9314],\"mapped\",[51]],[[9315,9315],\"mapped\",[52]],[[9316,9316],\"mapped\",[53]],[[9317,9317],\"mapped\",[54]],[[9318,9318],\"mapped\",[55]],[[9319,9319],\"mapped\",[56]],[[9320,9320],\"mapped\",[57]],[[9321,9321],\"mapped\",[49,48]],[[9322,9322],\"mapped\",[49,49]],[[9323,9323],\"mapped\",[49,50]],[[9324,9324],\"mapped\",[49,51]],[[9325,9325],\"mapped\",[49,52]],[[9326,9326],\"mapped\",[49,53]],[[9327,9327],\"mapped\",[49,54]],[[9328,9328],\"mapped\",[49,55]],[[9329,9329],\"mapped\",[49,56]],[[9330,9330],\"mapped\",[49,57]],[[9331,9331],\"mapped\",[50,48]],[[9332,9332],\"disallowed_STD3_mapped\",[40,49,41]],[[9333,9333],\"disallowed_STD3_mapped\",[40,50,41]],[[9334,9334],\"disallowed_STD3_mapped\",[40,51,41]],[[9335,9335],\"disallowed_STD3_mapped\",[40,52,41]],[[9336,9336],\"disallowed_STD3_mapped\",[40,53,41]],[[9337,9337],\"disallowed_STD3_mapped\",[40,54,41]],[[9338,9338],\"disallowed_STD3_mapped\",[40,55,41]],[[9339,9339],\"disallowed_STD3_mapped\",[40,56,41]],[[9340,9340],\"disallowed_STD3_mapped\",[40,57,41]],[[9341,9341],\"disallowed_STD3_mapped\",[40,49,48,41]],[[9342,9342],\"disallowed_STD3_mapped\",[40,49,49,41]],[[9343,9343],\"disallowed_STD3_mapped\",[40,49,50,41]],[[9344,9344],\"disallowed_STD3_mapped\",[40,49,51,41]],[[9345,9345],\"disallowed_STD3_mapped\",[40,49,52,41]],[[9346,9346],\"disallowed_STD3_mapped\",[40,49,53,41]],[[9347,9347],\"disallowed_STD3_mapped\",[40,49,54,41]],[[9348,9348],\"disallowed_STD3_mapped\",[40,49,55,41]],[[9349,9349],\"disallowed_STD3_mapped\",[40,49,56,41]],[[9350,9350],\"disallowed_STD3_mapped\",[40,49,57,41]],[[9351,9351],\"disallowed_STD3_mapped\",[40,50,48,41]],[[9352,9371],\"disallowed\"],[[9372,9372],\"disallowed_STD3_mapped\",[40,97,41]],[[9373,9373],\"disallowed_STD3_mapped\",[40,98,41]],[[9374,9374],\"disallowed_STD3_mapped\",[40,99,41]],[[9375,9375],\"disallowed_STD3_mapped\",[40,100,41]],[[9376,9376],\"disallowed_STD3_mapped\",[40,101,41]],[[9377,9377],\"disallowed_STD3_mapped\",[40,102,41]],[[9378,9378],\"disallowed_STD3_mapped\",[40,103,41]],[[9379,9379],\"disallowed_STD3_mapped\",[40,104,41]],[[9380,9380],\"disallowed_STD3_mapped\",[40,105,41]],[[9381,9381],\"disallowed_STD3_mapped\",[40,106,41]],[[9382,9382],\"disallowed_STD3_mapped\",[40,107,41]],[[9383,9383],\"disallowed_STD3_mapped\",[40,108,41]],[[9384,9384],\"disallowed_STD3_mapped\",[40,109,41]],[[9385,9385],\"disallowed_STD3_mapped\",[40,110,41]],[[9386,9386],\"disallowed_STD3_mapped\",[40,111,41]],[[9387,9387],\"disallowed_STD3_mapped\",[40,112,41]],[[9388,9388],\"disallowed_STD3_mapped\",[40,113,41]],[[9389,9389],\"disallowed_STD3_mapped\",[40,114,41]],[[9390,9390],\"disallowed_STD3_mapped\",[40,115,41]],[[9391,9391],\"disallowed_STD3_mapped\",[40,116,41]],[[9392,9392],\"disallowed_STD3_mapped\",[40,117,41]],[[9393,9393],\"disallowed_STD3_mapped\",[40,118,41]],[[9394,9394],\"disallowed_STD3_mapped\",[40,119,41]],[[9395,9395],\"disallowed_STD3_mapped\",[40,120,41]],[[9396,9396],\"disallowed_STD3_mapped\",[40,121,41]],[[9397,9397],\"disallowed_STD3_mapped\",[40,122,41]],[[9398,9398],\"mapped\",[97]],[[9399,9399],\"mapped\",[98]],[[9400,9400],\"mapped\",[99]],[[9401,9401],\"mapped\",[100]],[[9402,9402],\"mapped\",[101]],[[9403,9403],\"mapped\",[102]],[[9404,9404],\"mapped\",[103]],[[9405,9405],\"mapped\",[104]],[[9406,9406],\"mapped\",[105]],[[9407,9407],\"mapped\",[106]],[[9408,9408],\"mapped\",[107]],[[9409,9409],\"mapped\",[108]],[[9410,9410],\"mapped\",[109]],[[9411,9411],\"mapped\",[110]],[[9412,9412],\"mapped\",[111]],[[9413,9413],\"mapped\",[112]],[[9414,9414],\"mapped\",[113]],[[9415,9415],\"mapped\",[114]],[[9416,9416],\"mapped\",[115]],[[9417,9417],\"mapped\",[116]],[[9418,9418],\"mapped\",[117]],[[9419,9419],\"mapped\",[118]],[[9420,9420],\"mapped\",[119]],[[9421,9421],\"mapped\",[120]],[[9422,9422],\"mapped\",[121]],[[9423,9423],\"mapped\",[122]],[[9424,9424],\"mapped\",[97]],[[9425,9425],\"mapped\",[98]],[[9426,9426],\"mapped\",[99]],[[9427,9427],\"mapped\",[100]],[[9428,9428],\"mapped\",[101]],[[9429,9429],\"mapped\",[102]],[[9430,9430],\"mapped\",[103]],[[9431,9431],\"mapped\",[104]],[[9432,9432],\"mapped\",[105]],[[9433,9433],\"mapped\",[106]],[[9434,9434],\"mapped\",[107]],[[9435,9435],\"mapped\",[108]],[[9436,9436],\"mapped\",[109]],[[9437,9437],\"mapped\",[110]],[[9438,9438],\"mapped\",[111]],[[9439,9439],\"mapped\",[112]],[[9440,9440],\"mapped\",[113]],[[9441,9441],\"mapped\",[114]],[[9442,9442],\"mapped\",[115]],[[9443,9443],\"mapped\",[116]],[[9444,9444],\"mapped\",[117]],[[9445,9445],\"mapped\",[118]],[[9446,9446],\"mapped\",[119]],[[9447,9447],\"mapped\",[120]],[[9448,9448],\"mapped\",[121]],[[9449,9449],\"mapped\",[122]],[[9450,9450],\"mapped\",[48]],[[9451,9470],\"valid\",[],\"NV8\"],[[9471,9471],\"valid\",[],\"NV8\"],[[9472,9621],\"valid\",[],\"NV8\"],[[9622,9631],\"valid\",[],\"NV8\"],[[9632,9711],\"valid\",[],\"NV8\"],[[9712,9719],\"valid\",[],\"NV8\"],[[9720,9727],\"valid\",[],\"NV8\"],[[9728,9747],\"valid\",[],\"NV8\"],[[9748,9749],\"valid\",[],\"NV8\"],[[9750,9751],\"valid\",[],\"NV8\"],[[9752,9752],\"valid\",[],\"NV8\"],[[9753,9753],\"valid\",[],\"NV8\"],[[9754,9839],\"valid\",[],\"NV8\"],[[9840,9841],\"valid\",[],\"NV8\"],[[9842,9853],\"valid\",[],\"NV8\"],[[9854,9855],\"valid\",[],\"NV8\"],[[9856,9865],\"valid\",[],\"NV8\"],[[9866,9873],\"valid\",[],\"NV8\"],[[9874,9884],\"valid\",[],\"NV8\"],[[9885,9885],\"valid\",[],\"NV8\"],[[9886,9887],\"valid\",[],\"NV8\"],[[9888,9889],\"valid\",[],\"NV8\"],[[9890,9905],\"valid\",[],\"NV8\"],[[9906,9906],\"valid\",[],\"NV8\"],[[9907,9916],\"valid\",[],\"NV8\"],[[9917,9919],\"valid\",[],\"NV8\"],[[9920,9923],\"valid\",[],\"NV8\"],[[9924,9933],\"valid\",[],\"NV8\"],[[9934,9934],\"valid\",[],\"NV8\"],[[9935,9953],\"valid\",[],\"NV8\"],[[9954,9954],\"valid\",[],\"NV8\"],[[9955,9955],\"valid\",[],\"NV8\"],[[9956,9959],\"valid\",[],\"NV8\"],[[9960,9983],\"valid\",[],\"NV8\"],[[9984,9984],\"valid\",[],\"NV8\"],[[9985,9988],\"valid\",[],\"NV8\"],[[9989,9989],\"valid\",[],\"NV8\"],[[9990,9993],\"valid\",[],\"NV8\"],[[9994,9995],\"valid\",[],\"NV8\"],[[9996,10023],\"valid\",[],\"NV8\"],[[10024,10024],\"valid\",[],\"NV8\"],[[10025,10059],\"valid\",[],\"NV8\"],[[10060,10060],\"valid\",[],\"NV8\"],[[10061,10061],\"valid\",[],\"NV8\"],[[10062,10062],\"valid\",[],\"NV8\"],[[10063,10066],\"valid\",[],\"NV8\"],[[10067,10069],\"valid\",[],\"NV8\"],[[10070,10070],\"valid\",[],\"NV8\"],[[10071,10071],\"valid\",[],\"NV8\"],[[10072,10078],\"valid\",[],\"NV8\"],[[10079,10080],\"valid\",[],\"NV8\"],[[10081,10087],\"valid\",[],\"NV8\"],[[10088,10101],\"valid\",[],\"NV8\"],[[10102,10132],\"valid\",[],\"NV8\"],[[10133,10135],\"valid\",[],\"NV8\"],[[10136,10159],\"valid\",[],\"NV8\"],[[10160,10160],\"valid\",[],\"NV8\"],[[10161,10174],\"valid\",[],\"NV8\"],[[10175,10175],\"valid\",[],\"NV8\"],[[10176,10182],\"valid\",[],\"NV8\"],[[10183,10186],\"valid\",[],\"NV8\"],[[10187,10187],\"valid\",[],\"NV8\"],[[10188,10188],\"valid\",[],\"NV8\"],[[10189,10189],\"valid\",[],\"NV8\"],[[10190,10191],\"valid\",[],\"NV8\"],[[10192,10219],\"valid\",[],\"NV8\"],[[10220,10223],\"valid\",[],\"NV8\"],[[10224,10239],\"valid\",[],\"NV8\"],[[10240,10495],\"valid\",[],\"NV8\"],[[10496,10763],\"valid\",[],\"NV8\"],[[10764,10764],\"mapped\",[8747,8747,8747,8747]],[[10765,10867],\"valid\",[],\"NV8\"],[[10868,10868],\"disallowed_STD3_mapped\",[58,58,61]],[[10869,10869],\"disallowed_STD3_mapped\",[61,61]],[[10870,10870],\"disallowed_STD3_mapped\",[61,61,61]],[[10871,10971],\"valid\",[],\"NV8\"],[[10972,10972],\"mapped\",[10973,824]],[[10973,11007],\"valid\",[],\"NV8\"],[[11008,11021],\"valid\",[],\"NV8\"],[[11022,11027],\"valid\",[],\"NV8\"],[[11028,11034],\"valid\",[],\"NV8\"],[[11035,11039],\"valid\",[],\"NV8\"],[[11040,11043],\"valid\",[],\"NV8\"],[[11044,11084],\"valid\",[],\"NV8\"],[[11085,11087],\"valid\",[],\"NV8\"],[[11088,11092],\"valid\",[],\"NV8\"],[[11093,11097],\"valid\",[],\"NV8\"],[[11098,11123],\"valid\",[],\"NV8\"],[[11124,11125],\"disallowed\"],[[11126,11157],\"valid\",[],\"NV8\"],[[11158,11159],\"disallowed\"],[[11160,11193],\"valid\",[],\"NV8\"],[[11194,11196],\"disallowed\"],[[11197,11208],\"valid\",[],\"NV8\"],[[11209,11209],\"disallowed\"],[[11210,11217],\"valid\",[],\"NV8\"],[[11218,11243],\"disallowed\"],[[11244,11247],\"valid\",[],\"NV8\"],[[11248,11263],\"disallowed\"],[[11264,11264],\"mapped\",[11312]],[[11265,11265],\"mapped\",[11313]],[[11266,11266],\"mapped\",[11314]],[[11267,11267],\"mapped\",[11315]],[[11268,11268],\"mapped\",[11316]],[[11269,11269],\"mapped\",[11317]],[[11270,11270],\"mapped\",[11318]],[[11271,11271],\"mapped\",[11319]],[[11272,11272],\"mapped\",[11320]],[[11273,11273],\"mapped\",[11321]],[[11274,11274],\"mapped\",[11322]],[[11275,11275],\"mapped\",[11323]],[[11276,11276],\"mapped\",[11324]],[[11277,11277],\"mapped\",[11325]],[[11278,11278],\"mapped\",[11326]],[[11279,11279],\"mapped\",[11327]],[[11280,11280],\"mapped\",[11328]],[[11281,11281],\"mapped\",[11329]],[[11282,11282],\"mapped\",[11330]],[[11283,11283],\"mapped\",[11331]],[[11284,11284],\"mapped\",[11332]],[[11285,11285],\"mapped\",[11333]],[[11286,11286],\"mapped\",[11334]],[[11287,11287],\"mapped\",[11335]],[[11288,11288],\"mapped\",[11336]],[[11289,11289],\"mapped\",[11337]],[[11290,11290],\"mapped\",[11338]],[[11291,11291],\"mapped\",[11339]],[[11292,11292],\"mapped\",[11340]],[[11293,11293],\"mapped\",[11341]],[[11294,11294],\"mapped\",[11342]],[[11295,11295],\"mapped\",[11343]],[[11296,11296],\"mapped\",[11344]],[[11297,11297],\"mapped\",[11345]],[[11298,11298],\"mapped\",[11346]],[[11299,11299],\"mapped\",[11347]],[[11300,11300],\"mapped\",[11348]],[[11301,11301],\"mapped\",[11349]],[[11302,11302],\"mapped\",[11350]],[[11303,11303],\"mapped\",[11351]],[[11304,11304],\"mapped\",[11352]],[[11305,11305],\"mapped\",[11353]],[[11306,11306],\"mapped\",[11354]],[[11307,11307],\"mapped\",[11355]],[[11308,11308],\"mapped\",[11356]],[[11309,11309],\"mapped\",[11357]],[[11310,11310],\"mapped\",[11358]],[[11311,11311],\"disallowed\"],[[11312,11358],\"valid\"],[[11359,11359],\"disallowed\"],[[11360,11360],\"mapped\",[11361]],[[11361,11361],\"valid\"],[[11362,11362],\"mapped\",[619]],[[11363,11363],\"mapped\",[7549]],[[11364,11364],\"mapped\",[637]],[[11365,11366],\"valid\"],[[11367,11367],\"mapped\",[11368]],[[11368,11368],\"valid\"],[[11369,11369],\"mapped\",[11370]],[[11370,11370],\"valid\"],[[11371,11371],\"mapped\",[11372]],[[11372,11372],\"valid\"],[[11373,11373],\"mapped\",[593]],[[11374,11374],\"mapped\",[625]],[[11375,11375],\"mapped\",[592]],[[11376,11376],\"mapped\",[594]],[[11377,11377],\"valid\"],[[11378,11378],\"mapped\",[11379]],[[11379,11379],\"valid\"],[[11380,11380],\"valid\"],[[11381,11381],\"mapped\",[11382]],[[11382,11383],\"valid\"],[[11384,11387],\"valid\"],[[11388,11388],\"mapped\",[106]],[[11389,11389],\"mapped\",[118]],[[11390,11390],\"mapped\",[575]],[[11391,11391],\"mapped\",[576]],[[11392,11392],\"mapped\",[11393]],[[11393,11393],\"valid\"],[[11394,11394],\"mapped\",[11395]],[[11395,11395],\"valid\"],[[11396,11396],\"mapped\",[11397]],[[11397,11397],\"valid\"],[[11398,11398],\"mapped\",[11399]],[[11399,11399],\"valid\"],[[11400,11400],\"mapped\",[11401]],[[11401,11401],\"valid\"],[[11402,11402],\"mapped\",[11403]],[[11403,11403],\"valid\"],[[11404,11404],\"mapped\",[11405]],[[11405,11405],\"valid\"],[[11406,11406],\"mapped\",[11407]],[[11407,11407],\"valid\"],[[11408,11408],\"mapped\",[11409]],[[11409,11409],\"valid\"],[[11410,11410],\"mapped\",[11411]],[[11411,11411],\"valid\"],[[11412,11412],\"mapped\",[11413]],[[11413,11413],\"valid\"],[[11414,11414],\"mapped\",[11415]],[[11415,11415],\"valid\"],[[11416,11416],\"mapped\",[11417]],[[11417,11417],\"valid\"],[[11418,11418],\"mapped\",[11419]],[[11419,11419],\"valid\"],[[11420,11420],\"mapped\",[11421]],[[11421,11421],\"valid\"],[[11422,11422],\"mapped\",[11423]],[[11423,11423],\"valid\"],[[11424,11424],\"mapped\",[11425]],[[11425,11425],\"valid\"],[[11426,11426],\"mapped\",[11427]],[[11427,11427],\"valid\"],[[11428,11428],\"mapped\",[11429]],[[11429,11429],\"valid\"],[[11430,11430],\"mapped\",[11431]],[[11431,11431],\"valid\"],[[11432,11432],\"mapped\",[11433]],[[11433,11433],\"valid\"],[[11434,11434],\"mapped\",[11435]],[[11435,11435],\"valid\"],[[11436,11436],\"mapped\",[11437]],[[11437,11437],\"valid\"],[[11438,11438],\"mapped\",[11439]],[[11439,11439],\"valid\"],[[11440,11440],\"mapped\",[11441]],[[11441,11441],\"valid\"],[[11442,11442],\"mapped\",[11443]],[[11443,11443],\"valid\"],[[11444,11444],\"mapped\",[11445]],[[11445,11445],\"valid\"],[[11446,11446],\"mapped\",[11447]],[[11447,11447],\"valid\"],[[11448,11448],\"mapped\",[11449]],[[11449,11449],\"valid\"],[[11450,11450],\"mapped\",[11451]],[[11451,11451],\"valid\"],[[11452,11452],\"mapped\",[11453]],[[11453,11453],\"valid\"],[[11454,11454],\"mapped\",[11455]],[[11455,11455],\"valid\"],[[11456,11456],\"mapped\",[11457]],[[11457,11457],\"valid\"],[[11458,11458],\"mapped\",[11459]],[[11459,11459],\"valid\"],[[11460,11460],\"mapped\",[11461]],[[11461,11461],\"valid\"],[[11462,11462],\"mapped\",[11463]],[[11463,11463],\"valid\"],[[11464,11464],\"mapped\",[11465]],[[11465,11465],\"valid\"],[[11466,11466],\"mapped\",[11467]],[[11467,11467],\"valid\"],[[11468,11468],\"mapped\",[11469]],[[11469,11469],\"valid\"],[[11470,11470],\"mapped\",[11471]],[[11471,11471],\"valid\"],[[11472,11472],\"mapped\",[11473]],[[11473,11473],\"valid\"],[[11474,11474],\"mapped\",[11475]],[[11475,11475],\"valid\"],[[11476,11476],\"mapped\",[11477]],[[11477,11477],\"valid\"],[[11478,11478],\"mapped\",[11479]],[[11479,11479],\"valid\"],[[11480,11480],\"mapped\",[11481]],[[11481,11481],\"valid\"],[[11482,11482],\"mapped\",[11483]],[[11483,11483],\"valid\"],[[11484,11484],\"mapped\",[11485]],[[11485,11485],\"valid\"],[[11486,11486],\"mapped\",[11487]],[[11487,11487],\"valid\"],[[11488,11488],\"mapped\",[11489]],[[11489,11489],\"valid\"],[[11490,11490],\"mapped\",[11491]],[[11491,11492],\"valid\"],[[11493,11498],\"valid\",[],\"NV8\"],[[11499,11499],\"mapped\",[11500]],[[11500,11500],\"valid\"],[[11501,11501],\"mapped\",[11502]],[[11502,11505],\"valid\"],[[11506,11506],\"mapped\",[11507]],[[11507,11507],\"valid\"],[[11508,11512],\"disallowed\"],[[11513,11519],\"valid\",[],\"NV8\"],[[11520,11557],\"valid\"],[[11558,11558],\"disallowed\"],[[11559,11559],\"valid\"],[[11560,11564],\"disallowed\"],[[11565,11565],\"valid\"],[[11566,11567],\"disallowed\"],[[11568,11621],\"valid\"],[[11622,11623],\"valid\"],[[11624,11630],\"disallowed\"],[[11631,11631],\"mapped\",[11617]],[[11632,11632],\"valid\",[],\"NV8\"],[[11633,11646],\"disallowed\"],[[11647,11647],\"valid\"],[[11648,11670],\"valid\"],[[11671,11679],\"disallowed\"],[[11680,11686],\"valid\"],[[11687,11687],\"disallowed\"],[[11688,11694],\"valid\"],[[11695,11695],\"disallowed\"],[[11696,11702],\"valid\"],[[11703,11703],\"disallowed\"],[[11704,11710],\"valid\"],[[11711,11711],\"disallowed\"],[[11712,11718],\"valid\"],[[11719,11719],\"disallowed\"],[[11720,11726],\"valid\"],[[11727,11727],\"disallowed\"],[[11728,11734],\"valid\"],[[11735,11735],\"disallowed\"],[[11736,11742],\"valid\"],[[11743,11743],\"disallowed\"],[[11744,11775],\"valid\"],[[11776,11799],\"valid\",[],\"NV8\"],[[11800,11803],\"valid\",[],\"NV8\"],[[11804,11805],\"valid\",[],\"NV8\"],[[11806,11822],\"valid\",[],\"NV8\"],[[11823,11823],\"valid\"],[[11824,11824],\"valid\",[],\"NV8\"],[[11825,11825],\"valid\",[],\"NV8\"],[[11826,11835],\"valid\",[],\"NV8\"],[[11836,11842],\"valid\",[],\"NV8\"],[[11843,11903],\"disallowed\"],[[11904,11929],\"valid\",[],\"NV8\"],[[11930,11930],\"disallowed\"],[[11931,11934],\"valid\",[],\"NV8\"],[[11935,11935],\"mapped\",[27597]],[[11936,12018],\"valid\",[],\"NV8\"],[[12019,12019],\"mapped\",[40863]],[[12020,12031],\"disallowed\"],[[12032,12032],\"mapped\",[19968]],[[12033,12033],\"mapped\",[20008]],[[12034,12034],\"mapped\",[20022]],[[12035,12035],\"mapped\",[20031]],[[12036,12036],\"mapped\",[20057]],[[12037,12037],\"mapped\",[20101]],[[12038,12038],\"mapped\",[20108]],[[12039,12039],\"mapped\",[20128]],[[12040,12040],\"mapped\",[20154]],[[12041,12041],\"mapped\",[20799]],[[12042,12042],\"mapped\",[20837]],[[12043,12043],\"mapped\",[20843]],[[12044,12044],\"mapped\",[20866]],[[12045,12045],\"mapped\",[20886]],[[12046,12046],\"mapped\",[20907]],[[12047,12047],\"mapped\",[20960]],[[12048,12048],\"mapped\",[20981]],[[12049,12049],\"mapped\",[20992]],[[12050,12050],\"mapped\",[21147]],[[12051,12051],\"mapped\",[21241]],[[12052,12052],\"mapped\",[21269]],[[12053,12053],\"mapped\",[21274]],[[12054,12054],\"mapped\",[21304]],[[12055,12055],\"mapped\",[21313]],[[12056,12056],\"mapped\",[21340]],[[12057,12057],\"mapped\",[21353]],[[12058,12058],\"mapped\",[21378]],[[12059,12059],\"mapped\",[21430]],[[12060,12060],\"mapped\",[21448]],[[12061,12061],\"mapped\",[21475]],[[12062,12062],\"mapped\",[22231]],[[12063,12063],\"mapped\",[22303]],[[12064,12064],\"mapped\",[22763]],[[12065,12065],\"mapped\",[22786]],[[12066,12066],\"mapped\",[22794]],[[12067,12067],\"mapped\",[22805]],[[12068,12068],\"mapped\",[22823]],[[12069,12069],\"mapped\",[22899]],[[12070,12070],\"mapped\",[23376]],[[12071,12071],\"mapped\",[23424]],[[12072,12072],\"mapped\",[23544]],[[12073,12073],\"mapped\",[23567]],[[12074,12074],\"mapped\",[23586]],[[12075,12075],\"mapped\",[23608]],[[12076,12076],\"mapped\",[23662]],[[12077,12077],\"mapped\",[23665]],[[12078,12078],\"mapped\",[24027]],[[12079,12079],\"mapped\",[24037]],[[12080,12080],\"mapped\",[24049]],[[12081,12081],\"mapped\",[24062]],[[12082,12082],\"mapped\",[24178]],[[12083,12083],\"mapped\",[24186]],[[12084,12084],\"mapped\",[24191]],[[12085,12085],\"mapped\",[24308]],[[12086,12086],\"mapped\",[24318]],[[12087,12087],\"mapped\",[24331]],[[12088,12088],\"mapped\",[24339]],[[12089,12089],\"mapped\",[24400]],[[12090,12090],\"mapped\",[24417]],[[12091,12091],\"mapped\",[24435]],[[12092,12092],\"mapped\",[24515]],[[12093,12093],\"mapped\",[25096]],[[12094,12094],\"mapped\",[25142]],[[12095,12095],\"mapped\",[25163]],[[12096,12096],\"mapped\",[25903]],[[12097,12097],\"mapped\",[25908]],[[12098,12098],\"mapped\",[25991]],[[12099,12099],\"mapped\",[26007]],[[12100,12100],\"mapped\",[26020]],[[12101,12101],\"mapped\",[26041]],[[12102,12102],\"mapped\",[26080]],[[12103,12103],\"mapped\",[26085]],[[12104,12104],\"mapped\",[26352]],[[12105,12105],\"mapped\",[26376]],[[12106,12106],\"mapped\",[26408]],[[12107,12107],\"mapped\",[27424]],[[12108,12108],\"mapped\",[27490]],[[12109,12109],\"mapped\",[27513]],[[12110,12110],\"mapped\",[27571]],[[12111,12111],\"mapped\",[27595]],[[12112,12112],\"mapped\",[27604]],[[12113,12113],\"mapped\",[27611]],[[12114,12114],\"mapped\",[27663]],[[12115,12115],\"mapped\",[27668]],[[12116,12116],\"mapped\",[27700]],[[12117,12117],\"mapped\",[28779]],[[12118,12118],\"mapped\",[29226]],[[12119,12119],\"mapped\",[29238]],[[12120,12120],\"mapped\",[29243]],[[12121,12121],\"mapped\",[29247]],[[12122,12122],\"mapped\",[29255]],[[12123,12123],\"mapped\",[29273]],[[12124,12124],\"mapped\",[29275]],[[12125,12125],\"mapped\",[29356]],[[12126,12126],\"mapped\",[29572]],[[12127,12127],\"mapped\",[29577]],[[12128,12128],\"mapped\",[29916]],[[12129,12129],\"mapped\",[29926]],[[12130,12130],\"mapped\",[29976]],[[12131,12131],\"mapped\",[29983]],[[12132,12132],\"mapped\",[29992]],[[12133,12133],\"mapped\",[30000]],[[12134,12134],\"mapped\",[30091]],[[12135,12135],\"mapped\",[30098]],[[12136,12136],\"mapped\",[30326]],[[12137,12137],\"mapped\",[30333]],[[12138,12138],\"mapped\",[30382]],[[12139,12139],\"mapped\",[30399]],[[12140,12140],\"mapped\",[30446]],[[12141,12141],\"mapped\",[30683]],[[12142,12142],\"mapped\",[30690]],[[12143,12143],\"mapped\",[30707]],[[12144,12144],\"mapped\",[31034]],[[12145,12145],\"mapped\",[31160]],[[12146,12146],\"mapped\",[31166]],[[12147,12147],\"mapped\",[31348]],[[12148,12148],\"mapped\",[31435]],[[12149,12149],\"mapped\",[31481]],[[12150,12150],\"mapped\",[31859]],[[12151,12151],\"mapped\",[31992]],[[12152,12152],\"mapped\",[32566]],[[12153,12153],\"mapped\",[32593]],[[12154,12154],\"mapped\",[32650]],[[12155,12155],\"mapped\",[32701]],[[12156,12156],\"mapped\",[32769]],[[12157,12157],\"mapped\",[32780]],[[12158,12158],\"mapped\",[32786]],[[12159,12159],\"mapped\",[32819]],[[12160,12160],\"mapped\",[32895]],[[12161,12161],\"mapped\",[32905]],[[12162,12162],\"mapped\",[33251]],[[12163,12163],\"mapped\",[33258]],[[12164,12164],\"mapped\",[33267]],[[12165,12165],\"mapped\",[33276]],[[12166,12166],\"mapped\",[33292]],[[12167,12167],\"mapped\",[33307]],[[12168,12168],\"mapped\",[33311]],[[12169,12169],\"mapped\",[33390]],[[12170,12170],\"mapped\",[33394]],[[12171,12171],\"mapped\",[33400]],[[12172,12172],\"mapped\",[34381]],[[12173,12173],\"mapped\",[34411]],[[12174,12174],\"mapped\",[34880]],[[12175,12175],\"mapped\",[34892]],[[12176,12176],\"mapped\",[34915]],[[12177,12177],\"mapped\",[35198]],[[12178,12178],\"mapped\",[35211]],[[12179,12179],\"mapped\",[35282]],[[12180,12180],\"mapped\",[35328]],[[12181,12181],\"mapped\",[35895]],[[12182,12182],\"mapped\",[35910]],[[12183,12183],\"mapped\",[35925]],[[12184,12184],\"mapped\",[35960]],[[12185,12185],\"mapped\",[35997]],[[12186,12186],\"mapped\",[36196]],[[12187,12187],\"mapped\",[36208]],[[12188,12188],\"mapped\",[36275]],[[12189,12189],\"mapped\",[36523]],[[12190,12190],\"mapped\",[36554]],[[12191,12191],\"mapped\",[36763]],[[12192,12192],\"mapped\",[36784]],[[12193,12193],\"mapped\",[36789]],[[12194,12194],\"mapped\",[37009]],[[12195,12195],\"mapped\",[37193]],[[12196,12196],\"mapped\",[37318]],[[12197,12197],\"mapped\",[37324]],[[12198,12198],\"mapped\",[37329]],[[12199,12199],\"mapped\",[38263]],[[12200,12200],\"mapped\",[38272]],[[12201,12201],\"mapped\",[38428]],[[12202,12202],\"mapped\",[38582]],[[12203,12203],\"mapped\",[38585]],[[12204,12204],\"mapped\",[38632]],[[12205,12205],\"mapped\",[38737]],[[12206,12206],\"mapped\",[38750]],[[12207,12207],\"mapped\",[38754]],[[12208,12208],\"mapped\",[38761]],[[12209,12209],\"mapped\",[38859]],[[12210,12210],\"mapped\",[38893]],[[12211,12211],\"mapped\",[38899]],[[12212,12212],\"mapped\",[38913]],[[12213,12213],\"mapped\",[39080]],[[12214,12214],\"mapped\",[39131]],[[12215,12215],\"mapped\",[39135]],[[12216,12216],\"mapped\",[39318]],[[12217,12217],\"mapped\",[39321]],[[12218,12218],\"mapped\",[39340]],[[12219,12219],\"mapped\",[39592]],[[12220,12220],\"mapped\",[39640]],[[12221,12221],\"mapped\",[39647]],[[12222,12222],\"mapped\",[39717]],[[12223,12223],\"mapped\",[39727]],[[12224,12224],\"mapped\",[39730]],[[12225,12225],\"mapped\",[39740]],[[12226,12226],\"mapped\",[39770]],[[12227,12227],\"mapped\",[40165]],[[12228,12228],\"mapped\",[40565]],[[12229,12229],\"mapped\",[40575]],[[12230,12230],\"mapped\",[40613]],[[12231,12231],\"mapped\",[40635]],[[12232,12232],\"mapped\",[40643]],[[12233,12233],\"mapped\",[40653]],[[12234,12234],\"mapped\",[40657]],[[12235,12235],\"mapped\",[40697]],[[12236,12236],\"mapped\",[40701]],[[12237,12237],\"mapped\",[40718]],[[12238,12238],\"mapped\",[40723]],[[12239,12239],\"mapped\",[40736]],[[12240,12240],\"mapped\",[40763]],[[12241,12241],\"mapped\",[40778]],[[12242,12242],\"mapped\",[40786]],[[12243,12243],\"mapped\",[40845]],[[12244,12244],\"mapped\",[40860]],[[12245,12245],\"mapped\",[40864]],[[12246,12271],\"disallowed\"],[[12272,12283],\"disallowed\"],[[12284,12287],\"disallowed\"],[[12288,12288],\"disallowed_STD3_mapped\",[32]],[[12289,12289],\"valid\",[],\"NV8\"],[[12290,12290],\"mapped\",[46]],[[12291,12292],\"valid\",[],\"NV8\"],[[12293,12295],\"valid\"],[[12296,12329],\"valid\",[],\"NV8\"],[[12330,12333],\"valid\"],[[12334,12341],\"valid\",[],\"NV8\"],[[12342,12342],\"mapped\",[12306]],[[12343,12343],\"valid\",[],\"NV8\"],[[12344,12344],\"mapped\",[21313]],[[12345,12345],\"mapped\",[21316]],[[12346,12346],\"mapped\",[21317]],[[12347,12347],\"valid\",[],\"NV8\"],[[12348,12348],\"valid\"],[[12349,12349],\"valid\",[],\"NV8\"],[[12350,12350],\"valid\",[],\"NV8\"],[[12351,12351],\"valid\",[],\"NV8\"],[[12352,12352],\"disallowed\"],[[12353,12436],\"valid\"],[[12437,12438],\"valid\"],[[12439,12440],\"disallowed\"],[[12441,12442],\"valid\"],[[12443,12443],\"disallowed_STD3_mapped\",[32,12441]],[[12444,12444],\"disallowed_STD3_mapped\",[32,12442]],[[12445,12446],\"valid\"],[[12447,12447],\"mapped\",[12424,12426]],[[12448,12448],\"valid\",[],\"NV8\"],[[12449,12542],\"valid\"],[[12543,12543],\"mapped\",[12467,12488]],[[12544,12548],\"disallowed\"],[[12549,12588],\"valid\"],[[12589,12589],\"valid\"],[[12590,12592],\"disallowed\"],[[12593,12593],\"mapped\",[4352]],[[12594,12594],\"mapped\",[4353]],[[12595,12595],\"mapped\",[4522]],[[12596,12596],\"mapped\",[4354]],[[12597,12597],\"mapped\",[4524]],[[12598,12598],\"mapped\",[4525]],[[12599,12599],\"mapped\",[4355]],[[12600,12600],\"mapped\",[4356]],[[12601,12601],\"mapped\",[4357]],[[12602,12602],\"mapped\",[4528]],[[12603,12603],\"mapped\",[4529]],[[12604,12604],\"mapped\",[4530]],[[12605,12605],\"mapped\",[4531]],[[12606,12606],\"mapped\",[4532]],[[12607,12607],\"mapped\",[4533]],[[12608,12608],\"mapped\",[4378]],[[12609,12609],\"mapped\",[4358]],[[12610,12610],\"mapped\",[4359]],[[12611,12611],\"mapped\",[4360]],[[12612,12612],\"mapped\",[4385]],[[12613,12613],\"mapped\",[4361]],[[12614,12614],\"mapped\",[4362]],[[12615,12615],\"mapped\",[4363]],[[12616,12616],\"mapped\",[4364]],[[12617,12617],\"mapped\",[4365]],[[12618,12618],\"mapped\",[4366]],[[12619,12619],\"mapped\",[4367]],[[12620,12620],\"mapped\",[4368]],[[12621,12621],\"mapped\",[4369]],[[12622,12622],\"mapped\",[4370]],[[12623,12623],\"mapped\",[4449]],[[12624,12624],\"mapped\",[4450]],[[12625,12625],\"mapped\",[4451]],[[12626,12626],\"mapped\",[4452]],[[12627,12627],\"mapped\",[4453]],[[12628,12628],\"mapped\",[4454]],[[12629,12629],\"mapped\",[4455]],[[12630,12630],\"mapped\",[4456]],[[12631,12631],\"mapped\",[4457]],[[12632,12632],\"mapped\",[4458]],[[12633,12633],\"mapped\",[4459]],[[12634,12634],\"mapped\",[4460]],[[12635,12635],\"mapped\",[4461]],[[12636,12636],\"mapped\",[4462]],[[12637,12637],\"mapped\",[4463]],[[12638,12638],\"mapped\",[4464]],[[12639,12639],\"mapped\",[4465]],[[12640,12640],\"mapped\",[4466]],[[12641,12641],\"mapped\",[4467]],[[12642,12642],\"mapped\",[4468]],[[12643,12643],\"mapped\",[4469]],[[12644,12644],\"disallowed\"],[[12645,12645],\"mapped\",[4372]],[[12646,12646],\"mapped\",[4373]],[[12647,12647],\"mapped\",[4551]],[[12648,12648],\"mapped\",[4552]],[[12649,12649],\"mapped\",[4556]],[[12650,12650],\"mapped\",[4558]],[[12651,12651],\"mapped\",[4563]],[[12652,12652],\"mapped\",[4567]],[[12653,12653],\"mapped\",[4569]],[[12654,12654],\"mapped\",[4380]],[[12655,12655],\"mapped\",[4573]],[[12656,12656],\"mapped\",[4575]],[[12657,12657],\"mapped\",[4381]],[[12658,12658],\"mapped\",[4382]],[[12659,12659],\"mapped\",[4384]],[[12660,12660],\"mapped\",[4386]],[[12661,12661],\"mapped\",[4387]],[[12662,12662],\"mapped\",[4391]],[[12663,12663],\"mapped\",[4393]],[[12664,12664],\"mapped\",[4395]],[[12665,12665],\"mapped\",[4396]],[[12666,12666],\"mapped\",[4397]],[[12667,12667],\"mapped\",[4398]],[[12668,12668],\"mapped\",[4399]],[[12669,12669],\"mapped\",[4402]],[[12670,12670],\"mapped\",[4406]],[[12671,12671],\"mapped\",[4416]],[[12672,12672],\"mapped\",[4423]],[[12673,12673],\"mapped\",[4428]],[[12674,12674],\"mapped\",[4593]],[[12675,12675],\"mapped\",[4594]],[[12676,12676],\"mapped\",[4439]],[[12677,12677],\"mapped\",[4440]],[[12678,12678],\"mapped\",[4441]],[[12679,12679],\"mapped\",[4484]],[[12680,12680],\"mapped\",[4485]],[[12681,12681],\"mapped\",[4488]],[[12682,12682],\"mapped\",[4497]],[[12683,12683],\"mapped\",[4498]],[[12684,12684],\"mapped\",[4500]],[[12685,12685],\"mapped\",[4510]],[[12686,12686],\"mapped\",[4513]],[[12687,12687],\"disallowed\"],[[12688,12689],\"valid\",[],\"NV8\"],[[12690,12690],\"mapped\",[19968]],[[12691,12691],\"mapped\",[20108]],[[12692,12692],\"mapped\",[19977]],[[12693,12693],\"mapped\",[22235]],[[12694,12694],\"mapped\",[19978]],[[12695,12695],\"mapped\",[20013]],[[12696,12696],\"mapped\",[19979]],[[12697,12697],\"mapped\",[30002]],[[12698,12698],\"mapped\",[20057]],[[12699,12699],\"mapped\",[19993]],[[12700,12700],\"mapped\",[19969]],[[12701,12701],\"mapped\",[22825]],[[12702,12702],\"mapped\",[22320]],[[12703,12703],\"mapped\",[20154]],[[12704,12727],\"valid\"],[[12728,12730],\"valid\"],[[12731,12735],\"disallowed\"],[[12736,12751],\"valid\",[],\"NV8\"],[[12752,12771],\"valid\",[],\"NV8\"],[[12772,12783],\"disallowed\"],[[12784,12799],\"valid\"],[[12800,12800],\"disallowed_STD3_mapped\",[40,4352,41]],[[12801,12801],\"disallowed_STD3_mapped\",[40,4354,41]],[[12802,12802],\"disallowed_STD3_mapped\",[40,4355,41]],[[12803,12803],\"disallowed_STD3_mapped\",[40,4357,41]],[[12804,12804],\"disallowed_STD3_mapped\",[40,4358,41]],[[12805,12805],\"disallowed_STD3_mapped\",[40,4359,41]],[[12806,12806],\"disallowed_STD3_mapped\",[40,4361,41]],[[12807,12807],\"disallowed_STD3_mapped\",[40,4363,41]],[[12808,12808],\"disallowed_STD3_mapped\",[40,4364,41]],[[12809,12809],\"disallowed_STD3_mapped\",[40,4366,41]],[[12810,12810],\"disallowed_STD3_mapped\",[40,4367,41]],[[12811,12811],\"disallowed_STD3_mapped\",[40,4368,41]],[[12812,12812],\"disallowed_STD3_mapped\",[40,4369,41]],[[12813,12813],\"disallowed_STD3_mapped\",[40,4370,41]],[[12814,12814],\"disallowed_STD3_mapped\",[40,44032,41]],[[12815,12815],\"disallowed_STD3_mapped\",[40,45208,41]],[[12816,12816],\"disallowed_STD3_mapped\",[40,45796,41]],[[12817,12817],\"disallowed_STD3_mapped\",[40,46972,41]],[[12818,12818],\"disallowed_STD3_mapped\",[40,47560,41]],[[12819,12819],\"disallowed_STD3_mapped\",[40,48148,41]],[[12820,12820],\"disallowed_STD3_mapped\",[40,49324,41]],[[12821,12821],\"disallowed_STD3_mapped\",[40,50500,41]],[[12822,12822],\"disallowed_STD3_mapped\",[40,51088,41]],[[12823,12823],\"disallowed_STD3_mapped\",[40,52264,41]],[[12824,12824],\"disallowed_STD3_mapped\",[40,52852,41]],[[12825,12825],\"disallowed_STD3_mapped\",[40,53440,41]],[[12826,12826],\"disallowed_STD3_mapped\",[40,54028,41]],[[12827,12827],\"disallowed_STD3_mapped\",[40,54616,41]],[[12828,12828],\"disallowed_STD3_mapped\",[40,51452,41]],[[12829,12829],\"disallowed_STD3_mapped\",[40,50724,51204,41]],[[12830,12830],\"disallowed_STD3_mapped\",[40,50724,54980,41]],[[12831,12831],\"disallowed\"],[[12832,12832],\"disallowed_STD3_mapped\",[40,19968,41]],[[12833,12833],\"disallowed_STD3_mapped\",[40,20108,41]],[[12834,12834],\"disallowed_STD3_mapped\",[40,19977,41]],[[12835,12835],\"disallowed_STD3_mapped\",[40,22235,41]],[[12836,12836],\"disallowed_STD3_mapped\",[40,20116,41]],[[12837,12837],\"disallowed_STD3_mapped\",[40,20845,41]],[[12838,12838],\"disallowed_STD3_mapped\",[40,19971,41]],[[12839,12839],\"disallowed_STD3_mapped\",[40,20843,41]],[[12840,12840],\"disallowed_STD3_mapped\",[40,20061,41]],[[12841,12841],\"disallowed_STD3_mapped\",[40,21313,41]],[[12842,12842],\"disallowed_STD3_mapped\",[40,26376,41]],[[12843,12843],\"disallowed_STD3_mapped\",[40,28779,41]],[[12844,12844],\"disallowed_STD3_mapped\",[40,27700,41]],[[12845,12845],\"disallowed_STD3_mapped\",[40,26408,41]],[[12846,12846],\"disallowed_STD3_mapped\",[40,37329,41]],[[12847,12847],\"disallowed_STD3_mapped\",[40,22303,41]],[[12848,12848],\"disallowed_STD3_mapped\",[40,26085,41]],[[12849,12849],\"disallowed_STD3_mapped\",[40,26666,41]],[[12850,12850],\"disallowed_STD3_mapped\",[40,26377,41]],[[12851,12851],\"disallowed_STD3_mapped\",[40,31038,41]],[[12852,12852],\"disallowed_STD3_mapped\",[40,21517,41]],[[12853,12853],\"disallowed_STD3_mapped\",[40,29305,41]],[[12854,12854],\"disallowed_STD3_mapped\",[40,36001,41]],[[12855,12855],\"disallowed_STD3_mapped\",[40,31069,41]],[[12856,12856],\"disallowed_STD3_mapped\",[40,21172,41]],[[12857,12857],\"disallowed_STD3_mapped\",[40,20195,41]],[[12858,12858],\"disallowed_STD3_mapped\",[40,21628,41]],[[12859,12859],\"disallowed_STD3_mapped\",[40,23398,41]],[[12860,12860],\"disallowed_STD3_mapped\",[40,30435,41]],[[12861,12861],\"disallowed_STD3_mapped\",[40,20225,41]],[[12862,12862],\"disallowed_STD3_mapped\",[40,36039,41]],[[12863,12863],\"disallowed_STD3_mapped\",[40,21332,41]],[[12864,12864],\"disallowed_STD3_mapped\",[40,31085,41]],[[12865,12865],\"disallowed_STD3_mapped\",[40,20241,41]],[[12866,12866],\"disallowed_STD3_mapped\",[40,33258,41]],[[12867,12867],\"disallowed_STD3_mapped\",[40,33267,41]],[[12868,12868],\"mapped\",[21839]],[[12869,12869],\"mapped\",[24188]],[[12870,12870],\"mapped\",[25991]],[[12871,12871],\"mapped\",[31631]],[[12872,12879],\"valid\",[],\"NV8\"],[[12880,12880],\"mapped\",[112,116,101]],[[12881,12881],\"mapped\",[50,49]],[[12882,12882],\"mapped\",[50,50]],[[12883,12883],\"mapped\",[50,51]],[[12884,12884],\"mapped\",[50,52]],[[12885,12885],\"mapped\",[50,53]],[[12886,12886],\"mapped\",[50,54]],[[12887,12887],\"mapped\",[50,55]],[[12888,12888],\"mapped\",[50,56]],[[12889,12889],\"mapped\",[50,57]],[[12890,12890],\"mapped\",[51,48]],[[12891,12891],\"mapped\",[51,49]],[[12892,12892],\"mapped\",[51,50]],[[12893,12893],\"mapped\",[51,51]],[[12894,12894],\"mapped\",[51,52]],[[12895,12895],\"mapped\",[51,53]],[[12896,12896],\"mapped\",[4352]],[[12897,12897],\"mapped\",[4354]],[[12898,12898],\"mapped\",[4355]],[[12899,12899],\"mapped\",[4357]],[[12900,12900],\"mapped\",[4358]],[[12901,12901],\"mapped\",[4359]],[[12902,12902],\"mapped\",[4361]],[[12903,12903],\"mapped\",[4363]],[[12904,12904],\"mapped\",[4364]],[[12905,12905],\"mapped\",[4366]],[[12906,12906],\"mapped\",[4367]],[[12907,12907],\"mapped\",[4368]],[[12908,12908],\"mapped\",[4369]],[[12909,12909],\"mapped\",[4370]],[[12910,12910],\"mapped\",[44032]],[[12911,12911],\"mapped\",[45208]],[[12912,12912],\"mapped\",[45796]],[[12913,12913],\"mapped\",[46972]],[[12914,12914],\"mapped\",[47560]],[[12915,12915],\"mapped\",[48148]],[[12916,12916],\"mapped\",[49324]],[[12917,12917],\"mapped\",[50500]],[[12918,12918],\"mapped\",[51088]],[[12919,12919],\"mapped\",[52264]],[[12920,12920],\"mapped\",[52852]],[[12921,12921],\"mapped\",[53440]],[[12922,12922],\"mapped\",[54028]],[[12923,12923],\"mapped\",[54616]],[[12924,12924],\"mapped\",[52280,44256]],[[12925,12925],\"mapped\",[51452,51032]],[[12926,12926],\"mapped\",[50864]],[[12927,12927],\"valid\",[],\"NV8\"],[[12928,12928],\"mapped\",[19968]],[[12929,12929],\"mapped\",[20108]],[[12930,12930],\"mapped\",[19977]],[[12931,12931],\"mapped\",[22235]],[[12932,12932],\"mapped\",[20116]],[[12933,12933],\"mapped\",[20845]],[[12934,12934],\"mapped\",[19971]],[[12935,12935],\"mapped\",[20843]],[[12936,12936],\"mapped\",[20061]],[[12937,12937],\"mapped\",[21313]],[[12938,12938],\"mapped\",[26376]],[[12939,12939],\"mapped\",[28779]],[[12940,12940],\"mapped\",[27700]],[[12941,12941],\"mapped\",[26408]],[[12942,12942],\"mapped\",[37329]],[[12943,12943],\"mapped\",[22303]],[[12944,12944],\"mapped\",[26085]],[[12945,12945],\"mapped\",[26666]],[[12946,12946],\"mapped\",[26377]],[[12947,12947],\"mapped\",[31038]],[[12948,12948],\"mapped\",[21517]],[[12949,12949],\"mapped\",[29305]],[[12950,12950],\"mapped\",[36001]],[[12951,12951],\"mapped\",[31069]],[[12952,12952],\"mapped\",[21172]],[[12953,12953],\"mapped\",[31192]],[[12954,12954],\"mapped\",[30007]],[[12955,12955],\"mapped\",[22899]],[[12956,12956],\"mapped\",[36969]],[[12957,12957],\"mapped\",[20778]],[[12958,12958],\"mapped\",[21360]],[[12959,12959],\"mapped\",[27880]],[[12960,12960],\"mapped\",[38917]],[[12961,12961],\"mapped\",[20241]],[[12962,12962],\"mapped\",[20889]],[[12963,12963],\"mapped\",[27491]],[[12964,12964],\"mapped\",[19978]],[[12965,12965],\"mapped\",[20013]],[[12966,12966],\"mapped\",[19979]],[[12967,12967],\"mapped\",[24038]],[[12968,12968],\"mapped\",[21491]],[[12969,12969],\"mapped\",[21307]],[[12970,12970],\"mapped\",[23447]],[[12971,12971],\"mapped\",[23398]],[[12972,12972],\"mapped\",[30435]],[[12973,12973],\"mapped\",[20225]],[[12974,12974],\"mapped\",[36039]],[[12975,12975],\"mapped\",[21332]],[[12976,12976],\"mapped\",[22812]],[[12977,12977],\"mapped\",[51,54]],[[12978,12978],\"mapped\",[51,55]],[[12979,12979],\"mapped\",[51,56]],[[12980,12980],\"mapped\",[51,57]],[[12981,12981],\"mapped\",[52,48]],[[12982,12982],\"mapped\",[52,49]],[[12983,12983],\"mapped\",[52,50]],[[12984,12984],\"mapped\",[52,51]],[[12985,12985],\"mapped\",[52,52]],[[12986,12986],\"mapped\",[52,53]],[[12987,12987],\"mapped\",[52,54]],[[12988,12988],\"mapped\",[52,55]],[[12989,12989],\"mapped\",[52,56]],[[12990,12990],\"mapped\",[52,57]],[[12991,12991],\"mapped\",[53,48]],[[12992,12992],\"mapped\",[49,26376]],[[12993,12993],\"mapped\",[50,26376]],[[12994,12994],\"mapped\",[51,26376]],[[12995,12995],\"mapped\",[52,26376]],[[12996,12996],\"mapped\",[53,26376]],[[12997,12997],\"mapped\",[54,26376]],[[12998,12998],\"mapped\",[55,26376]],[[12999,12999],\"mapped\",[56,26376]],[[13000,13000],\"mapped\",[57,26376]],[[13001,13001],\"mapped\",[49,48,26376]],[[13002,13002],\"mapped\",[49,49,26376]],[[13003,13003],\"mapped\",[49,50,26376]],[[13004,13004],\"mapped\",[104,103]],[[13005,13005],\"mapped\",[101,114,103]],[[13006,13006],\"mapped\",[101,118]],[[13007,13007],\"mapped\",[108,116,100]],[[13008,13008],\"mapped\",[12450]],[[13009,13009],\"mapped\",[12452]],[[13010,13010],\"mapped\",[12454]],[[13011,13011],\"mapped\",[12456]],[[13012,13012],\"mapped\",[12458]],[[13013,13013],\"mapped\",[12459]],[[13014,13014],\"mapped\",[12461]],[[13015,13015],\"mapped\",[12463]],[[13016,13016],\"mapped\",[12465]],[[13017,13017],\"mapped\",[12467]],[[13018,13018],\"mapped\",[12469]],[[13019,13019],\"mapped\",[12471]],[[13020,13020],\"mapped\",[12473]],[[13021,13021],\"mapped\",[12475]],[[13022,13022],\"mapped\",[12477]],[[13023,13023],\"mapped\",[12479]],[[13024,13024],\"mapped\",[12481]],[[13025,13025],\"mapped\",[12484]],[[13026,13026],\"mapped\",[12486]],[[13027,13027],\"mapped\",[12488]],[[13028,13028],\"mapped\",[12490]],[[13029,13029],\"mapped\",[12491]],[[13030,13030],\"mapped\",[12492]],[[13031,13031],\"mapped\",[12493]],[[13032,13032],\"mapped\",[12494]],[[13033,13033],\"mapped\",[12495]],[[13034,13034],\"mapped\",[12498]],[[13035,13035],\"mapped\",[12501]],[[13036,13036],\"mapped\",[12504]],[[13037,13037],\"mapped\",[12507]],[[13038,13038],\"mapped\",[12510]],[[13039,13039],\"mapped\",[12511]],[[13040,13040],\"mapped\",[12512]],[[13041,13041],\"mapped\",[12513]],[[13042,13042],\"mapped\",[12514]],[[13043,13043],\"mapped\",[12516]],[[13044,13044],\"mapped\",[12518]],[[13045,13045],\"mapped\",[12520]],[[13046,13046],\"mapped\",[12521]],[[13047,13047],\"mapped\",[12522]],[[13048,13048],\"mapped\",[12523]],[[13049,13049],\"mapped\",[12524]],[[13050,13050],\"mapped\",[12525]],[[13051,13051],\"mapped\",[12527]],[[13052,13052],\"mapped\",[12528]],[[13053,13053],\"mapped\",[12529]],[[13054,13054],\"mapped\",[12530]],[[13055,13055],\"disallowed\"],[[13056,13056],\"mapped\",[12450,12497,12540,12488]],[[13057,13057],\"mapped\",[12450,12523,12501,12449]],[[13058,13058],\"mapped\",[12450,12531,12506,12450]],[[13059,13059],\"mapped\",[12450,12540,12523]],[[13060,13060],\"mapped\",[12452,12491,12531,12464]],[[13061,13061],\"mapped\",[12452,12531,12481]],[[13062,13062],\"mapped\",[12454,12457,12531]],[[13063,13063],\"mapped\",[12456,12473,12463,12540,12489]],[[13064,13064],\"mapped\",[12456,12540,12459,12540]],[[13065,13065],\"mapped\",[12458,12531,12473]],[[13066,13066],\"mapped\",[12458,12540,12512]],[[13067,13067],\"mapped\",[12459,12452,12522]],[[13068,13068],\"mapped\",[12459,12521,12483,12488]],[[13069,13069],\"mapped\",[12459,12525,12522,12540]],[[13070,13070],\"mapped\",[12460,12525,12531]],[[13071,13071],\"mapped\",[12460,12531,12510]],[[13072,13072],\"mapped\",[12462,12460]],[[13073,13073],\"mapped\",[12462,12491,12540]],[[13074,13074],\"mapped\",[12461,12517,12522,12540]],[[13075,13075],\"mapped\",[12462,12523,12480,12540]],[[13076,13076],\"mapped\",[12461,12525]],[[13077,13077],\"mapped\",[12461,12525,12464,12521,12512]],[[13078,13078],\"mapped\",[12461,12525,12513,12540,12488,12523]],[[13079,13079],\"mapped\",[12461,12525,12527,12483,12488]],[[13080,13080],\"mapped\",[12464,12521,12512]],[[13081,13081],\"mapped\",[12464,12521,12512,12488,12531]],[[13082,13082],\"mapped\",[12463,12523,12476,12452,12525]],[[13083,13083],\"mapped\",[12463,12525,12540,12493]],[[13084,13084],\"mapped\",[12465,12540,12473]],[[13085,13085],\"mapped\",[12467,12523,12490]],[[13086,13086],\"mapped\",[12467,12540,12509]],[[13087,13087],\"mapped\",[12469,12452,12463,12523]],[[13088,13088],\"mapped\",[12469,12531,12481,12540,12512]],[[13089,13089],\"mapped\",[12471,12522,12531,12464]],[[13090,13090],\"mapped\",[12475,12531,12481]],[[13091,13091],\"mapped\",[12475,12531,12488]],[[13092,13092],\"mapped\",[12480,12540,12473]],[[13093,13093],\"mapped\",[12487,12471]],[[13094,13094],\"mapped\",[12489,12523]],[[13095,13095],\"mapped\",[12488,12531]],[[13096,13096],\"mapped\",[12490,12494]],[[13097,13097],\"mapped\",[12494,12483,12488]],[[13098,13098],\"mapped\",[12495,12452,12484]],[[13099,13099],\"mapped\",[12497,12540,12475,12531,12488]],[[13100,13100],\"mapped\",[12497,12540,12484]],[[13101,13101],\"mapped\",[12496,12540,12524,12523]],[[13102,13102],\"mapped\",[12500,12450,12473,12488,12523]],[[13103,13103],\"mapped\",[12500,12463,12523]],[[13104,13104],\"mapped\",[12500,12467]],[[13105,13105],\"mapped\",[12499,12523]],[[13106,13106],\"mapped\",[12501,12449,12521,12483,12489]],[[13107,13107],\"mapped\",[12501,12451,12540,12488]],[[13108,13108],\"mapped\",[12502,12483,12471,12455,12523]],[[13109,13109],\"mapped\",[12501,12521,12531]],[[13110,13110],\"mapped\",[12504,12463,12479,12540,12523]],[[13111,13111],\"mapped\",[12506,12477]],[[13112,13112],\"mapped\",[12506,12491,12498]],[[13113,13113],\"mapped\",[12504,12523,12484]],[[13114,13114],\"mapped\",[12506,12531,12473]],[[13115,13115],\"mapped\",[12506,12540,12472]],[[13116,13116],\"mapped\",[12505,12540,12479]],[[13117,13117],\"mapped\",[12509,12452,12531,12488]],[[13118,13118],\"mapped\",[12508,12523,12488]],[[13119,13119],\"mapped\",[12507,12531]],[[13120,13120],\"mapped\",[12509,12531,12489]],[[13121,13121],\"mapped\",[12507,12540,12523]],[[13122,13122],\"mapped\",[12507,12540,12531]],[[13123,13123],\"mapped\",[12510,12452,12463,12525]],[[13124,13124],\"mapped\",[12510,12452,12523]],[[13125,13125],\"mapped\",[12510,12483,12495]],[[13126,13126],\"mapped\",[12510,12523,12463]],[[13127,13127],\"mapped\",[12510,12531,12471,12519,12531]],[[13128,13128],\"mapped\",[12511,12463,12525,12531]],[[13129,13129],\"mapped\",[12511,12522]],[[13130,13130],\"mapped\",[12511,12522,12496,12540,12523]],[[13131,13131],\"mapped\",[12513,12460]],[[13132,13132],\"mapped\",[12513,12460,12488,12531]],[[13133,13133],\"mapped\",[12513,12540,12488,12523]],[[13134,13134],\"mapped\",[12516,12540,12489]],[[13135,13135],\"mapped\",[12516,12540,12523]],[[13136,13136],\"mapped\",[12518,12450,12531]],[[13137,13137],\"mapped\",[12522,12483,12488,12523]],[[13138,13138],\"mapped\",[12522,12521]],[[13139,13139],\"mapped\",[12523,12500,12540]],[[13140,13140],\"mapped\",[12523,12540,12502,12523]],[[13141,13141],\"mapped\",[12524,12512]],[[13142,13142],\"mapped\",[12524,12531,12488,12466,12531]],[[13143,13143],\"mapped\",[12527,12483,12488]],[[13144,13144],\"mapped\",[48,28857]],[[13145,13145],\"mapped\",[49,28857]],[[13146,13146],\"mapped\",[50,28857]],[[13147,13147],\"mapped\",[51,28857]],[[13148,13148],\"mapped\",[52,28857]],[[13149,13149],\"mapped\",[53,28857]],[[13150,13150],\"mapped\",[54,28857]],[[13151,13151],\"mapped\",[55,28857]],[[13152,13152],\"mapped\",[56,28857]],[[13153,13153],\"mapped\",[57,28857]],[[13154,13154],\"mapped\",[49,48,28857]],[[13155,13155],\"mapped\",[49,49,28857]],[[13156,13156],\"mapped\",[49,50,28857]],[[13157,13157],\"mapped\",[49,51,28857]],[[13158,13158],\"mapped\",[49,52,28857]],[[13159,13159],\"mapped\",[49,53,28857]],[[13160,13160],\"mapped\",[49,54,28857]],[[13161,13161],\"mapped\",[49,55,28857]],[[13162,13162],\"mapped\",[49,56,28857]],[[13163,13163],\"mapped\",[49,57,28857]],[[13164,13164],\"mapped\",[50,48,28857]],[[13165,13165],\"mapped\",[50,49,28857]],[[13166,13166],\"mapped\",[50,50,28857]],[[13167,13167],\"mapped\",[50,51,28857]],[[13168,13168],\"mapped\",[50,52,28857]],[[13169,13169],\"mapped\",[104,112,97]],[[13170,13170],\"mapped\",[100,97]],[[13171,13171],\"mapped\",[97,117]],[[13172,13172],\"mapped\",[98,97,114]],[[13173,13173],\"mapped\",[111,118]],[[13174,13174],\"mapped\",[112,99]],[[13175,13175],\"mapped\",[100,109]],[[13176,13176],\"mapped\",[100,109,50]],[[13177,13177],\"mapped\",[100,109,51]],[[13178,13178],\"mapped\",[105,117]],[[13179,13179],\"mapped\",[24179,25104]],[[13180,13180],\"mapped\",[26157,21644]],[[13181,13181],\"mapped\",[22823,27491]],[[13182,13182],\"mapped\",[26126,27835]],[[13183,13183],\"mapped\",[26666,24335,20250,31038]],[[13184,13184],\"mapped\",[112,97]],[[13185,13185],\"mapped\",[110,97]],[[13186,13186],\"mapped\",[956,97]],[[13187,13187],\"mapped\",[109,97]],[[13188,13188],\"mapped\",[107,97]],[[13189,13189],\"mapped\",[107,98]],[[13190,13190],\"mapped\",[109,98]],[[13191,13191],\"mapped\",[103,98]],[[13192,13192],\"mapped\",[99,97,108]],[[13193,13193],\"mapped\",[107,99,97,108]],[[13194,13194],\"mapped\",[112,102]],[[13195,13195],\"mapped\",[110,102]],[[13196,13196],\"mapped\",[956,102]],[[13197,13197],\"mapped\",[956,103]],[[13198,13198],\"mapped\",[109,103]],[[13199,13199],\"mapped\",[107,103]],[[13200,13200],\"mapped\",[104,122]],[[13201,13201],\"mapped\",[107,104,122]],[[13202,13202],\"mapped\",[109,104,122]],[[13203,13203],\"mapped\",[103,104,122]],[[13204,13204],\"mapped\",[116,104,122]],[[13205,13205],\"mapped\",[956,108]],[[13206,13206],\"mapped\",[109,108]],[[13207,13207],\"mapped\",[100,108]],[[13208,13208],\"mapped\",[107,108]],[[13209,13209],\"mapped\",[102,109]],[[13210,13210],\"mapped\",[110,109]],[[13211,13211],\"mapped\",[956,109]],[[13212,13212],\"mapped\",[109,109]],[[13213,13213],\"mapped\",[99,109]],[[13214,13214],\"mapped\",[107,109]],[[13215,13215],\"mapped\",[109,109,50]],[[13216,13216],\"mapped\",[99,109,50]],[[13217,13217],\"mapped\",[109,50]],[[13218,13218],\"mapped\",[107,109,50]],[[13219,13219],\"mapped\",[109,109,51]],[[13220,13220],\"mapped\",[99,109,51]],[[13221,13221],\"mapped\",[109,51]],[[13222,13222],\"mapped\",[107,109,51]],[[13223,13223],\"mapped\",[109,8725,115]],[[13224,13224],\"mapped\",[109,8725,115,50]],[[13225,13225],\"mapped\",[112,97]],[[13226,13226],\"mapped\",[107,112,97]],[[13227,13227],\"mapped\",[109,112,97]],[[13228,13228],\"mapped\",[103,112,97]],[[13229,13229],\"mapped\",[114,97,100]],[[13230,13230],\"mapped\",[114,97,100,8725,115]],[[13231,13231],\"mapped\",[114,97,100,8725,115,50]],[[13232,13232],\"mapped\",[112,115]],[[13233,13233],\"mapped\",[110,115]],[[13234,13234],\"mapped\",[956,115]],[[13235,13235],\"mapped\",[109,115]],[[13236,13236],\"mapped\",[112,118]],[[13237,13237],\"mapped\",[110,118]],[[13238,13238],\"mapped\",[956,118]],[[13239,13239],\"mapped\",[109,118]],[[13240,13240],\"mapped\",[107,118]],[[13241,13241],\"mapped\",[109,118]],[[13242,13242],\"mapped\",[112,119]],[[13243,13243],\"mapped\",[110,119]],[[13244,13244],\"mapped\",[956,119]],[[13245,13245],\"mapped\",[109,119]],[[13246,13246],\"mapped\",[107,119]],[[13247,13247],\"mapped\",[109,119]],[[13248,13248],\"mapped\",[107,969]],[[13249,13249],\"mapped\",[109,969]],[[13250,13250],\"disallowed\"],[[13251,13251],\"mapped\",[98,113]],[[13252,13252],\"mapped\",[99,99]],[[13253,13253],\"mapped\",[99,100]],[[13254,13254],\"mapped\",[99,8725,107,103]],[[13255,13255],\"disallowed\"],[[13256,13256],\"mapped\",[100,98]],[[13257,13257],\"mapped\",[103,121]],[[13258,13258],\"mapped\",[104,97]],[[13259,13259],\"mapped\",[104,112]],[[13260,13260],\"mapped\",[105,110]],[[13261,13261],\"mapped\",[107,107]],[[13262,13262],\"mapped\",[107,109]],[[13263,13263],\"mapped\",[107,116]],[[13264,13264],\"mapped\",[108,109]],[[13265,13265],\"mapped\",[108,110]],[[13266,13266],\"mapped\",[108,111,103]],[[13267,13267],\"mapped\",[108,120]],[[13268,13268],\"mapped\",[109,98]],[[13269,13269],\"mapped\",[109,105,108]],[[13270,13270],\"mapped\",[109,111,108]],[[13271,13271],\"mapped\",[112,104]],[[13272,13272],\"disallowed\"],[[13273,13273],\"mapped\",[112,112,109]],[[13274,13274],\"mapped\",[112,114]],[[13275,13275],\"mapped\",[115,114]],[[13276,13276],\"mapped\",[115,118]],[[13277,13277],\"mapped\",[119,98]],[[13278,13278],\"mapped\",[118,8725,109]],[[13279,13279],\"mapped\",[97,8725,109]],[[13280,13280],\"mapped\",[49,26085]],[[13281,13281],\"mapped\",[50,26085]],[[13282,13282],\"mapped\",[51,26085]],[[13283,13283],\"mapped\",[52,26085]],[[13284,13284],\"mapped\",[53,26085]],[[13285,13285],\"mapped\",[54,26085]],[[13286,13286],\"mapped\",[55,26085]],[[13287,13287],\"mapped\",[56,26085]],[[13288,13288],\"mapped\",[57,26085]],[[13289,13289],\"mapped\",[49,48,26085]],[[13290,13290],\"mapped\",[49,49,26085]],[[13291,13291],\"mapped\",[49,50,26085]],[[13292,13292],\"mapped\",[49,51,26085]],[[13293,13293],\"mapped\",[49,52,26085]],[[13294,13294],\"mapped\",[49,53,26085]],[[13295,13295],\"mapped\",[49,54,26085]],[[13296,13296],\"mapped\",[49,55,26085]],[[13297,13297],\"mapped\",[49,56,26085]],[[13298,13298],\"mapped\",[49,57,26085]],[[13299,13299],\"mapped\",[50,48,26085]],[[13300,13300],\"mapped\",[50,49,26085]],[[13301,13301],\"mapped\",[50,50,26085]],[[13302,13302],\"mapped\",[50,51,26085]],[[13303,13303],\"mapped\",[50,52,26085]],[[13304,13304],\"mapped\",[50,53,26085]],[[13305,13305],\"mapped\",[50,54,26085]],[[13306,13306],\"mapped\",[50,55,26085]],[[13307,13307],\"mapped\",[50,56,26085]],[[13308,13308],\"mapped\",[50,57,26085]],[[13309,13309],\"mapped\",[51,48,26085]],[[13310,13310],\"mapped\",[51,49,26085]],[[13311,13311],\"mapped\",[103,97,108]],[[13312,19893],\"valid\"],[[19894,19903],\"disallowed\"],[[19904,19967],\"valid\",[],\"NV8\"],[[19968,40869],\"valid\"],[[40870,40891],\"valid\"],[[40892,40899],\"valid\"],[[40900,40907],\"valid\"],[[40908,40908],\"valid\"],[[40909,40917],\"valid\"],[[40918,40959],\"disallowed\"],[[40960,42124],\"valid\"],[[42125,42127],\"disallowed\"],[[42128,42145],\"valid\",[],\"NV8\"],[[42146,42147],\"valid\",[],\"NV8\"],[[42148,42163],\"valid\",[],\"NV8\"],[[42164,42164],\"valid\",[],\"NV8\"],[[42165,42176],\"valid\",[],\"NV8\"],[[42177,42177],\"valid\",[],\"NV8\"],[[42178,42180],\"valid\",[],\"NV8\"],[[42181,42181],\"valid\",[],\"NV8\"],[[42182,42182],\"valid\",[],\"NV8\"],[[42183,42191],\"disallowed\"],[[42192,42237],\"valid\"],[[42238,42239],\"valid\",[],\"NV8\"],[[42240,42508],\"valid\"],[[42509,42511],\"valid\",[],\"NV8\"],[[42512,42539],\"valid\"],[[42540,42559],\"disallowed\"],[[42560,42560],\"mapped\",[42561]],[[42561,42561],\"valid\"],[[42562,42562],\"mapped\",[42563]],[[42563,42563],\"valid\"],[[42564,42564],\"mapped\",[42565]],[[42565,42565],\"valid\"],[[42566,42566],\"mapped\",[42567]],[[42567,42567],\"valid\"],[[42568,42568],\"mapped\",[42569]],[[42569,42569],\"valid\"],[[42570,42570],\"mapped\",[42571]],[[42571,42571],\"valid\"],[[42572,42572],\"mapped\",[42573]],[[42573,42573],\"valid\"],[[42574,42574],\"mapped\",[42575]],[[42575,42575],\"valid\"],[[42576,42576],\"mapped\",[42577]],[[42577,42577],\"valid\"],[[42578,42578],\"mapped\",[42579]],[[42579,42579],\"valid\"],[[42580,42580],\"mapped\",[42581]],[[42581,42581],\"valid\"],[[42582,42582],\"mapped\",[42583]],[[42583,42583],\"valid\"],[[42584,42584],\"mapped\",[42585]],[[42585,42585],\"valid\"],[[42586,42586],\"mapped\",[42587]],[[42587,42587],\"valid\"],[[42588,42588],\"mapped\",[42589]],[[42589,42589],\"valid\"],[[42590,42590],\"mapped\",[42591]],[[42591,42591],\"valid\"],[[42592,42592],\"mapped\",[42593]],[[42593,42593],\"valid\"],[[42594,42594],\"mapped\",[42595]],[[42595,42595],\"valid\"],[[42596,42596],\"mapped\",[42597]],[[42597,42597],\"valid\"],[[42598,42598],\"mapped\",[42599]],[[42599,42599],\"valid\"],[[42600,42600],\"mapped\",[42601]],[[42601,42601],\"valid\"],[[42602,42602],\"mapped\",[42603]],[[42603,42603],\"valid\"],[[42604,42604],\"mapped\",[42605]],[[42605,42607],\"valid\"],[[42608,42611],\"valid\",[],\"NV8\"],[[42612,42619],\"valid\"],[[42620,42621],\"valid\"],[[42622,42622],\"valid\",[],\"NV8\"],[[42623,42623],\"valid\"],[[42624,42624],\"mapped\",[42625]],[[42625,42625],\"valid\"],[[42626,42626],\"mapped\",[42627]],[[42627,42627],\"valid\"],[[42628,42628],\"mapped\",[42629]],[[42629,42629],\"valid\"],[[42630,42630],\"mapped\",[42631]],[[42631,42631],\"valid\"],[[42632,42632],\"mapped\",[42633]],[[42633,42633],\"valid\"],[[42634,42634],\"mapped\",[42635]],[[42635,42635],\"valid\"],[[42636,42636],\"mapped\",[42637]],[[42637,42637],\"valid\"],[[42638,42638],\"mapped\",[42639]],[[42639,42639],\"valid\"],[[42640,42640],\"mapped\",[42641]],[[42641,42641],\"valid\"],[[42642,42642],\"mapped\",[42643]],[[42643,42643],\"valid\"],[[42644,42644],\"mapped\",[42645]],[[42645,42645],\"valid\"],[[42646,42646],\"mapped\",[42647]],[[42647,42647],\"valid\"],[[42648,42648],\"mapped\",[42649]],[[42649,42649],\"valid\"],[[42650,42650],\"mapped\",[42651]],[[42651,42651],\"valid\"],[[42652,42652],\"mapped\",[1098]],[[42653,42653],\"mapped\",[1100]],[[42654,42654],\"valid\"],[[42655,42655],\"valid\"],[[42656,42725],\"valid\"],[[42726,42735],\"valid\",[],\"NV8\"],[[42736,42737],\"valid\"],[[42738,42743],\"valid\",[],\"NV8\"],[[42744,42751],\"disallowed\"],[[42752,42774],\"valid\",[],\"NV8\"],[[42775,42778],\"valid\"],[[42779,42783],\"valid\"],[[42784,42785],\"valid\",[],\"NV8\"],[[42786,42786],\"mapped\",[42787]],[[42787,42787],\"valid\"],[[42788,42788],\"mapped\",[42789]],[[42789,42789],\"valid\"],[[42790,42790],\"mapped\",[42791]],[[42791,42791],\"valid\"],[[42792,42792],\"mapped\",[42793]],[[42793,42793],\"valid\"],[[42794,42794],\"mapped\",[42795]],[[42795,42795],\"valid\"],[[42796,42796],\"mapped\",[42797]],[[42797,42797],\"valid\"],[[42798,42798],\"mapped\",[42799]],[[42799,42801],\"valid\"],[[42802,42802],\"mapped\",[42803]],[[42803,42803],\"valid\"],[[42804,42804],\"mapped\",[42805]],[[42805,42805],\"valid\"],[[42806,42806],\"mapped\",[42807]],[[42807,42807],\"valid\"],[[42808,42808],\"mapped\",[42809]],[[42809,42809],\"valid\"],[[42810,42810],\"mapped\",[42811]],[[42811,42811],\"valid\"],[[42812,42812],\"mapped\",[42813]],[[42813,42813],\"valid\"],[[42814,42814],\"mapped\",[42815]],[[42815,42815],\"valid\"],[[42816,42816],\"mapped\",[42817]],[[42817,42817],\"valid\"],[[42818,42818],\"mapped\",[42819]],[[42819,42819],\"valid\"],[[42820,42820],\"mapped\",[42821]],[[42821,42821],\"valid\"],[[42822,42822],\"mapped\",[42823]],[[42823,42823],\"valid\"],[[42824,42824],\"mapped\",[42825]],[[42825,42825],\"valid\"],[[42826,42826],\"mapped\",[42827]],[[42827,42827],\"valid\"],[[42828,42828],\"mapped\",[42829]],[[42829,42829],\"valid\"],[[42830,42830],\"mapped\",[42831]],[[42831,42831],\"valid\"],[[42832,42832],\"mapped\",[42833]],[[42833,42833],\"valid\"],[[42834,42834],\"mapped\",[42835]],[[42835,42835],\"valid\"],[[42836,42836],\"mapped\",[42837]],[[42837,42837],\"valid\"],[[42838,42838],\"mapped\",[42839]],[[42839,42839],\"valid\"],[[42840,42840],\"mapped\",[42841]],[[42841,42841],\"valid\"],[[42842,42842],\"mapped\",[42843]],[[42843,42843],\"valid\"],[[42844,42844],\"mapped\",[42845]],[[42845,42845],\"valid\"],[[42846,42846],\"mapped\",[42847]],[[42847,42847],\"valid\"],[[42848,42848],\"mapped\",[42849]],[[42849,42849],\"valid\"],[[42850,42850],\"mapped\",[42851]],[[42851,42851],\"valid\"],[[42852,42852],\"mapped\",[42853]],[[42853,42853],\"valid\"],[[42854,42854],\"mapped\",[42855]],[[42855,42855],\"valid\"],[[42856,42856],\"mapped\",[42857]],[[42857,42857],\"valid\"],[[42858,42858],\"mapped\",[42859]],[[42859,42859],\"valid\"],[[42860,42860],\"mapped\",[42861]],[[42861,42861],\"valid\"],[[42862,42862],\"mapped\",[42863]],[[42863,42863],\"valid\"],[[42864,42864],\"mapped\",[42863]],[[42865,42872],\"valid\"],[[42873,42873],\"mapped\",[42874]],[[42874,42874],\"valid\"],[[42875,42875],\"mapped\",[42876]],[[42876,42876],\"valid\"],[[42877,42877],\"mapped\",[7545]],[[42878,42878],\"mapped\",[42879]],[[42879,42879],\"valid\"],[[42880,42880],\"mapped\",[42881]],[[42881,42881],\"valid\"],[[42882,42882],\"mapped\",[42883]],[[42883,42883],\"valid\"],[[42884,42884],\"mapped\",[42885]],[[42885,42885],\"valid\"],[[42886,42886],\"mapped\",[42887]],[[42887,42888],\"valid\"],[[42889,42890],\"valid\",[],\"NV8\"],[[42891,42891],\"mapped\",[42892]],[[42892,42892],\"valid\"],[[42893,42893],\"mapped\",[613]],[[42894,42894],\"valid\"],[[42895,42895],\"valid\"],[[42896,42896],\"mapped\",[42897]],[[42897,42897],\"valid\"],[[42898,42898],\"mapped\",[42899]],[[42899,42899],\"valid\"],[[42900,42901],\"valid\"],[[42902,42902],\"mapped\",[42903]],[[42903,42903],\"valid\"],[[42904,42904],\"mapped\",[42905]],[[42905,42905],\"valid\"],[[42906,42906],\"mapped\",[42907]],[[42907,42907],\"valid\"],[[42908,42908],\"mapped\",[42909]],[[42909,42909],\"valid\"],[[42910,42910],\"mapped\",[42911]],[[42911,42911],\"valid\"],[[42912,42912],\"mapped\",[42913]],[[42913,42913],\"valid\"],[[42914,42914],\"mapped\",[42915]],[[42915,42915],\"valid\"],[[42916,42916],\"mapped\",[42917]],[[42917,42917],\"valid\"],[[42918,42918],\"mapped\",[42919]],[[42919,42919],\"valid\"],[[42920,42920],\"mapped\",[42921]],[[42921,42921],\"valid\"],[[42922,42922],\"mapped\",[614]],[[42923,42923],\"mapped\",[604]],[[42924,42924],\"mapped\",[609]],[[42925,42925],\"mapped\",[620]],[[42926,42927],\"disallowed\"],[[42928,42928],\"mapped\",[670]],[[42929,42929],\"mapped\",[647]],[[42930,42930],\"mapped\",[669]],[[42931,42931],\"mapped\",[43859]],[[42932,42932],\"mapped\",[42933]],[[42933,42933],\"valid\"],[[42934,42934],\"mapped\",[42935]],[[42935,42935],\"valid\"],[[42936,42998],\"disallowed\"],[[42999,42999],\"valid\"],[[43000,43000],\"mapped\",[295]],[[43001,43001],\"mapped\",[339]],[[43002,43002],\"valid\"],[[43003,43007],\"valid\"],[[43008,43047],\"valid\"],[[43048,43051],\"valid\",[],\"NV8\"],[[43052,43055],\"disallowed\"],[[43056,43065],\"valid\",[],\"NV8\"],[[43066,43071],\"disallowed\"],[[43072,43123],\"valid\"],[[43124,43127],\"valid\",[],\"NV8\"],[[43128,43135],\"disallowed\"],[[43136,43204],\"valid\"],[[43205,43213],\"disallowed\"],[[43214,43215],\"valid\",[],\"NV8\"],[[43216,43225],\"valid\"],[[43226,43231],\"disallowed\"],[[43232,43255],\"valid\"],[[43256,43258],\"valid\",[],\"NV8\"],[[43259,43259],\"valid\"],[[43260,43260],\"valid\",[],\"NV8\"],[[43261,43261],\"valid\"],[[43262,43263],\"disallowed\"],[[43264,43309],\"valid\"],[[43310,43311],\"valid\",[],\"NV8\"],[[43312,43347],\"valid\"],[[43348,43358],\"disallowed\"],[[43359,43359],\"valid\",[],\"NV8\"],[[43360,43388],\"valid\",[],\"NV8\"],[[43389,43391],\"disallowed\"],[[43392,43456],\"valid\"],[[43457,43469],\"valid\",[],\"NV8\"],[[43470,43470],\"disallowed\"],[[43471,43481],\"valid\"],[[43482,43485],\"disallowed\"],[[43486,43487],\"valid\",[],\"NV8\"],[[43488,43518],\"valid\"],[[43519,43519],\"disallowed\"],[[43520,43574],\"valid\"],[[43575,43583],\"disallowed\"],[[43584,43597],\"valid\"],[[43598,43599],\"disallowed\"],[[43600,43609],\"valid\"],[[43610,43611],\"disallowed\"],[[43612,43615],\"valid\",[],\"NV8\"],[[43616,43638],\"valid\"],[[43639,43641],\"valid\",[],\"NV8\"],[[43642,43643],\"valid\"],[[43644,43647],\"valid\"],[[43648,43714],\"valid\"],[[43715,43738],\"disallowed\"],[[43739,43741],\"valid\"],[[43742,43743],\"valid\",[],\"NV8\"],[[43744,43759],\"valid\"],[[43760,43761],\"valid\",[],\"NV8\"],[[43762,43766],\"valid\"],[[43767,43776],\"disallowed\"],[[43777,43782],\"valid\"],[[43783,43784],\"disallowed\"],[[43785,43790],\"valid\"],[[43791,43792],\"disallowed\"],[[43793,43798],\"valid\"],[[43799,43807],\"disallowed\"],[[43808,43814],\"valid\"],[[43815,43815],\"disallowed\"],[[43816,43822],\"valid\"],[[43823,43823],\"disallowed\"],[[43824,43866],\"valid\"],[[43867,43867],\"valid\",[],\"NV8\"],[[43868,43868],\"mapped\",[42791]],[[43869,43869],\"mapped\",[43831]],[[43870,43870],\"mapped\",[619]],[[43871,43871],\"mapped\",[43858]],[[43872,43875],\"valid\"],[[43876,43877],\"valid\"],[[43878,43887],\"disallowed\"],[[43888,43888],\"mapped\",[5024]],[[43889,43889],\"mapped\",[5025]],[[43890,43890],\"mapped\",[5026]],[[43891,43891],\"mapped\",[5027]],[[43892,43892],\"mapped\",[5028]],[[43893,43893],\"mapped\",[5029]],[[43894,43894],\"mapped\",[5030]],[[43895,43895],\"mapped\",[5031]],[[43896,43896],\"mapped\",[5032]],[[43897,43897],\"mapped\",[5033]],[[43898,43898],\"mapped\",[5034]],[[43899,43899],\"mapped\",[5035]],[[43900,43900],\"mapped\",[5036]],[[43901,43901],\"mapped\",[5037]],[[43902,43902],\"mapped\",[5038]],[[43903,43903],\"mapped\",[5039]],[[43904,43904],\"mapped\",[5040]],[[43905,43905],\"mapped\",[5041]],[[43906,43906],\"mapped\",[5042]],[[43907,43907],\"mapped\",[5043]],[[43908,43908],\"mapped\",[5044]],[[43909,43909],\"mapped\",[5045]],[[43910,43910],\"mapped\",[5046]],[[43911,43911],\"mapped\",[5047]],[[43912,43912],\"mapped\",[5048]],[[43913,43913],\"mapped\",[5049]],[[43914,43914],\"mapped\",[5050]],[[43915,43915],\"mapped\",[5051]],[[43916,43916],\"mapped\",[5052]],[[43917,43917],\"mapped\",[5053]],[[43918,43918],\"mapped\",[5054]],[[43919,43919],\"mapped\",[5055]],[[43920,43920],\"mapped\",[5056]],[[43921,43921],\"mapped\",[5057]],[[43922,43922],\"mapped\",[5058]],[[43923,43923],\"mapped\",[5059]],[[43924,43924],\"mapped\",[5060]],[[43925,43925],\"mapped\",[5061]],[[43926,43926],\"mapped\",[5062]],[[43927,43927],\"mapped\",[5063]],[[43928,43928],\"mapped\",[5064]],[[43929,43929],\"mapped\",[5065]],[[43930,43930],\"mapped\",[5066]],[[43931,43931],\"mapped\",[5067]],[[43932,43932],\"mapped\",[5068]],[[43933,43933],\"mapped\",[5069]],[[43934,43934],\"mapped\",[5070]],[[43935,43935],\"mapped\",[5071]],[[43936,43936],\"mapped\",[5072]],[[43937,43937],\"mapped\",[5073]],[[43938,43938],\"mapped\",[5074]],[[43939,43939],\"mapped\",[5075]],[[43940,43940],\"mapped\",[5076]],[[43941,43941],\"mapped\",[5077]],[[43942,43942],\"mapped\",[5078]],[[43943,43943],\"mapped\",[5079]],[[43944,43944],\"mapped\",[5080]],[[43945,43945],\"mapped\",[5081]],[[43946,43946],\"mapped\",[5082]],[[43947,43947],\"mapped\",[5083]],[[43948,43948],\"mapped\",[5084]],[[43949,43949],\"mapped\",[5085]],[[43950,43950],\"mapped\",[5086]],[[43951,43951],\"mapped\",[5087]],[[43952,43952],\"mapped\",[5088]],[[43953,43953],\"mapped\",[5089]],[[43954,43954],\"mapped\",[5090]],[[43955,43955],\"mapped\",[5091]],[[43956,43956],\"mapped\",[5092]],[[43957,43957],\"mapped\",[5093]],[[43958,43958],\"mapped\",[5094]],[[43959,43959],\"mapped\",[5095]],[[43960,43960],\"mapped\",[5096]],[[43961,43961],\"mapped\",[5097]],[[43962,43962],\"mapped\",[5098]],[[43963,43963],\"mapped\",[5099]],[[43964,43964],\"mapped\",[5100]],[[43965,43965],\"mapped\",[5101]],[[43966,43966],\"mapped\",[5102]],[[43967,43967],\"mapped\",[5103]],[[43968,44010],\"valid\"],[[44011,44011],\"valid\",[],\"NV8\"],[[44012,44013],\"valid\"],[[44014,44015],\"disallowed\"],[[44016,44025],\"valid\"],[[44026,44031],\"disallowed\"],[[44032,55203],\"valid\"],[[55204,55215],\"disallowed\"],[[55216,55238],\"valid\",[],\"NV8\"],[[55239,55242],\"disallowed\"],[[55243,55291],\"valid\",[],\"NV8\"],[[55292,55295],\"disallowed\"],[[55296,57343],\"disallowed\"],[[57344,63743],\"disallowed\"],[[63744,63744],\"mapped\",[35912]],[[63745,63745],\"mapped\",[26356]],[[63746,63746],\"mapped\",[36554]],[[63747,63747],\"mapped\",[36040]],[[63748,63748],\"mapped\",[28369]],[[63749,63749],\"mapped\",[20018]],[[63750,63750],\"mapped\",[21477]],[[63751,63752],\"mapped\",[40860]],[[63753,63753],\"mapped\",[22865]],[[63754,63754],\"mapped\",[37329]],[[63755,63755],\"mapped\",[21895]],[[63756,63756],\"mapped\",[22856]],[[63757,63757],\"mapped\",[25078]],[[63758,63758],\"mapped\",[30313]],[[63759,63759],\"mapped\",[32645]],[[63760,63760],\"mapped\",[34367]],[[63761,63761],\"mapped\",[34746]],[[63762,63762],\"mapped\",[35064]],[[63763,63763],\"mapped\",[37007]],[[63764,63764],\"mapped\",[27138]],[[63765,63765],\"mapped\",[27931]],[[63766,63766],\"mapped\",[28889]],[[63767,63767],\"mapped\",[29662]],[[63768,63768],\"mapped\",[33853]],[[63769,63769],\"mapped\",[37226]],[[63770,63770],\"mapped\",[39409]],[[63771,63771],\"mapped\",[20098]],[[63772,63772],\"mapped\",[21365]],[[63773,63773],\"mapped\",[27396]],[[63774,63774],\"mapped\",[29211]],[[63775,63775],\"mapped\",[34349]],[[63776,63776],\"mapped\",[40478]],[[63777,63777],\"mapped\",[23888]],[[63778,63778],\"mapped\",[28651]],[[63779,63779],\"mapped\",[34253]],[[63780,63780],\"mapped\",[35172]],[[63781,63781],\"mapped\",[25289]],[[63782,63782],\"mapped\",[33240]],[[63783,63783],\"mapped\",[34847]],[[63784,63784],\"mapped\",[24266]],[[63785,63785],\"mapped\",[26391]],[[63786,63786],\"mapped\",[28010]],[[63787,63787],\"mapped\",[29436]],[[63788,63788],\"mapped\",[37070]],[[63789,63789],\"mapped\",[20358]],[[63790,63790],\"mapped\",[20919]],[[63791,63791],\"mapped\",[21214]],[[63792,63792],\"mapped\",[25796]],[[63793,63793],\"mapped\",[27347]],[[63794,63794],\"mapped\",[29200]],[[63795,63795],\"mapped\",[30439]],[[63796,63796],\"mapped\",[32769]],[[63797,63797],\"mapped\",[34310]],[[63798,63798],\"mapped\",[34396]],[[63799,63799],\"mapped\",[36335]],[[63800,63800],\"mapped\",[38706]],[[63801,63801],\"mapped\",[39791]],[[63802,63802],\"mapped\",[40442]],[[63803,63803],\"mapped\",[30860]],[[63804,63804],\"mapped\",[31103]],[[63805,63805],\"mapped\",[32160]],[[63806,63806],\"mapped\",[33737]],[[63807,63807],\"mapped\",[37636]],[[63808,63808],\"mapped\",[40575]],[[63809,63809],\"mapped\",[35542]],[[63810,63810],\"mapped\",[22751]],[[63811,63811],\"mapped\",[24324]],[[63812,63812],\"mapped\",[31840]],[[63813,63813],\"mapped\",[32894]],[[63814,63814],\"mapped\",[29282]],[[63815,63815],\"mapped\",[30922]],[[63816,63816],\"mapped\",[36034]],[[63817,63817],\"mapped\",[38647]],[[63818,63818],\"mapped\",[22744]],[[63819,63819],\"mapped\",[23650]],[[63820,63820],\"mapped\",[27155]],[[63821,63821],\"mapped\",[28122]],[[63822,63822],\"mapped\",[28431]],[[63823,63823],\"mapped\",[32047]],[[63824,63824],\"mapped\",[32311]],[[63825,63825],\"mapped\",[38475]],[[63826,63826],\"mapped\",[21202]],[[63827,63827],\"mapped\",[32907]],[[63828,63828],\"mapped\",[20956]],[[63829,63829],\"mapped\",[20940]],[[63830,63830],\"mapped\",[31260]],[[63831,63831],\"mapped\",[32190]],[[63832,63832],\"mapped\",[33777]],[[63833,63833],\"mapped\",[38517]],[[63834,63834],\"mapped\",[35712]],[[63835,63835],\"mapped\",[25295]],[[63836,63836],\"mapped\",[27138]],[[63837,63837],\"mapped\",[35582]],[[63838,63838],\"mapped\",[20025]],[[63839,63839],\"mapped\",[23527]],[[63840,63840],\"mapped\",[24594]],[[63841,63841],\"mapped\",[29575]],[[63842,63842],\"mapped\",[30064]],[[63843,63843],\"mapped\",[21271]],[[63844,63844],\"mapped\",[30971]],[[63845,63845],\"mapped\",[20415]],[[63846,63846],\"mapped\",[24489]],[[63847,63847],\"mapped\",[19981]],[[63848,63848],\"mapped\",[27852]],[[63849,63849],\"mapped\",[25976]],[[63850,63850],\"mapped\",[32034]],[[63851,63851],\"mapped\",[21443]],[[63852,63852],\"mapped\",[22622]],[[63853,63853],\"mapped\",[30465]],[[63854,63854],\"mapped\",[33865]],[[63855,63855],\"mapped\",[35498]],[[63856,63856],\"mapped\",[27578]],[[63857,63857],\"mapped\",[36784]],[[63858,63858],\"mapped\",[27784]],[[63859,63859],\"mapped\",[25342]],[[63860,63860],\"mapped\",[33509]],[[63861,63861],\"mapped\",[25504]],[[63862,63862],\"mapped\",[30053]],[[63863,63863],\"mapped\",[20142]],[[63864,63864],\"mapped\",[20841]],[[63865,63865],\"mapped\",[20937]],[[63866,63866],\"mapped\",[26753]],[[63867,63867],\"mapped\",[31975]],[[63868,63868],\"mapped\",[33391]],[[63869,63869],\"mapped\",[35538]],[[63870,63870],\"mapped\",[37327]],[[63871,63871],\"mapped\",[21237]],[[63872,63872],\"mapped\",[21570]],[[63873,63873],\"mapped\",[22899]],[[63874,63874],\"mapped\",[24300]],[[63875,63875],\"mapped\",[26053]],[[63876,63876],\"mapped\",[28670]],[[63877,63877],\"mapped\",[31018]],[[63878,63878],\"mapped\",[38317]],[[63879,63879],\"mapped\",[39530]],[[63880,63880],\"mapped\",[40599]],[[63881,63881],\"mapped\",[40654]],[[63882,63882],\"mapped\",[21147]],[[63883,63883],\"mapped\",[26310]],[[63884,63884],\"mapped\",[27511]],[[63885,63885],\"mapped\",[36706]],[[63886,63886],\"mapped\",[24180]],[[63887,63887],\"mapped\",[24976]],[[63888,63888],\"mapped\",[25088]],[[63889,63889],\"mapped\",[25754]],[[63890,63890],\"mapped\",[28451]],[[63891,63891],\"mapped\",[29001]],[[63892,63892],\"mapped\",[29833]],[[63893,63893],\"mapped\",[31178]],[[63894,63894],\"mapped\",[32244]],[[63895,63895],\"mapped\",[32879]],[[63896,63896],\"mapped\",[36646]],[[63897,63897],\"mapped\",[34030]],[[63898,63898],\"mapped\",[36899]],[[63899,63899],\"mapped\",[37706]],[[63900,63900],\"mapped\",[21015]],[[63901,63901],\"mapped\",[21155]],[[63902,63902],\"mapped\",[21693]],[[63903,63903],\"mapped\",[28872]],[[63904,63904],\"mapped\",[35010]],[[63905,63905],\"mapped\",[35498]],[[63906,63906],\"mapped\",[24265]],[[63907,63907],\"mapped\",[24565]],[[63908,63908],\"mapped\",[25467]],[[63909,63909],\"mapped\",[27566]],[[63910,63910],\"mapped\",[31806]],[[63911,63911],\"mapped\",[29557]],[[63912,63912],\"mapped\",[20196]],[[63913,63913],\"mapped\",[22265]],[[63914,63914],\"mapped\",[23527]],[[63915,63915],\"mapped\",[23994]],[[63916,63916],\"mapped\",[24604]],[[63917,63917],\"mapped\",[29618]],[[63918,63918],\"mapped\",[29801]],[[63919,63919],\"mapped\",[32666]],[[63920,63920],\"mapped\",[32838]],[[63921,63921],\"mapped\",[37428]],[[63922,63922],\"mapped\",[38646]],[[63923,63923],\"mapped\",[38728]],[[63924,63924],\"mapped\",[38936]],[[63925,63925],\"mapped\",[20363]],[[63926,63926],\"mapped\",[31150]],[[63927,63927],\"mapped\",[37300]],[[63928,63928],\"mapped\",[38584]],[[63929,63929],\"mapped\",[24801]],[[63930,63930],\"mapped\",[20102]],[[63931,63931],\"mapped\",[20698]],[[63932,63932],\"mapped\",[23534]],[[63933,63933],\"mapped\",[23615]],[[63934,63934],\"mapped\",[26009]],[[63935,63935],\"mapped\",[27138]],[[63936,63936],\"mapped\",[29134]],[[63937,63937],\"mapped\",[30274]],[[63938,63938],\"mapped\",[34044]],[[63939,63939],\"mapped\",[36988]],[[63940,63940],\"mapped\",[40845]],[[63941,63941],\"mapped\",[26248]],[[63942,63942],\"mapped\",[38446]],[[63943,63943],\"mapped\",[21129]],[[63944,63944],\"mapped\",[26491]],[[63945,63945],\"mapped\",[26611]],[[63946,63946],\"mapped\",[27969]],[[63947,63947],\"mapped\",[28316]],[[63948,63948],\"mapped\",[29705]],[[63949,63949],\"mapped\",[30041]],[[63950,63950],\"mapped\",[30827]],[[63951,63951],\"mapped\",[32016]],[[63952,63952],\"mapped\",[39006]],[[63953,63953],\"mapped\",[20845]],[[63954,63954],\"mapped\",[25134]],[[63955,63955],\"mapped\",[38520]],[[63956,63956],\"mapped\",[20523]],[[63957,63957],\"mapped\",[23833]],[[63958,63958],\"mapped\",[28138]],[[63959,63959],\"mapped\",[36650]],[[63960,63960],\"mapped\",[24459]],[[63961,63961],\"mapped\",[24900]],[[63962,63962],\"mapped\",[26647]],[[63963,63963],\"mapped\",[29575]],[[63964,63964],\"mapped\",[38534]],[[63965,63965],\"mapped\",[21033]],[[63966,63966],\"mapped\",[21519]],[[63967,63967],\"mapped\",[23653]],[[63968,63968],\"mapped\",[26131]],[[63969,63969],\"mapped\",[26446]],[[63970,63970],\"mapped\",[26792]],[[63971,63971],\"mapped\",[27877]],[[63972,63972],\"mapped\",[29702]],[[63973,63973],\"mapped\",[30178]],[[63974,63974],\"mapped\",[32633]],[[63975,63975],\"mapped\",[35023]],[[63976,63976],\"mapped\",[35041]],[[63977,63977],\"mapped\",[37324]],[[63978,63978],\"mapped\",[38626]],[[63979,63979],\"mapped\",[21311]],[[63980,63980],\"mapped\",[28346]],[[63981,63981],\"mapped\",[21533]],[[63982,63982],\"mapped\",[29136]],[[63983,63983],\"mapped\",[29848]],[[63984,63984],\"mapped\",[34298]],[[63985,63985],\"mapped\",[38563]],[[63986,63986],\"mapped\",[40023]],[[63987,63987],\"mapped\",[40607]],[[63988,63988],\"mapped\",[26519]],[[63989,63989],\"mapped\",[28107]],[[63990,63990],\"mapped\",[33256]],[[63991,63991],\"mapped\",[31435]],[[63992,63992],\"mapped\",[31520]],[[63993,63993],\"mapped\",[31890]],[[63994,63994],\"mapped\",[29376]],[[63995,63995],\"mapped\",[28825]],[[63996,63996],\"mapped\",[35672]],[[63997,63997],\"mapped\",[20160]],[[63998,63998],\"mapped\",[33590]],[[63999,63999],\"mapped\",[21050]],[[64000,64000],\"mapped\",[20999]],[[64001,64001],\"mapped\",[24230]],[[64002,64002],\"mapped\",[25299]],[[64003,64003],\"mapped\",[31958]],[[64004,64004],\"mapped\",[23429]],[[64005,64005],\"mapped\",[27934]],[[64006,64006],\"mapped\",[26292]],[[64007,64007],\"mapped\",[36667]],[[64008,64008],\"mapped\",[34892]],[[64009,64009],\"mapped\",[38477]],[[64010,64010],\"mapped\",[35211]],[[64011,64011],\"mapped\",[24275]],[[64012,64012],\"mapped\",[20800]],[[64013,64013],\"mapped\",[21952]],[[64014,64015],\"valid\"],[[64016,64016],\"mapped\",[22618]],[[64017,64017],\"valid\"],[[64018,64018],\"mapped\",[26228]],[[64019,64020],\"valid\"],[[64021,64021],\"mapped\",[20958]],[[64022,64022],\"mapped\",[29482]],[[64023,64023],\"mapped\",[30410]],[[64024,64024],\"mapped\",[31036]],[[64025,64025],\"mapped\",[31070]],[[64026,64026],\"mapped\",[31077]],[[64027,64027],\"mapped\",[31119]],[[64028,64028],\"mapped\",[38742]],[[64029,64029],\"mapped\",[31934]],[[64030,64030],\"mapped\",[32701]],[[64031,64031],\"valid\"],[[64032,64032],\"mapped\",[34322]],[[64033,64033],\"valid\"],[[64034,64034],\"mapped\",[35576]],[[64035,64036],\"valid\"],[[64037,64037],\"mapped\",[36920]],[[64038,64038],\"mapped\",[37117]],[[64039,64041],\"valid\"],[[64042,64042],\"mapped\",[39151]],[[64043,64043],\"mapped\",[39164]],[[64044,64044],\"mapped\",[39208]],[[64045,64045],\"mapped\",[40372]],[[64046,64046],\"mapped\",[37086]],[[64047,64047],\"mapped\",[38583]],[[64048,64048],\"mapped\",[20398]],[[64049,64049],\"mapped\",[20711]],[[64050,64050],\"mapped\",[20813]],[[64051,64051],\"mapped\",[21193]],[[64052,64052],\"mapped\",[21220]],[[64053,64053],\"mapped\",[21329]],[[64054,64054],\"mapped\",[21917]],[[64055,64055],\"mapped\",[22022]],[[64056,64056],\"mapped\",[22120]],[[64057,64057],\"mapped\",[22592]],[[64058,64058],\"mapped\",[22696]],[[64059,64059],\"mapped\",[23652]],[[64060,64060],\"mapped\",[23662]],[[64061,64061],\"mapped\",[24724]],[[64062,64062],\"mapped\",[24936]],[[64063,64063],\"mapped\",[24974]],[[64064,64064],\"mapped\",[25074]],[[64065,64065],\"mapped\",[25935]],[[64066,64066],\"mapped\",[26082]],[[64067,64067],\"mapped\",[26257]],[[64068,64068],\"mapped\",[26757]],[[64069,64069],\"mapped\",[28023]],[[64070,64070],\"mapped\",[28186]],[[64071,64071],\"mapped\",[28450]],[[64072,64072],\"mapped\",[29038]],[[64073,64073],\"mapped\",[29227]],[[64074,64074],\"mapped\",[29730]],[[64075,64075],\"mapped\",[30865]],[[64076,64076],\"mapped\",[31038]],[[64077,64077],\"mapped\",[31049]],[[64078,64078],\"mapped\",[31048]],[[64079,64079],\"mapped\",[31056]],[[64080,64080],\"mapped\",[31062]],[[64081,64081],\"mapped\",[31069]],[[64082,64082],\"mapped\",[31117]],[[64083,64083],\"mapped\",[31118]],[[64084,64084],\"mapped\",[31296]],[[64085,64085],\"mapped\",[31361]],[[64086,64086],\"mapped\",[31680]],[[64087,64087],\"mapped\",[32244]],[[64088,64088],\"mapped\",[32265]],[[64089,64089],\"mapped\",[32321]],[[64090,64090],\"mapped\",[32626]],[[64091,64091],\"mapped\",[32773]],[[64092,64092],\"mapped\",[33261]],[[64093,64094],\"mapped\",[33401]],[[64095,64095],\"mapped\",[33879]],[[64096,64096],\"mapped\",[35088]],[[64097,64097],\"mapped\",[35222]],[[64098,64098],\"mapped\",[35585]],[[64099,64099],\"mapped\",[35641]],[[64100,64100],\"mapped\",[36051]],[[64101,64101],\"mapped\",[36104]],[[64102,64102],\"mapped\",[36790]],[[64103,64103],\"mapped\",[36920]],[[64104,64104],\"mapped\",[38627]],[[64105,64105],\"mapped\",[38911]],[[64106,64106],\"mapped\",[38971]],[[64107,64107],\"mapped\",[24693]],[[64108,64108],\"mapped\",[148206]],[[64109,64109],\"mapped\",[33304]],[[64110,64111],\"disallowed\"],[[64112,64112],\"mapped\",[20006]],[[64113,64113],\"mapped\",[20917]],[[64114,64114],\"mapped\",[20840]],[[64115,64115],\"mapped\",[20352]],[[64116,64116],\"mapped\",[20805]],[[64117,64117],\"mapped\",[20864]],[[64118,64118],\"mapped\",[21191]],[[64119,64119],\"mapped\",[21242]],[[64120,64120],\"mapped\",[21917]],[[64121,64121],\"mapped\",[21845]],[[64122,64122],\"mapped\",[21913]],[[64123,64123],\"mapped\",[21986]],[[64124,64124],\"mapped\",[22618]],[[64125,64125],\"mapped\",[22707]],[[64126,64126],\"mapped\",[22852]],[[64127,64127],\"mapped\",[22868]],[[64128,64128],\"mapped\",[23138]],[[64129,64129],\"mapped\",[23336]],[[64130,64130],\"mapped\",[24274]],[[64131,64131],\"mapped\",[24281]],[[64132,64132],\"mapped\",[24425]],[[64133,64133],\"mapped\",[24493]],[[64134,64134],\"mapped\",[24792]],[[64135,64135],\"mapped\",[24910]],[[64136,64136],\"mapped\",[24840]],[[64137,64137],\"mapped\",[24974]],[[64138,64138],\"mapped\",[24928]],[[64139,64139],\"mapped\",[25074]],[[64140,64140],\"mapped\",[25140]],[[64141,64141],\"mapped\",[25540]],[[64142,64142],\"mapped\",[25628]],[[64143,64143],\"mapped\",[25682]],[[64144,64144],\"mapped\",[25942]],[[64145,64145],\"mapped\",[26228]],[[64146,64146],\"mapped\",[26391]],[[64147,64147],\"mapped\",[26395]],[[64148,64148],\"mapped\",[26454]],[[64149,64149],\"mapped\",[27513]],[[64150,64150],\"mapped\",[27578]],[[64151,64151],\"mapped\",[27969]],[[64152,64152],\"mapped\",[28379]],[[64153,64153],\"mapped\",[28363]],[[64154,64154],\"mapped\",[28450]],[[64155,64155],\"mapped\",[28702]],[[64156,64156],\"mapped\",[29038]],[[64157,64157],\"mapped\",[30631]],[[64158,64158],\"mapped\",[29237]],[[64159,64159],\"mapped\",[29359]],[[64160,64160],\"mapped\",[29482]],[[64161,64161],\"mapped\",[29809]],[[64162,64162],\"mapped\",[29958]],[[64163,64163],\"mapped\",[30011]],[[64164,64164],\"mapped\",[30237]],[[64165,64165],\"mapped\",[30239]],[[64166,64166],\"mapped\",[30410]],[[64167,64167],\"mapped\",[30427]],[[64168,64168],\"mapped\",[30452]],[[64169,64169],\"mapped\",[30538]],[[64170,64170],\"mapped\",[30528]],[[64171,64171],\"mapped\",[30924]],[[64172,64172],\"mapped\",[31409]],[[64173,64173],\"mapped\",[31680]],[[64174,64174],\"mapped\",[31867]],[[64175,64175],\"mapped\",[32091]],[[64176,64176],\"mapped\",[32244]],[[64177,64177],\"mapped\",[32574]],[[64178,64178],\"mapped\",[32773]],[[64179,64179],\"mapped\",[33618]],[[64180,64180],\"mapped\",[33775]],[[64181,64181],\"mapped\",[34681]],[[64182,64182],\"mapped\",[35137]],[[64183,64183],\"mapped\",[35206]],[[64184,64184],\"mapped\",[35222]],[[64185,64185],\"mapped\",[35519]],[[64186,64186],\"mapped\",[35576]],[[64187,64187],\"mapped\",[35531]],[[64188,64188],\"mapped\",[35585]],[[64189,64189],\"mapped\",[35582]],[[64190,64190],\"mapped\",[35565]],[[64191,64191],\"mapped\",[35641]],[[64192,64192],\"mapped\",[35722]],[[64193,64193],\"mapped\",[36104]],[[64194,64194],\"mapped\",[36664]],[[64195,64195],\"mapped\",[36978]],[[64196,64196],\"mapped\",[37273]],[[64197,64197],\"mapped\",[37494]],[[64198,64198],\"mapped\",[38524]],[[64199,64199],\"mapped\",[38627]],[[64200,64200],\"mapped\",[38742]],[[64201,64201],\"mapped\",[38875]],[[64202,64202],\"mapped\",[38911]],[[64203,64203],\"mapped\",[38923]],[[64204,64204],\"mapped\",[38971]],[[64205,64205],\"mapped\",[39698]],[[64206,64206],\"mapped\",[40860]],[[64207,64207],\"mapped\",[141386]],[[64208,64208],\"mapped\",[141380]],[[64209,64209],\"mapped\",[144341]],[[64210,64210],\"mapped\",[15261]],[[64211,64211],\"mapped\",[16408]],[[64212,64212],\"mapped\",[16441]],[[64213,64213],\"mapped\",[152137]],[[64214,64214],\"mapped\",[154832]],[[64215,64215],\"mapped\",[163539]],[[64216,64216],\"mapped\",[40771]],[[64217,64217],\"mapped\",[40846]],[[64218,64255],\"disallowed\"],[[64256,64256],\"mapped\",[102,102]],[[64257,64257],\"mapped\",[102,105]],[[64258,64258],\"mapped\",[102,108]],[[64259,64259],\"mapped\",[102,102,105]],[[64260,64260],\"mapped\",[102,102,108]],[[64261,64262],\"mapped\",[115,116]],[[64263,64274],\"disallowed\"],[[64275,64275],\"mapped\",[1396,1398]],[[64276,64276],\"mapped\",[1396,1381]],[[64277,64277],\"mapped\",[1396,1387]],[[64278,64278],\"mapped\",[1406,1398]],[[64279,64279],\"mapped\",[1396,1389]],[[64280,64284],\"disallowed\"],[[64285,64285],\"mapped\",[1497,1460]],[[64286,64286],\"valid\"],[[64287,64287],\"mapped\",[1522,1463]],[[64288,64288],\"mapped\",[1506]],[[64289,64289],\"mapped\",[1488]],[[64290,64290],\"mapped\",[1491]],[[64291,64291],\"mapped\",[1492]],[[64292,64292],\"mapped\",[1499]],[[64293,64293],\"mapped\",[1500]],[[64294,64294],\"mapped\",[1501]],[[64295,64295],\"mapped\",[1512]],[[64296,64296],\"mapped\",[1514]],[[64297,64297],\"disallowed_STD3_mapped\",[43]],[[64298,64298],\"mapped\",[1513,1473]],[[64299,64299],\"mapped\",[1513,1474]],[[64300,64300],\"mapped\",[1513,1468,1473]],[[64301,64301],\"mapped\",[1513,1468,1474]],[[64302,64302],\"mapped\",[1488,1463]],[[64303,64303],\"mapped\",[1488,1464]],[[64304,64304],\"mapped\",[1488,1468]],[[64305,64305],\"mapped\",[1489,1468]],[[64306,64306],\"mapped\",[1490,1468]],[[64307,64307],\"mapped\",[1491,1468]],[[64308,64308],\"mapped\",[1492,1468]],[[64309,64309],\"mapped\",[1493,1468]],[[64310,64310],\"mapped\",[1494,1468]],[[64311,64311],\"disallowed\"],[[64312,64312],\"mapped\",[1496,1468]],[[64313,64313],\"mapped\",[1497,1468]],[[64314,64314],\"mapped\",[1498,1468]],[[64315,64315],\"mapped\",[1499,1468]],[[64316,64316],\"mapped\",[1500,1468]],[[64317,64317],\"disallowed\"],[[64318,64318],\"mapped\",[1502,1468]],[[64319,64319],\"disallowed\"],[[64320,64320],\"mapped\",[1504,1468]],[[64321,64321],\"mapped\",[1505,1468]],[[64322,64322],\"disallowed\"],[[64323,64323],\"mapped\",[1507,1468]],[[64324,64324],\"mapped\",[1508,1468]],[[64325,64325],\"disallowed\"],[[64326,64326],\"mapped\",[1510,1468]],[[64327,64327],\"mapped\",[1511,1468]],[[64328,64328],\"mapped\",[1512,1468]],[[64329,64329],\"mapped\",[1513,1468]],[[64330,64330],\"mapped\",[1514,1468]],[[64331,64331],\"mapped\",[1493,1465]],[[64332,64332],\"mapped\",[1489,1471]],[[64333,64333],\"mapped\",[1499,1471]],[[64334,64334],\"mapped\",[1508,1471]],[[64335,64335],\"mapped\",[1488,1500]],[[64336,64337],\"mapped\",[1649]],[[64338,64341],\"mapped\",[1659]],[[64342,64345],\"mapped\",[1662]],[[64346,64349],\"mapped\",[1664]],[[64350,64353],\"mapped\",[1658]],[[64354,64357],\"mapped\",[1663]],[[64358,64361],\"mapped\",[1657]],[[64362,64365],\"mapped\",[1700]],[[64366,64369],\"mapped\",[1702]],[[64370,64373],\"mapped\",[1668]],[[64374,64377],\"mapped\",[1667]],[[64378,64381],\"mapped\",[1670]],[[64382,64385],\"mapped\",[1671]],[[64386,64387],\"mapped\",[1677]],[[64388,64389],\"mapped\",[1676]],[[64390,64391],\"mapped\",[1678]],[[64392,64393],\"mapped\",[1672]],[[64394,64395],\"mapped\",[1688]],[[64396,64397],\"mapped\",[1681]],[[64398,64401],\"mapped\",[1705]],[[64402,64405],\"mapped\",[1711]],[[64406,64409],\"mapped\",[1715]],[[64410,64413],\"mapped\",[1713]],[[64414,64415],\"mapped\",[1722]],[[64416,64419],\"mapped\",[1723]],[[64420,64421],\"mapped\",[1728]],[[64422,64425],\"mapped\",[1729]],[[64426,64429],\"mapped\",[1726]],[[64430,64431],\"mapped\",[1746]],[[64432,64433],\"mapped\",[1747]],[[64434,64449],\"valid\",[],\"NV8\"],[[64450,64466],\"disallowed\"],[[64467,64470],\"mapped\",[1709]],[[64471,64472],\"mapped\",[1735]],[[64473,64474],\"mapped\",[1734]],[[64475,64476],\"mapped\",[1736]],[[64477,64477],\"mapped\",[1735,1652]],[[64478,64479],\"mapped\",[1739]],[[64480,64481],\"mapped\",[1733]],[[64482,64483],\"mapped\",[1737]],[[64484,64487],\"mapped\",[1744]],[[64488,64489],\"mapped\",[1609]],[[64490,64491],\"mapped\",[1574,1575]],[[64492,64493],\"mapped\",[1574,1749]],[[64494,64495],\"mapped\",[1574,1608]],[[64496,64497],\"mapped\",[1574,1735]],[[64498,64499],\"mapped\",[1574,1734]],[[64500,64501],\"mapped\",[1574,1736]],[[64502,64504],\"mapped\",[1574,1744]],[[64505,64507],\"mapped\",[1574,1609]],[[64508,64511],\"mapped\",[1740]],[[64512,64512],\"mapped\",[1574,1580]],[[64513,64513],\"mapped\",[1574,1581]],[[64514,64514],\"mapped\",[1574,1605]],[[64515,64515],\"mapped\",[1574,1609]],[[64516,64516],\"mapped\",[1574,1610]],[[64517,64517],\"mapped\",[1576,1580]],[[64518,64518],\"mapped\",[1576,1581]],[[64519,64519],\"mapped\",[1576,1582]],[[64520,64520],\"mapped\",[1576,1605]],[[64521,64521],\"mapped\",[1576,1609]],[[64522,64522],\"mapped\",[1576,1610]],[[64523,64523],\"mapped\",[1578,1580]],[[64524,64524],\"mapped\",[1578,1581]],[[64525,64525],\"mapped\",[1578,1582]],[[64526,64526],\"mapped\",[1578,1605]],[[64527,64527],\"mapped\",[1578,1609]],[[64528,64528],\"mapped\",[1578,1610]],[[64529,64529],\"mapped\",[1579,1580]],[[64530,64530],\"mapped\",[1579,1605]],[[64531,64531],\"mapped\",[1579,1609]],[[64532,64532],\"mapped\",[1579,1610]],[[64533,64533],\"mapped\",[1580,1581]],[[64534,64534],\"mapped\",[1580,1605]],[[64535,64535],\"mapped\",[1581,1580]],[[64536,64536],\"mapped\",[1581,1605]],[[64537,64537],\"mapped\",[1582,1580]],[[64538,64538],\"mapped\",[1582,1581]],[[64539,64539],\"mapped\",[1582,1605]],[[64540,64540],\"mapped\",[1587,1580]],[[64541,64541],\"mapped\",[1587,1581]],[[64542,64542],\"mapped\",[1587,1582]],[[64543,64543],\"mapped\",[1587,1605]],[[64544,64544],\"mapped\",[1589,1581]],[[64545,64545],\"mapped\",[1589,1605]],[[64546,64546],\"mapped\",[1590,1580]],[[64547,64547],\"mapped\",[1590,1581]],[[64548,64548],\"mapped\",[1590,1582]],[[64549,64549],\"mapped\",[1590,1605]],[[64550,64550],\"mapped\",[1591,1581]],[[64551,64551],\"mapped\",[1591,1605]],[[64552,64552],\"mapped\",[1592,1605]],[[64553,64553],\"mapped\",[1593,1580]],[[64554,64554],\"mapped\",[1593,1605]],[[64555,64555],\"mapped\",[1594,1580]],[[64556,64556],\"mapped\",[1594,1605]],[[64557,64557],\"mapped\",[1601,1580]],[[64558,64558],\"mapped\",[1601,1581]],[[64559,64559],\"mapped\",[1601,1582]],[[64560,64560],\"mapped\",[1601,1605]],[[64561,64561],\"mapped\",[1601,1609]],[[64562,64562],\"mapped\",[1601,1610]],[[64563,64563],\"mapped\",[1602,1581]],[[64564,64564],\"mapped\",[1602,1605]],[[64565,64565],\"mapped\",[1602,1609]],[[64566,64566],\"mapped\",[1602,1610]],[[64567,64567],\"mapped\",[1603,1575]],[[64568,64568],\"mapped\",[1603,1580]],[[64569,64569],\"mapped\",[1603,1581]],[[64570,64570],\"mapped\",[1603,1582]],[[64571,64571],\"mapped\",[1603,1604]],[[64572,64572],\"mapped\",[1603,1605]],[[64573,64573],\"mapped\",[1603,1609]],[[64574,64574],\"mapped\",[1603,1610]],[[64575,64575],\"mapped\",[1604,1580]],[[64576,64576],\"mapped\",[1604,1581]],[[64577,64577],\"mapped\",[1604,1582]],[[64578,64578],\"mapped\",[1604,1605]],[[64579,64579],\"mapped\",[1604,1609]],[[64580,64580],\"mapped\",[1604,1610]],[[64581,64581],\"mapped\",[1605,1580]],[[64582,64582],\"mapped\",[1605,1581]],[[64583,64583],\"mapped\",[1605,1582]],[[64584,64584],\"mapped\",[1605,1605]],[[64585,64585],\"mapped\",[1605,1609]],[[64586,64586],\"mapped\",[1605,1610]],[[64587,64587],\"mapped\",[1606,1580]],[[64588,64588],\"mapped\",[1606,1581]],[[64589,64589],\"mapped\",[1606,1582]],[[64590,64590],\"mapped\",[1606,1605]],[[64591,64591],\"mapped\",[1606,1609]],[[64592,64592],\"mapped\",[1606,1610]],[[64593,64593],\"mapped\",[1607,1580]],[[64594,64594],\"mapped\",[1607,1605]],[[64595,64595],\"mapped\",[1607,1609]],[[64596,64596],\"mapped\",[1607,1610]],[[64597,64597],\"mapped\",[1610,1580]],[[64598,64598],\"mapped\",[1610,1581]],[[64599,64599],\"mapped\",[1610,1582]],[[64600,64600],\"mapped\",[1610,1605]],[[64601,64601],\"mapped\",[1610,1609]],[[64602,64602],\"mapped\",[1610,1610]],[[64603,64603],\"mapped\",[1584,1648]],[[64604,64604],\"mapped\",[1585,1648]],[[64605,64605],\"mapped\",[1609,1648]],[[64606,64606],\"disallowed_STD3_mapped\",[32,1612,1617]],[[64607,64607],\"disallowed_STD3_mapped\",[32,1613,1617]],[[64608,64608],\"disallowed_STD3_mapped\",[32,1614,1617]],[[64609,64609],\"disallowed_STD3_mapped\",[32,1615,1617]],[[64610,64610],\"disallowed_STD3_mapped\",[32,1616,1617]],[[64611,64611],\"disallowed_STD3_mapped\",[32,1617,1648]],[[64612,64612],\"mapped\",[1574,1585]],[[64613,64613],\"mapped\",[1574,1586]],[[64614,64614],\"mapped\",[1574,1605]],[[64615,64615],\"mapped\",[1574,1606]],[[64616,64616],\"mapped\",[1574,1609]],[[64617,64617],\"mapped\",[1574,1610]],[[64618,64618],\"mapped\",[1576,1585]],[[64619,64619],\"mapped\",[1576,1586]],[[64620,64620],\"mapped\",[1576,1605]],[[64621,64621],\"mapped\",[1576,1606]],[[64622,64622],\"mapped\",[1576,1609]],[[64623,64623],\"mapped\",[1576,1610]],[[64624,64624],\"mapped\",[1578,1585]],[[64625,64625],\"mapped\",[1578,1586]],[[64626,64626],\"mapped\",[1578,1605]],[[64627,64627],\"mapped\",[1578,1606]],[[64628,64628],\"mapped\",[1578,1609]],[[64629,64629],\"mapped\",[1578,1610]],[[64630,64630],\"mapped\",[1579,1585]],[[64631,64631],\"mapped\",[1579,1586]],[[64632,64632],\"mapped\",[1579,1605]],[[64633,64633],\"mapped\",[1579,1606]],[[64634,64634],\"mapped\",[1579,1609]],[[64635,64635],\"mapped\",[1579,1610]],[[64636,64636],\"mapped\",[1601,1609]],[[64637,64637],\"mapped\",[1601,1610]],[[64638,64638],\"mapped\",[1602,1609]],[[64639,64639],\"mapped\",[1602,1610]],[[64640,64640],\"mapped\",[1603,1575]],[[64641,64641],\"mapped\",[1603,1604]],[[64642,64642],\"mapped\",[1603,1605]],[[64643,64643],\"mapped\",[1603,1609]],[[64644,64644],\"mapped\",[1603,1610]],[[64645,64645],\"mapped\",[1604,1605]],[[64646,64646],\"mapped\",[1604,1609]],[[64647,64647],\"mapped\",[1604,1610]],[[64648,64648],\"mapped\",[1605,1575]],[[64649,64649],\"mapped\",[1605,1605]],[[64650,64650],\"mapped\",[1606,1585]],[[64651,64651],\"mapped\",[1606,1586]],[[64652,64652],\"mapped\",[1606,1605]],[[64653,64653],\"mapped\",[1606,1606]],[[64654,64654],\"mapped\",[1606,1609]],[[64655,64655],\"mapped\",[1606,1610]],[[64656,64656],\"mapped\",[1609,1648]],[[64657,64657],\"mapped\",[1610,1585]],[[64658,64658],\"mapped\",[1610,1586]],[[64659,64659],\"mapped\",[1610,1605]],[[64660,64660],\"mapped\",[1610,1606]],[[64661,64661],\"mapped\",[1610,1609]],[[64662,64662],\"mapped\",[1610,1610]],[[64663,64663],\"mapped\",[1574,1580]],[[64664,64664],\"mapped\",[1574,1581]],[[64665,64665],\"mapped\",[1574,1582]],[[64666,64666],\"mapped\",[1574,1605]],[[64667,64667],\"mapped\",[1574,1607]],[[64668,64668],\"mapped\",[1576,1580]],[[64669,64669],\"mapped\",[1576,1581]],[[64670,64670],\"mapped\",[1576,1582]],[[64671,64671],\"mapped\",[1576,1605]],[[64672,64672],\"mapped\",[1576,1607]],[[64673,64673],\"mapped\",[1578,1580]],[[64674,64674],\"mapped\",[1578,1581]],[[64675,64675],\"mapped\",[1578,1582]],[[64676,64676],\"mapped\",[1578,1605]],[[64677,64677],\"mapped\",[1578,1607]],[[64678,64678],\"mapped\",[1579,1605]],[[64679,64679],\"mapped\",[1580,1581]],[[64680,64680],\"mapped\",[1580,1605]],[[64681,64681],\"mapped\",[1581,1580]],[[64682,64682],\"mapped\",[1581,1605]],[[64683,64683],\"mapped\",[1582,1580]],[[64684,64684],\"mapped\",[1582,1605]],[[64685,64685],\"mapped\",[1587,1580]],[[64686,64686],\"mapped\",[1587,1581]],[[64687,64687],\"mapped\",[1587,1582]],[[64688,64688],\"mapped\",[1587,1605]],[[64689,64689],\"mapped\",[1589,1581]],[[64690,64690],\"mapped\",[1589,1582]],[[64691,64691],\"mapped\",[1589,1605]],[[64692,64692],\"mapped\",[1590,1580]],[[64693,64693],\"mapped\",[1590,1581]],[[64694,64694],\"mapped\",[1590,1582]],[[64695,64695],\"mapped\",[1590,1605]],[[64696,64696],\"mapped\",[1591,1581]],[[64697,64697],\"mapped\",[1592,1605]],[[64698,64698],\"mapped\",[1593,1580]],[[64699,64699],\"mapped\",[1593,1605]],[[64700,64700],\"mapped\",[1594,1580]],[[64701,64701],\"mapped\",[1594,1605]],[[64702,64702],\"mapped\",[1601,1580]],[[64703,64703],\"mapped\",[1601,1581]],[[64704,64704],\"mapped\",[1601,1582]],[[64705,64705],\"mapped\",[1601,1605]],[[64706,64706],\"mapped\",[1602,1581]],[[64707,64707],\"mapped\",[1602,1605]],[[64708,64708],\"mapped\",[1603,1580]],[[64709,64709],\"mapped\",[1603,1581]],[[64710,64710],\"mapped\",[1603,1582]],[[64711,64711],\"mapped\",[1603,1604]],[[64712,64712],\"mapped\",[1603,1605]],[[64713,64713],\"mapped\",[1604,1580]],[[64714,64714],\"mapped\",[1604,1581]],[[64715,64715],\"mapped\",[1604,1582]],[[64716,64716],\"mapped\",[1604,1605]],[[64717,64717],\"mapped\",[1604,1607]],[[64718,64718],\"mapped\",[1605,1580]],[[64719,64719],\"mapped\",[1605,1581]],[[64720,64720],\"mapped\",[1605,1582]],[[64721,64721],\"mapped\",[1605,1605]],[[64722,64722],\"mapped\",[1606,1580]],[[64723,64723],\"mapped\",[1606,1581]],[[64724,64724],\"mapped\",[1606,1582]],[[64725,64725],\"mapped\",[1606,1605]],[[64726,64726],\"mapped\",[1606,1607]],[[64727,64727],\"mapped\",[1607,1580]],[[64728,64728],\"mapped\",[1607,1605]],[[64729,64729],\"mapped\",[1607,1648]],[[64730,64730],\"mapped\",[1610,1580]],[[64731,64731],\"mapped\",[1610,1581]],[[64732,64732],\"mapped\",[1610,1582]],[[64733,64733],\"mapped\",[1610,1605]],[[64734,64734],\"mapped\",[1610,1607]],[[64735,64735],\"mapped\",[1574,1605]],[[64736,64736],\"mapped\",[1574,1607]],[[64737,64737],\"mapped\",[1576,1605]],[[64738,64738],\"mapped\",[1576,1607]],[[64739,64739],\"mapped\",[1578,1605]],[[64740,64740],\"mapped\",[1578,1607]],[[64741,64741],\"mapped\",[1579,1605]],[[64742,64742],\"mapped\",[1579,1607]],[[64743,64743],\"mapped\",[1587,1605]],[[64744,64744],\"mapped\",[1587,1607]],[[64745,64745],\"mapped\",[1588,1605]],[[64746,64746],\"mapped\",[1588,1607]],[[64747,64747],\"mapped\",[1603,1604]],[[64748,64748],\"mapped\",[1603,1605]],[[64749,64749],\"mapped\",[1604,1605]],[[64750,64750],\"mapped\",[1606,1605]],[[64751,64751],\"mapped\",[1606,1607]],[[64752,64752],\"mapped\",[1610,1605]],[[64753,64753],\"mapped\",[1610,1607]],[[64754,64754],\"mapped\",[1600,1614,1617]],[[64755,64755],\"mapped\",[1600,1615,1617]],[[64756,64756],\"mapped\",[1600,1616,1617]],[[64757,64757],\"mapped\",[1591,1609]],[[64758,64758],\"mapped\",[1591,1610]],[[64759,64759],\"mapped\",[1593,1609]],[[64760,64760],\"mapped\",[1593,1610]],[[64761,64761],\"mapped\",[1594,1609]],[[64762,64762],\"mapped\",[1594,1610]],[[64763,64763],\"mapped\",[1587,1609]],[[64764,64764],\"mapped\",[1587,1610]],[[64765,64765],\"mapped\",[1588,1609]],[[64766,64766],\"mapped\",[1588,1610]],[[64767,64767],\"mapped\",[1581,1609]],[[64768,64768],\"mapped\",[1581,1610]],[[64769,64769],\"mapped\",[1580,1609]],[[64770,64770],\"mapped\",[1580,1610]],[[64771,64771],\"mapped\",[1582,1609]],[[64772,64772],\"mapped\",[1582,1610]],[[64773,64773],\"mapped\",[1589,1609]],[[64774,64774],\"mapped\",[1589,1610]],[[64775,64775],\"mapped\",[1590,1609]],[[64776,64776],\"mapped\",[1590,1610]],[[64777,64777],\"mapped\",[1588,1580]],[[64778,64778],\"mapped\",[1588,1581]],[[64779,64779],\"mapped\",[1588,1582]],[[64780,64780],\"mapped\",[1588,1605]],[[64781,64781],\"mapped\",[1588,1585]],[[64782,64782],\"mapped\",[1587,1585]],[[64783,64783],\"mapped\",[1589,1585]],[[64784,64784],\"mapped\",[1590,1585]],[[64785,64785],\"mapped\",[1591,1609]],[[64786,64786],\"mapped\",[1591,1610]],[[64787,64787],\"mapped\",[1593,1609]],[[64788,64788],\"mapped\",[1593,1610]],[[64789,64789],\"mapped\",[1594,1609]],[[64790,64790],\"mapped\",[1594,1610]],[[64791,64791],\"mapped\",[1587,1609]],[[64792,64792],\"mapped\",[1587,1610]],[[64793,64793],\"mapped\",[1588,1609]],[[64794,64794],\"mapped\",[1588,1610]],[[64795,64795],\"mapped\",[1581,1609]],[[64796,64796],\"mapped\",[1581,1610]],[[64797,64797],\"mapped\",[1580,1609]],[[64798,64798],\"mapped\",[1580,1610]],[[64799,64799],\"mapped\",[1582,1609]],[[64800,64800],\"mapped\",[1582,1610]],[[64801,64801],\"mapped\",[1589,1609]],[[64802,64802],\"mapped\",[1589,1610]],[[64803,64803],\"mapped\",[1590,1609]],[[64804,64804],\"mapped\",[1590,1610]],[[64805,64805],\"mapped\",[1588,1580]],[[64806,64806],\"mapped\",[1588,1581]],[[64807,64807],\"mapped\",[1588,1582]],[[64808,64808],\"mapped\",[1588,1605]],[[64809,64809],\"mapped\",[1588,1585]],[[64810,64810],\"mapped\",[1587,1585]],[[64811,64811],\"mapped\",[1589,1585]],[[64812,64812],\"mapped\",[1590,1585]],[[64813,64813],\"mapped\",[1588,1580]],[[64814,64814],\"mapped\",[1588,1581]],[[64815,64815],\"mapped\",[1588,1582]],[[64816,64816],\"mapped\",[1588,1605]],[[64817,64817],\"mapped\",[1587,1607]],[[64818,64818],\"mapped\",[1588,1607]],[[64819,64819],\"mapped\",[1591,1605]],[[64820,64820],\"mapped\",[1587,1580]],[[64821,64821],\"mapped\",[1587,1581]],[[64822,64822],\"mapped\",[1587,1582]],[[64823,64823],\"mapped\",[1588,1580]],[[64824,64824],\"mapped\",[1588,1581]],[[64825,64825],\"mapped\",[1588,1582]],[[64826,64826],\"mapped\",[1591,1605]],[[64827,64827],\"mapped\",[1592,1605]],[[64828,64829],\"mapped\",[1575,1611]],[[64830,64831],\"valid\",[],\"NV8\"],[[64832,64847],\"disallowed\"],[[64848,64848],\"mapped\",[1578,1580,1605]],[[64849,64850],\"mapped\",[1578,1581,1580]],[[64851,64851],\"mapped\",[1578,1581,1605]],[[64852,64852],\"mapped\",[1578,1582,1605]],[[64853,64853],\"mapped\",[1578,1605,1580]],[[64854,64854],\"mapped\",[1578,1605,1581]],[[64855,64855],\"mapped\",[1578,1605,1582]],[[64856,64857],\"mapped\",[1580,1605,1581]],[[64858,64858],\"mapped\",[1581,1605,1610]],[[64859,64859],\"mapped\",[1581,1605,1609]],[[64860,64860],\"mapped\",[1587,1581,1580]],[[64861,64861],\"mapped\",[1587,1580,1581]],[[64862,64862],\"mapped\",[1587,1580,1609]],[[64863,64864],\"mapped\",[1587,1605,1581]],[[64865,64865],\"mapped\",[1587,1605,1580]],[[64866,64867],\"mapped\",[1587,1605,1605]],[[64868,64869],\"mapped\",[1589,1581,1581]],[[64870,64870],\"mapped\",[1589,1605,1605]],[[64871,64872],\"mapped\",[1588,1581,1605]],[[64873,64873],\"mapped\",[1588,1580,1610]],[[64874,64875],\"mapped\",[1588,1605,1582]],[[64876,64877],\"mapped\",[1588,1605,1605]],[[64878,64878],\"mapped\",[1590,1581,1609]],[[64879,64880],\"mapped\",[1590,1582,1605]],[[64881,64882],\"mapped\",[1591,1605,1581]],[[64883,64883],\"mapped\",[1591,1605,1605]],[[64884,64884],\"mapped\",[1591,1605,1610]],[[64885,64885],\"mapped\",[1593,1580,1605]],[[64886,64887],\"mapped\",[1593,1605,1605]],[[64888,64888],\"mapped\",[1593,1605,1609]],[[64889,64889],\"mapped\",[1594,1605,1605]],[[64890,64890],\"mapped\",[1594,1605,1610]],[[64891,64891],\"mapped\",[1594,1605,1609]],[[64892,64893],\"mapped\",[1601,1582,1605]],[[64894,64894],\"mapped\",[1602,1605,1581]],[[64895,64895],\"mapped\",[1602,1605,1605]],[[64896,64896],\"mapped\",[1604,1581,1605]],[[64897,64897],\"mapped\",[1604,1581,1610]],[[64898,64898],\"mapped\",[1604,1581,1609]],[[64899,64900],\"mapped\",[1604,1580,1580]],[[64901,64902],\"mapped\",[1604,1582,1605]],[[64903,64904],\"mapped\",[1604,1605,1581]],[[64905,64905],\"mapped\",[1605,1581,1580]],[[64906,64906],\"mapped\",[1605,1581,1605]],[[64907,64907],\"mapped\",[1605,1581,1610]],[[64908,64908],\"mapped\",[1605,1580,1581]],[[64909,64909],\"mapped\",[1605,1580,1605]],[[64910,64910],\"mapped\",[1605,1582,1580]],[[64911,64911],\"mapped\",[1605,1582,1605]],[[64912,64913],\"disallowed\"],[[64914,64914],\"mapped\",[1605,1580,1582]],[[64915,64915],\"mapped\",[1607,1605,1580]],[[64916,64916],\"mapped\",[1607,1605,1605]],[[64917,64917],\"mapped\",[1606,1581,1605]],[[64918,64918],\"mapped\",[1606,1581,1609]],[[64919,64920],\"mapped\",[1606,1580,1605]],[[64921,64921],\"mapped\",[1606,1580,1609]],[[64922,64922],\"mapped\",[1606,1605,1610]],[[64923,64923],\"mapped\",[1606,1605,1609]],[[64924,64925],\"mapped\",[1610,1605,1605]],[[64926,64926],\"mapped\",[1576,1582,1610]],[[64927,64927],\"mapped\",[1578,1580,1610]],[[64928,64928],\"mapped\",[1578,1580,1609]],[[64929,64929],\"mapped\",[1578,1582,1610]],[[64930,64930],\"mapped\",[1578,1582,1609]],[[64931,64931],\"mapped\",[1578,1605,1610]],[[64932,64932],\"mapped\",[1578,1605,1609]],[[64933,64933],\"mapped\",[1580,1605,1610]],[[64934,64934],\"mapped\",[1580,1581,1609]],[[64935,64935],\"mapped\",[1580,1605,1609]],[[64936,64936],\"mapped\",[1587,1582,1609]],[[64937,64937],\"mapped\",[1589,1581,1610]],[[64938,64938],\"mapped\",[1588,1581,1610]],[[64939,64939],\"mapped\",[1590,1581,1610]],[[64940,64940],\"mapped\",[1604,1580,1610]],[[64941,64941],\"mapped\",[1604,1605,1610]],[[64942,64942],\"mapped\",[1610,1581,1610]],[[64943,64943],\"mapped\",[1610,1580,1610]],[[64944,64944],\"mapped\",[1610,1605,1610]],[[64945,64945],\"mapped\",[1605,1605,1610]],[[64946,64946],\"mapped\",[1602,1605,1610]],[[64947,64947],\"mapped\",[1606,1581,1610]],[[64948,64948],\"mapped\",[1602,1605,1581]],[[64949,64949],\"mapped\",[1604,1581,1605]],[[64950,64950],\"mapped\",[1593,1605,1610]],[[64951,64951],\"mapped\",[1603,1605,1610]],[[64952,64952],\"mapped\",[1606,1580,1581]],[[64953,64953],\"mapped\",[1605,1582,1610]],[[64954,64954],\"mapped\",[1604,1580,1605]],[[64955,64955],\"mapped\",[1603,1605,1605]],[[64956,64956],\"mapped\",[1604,1580,1605]],[[64957,64957],\"mapped\",[1606,1580,1581]],[[64958,64958],\"mapped\",[1580,1581,1610]],[[64959,64959],\"mapped\",[1581,1580,1610]],[[64960,64960],\"mapped\",[1605,1580,1610]],[[64961,64961],\"mapped\",[1601,1605,1610]],[[64962,64962],\"mapped\",[1576,1581,1610]],[[64963,64963],\"mapped\",[1603,1605,1605]],[[64964,64964],\"mapped\",[1593,1580,1605]],[[64965,64965],\"mapped\",[1589,1605,1605]],[[64966,64966],\"mapped\",[1587,1582,1610]],[[64967,64967],\"mapped\",[1606,1580,1610]],[[64968,64975],\"disallowed\"],[[64976,65007],\"disallowed\"],[[65008,65008],\"mapped\",[1589,1604,1746]],[[65009,65009],\"mapped\",[1602,1604,1746]],[[65010,65010],\"mapped\",[1575,1604,1604,1607]],[[65011,65011],\"mapped\",[1575,1603,1576,1585]],[[65012,65012],\"mapped\",[1605,1581,1605,1583]],[[65013,65013],\"mapped\",[1589,1604,1593,1605]],[[65014,65014],\"mapped\",[1585,1587,1608,1604]],[[65015,65015],\"mapped\",[1593,1604,1610,1607]],[[65016,65016],\"mapped\",[1608,1587,1604,1605]],[[65017,65017],\"mapped\",[1589,1604,1609]],[[65018,65018],\"disallowed_STD3_mapped\",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],\"disallowed_STD3_mapped\",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],\"mapped\",[1585,1740,1575,1604]],[[65021,65021],\"valid\",[],\"NV8\"],[[65022,65023],\"disallowed\"],[[65024,65039],\"ignored\"],[[65040,65040],\"disallowed_STD3_mapped\",[44]],[[65041,65041],\"mapped\",[12289]],[[65042,65042],\"disallowed\"],[[65043,65043],\"disallowed_STD3_mapped\",[58]],[[65044,65044],\"disallowed_STD3_mapped\",[59]],[[65045,65045],\"disallowed_STD3_mapped\",[33]],[[65046,65046],\"disallowed_STD3_mapped\",[63]],[[65047,65047],\"mapped\",[12310]],[[65048,65048],\"mapped\",[12311]],[[65049,65049],\"disallowed\"],[[65050,65055],\"disallowed\"],[[65056,65059],\"valid\"],[[65060,65062],\"valid\"],[[65063,65069],\"valid\"],[[65070,65071],\"valid\"],[[65072,65072],\"disallowed\"],[[65073,65073],\"mapped\",[8212]],[[65074,65074],\"mapped\",[8211]],[[65075,65076],\"disallowed_STD3_mapped\",[95]],[[65077,65077],\"disallowed_STD3_mapped\",[40]],[[65078,65078],\"disallowed_STD3_mapped\",[41]],[[65079,65079],\"disallowed_STD3_mapped\",[123]],[[65080,65080],\"disallowed_STD3_mapped\",[125]],[[65081,65081],\"mapped\",[12308]],[[65082,65082],\"mapped\",[12309]],[[65083,65083],\"mapped\",[12304]],[[65084,65084],\"mapped\",[12305]],[[65085,65085],\"mapped\",[12298]],[[65086,65086],\"mapped\",[12299]],[[65087,65087],\"mapped\",[12296]],[[65088,65088],\"mapped\",[12297]],[[65089,65089],\"mapped\",[12300]],[[65090,65090],\"mapped\",[12301]],[[65091,65091],\"mapped\",[12302]],[[65092,65092],\"mapped\",[12303]],[[65093,65094],\"valid\",[],\"NV8\"],[[65095,65095],\"disallowed_STD3_mapped\",[91]],[[65096,65096],\"disallowed_STD3_mapped\",[93]],[[65097,65100],\"disallowed_STD3_mapped\",[32,773]],[[65101,65103],\"disallowed_STD3_mapped\",[95]],[[65104,65104],\"disallowed_STD3_mapped\",[44]],[[65105,65105],\"mapped\",[12289]],[[65106,65106],\"disallowed\"],[[65107,65107],\"disallowed\"],[[65108,65108],\"disallowed_STD3_mapped\",[59]],[[65109,65109],\"disallowed_STD3_mapped\",[58]],[[65110,65110],\"disallowed_STD3_mapped\",[63]],[[65111,65111],\"disallowed_STD3_mapped\",[33]],[[65112,65112],\"mapped\",[8212]],[[65113,65113],\"disallowed_STD3_mapped\",[40]],[[65114,65114],\"disallowed_STD3_mapped\",[41]],[[65115,65115],\"disallowed_STD3_mapped\",[123]],[[65116,65116],\"disallowed_STD3_mapped\",[125]],[[65117,65117],\"mapped\",[12308]],[[65118,65118],\"mapped\",[12309]],[[65119,65119],\"disallowed_STD3_mapped\",[35]],[[65120,65120],\"disallowed_STD3_mapped\",[38]],[[65121,65121],\"disallowed_STD3_mapped\",[42]],[[65122,65122],\"disallowed_STD3_mapped\",[43]],[[65123,65123],\"mapped\",[45]],[[65124,65124],\"disallowed_STD3_mapped\",[60]],[[65125,65125],\"disallowed_STD3_mapped\",[62]],[[65126,65126],\"disallowed_STD3_mapped\",[61]],[[65127,65127],\"disallowed\"],[[65128,65128],\"disallowed_STD3_mapped\",[92]],[[65129,65129],\"disallowed_STD3_mapped\",[36]],[[65130,65130],\"disallowed_STD3_mapped\",[37]],[[65131,65131],\"disallowed_STD3_mapped\",[64]],[[65132,65135],\"disallowed\"],[[65136,65136],\"disallowed_STD3_mapped\",[32,1611]],[[65137,65137],\"mapped\",[1600,1611]],[[65138,65138],\"disallowed_STD3_mapped\",[32,1612]],[[65139,65139],\"valid\"],[[65140,65140],\"disallowed_STD3_mapped\",[32,1613]],[[65141,65141],\"disallowed\"],[[65142,65142],\"disallowed_STD3_mapped\",[32,1614]],[[65143,65143],\"mapped\",[1600,1614]],[[65144,65144],\"disallowed_STD3_mapped\",[32,1615]],[[65145,65145],\"mapped\",[1600,1615]],[[65146,65146],\"disallowed_STD3_mapped\",[32,1616]],[[65147,65147],\"mapped\",[1600,1616]],[[65148,65148],\"disallowed_STD3_mapped\",[32,1617]],[[65149,65149],\"mapped\",[1600,1617]],[[65150,65150],\"disallowed_STD3_mapped\",[32,1618]],[[65151,65151],\"mapped\",[1600,1618]],[[65152,65152],\"mapped\",[1569]],[[65153,65154],\"mapped\",[1570]],[[65155,65156],\"mapped\",[1571]],[[65157,65158],\"mapped\",[1572]],[[65159,65160],\"mapped\",[1573]],[[65161,65164],\"mapped\",[1574]],[[65165,65166],\"mapped\",[1575]],[[65167,65170],\"mapped\",[1576]],[[65171,65172],\"mapped\",[1577]],[[65173,65176],\"mapped\",[1578]],[[65177,65180],\"mapped\",[1579]],[[65181,65184],\"mapped\",[1580]],[[65185,65188],\"mapped\",[1581]],[[65189,65192],\"mapped\",[1582]],[[65193,65194],\"mapped\",[1583]],[[65195,65196],\"mapped\",[1584]],[[65197,65198],\"mapped\",[1585]],[[65199,65200],\"mapped\",[1586]],[[65201,65204],\"mapped\",[1587]],[[65205,65208],\"mapped\",[1588]],[[65209,65212],\"mapped\",[1589]],[[65213,65216],\"mapped\",[1590]],[[65217,65220],\"mapped\",[1591]],[[65221,65224],\"mapped\",[1592]],[[65225,65228],\"mapped\",[1593]],[[65229,65232],\"mapped\",[1594]],[[65233,65236],\"mapped\",[1601]],[[65237,65240],\"mapped\",[1602]],[[65241,65244],\"mapped\",[1603]],[[65245,65248],\"mapped\",[1604]],[[65249,65252],\"mapped\",[1605]],[[65253,65256],\"mapped\",[1606]],[[65257,65260],\"mapped\",[1607]],[[65261,65262],\"mapped\",[1608]],[[65263,65264],\"mapped\",[1609]],[[65265,65268],\"mapped\",[1610]],[[65269,65270],\"mapped\",[1604,1570]],[[65271,65272],\"mapped\",[1604,1571]],[[65273,65274],\"mapped\",[1604,1573]],[[65275,65276],\"mapped\",[1604,1575]],[[65277,65278],\"disallowed\"],[[65279,65279],\"ignored\"],[[65280,65280],\"disallowed\"],[[65281,65281],\"disallowed_STD3_mapped\",[33]],[[65282,65282],\"disallowed_STD3_mapped\",[34]],[[65283,65283],\"disallowed_STD3_mapped\",[35]],[[65284,65284],\"disallowed_STD3_mapped\",[36]],[[65285,65285],\"disallowed_STD3_mapped\",[37]],[[65286,65286],\"disallowed_STD3_mapped\",[38]],[[65287,65287],\"disallowed_STD3_mapped\",[39]],[[65288,65288],\"disallowed_STD3_mapped\",[40]],[[65289,65289],\"disallowed_STD3_mapped\",[41]],[[65290,65290],\"disallowed_STD3_mapped\",[42]],[[65291,65291],\"disallowed_STD3_mapped\",[43]],[[65292,65292],\"disallowed_STD3_mapped\",[44]],[[65293,65293],\"mapped\",[45]],[[65294,65294],\"mapped\",[46]],[[65295,65295],\"disallowed_STD3_mapped\",[47]],[[65296,65296],\"mapped\",[48]],[[65297,65297],\"mapped\",[49]],[[65298,65298],\"mapped\",[50]],[[65299,65299],\"mapped\",[51]],[[65300,65300],\"mapped\",[52]],[[65301,65301],\"mapped\",[53]],[[65302,65302],\"mapped\",[54]],[[65303,65303],\"mapped\",[55]],[[65304,65304],\"mapped\",[56]],[[65305,65305],\"mapped\",[57]],[[65306,65306],\"disallowed_STD3_mapped\",[58]],[[65307,65307],\"disallowed_STD3_mapped\",[59]],[[65308,65308],\"disallowed_STD3_mapped\",[60]],[[65309,65309],\"disallowed_STD3_mapped\",[61]],[[65310,65310],\"disallowed_STD3_mapped\",[62]],[[65311,65311],\"disallowed_STD3_mapped\",[63]],[[65312,65312],\"disallowed_STD3_mapped\",[64]],[[65313,65313],\"mapped\",[97]],[[65314,65314],\"mapped\",[98]],[[65315,65315],\"mapped\",[99]],[[65316,65316],\"mapped\",[100]],[[65317,65317],\"mapped\",[101]],[[65318,65318],\"mapped\",[102]],[[65319,65319],\"mapped\",[103]],[[65320,65320],\"mapped\",[104]],[[65321,65321],\"mapped\",[105]],[[65322,65322],\"mapped\",[106]],[[65323,65323],\"mapped\",[107]],[[65324,65324],\"mapped\",[108]],[[65325,65325],\"mapped\",[109]],[[65326,65326],\"mapped\",[110]],[[65327,65327],\"mapped\",[111]],[[65328,65328],\"mapped\",[112]],[[65329,65329],\"mapped\",[113]],[[65330,65330],\"mapped\",[114]],[[65331,65331],\"mapped\",[115]],[[65332,65332],\"mapped\",[116]],[[65333,65333],\"mapped\",[117]],[[65334,65334],\"mapped\",[118]],[[65335,65335],\"mapped\",[119]],[[65336,65336],\"mapped\",[120]],[[65337,65337],\"mapped\",[121]],[[65338,65338],\"mapped\",[122]],[[65339,65339],\"disallowed_STD3_mapped\",[91]],[[65340,65340],\"disallowed_STD3_mapped\",[92]],[[65341,65341],\"disallowed_STD3_mapped\",[93]],[[65342,65342],\"disallowed_STD3_mapped\",[94]],[[65343,65343],\"disallowed_STD3_mapped\",[95]],[[65344,65344],\"disallowed_STD3_mapped\",[96]],[[65345,65345],\"mapped\",[97]],[[65346,65346],\"mapped\",[98]],[[65347,65347],\"mapped\",[99]],[[65348,65348],\"mapped\",[100]],[[65349,65349],\"mapped\",[101]],[[65350,65350],\"mapped\",[102]],[[65351,65351],\"mapped\",[103]],[[65352,65352],\"mapped\",[104]],[[65353,65353],\"mapped\",[105]],[[65354,65354],\"mapped\",[106]],[[65355,65355],\"mapped\",[107]],[[65356,65356],\"mapped\",[108]],[[65357,65357],\"mapped\",[109]],[[65358,65358],\"mapped\",[110]],[[65359,65359],\"mapped\",[111]],[[65360,65360],\"mapped\",[112]],[[65361,65361],\"mapped\",[113]],[[65362,65362],\"mapped\",[114]],[[65363,65363],\"mapped\",[115]],[[65364,65364],\"mapped\",[116]],[[65365,65365],\"mapped\",[117]],[[65366,65366],\"mapped\",[118]],[[65367,65367],\"mapped\",[119]],[[65368,65368],\"mapped\",[120]],[[65369,65369],\"mapped\",[121]],[[65370,65370],\"mapped\",[122]],[[65371,65371],\"disallowed_STD3_mapped\",[123]],[[65372,65372],\"disallowed_STD3_mapped\",[124]],[[65373,65373],\"disallowed_STD3_mapped\",[125]],[[65374,65374],\"disallowed_STD3_mapped\",[126]],[[65375,65375],\"mapped\",[10629]],[[65376,65376],\"mapped\",[10630]],[[65377,65377],\"mapped\",[46]],[[65378,65378],\"mapped\",[12300]],[[65379,65379],\"mapped\",[12301]],[[65380,65380],\"mapped\",[12289]],[[65381,65381],\"mapped\",[12539]],[[65382,65382],\"mapped\",[12530]],[[65383,65383],\"mapped\",[12449]],[[65384,65384],\"mapped\",[12451]],[[65385,65385],\"mapped\",[12453]],[[65386,65386],\"mapped\",[12455]],[[65387,65387],\"mapped\",[12457]],[[65388,65388],\"mapped\",[12515]],[[65389,65389],\"mapped\",[12517]],[[65390,65390],\"mapped\",[12519]],[[65391,65391],\"mapped\",[12483]],[[65392,65392],\"mapped\",[12540]],[[65393,65393],\"mapped\",[12450]],[[65394,65394],\"mapped\",[12452]],[[65395,65395],\"mapped\",[12454]],[[65396,65396],\"mapped\",[12456]],[[65397,65397],\"mapped\",[12458]],[[65398,65398],\"mapped\",[12459]],[[65399,65399],\"mapped\",[12461]],[[65400,65400],\"mapped\",[12463]],[[65401,65401],\"mapped\",[12465]],[[65402,65402],\"mapped\",[12467]],[[65403,65403],\"mapped\",[12469]],[[65404,65404],\"mapped\",[12471]],[[65405,65405],\"mapped\",[12473]],[[65406,65406],\"mapped\",[12475]],[[65407,65407],\"mapped\",[12477]],[[65408,65408],\"mapped\",[12479]],[[65409,65409],\"mapped\",[12481]],[[65410,65410],\"mapped\",[12484]],[[65411,65411],\"mapped\",[12486]],[[65412,65412],\"mapped\",[12488]],[[65413,65413],\"mapped\",[12490]],[[65414,65414],\"mapped\",[12491]],[[65415,65415],\"mapped\",[12492]],[[65416,65416],\"mapped\",[12493]],[[65417,65417],\"mapped\",[12494]],[[65418,65418],\"mapped\",[12495]],[[65419,65419],\"mapped\",[12498]],[[65420,65420],\"mapped\",[12501]],[[65421,65421],\"mapped\",[12504]],[[65422,65422],\"mapped\",[12507]],[[65423,65423],\"mapped\",[12510]],[[65424,65424],\"mapped\",[12511]],[[65425,65425],\"mapped\",[12512]],[[65426,65426],\"mapped\",[12513]],[[65427,65427],\"mapped\",[12514]],[[65428,65428],\"mapped\",[12516]],[[65429,65429],\"mapped\",[12518]],[[65430,65430],\"mapped\",[12520]],[[65431,65431],\"mapped\",[12521]],[[65432,65432],\"mapped\",[12522]],[[65433,65433],\"mapped\",[12523]],[[65434,65434],\"mapped\",[12524]],[[65435,65435],\"mapped\",[12525]],[[65436,65436],\"mapped\",[12527]],[[65437,65437],\"mapped\",[12531]],[[65438,65438],\"mapped\",[12441]],[[65439,65439],\"mapped\",[12442]],[[65440,65440],\"disallowed\"],[[65441,65441],\"mapped\",[4352]],[[65442,65442],\"mapped\",[4353]],[[65443,65443],\"mapped\",[4522]],[[65444,65444],\"mapped\",[4354]],[[65445,65445],\"mapped\",[4524]],[[65446,65446],\"mapped\",[4525]],[[65447,65447],\"mapped\",[4355]],[[65448,65448],\"mapped\",[4356]],[[65449,65449],\"mapped\",[4357]],[[65450,65450],\"mapped\",[4528]],[[65451,65451],\"mapped\",[4529]],[[65452,65452],\"mapped\",[4530]],[[65453,65453],\"mapped\",[4531]],[[65454,65454],\"mapped\",[4532]],[[65455,65455],\"mapped\",[4533]],[[65456,65456],\"mapped\",[4378]],[[65457,65457],\"mapped\",[4358]],[[65458,65458],\"mapped\",[4359]],[[65459,65459],\"mapped\",[4360]],[[65460,65460],\"mapped\",[4385]],[[65461,65461],\"mapped\",[4361]],[[65462,65462],\"mapped\",[4362]],[[65463,65463],\"mapped\",[4363]],[[65464,65464],\"mapped\",[4364]],[[65465,65465],\"mapped\",[4365]],[[65466,65466],\"mapped\",[4366]],[[65467,65467],\"mapped\",[4367]],[[65468,65468],\"mapped\",[4368]],[[65469,65469],\"mapped\",[4369]],[[65470,65470],\"mapped\",[4370]],[[65471,65473],\"disallowed\"],[[65474,65474],\"mapped\",[4449]],[[65475,65475],\"mapped\",[4450]],[[65476,65476],\"mapped\",[4451]],[[65477,65477],\"mapped\",[4452]],[[65478,65478],\"mapped\",[4453]],[[65479,65479],\"mapped\",[4454]],[[65480,65481],\"disallowed\"],[[65482,65482],\"mapped\",[4455]],[[65483,65483],\"mapped\",[4456]],[[65484,65484],\"mapped\",[4457]],[[65485,65485],\"mapped\",[4458]],[[65486,65486],\"mapped\",[4459]],[[65487,65487],\"mapped\",[4460]],[[65488,65489],\"disallowed\"],[[65490,65490],\"mapped\",[4461]],[[65491,65491],\"mapped\",[4462]],[[65492,65492],\"mapped\",[4463]],[[65493,65493],\"mapped\",[4464]],[[65494,65494],\"mapped\",[4465]],[[65495,65495],\"mapped\",[4466]],[[65496,65497],\"disallowed\"],[[65498,65498],\"mapped\",[4467]],[[65499,65499],\"mapped\",[4468]],[[65500,65500],\"mapped\",[4469]],[[65501,65503],\"disallowed\"],[[65504,65504],\"mapped\",[162]],[[65505,65505],\"mapped\",[163]],[[65506,65506],\"mapped\",[172]],[[65507,65507],\"disallowed_STD3_mapped\",[32,772]],[[65508,65508],\"mapped\",[166]],[[65509,65509],\"mapped\",[165]],[[65510,65510],\"mapped\",[8361]],[[65511,65511],\"disallowed\"],[[65512,65512],\"mapped\",[9474]],[[65513,65513],\"mapped\",[8592]],[[65514,65514],\"mapped\",[8593]],[[65515,65515],\"mapped\",[8594]],[[65516,65516],\"mapped\",[8595]],[[65517,65517],\"mapped\",[9632]],[[65518,65518],\"mapped\",[9675]],[[65519,65528],\"disallowed\"],[[65529,65531],\"disallowed\"],[[65532,65532],\"disallowed\"],[[65533,65533],\"disallowed\"],[[65534,65535],\"disallowed\"],[[65536,65547],\"valid\"],[[65548,65548],\"disallowed\"],[[65549,65574],\"valid\"],[[65575,65575],\"disallowed\"],[[65576,65594],\"valid\"],[[65595,65595],\"disallowed\"],[[65596,65597],\"valid\"],[[65598,65598],\"disallowed\"],[[65599,65613],\"valid\"],[[65614,65615],\"disallowed\"],[[65616,65629],\"valid\"],[[65630,65663],\"disallowed\"],[[65664,65786],\"valid\"],[[65787,65791],\"disallowed\"],[[65792,65794],\"valid\",[],\"NV8\"],[[65795,65798],\"disallowed\"],[[65799,65843],\"valid\",[],\"NV8\"],[[65844,65846],\"disallowed\"],[[65847,65855],\"valid\",[],\"NV8\"],[[65856,65930],\"valid\",[],\"NV8\"],[[65931,65932],\"valid\",[],\"NV8\"],[[65933,65935],\"disallowed\"],[[65936,65947],\"valid\",[],\"NV8\"],[[65948,65951],\"disallowed\"],[[65952,65952],\"valid\",[],\"NV8\"],[[65953,65999],\"disallowed\"],[[66000,66044],\"valid\",[],\"NV8\"],[[66045,66045],\"valid\"],[[66046,66175],\"disallowed\"],[[66176,66204],\"valid\"],[[66205,66207],\"disallowed\"],[[66208,66256],\"valid\"],[[66257,66271],\"disallowed\"],[[66272,66272],\"valid\"],[[66273,66299],\"valid\",[],\"NV8\"],[[66300,66303],\"disallowed\"],[[66304,66334],\"valid\"],[[66335,66335],\"valid\"],[[66336,66339],\"valid\",[],\"NV8\"],[[66340,66351],\"disallowed\"],[[66352,66368],\"valid\"],[[66369,66369],\"valid\",[],\"NV8\"],[[66370,66377],\"valid\"],[[66378,66378],\"valid\",[],\"NV8\"],[[66379,66383],\"disallowed\"],[[66384,66426],\"valid\"],[[66427,66431],\"disallowed\"],[[66432,66461],\"valid\"],[[66462,66462],\"disallowed\"],[[66463,66463],\"valid\",[],\"NV8\"],[[66464,66499],\"valid\"],[[66500,66503],\"disallowed\"],[[66504,66511],\"valid\"],[[66512,66517],\"valid\",[],\"NV8\"],[[66518,66559],\"disallowed\"],[[66560,66560],\"mapped\",[66600]],[[66561,66561],\"mapped\",[66601]],[[66562,66562],\"mapped\",[66602]],[[66563,66563],\"mapped\",[66603]],[[66564,66564],\"mapped\",[66604]],[[66565,66565],\"mapped\",[66605]],[[66566,66566],\"mapped\",[66606]],[[66567,66567],\"mapped\",[66607]],[[66568,66568],\"mapped\",[66608]],[[66569,66569],\"mapped\",[66609]],[[66570,66570],\"mapped\",[66610]],[[66571,66571],\"mapped\",[66611]],[[66572,66572],\"mapped\",[66612]],[[66573,66573],\"mapped\",[66613]],[[66574,66574],\"mapped\",[66614]],[[66575,66575],\"mapped\",[66615]],[[66576,66576],\"mapped\",[66616]],[[66577,66577],\"mapped\",[66617]],[[66578,66578],\"mapped\",[66618]],[[66579,66579],\"mapped\",[66619]],[[66580,66580],\"mapped\",[66620]],[[66581,66581],\"mapped\",[66621]],[[66582,66582],\"mapped\",[66622]],[[66583,66583],\"mapped\",[66623]],[[66584,66584],\"mapped\",[66624]],[[66585,66585],\"mapped\",[66625]],[[66586,66586],\"mapped\",[66626]],[[66587,66587],\"mapped\",[66627]],[[66588,66588],\"mapped\",[66628]],[[66589,66589],\"mapped\",[66629]],[[66590,66590],\"mapped\",[66630]],[[66591,66591],\"mapped\",[66631]],[[66592,66592],\"mapped\",[66632]],[[66593,66593],\"mapped\",[66633]],[[66594,66594],\"mapped\",[66634]],[[66595,66595],\"mapped\",[66635]],[[66596,66596],\"mapped\",[66636]],[[66597,66597],\"mapped\",[66637]],[[66598,66598],\"mapped\",[66638]],[[66599,66599],\"mapped\",[66639]],[[66600,66637],\"valid\"],[[66638,66717],\"valid\"],[[66718,66719],\"disallowed\"],[[66720,66729],\"valid\"],[[66730,66815],\"disallowed\"],[[66816,66855],\"valid\"],[[66856,66863],\"disallowed\"],[[66864,66915],\"valid\"],[[66916,66926],\"disallowed\"],[[66927,66927],\"valid\",[],\"NV8\"],[[66928,67071],\"disallowed\"],[[67072,67382],\"valid\"],[[67383,67391],\"disallowed\"],[[67392,67413],\"valid\"],[[67414,67423],\"disallowed\"],[[67424,67431],\"valid\"],[[67432,67583],\"disallowed\"],[[67584,67589],\"valid\"],[[67590,67591],\"disallowed\"],[[67592,67592],\"valid\"],[[67593,67593],\"disallowed\"],[[67594,67637],\"valid\"],[[67638,67638],\"disallowed\"],[[67639,67640],\"valid\"],[[67641,67643],\"disallowed\"],[[67644,67644],\"valid\"],[[67645,67646],\"disallowed\"],[[67647,67647],\"valid\"],[[67648,67669],\"valid\"],[[67670,67670],\"disallowed\"],[[67671,67679],\"valid\",[],\"NV8\"],[[67680,67702],\"valid\"],[[67703,67711],\"valid\",[],\"NV8\"],[[67712,67742],\"valid\"],[[67743,67750],\"disallowed\"],[[67751,67759],\"valid\",[],\"NV8\"],[[67760,67807],\"disallowed\"],[[67808,67826],\"valid\"],[[67827,67827],\"disallowed\"],[[67828,67829],\"valid\"],[[67830,67834],\"disallowed\"],[[67835,67839],\"valid\",[],\"NV8\"],[[67840,67861],\"valid\"],[[67862,67865],\"valid\",[],\"NV8\"],[[67866,67867],\"valid\",[],\"NV8\"],[[67868,67870],\"disallowed\"],[[67871,67871],\"valid\",[],\"NV8\"],[[67872,67897],\"valid\"],[[67898,67902],\"disallowed\"],[[67903,67903],\"valid\",[],\"NV8\"],[[67904,67967],\"disallowed\"],[[67968,68023],\"valid\"],[[68024,68027],\"disallowed\"],[[68028,68029],\"valid\",[],\"NV8\"],[[68030,68031],\"valid\"],[[68032,68047],\"valid\",[],\"NV8\"],[[68048,68049],\"disallowed\"],[[68050,68095],\"valid\",[],\"NV8\"],[[68096,68099],\"valid\"],[[68100,68100],\"disallowed\"],[[68101,68102],\"valid\"],[[68103,68107],\"disallowed\"],[[68108,68115],\"valid\"],[[68116,68116],\"disallowed\"],[[68117,68119],\"valid\"],[[68120,68120],\"disallowed\"],[[68121,68147],\"valid\"],[[68148,68151],\"disallowed\"],[[68152,68154],\"valid\"],[[68155,68158],\"disallowed\"],[[68159,68159],\"valid\"],[[68160,68167],\"valid\",[],\"NV8\"],[[68168,68175],\"disallowed\"],[[68176,68184],\"valid\",[],\"NV8\"],[[68185,68191],\"disallowed\"],[[68192,68220],\"valid\"],[[68221,68223],\"valid\",[],\"NV8\"],[[68224,68252],\"valid\"],[[68253,68255],\"valid\",[],\"NV8\"],[[68256,68287],\"disallowed\"],[[68288,68295],\"valid\"],[[68296,68296],\"valid\",[],\"NV8\"],[[68297,68326],\"valid\"],[[68327,68330],\"disallowed\"],[[68331,68342],\"valid\",[],\"NV8\"],[[68343,68351],\"disallowed\"],[[68352,68405],\"valid\"],[[68406,68408],\"disallowed\"],[[68409,68415],\"valid\",[],\"NV8\"],[[68416,68437],\"valid\"],[[68438,68439],\"disallowed\"],[[68440,68447],\"valid\",[],\"NV8\"],[[68448,68466],\"valid\"],[[68467,68471],\"disallowed\"],[[68472,68479],\"valid\",[],\"NV8\"],[[68480,68497],\"valid\"],[[68498,68504],\"disallowed\"],[[68505,68508],\"valid\",[],\"NV8\"],[[68509,68520],\"disallowed\"],[[68521,68527],\"valid\",[],\"NV8\"],[[68528,68607],\"disallowed\"],[[68608,68680],\"valid\"],[[68681,68735],\"disallowed\"],[[68736,68736],\"mapped\",[68800]],[[68737,68737],\"mapped\",[68801]],[[68738,68738],\"mapped\",[68802]],[[68739,68739],\"mapped\",[68803]],[[68740,68740],\"mapped\",[68804]],[[68741,68741],\"mapped\",[68805]],[[68742,68742],\"mapped\",[68806]],[[68743,68743],\"mapped\",[68807]],[[68744,68744],\"mapped\",[68808]],[[68745,68745],\"mapped\",[68809]],[[68746,68746],\"mapped\",[68810]],[[68747,68747],\"mapped\",[68811]],[[68748,68748],\"mapped\",[68812]],[[68749,68749],\"mapped\",[68813]],[[68750,68750],\"mapped\",[68814]],[[68751,68751],\"mapped\",[68815]],[[68752,68752],\"mapped\",[68816]],[[68753,68753],\"mapped\",[68817]],[[68754,68754],\"mapped\",[68818]],[[68755,68755],\"mapped\",[68819]],[[68756,68756],\"mapped\",[68820]],[[68757,68757],\"mapped\",[68821]],[[68758,68758],\"mapped\",[68822]],[[68759,68759],\"mapped\",[68823]],[[68760,68760],\"mapped\",[68824]],[[68761,68761],\"mapped\",[68825]],[[68762,68762],\"mapped\",[68826]],[[68763,68763],\"mapped\",[68827]],[[68764,68764],\"mapped\",[68828]],[[68765,68765],\"mapped\",[68829]],[[68766,68766],\"mapped\",[68830]],[[68767,68767],\"mapped\",[68831]],[[68768,68768],\"mapped\",[68832]],[[68769,68769],\"mapped\",[68833]],[[68770,68770],\"mapped\",[68834]],[[68771,68771],\"mapped\",[68835]],[[68772,68772],\"mapped\",[68836]],[[68773,68773],\"mapped\",[68837]],[[68774,68774],\"mapped\",[68838]],[[68775,68775],\"mapped\",[68839]],[[68776,68776],\"mapped\",[68840]],[[68777,68777],\"mapped\",[68841]],[[68778,68778],\"mapped\",[68842]],[[68779,68779],\"mapped\",[68843]],[[68780,68780],\"mapped\",[68844]],[[68781,68781],\"mapped\",[68845]],[[68782,68782],\"mapped\",[68846]],[[68783,68783],\"mapped\",[68847]],[[68784,68784],\"mapped\",[68848]],[[68785,68785],\"mapped\",[68849]],[[68786,68786],\"mapped\",[68850]],[[68787,68799],\"disallowed\"],[[68800,68850],\"valid\"],[[68851,68857],\"disallowed\"],[[68858,68863],\"valid\",[],\"NV8\"],[[68864,69215],\"disallowed\"],[[69216,69246],\"valid\",[],\"NV8\"],[[69247,69631],\"disallowed\"],[[69632,69702],\"valid\"],[[69703,69709],\"valid\",[],\"NV8\"],[[69710,69713],\"disallowed\"],[[69714,69733],\"valid\",[],\"NV8\"],[[69734,69743],\"valid\"],[[69744,69758],\"disallowed\"],[[69759,69759],\"valid\"],[[69760,69818],\"valid\"],[[69819,69820],\"valid\",[],\"NV8\"],[[69821,69821],\"disallowed\"],[[69822,69825],\"valid\",[],\"NV8\"],[[69826,69839],\"disallowed\"],[[69840,69864],\"valid\"],[[69865,69871],\"disallowed\"],[[69872,69881],\"valid\"],[[69882,69887],\"disallowed\"],[[69888,69940],\"valid\"],[[69941,69941],\"disallowed\"],[[69942,69951],\"valid\"],[[69952,69955],\"valid\",[],\"NV8\"],[[69956,69967],\"disallowed\"],[[69968,70003],\"valid\"],[[70004,70005],\"valid\",[],\"NV8\"],[[70006,70006],\"valid\"],[[70007,70015],\"disallowed\"],[[70016,70084],\"valid\"],[[70085,70088],\"valid\",[],\"NV8\"],[[70089,70089],\"valid\",[],\"NV8\"],[[70090,70092],\"valid\"],[[70093,70093],\"valid\",[],\"NV8\"],[[70094,70095],\"disallowed\"],[[70096,70105],\"valid\"],[[70106,70106],\"valid\"],[[70107,70107],\"valid\",[],\"NV8\"],[[70108,70108],\"valid\"],[[70109,70111],\"valid\",[],\"NV8\"],[[70112,70112],\"disallowed\"],[[70113,70132],\"valid\",[],\"NV8\"],[[70133,70143],\"disallowed\"],[[70144,70161],\"valid\"],[[70162,70162],\"disallowed\"],[[70163,70199],\"valid\"],[[70200,70205],\"valid\",[],\"NV8\"],[[70206,70271],\"disallowed\"],[[70272,70278],\"valid\"],[[70279,70279],\"disallowed\"],[[70280,70280],\"valid\"],[[70281,70281],\"disallowed\"],[[70282,70285],\"valid\"],[[70286,70286],\"disallowed\"],[[70287,70301],\"valid\"],[[70302,70302],\"disallowed\"],[[70303,70312],\"valid\"],[[70313,70313],\"valid\",[],\"NV8\"],[[70314,70319],\"disallowed\"],[[70320,70378],\"valid\"],[[70379,70383],\"disallowed\"],[[70384,70393],\"valid\"],[[70394,70399],\"disallowed\"],[[70400,70400],\"valid\"],[[70401,70403],\"valid\"],[[70404,70404],\"disallowed\"],[[70405,70412],\"valid\"],[[70413,70414],\"disallowed\"],[[70415,70416],\"valid\"],[[70417,70418],\"disallowed\"],[[70419,70440],\"valid\"],[[70441,70441],\"disallowed\"],[[70442,70448],\"valid\"],[[70449,70449],\"disallowed\"],[[70450,70451],\"valid\"],[[70452,70452],\"disallowed\"],[[70453,70457],\"valid\"],[[70458,70459],\"disallowed\"],[[70460,70468],\"valid\"],[[70469,70470],\"disallowed\"],[[70471,70472],\"valid\"],[[70473,70474],\"disallowed\"],[[70475,70477],\"valid\"],[[70478,70479],\"disallowed\"],[[70480,70480],\"valid\"],[[70481,70486],\"disallowed\"],[[70487,70487],\"valid\"],[[70488,70492],\"disallowed\"],[[70493,70499],\"valid\"],[[70500,70501],\"disallowed\"],[[70502,70508],\"valid\"],[[70509,70511],\"disallowed\"],[[70512,70516],\"valid\"],[[70517,70783],\"disallowed\"],[[70784,70853],\"valid\"],[[70854,70854],\"valid\",[],\"NV8\"],[[70855,70855],\"valid\"],[[70856,70863],\"disallowed\"],[[70864,70873],\"valid\"],[[70874,71039],\"disallowed\"],[[71040,71093],\"valid\"],[[71094,71095],\"disallowed\"],[[71096,71104],\"valid\"],[[71105,71113],\"valid\",[],\"NV8\"],[[71114,71127],\"valid\",[],\"NV8\"],[[71128,71133],\"valid\"],[[71134,71167],\"disallowed\"],[[71168,71232],\"valid\"],[[71233,71235],\"valid\",[],\"NV8\"],[[71236,71236],\"valid\"],[[71237,71247],\"disallowed\"],[[71248,71257],\"valid\"],[[71258,71295],\"disallowed\"],[[71296,71351],\"valid\"],[[71352,71359],\"disallowed\"],[[71360,71369],\"valid\"],[[71370,71423],\"disallowed\"],[[71424,71449],\"valid\"],[[71450,71452],\"disallowed\"],[[71453,71467],\"valid\"],[[71468,71471],\"disallowed\"],[[71472,71481],\"valid\"],[[71482,71487],\"valid\",[],\"NV8\"],[[71488,71839],\"disallowed\"],[[71840,71840],\"mapped\",[71872]],[[71841,71841],\"mapped\",[71873]],[[71842,71842],\"mapped\",[71874]],[[71843,71843],\"mapped\",[71875]],[[71844,71844],\"mapped\",[71876]],[[71845,71845],\"mapped\",[71877]],[[71846,71846],\"mapped\",[71878]],[[71847,71847],\"mapped\",[71879]],[[71848,71848],\"mapped\",[71880]],[[71849,71849],\"mapped\",[71881]],[[71850,71850],\"mapped\",[71882]],[[71851,71851],\"mapped\",[71883]],[[71852,71852],\"mapped\",[71884]],[[71853,71853],\"mapped\",[71885]],[[71854,71854],\"mapped\",[71886]],[[71855,71855],\"mapped\",[71887]],[[71856,71856],\"mapped\",[71888]],[[71857,71857],\"mapped\",[71889]],[[71858,71858],\"mapped\",[71890]],[[71859,71859],\"mapped\",[71891]],[[71860,71860],\"mapped\",[71892]],[[71861,71861],\"mapped\",[71893]],[[71862,71862],\"mapped\",[71894]],[[71863,71863],\"mapped\",[71895]],[[71864,71864],\"mapped\",[71896]],[[71865,71865],\"mapped\",[71897]],[[71866,71866],\"mapped\",[71898]],[[71867,71867],\"mapped\",[71899]],[[71868,71868],\"mapped\",[71900]],[[71869,71869],\"mapped\",[71901]],[[71870,71870],\"mapped\",[71902]],[[71871,71871],\"mapped\",[71903]],[[71872,71913],\"valid\"],[[71914,71922],\"valid\",[],\"NV8\"],[[71923,71934],\"disallowed\"],[[71935,71935],\"valid\"],[[71936,72383],\"disallowed\"],[[72384,72440],\"valid\"],[[72441,73727],\"disallowed\"],[[73728,74606],\"valid\"],[[74607,74648],\"valid\"],[[74649,74649],\"valid\"],[[74650,74751],\"disallowed\"],[[74752,74850],\"valid\",[],\"NV8\"],[[74851,74862],\"valid\",[],\"NV8\"],[[74863,74863],\"disallowed\"],[[74864,74867],\"valid\",[],\"NV8\"],[[74868,74868],\"valid\",[],\"NV8\"],[[74869,74879],\"disallowed\"],[[74880,75075],\"valid\"],[[75076,77823],\"disallowed\"],[[77824,78894],\"valid\"],[[78895,82943],\"disallowed\"],[[82944,83526],\"valid\"],[[83527,92159],\"disallowed\"],[[92160,92728],\"valid\"],[[92729,92735],\"disallowed\"],[[92736,92766],\"valid\"],[[92767,92767],\"disallowed\"],[[92768,92777],\"valid\"],[[92778,92781],\"disallowed\"],[[92782,92783],\"valid\",[],\"NV8\"],[[92784,92879],\"disallowed\"],[[92880,92909],\"valid\"],[[92910,92911],\"disallowed\"],[[92912,92916],\"valid\"],[[92917,92917],\"valid\",[],\"NV8\"],[[92918,92927],\"disallowed\"],[[92928,92982],\"valid\"],[[92983,92991],\"valid\",[],\"NV8\"],[[92992,92995],\"valid\"],[[92996,92997],\"valid\",[],\"NV8\"],[[92998,93007],\"disallowed\"],[[93008,93017],\"valid\"],[[93018,93018],\"disallowed\"],[[93019,93025],\"valid\",[],\"NV8\"],[[93026,93026],\"disallowed\"],[[93027,93047],\"valid\"],[[93048,93052],\"disallowed\"],[[93053,93071],\"valid\"],[[93072,93951],\"disallowed\"],[[93952,94020],\"valid\"],[[94021,94031],\"disallowed\"],[[94032,94078],\"valid\"],[[94079,94094],\"disallowed\"],[[94095,94111],\"valid\"],[[94112,110591],\"disallowed\"],[[110592,110593],\"valid\"],[[110594,113663],\"disallowed\"],[[113664,113770],\"valid\"],[[113771,113775],\"disallowed\"],[[113776,113788],\"valid\"],[[113789,113791],\"disallowed\"],[[113792,113800],\"valid\"],[[113801,113807],\"disallowed\"],[[113808,113817],\"valid\"],[[113818,113819],\"disallowed\"],[[113820,113820],\"valid\",[],\"NV8\"],[[113821,113822],\"valid\"],[[113823,113823],\"valid\",[],\"NV8\"],[[113824,113827],\"ignored\"],[[113828,118783],\"disallowed\"],[[118784,119029],\"valid\",[],\"NV8\"],[[119030,119039],\"disallowed\"],[[119040,119078],\"valid\",[],\"NV8\"],[[119079,119080],\"disallowed\"],[[119081,119081],\"valid\",[],\"NV8\"],[[119082,119133],\"valid\",[],\"NV8\"],[[119134,119134],\"mapped\",[119127,119141]],[[119135,119135],\"mapped\",[119128,119141]],[[119136,119136],\"mapped\",[119128,119141,119150]],[[119137,119137],\"mapped\",[119128,119141,119151]],[[119138,119138],\"mapped\",[119128,119141,119152]],[[119139,119139],\"mapped\",[119128,119141,119153]],[[119140,119140],\"mapped\",[119128,119141,119154]],[[119141,119154],\"valid\",[],\"NV8\"],[[119155,119162],\"disallowed\"],[[119163,119226],\"valid\",[],\"NV8\"],[[119227,119227],\"mapped\",[119225,119141]],[[119228,119228],\"mapped\",[119226,119141]],[[119229,119229],\"mapped\",[119225,119141,119150]],[[119230,119230],\"mapped\",[119226,119141,119150]],[[119231,119231],\"mapped\",[119225,119141,119151]],[[119232,119232],\"mapped\",[119226,119141,119151]],[[119233,119261],\"valid\",[],\"NV8\"],[[119262,119272],\"valid\",[],\"NV8\"],[[119273,119295],\"disallowed\"],[[119296,119365],\"valid\",[],\"NV8\"],[[119366,119551],\"disallowed\"],[[119552,119638],\"valid\",[],\"NV8\"],[[119639,119647],\"disallowed\"],[[119648,119665],\"valid\",[],\"NV8\"],[[119666,119807],\"disallowed\"],[[119808,119808],\"mapped\",[97]],[[119809,119809],\"mapped\",[98]],[[119810,119810],\"mapped\",[99]],[[119811,119811],\"mapped\",[100]],[[119812,119812],\"mapped\",[101]],[[119813,119813],\"mapped\",[102]],[[119814,119814],\"mapped\",[103]],[[119815,119815],\"mapped\",[104]],[[119816,119816],\"mapped\",[105]],[[119817,119817],\"mapped\",[106]],[[119818,119818],\"mapped\",[107]],[[119819,119819],\"mapped\",[108]],[[119820,119820],\"mapped\",[109]],[[119821,119821],\"mapped\",[110]],[[119822,119822],\"mapped\",[111]],[[119823,119823],\"mapped\",[112]],[[119824,119824],\"mapped\",[113]],[[119825,119825],\"mapped\",[114]],[[119826,119826],\"mapped\",[115]],[[119827,119827],\"mapped\",[116]],[[119828,119828],\"mapped\",[117]],[[119829,119829],\"mapped\",[118]],[[119830,119830],\"mapped\",[119]],[[119831,119831],\"mapped\",[120]],[[119832,119832],\"mapped\",[121]],[[119833,119833],\"mapped\",[122]],[[119834,119834],\"mapped\",[97]],[[119835,119835],\"mapped\",[98]],[[119836,119836],\"mapped\",[99]],[[119837,119837],\"mapped\",[100]],[[119838,119838],\"mapped\",[101]],[[119839,119839],\"mapped\",[102]],[[119840,119840],\"mapped\",[103]],[[119841,119841],\"mapped\",[104]],[[119842,119842],\"mapped\",[105]],[[119843,119843],\"mapped\",[106]],[[119844,119844],\"mapped\",[107]],[[119845,119845],\"mapped\",[108]],[[119846,119846],\"mapped\",[109]],[[119847,119847],\"mapped\",[110]],[[119848,119848],\"mapped\",[111]],[[119849,119849],\"mapped\",[112]],[[119850,119850],\"mapped\",[113]],[[119851,119851],\"mapped\",[114]],[[119852,119852],\"mapped\",[115]],[[119853,119853],\"mapped\",[116]],[[119854,119854],\"mapped\",[117]],[[119855,119855],\"mapped\",[118]],[[119856,119856],\"mapped\",[119]],[[119857,119857],\"mapped\",[120]],[[119858,119858],\"mapped\",[121]],[[119859,119859],\"mapped\",[122]],[[119860,119860],\"mapped\",[97]],[[119861,119861],\"mapped\",[98]],[[119862,119862],\"mapped\",[99]],[[119863,119863],\"mapped\",[100]],[[119864,119864],\"mapped\",[101]],[[119865,119865],\"mapped\",[102]],[[119866,119866],\"mapped\",[103]],[[119867,119867],\"mapped\",[104]],[[119868,119868],\"mapped\",[105]],[[119869,119869],\"mapped\",[106]],[[119870,119870],\"mapped\",[107]],[[119871,119871],\"mapped\",[108]],[[119872,119872],\"mapped\",[109]],[[119873,119873],\"mapped\",[110]],[[119874,119874],\"mapped\",[111]],[[119875,119875],\"mapped\",[112]],[[119876,119876],\"mapped\",[113]],[[119877,119877],\"mapped\",[114]],[[119878,119878],\"mapped\",[115]],[[119879,119879],\"mapped\",[116]],[[119880,119880],\"mapped\",[117]],[[119881,119881],\"mapped\",[118]],[[119882,119882],\"mapped\",[119]],[[119883,119883],\"mapped\",[120]],[[119884,119884],\"mapped\",[121]],[[119885,119885],\"mapped\",[122]],[[119886,119886],\"mapped\",[97]],[[119887,119887],\"mapped\",[98]],[[119888,119888],\"mapped\",[99]],[[119889,119889],\"mapped\",[100]],[[119890,119890],\"mapped\",[101]],[[119891,119891],\"mapped\",[102]],[[119892,119892],\"mapped\",[103]],[[119893,119893],\"disallowed\"],[[119894,119894],\"mapped\",[105]],[[119895,119895],\"mapped\",[106]],[[119896,119896],\"mapped\",[107]],[[119897,119897],\"mapped\",[108]],[[119898,119898],\"mapped\",[109]],[[119899,119899],\"mapped\",[110]],[[119900,119900],\"mapped\",[111]],[[119901,119901],\"mapped\",[112]],[[119902,119902],\"mapped\",[113]],[[119903,119903],\"mapped\",[114]],[[119904,119904],\"mapped\",[115]],[[119905,119905],\"mapped\",[116]],[[119906,119906],\"mapped\",[117]],[[119907,119907],\"mapped\",[118]],[[119908,119908],\"mapped\",[119]],[[119909,119909],\"mapped\",[120]],[[119910,119910],\"mapped\",[121]],[[119911,119911],\"mapped\",[122]],[[119912,119912],\"mapped\",[97]],[[119913,119913],\"mapped\",[98]],[[119914,119914],\"mapped\",[99]],[[119915,119915],\"mapped\",[100]],[[119916,119916],\"mapped\",[101]],[[119917,119917],\"mapped\",[102]],[[119918,119918],\"mapped\",[103]],[[119919,119919],\"mapped\",[104]],[[119920,119920],\"mapped\",[105]],[[119921,119921],\"mapped\",[106]],[[119922,119922],\"mapped\",[107]],[[119923,119923],\"mapped\",[108]],[[119924,119924],\"mapped\",[109]],[[119925,119925],\"mapped\",[110]],[[119926,119926],\"mapped\",[111]],[[119927,119927],\"mapped\",[112]],[[119928,119928],\"mapped\",[113]],[[119929,119929],\"mapped\",[114]],[[119930,119930],\"mapped\",[115]],[[119931,119931],\"mapped\",[116]],[[119932,119932],\"mapped\",[117]],[[119933,119933],\"mapped\",[118]],[[119934,119934],\"mapped\",[119]],[[119935,119935],\"mapped\",[120]],[[119936,119936],\"mapped\",[121]],[[119937,119937],\"mapped\",[122]],[[119938,119938],\"mapped\",[97]],[[119939,119939],\"mapped\",[98]],[[119940,119940],\"mapped\",[99]],[[119941,119941],\"mapped\",[100]],[[119942,119942],\"mapped\",[101]],[[119943,119943],\"mapped\",[102]],[[119944,119944],\"mapped\",[103]],[[119945,119945],\"mapped\",[104]],[[119946,119946],\"mapped\",[105]],[[119947,119947],\"mapped\",[106]],[[119948,119948],\"mapped\",[107]],[[119949,119949],\"mapped\",[108]],[[119950,119950],\"mapped\",[109]],[[119951,119951],\"mapped\",[110]],[[119952,119952],\"mapped\",[111]],[[119953,119953],\"mapped\",[112]],[[119954,119954],\"mapped\",[113]],[[119955,119955],\"mapped\",[114]],[[119956,119956],\"mapped\",[115]],[[119957,119957],\"mapped\",[116]],[[119958,119958],\"mapped\",[117]],[[119959,119959],\"mapped\",[118]],[[119960,119960],\"mapped\",[119]],[[119961,119961],\"mapped\",[120]],[[119962,119962],\"mapped\",[121]],[[119963,119963],\"mapped\",[122]],[[119964,119964],\"mapped\",[97]],[[119965,119965],\"disallowed\"],[[119966,119966],\"mapped\",[99]],[[119967,119967],\"mapped\",[100]],[[119968,119969],\"disallowed\"],[[119970,119970],\"mapped\",[103]],[[119971,119972],\"disallowed\"],[[119973,119973],\"mapped\",[106]],[[119974,119974],\"mapped\",[107]],[[119975,119976],\"disallowed\"],[[119977,119977],\"mapped\",[110]],[[119978,119978],\"mapped\",[111]],[[119979,119979],\"mapped\",[112]],[[119980,119980],\"mapped\",[113]],[[119981,119981],\"disallowed\"],[[119982,119982],\"mapped\",[115]],[[119983,119983],\"mapped\",[116]],[[119984,119984],\"mapped\",[117]],[[119985,119985],\"mapped\",[118]],[[119986,119986],\"mapped\",[119]],[[119987,119987],\"mapped\",[120]],[[119988,119988],\"mapped\",[121]],[[119989,119989],\"mapped\",[122]],[[119990,119990],\"mapped\",[97]],[[119991,119991],\"mapped\",[98]],[[119992,119992],\"mapped\",[99]],[[119993,119993],\"mapped\",[100]],[[119994,119994],\"disallowed\"],[[119995,119995],\"mapped\",[102]],[[119996,119996],\"disallowed\"],[[119997,119997],\"mapped\",[104]],[[119998,119998],\"mapped\",[105]],[[119999,119999],\"mapped\",[106]],[[120000,120000],\"mapped\",[107]],[[120001,120001],\"mapped\",[108]],[[120002,120002],\"mapped\",[109]],[[120003,120003],\"mapped\",[110]],[[120004,120004],\"disallowed\"],[[120005,120005],\"mapped\",[112]],[[120006,120006],\"mapped\",[113]],[[120007,120007],\"mapped\",[114]],[[120008,120008],\"mapped\",[115]],[[120009,120009],\"mapped\",[116]],[[120010,120010],\"mapped\",[117]],[[120011,120011],\"mapped\",[118]],[[120012,120012],\"mapped\",[119]],[[120013,120013],\"mapped\",[120]],[[120014,120014],\"mapped\",[121]],[[120015,120015],\"mapped\",[122]],[[120016,120016],\"mapped\",[97]],[[120017,120017],\"mapped\",[98]],[[120018,120018],\"mapped\",[99]],[[120019,120019],\"mapped\",[100]],[[120020,120020],\"mapped\",[101]],[[120021,120021],\"mapped\",[102]],[[120022,120022],\"mapped\",[103]],[[120023,120023],\"mapped\",[104]],[[120024,120024],\"mapped\",[105]],[[120025,120025],\"mapped\",[106]],[[120026,120026],\"mapped\",[107]],[[120027,120027],\"mapped\",[108]],[[120028,120028],\"mapped\",[109]],[[120029,120029],\"mapped\",[110]],[[120030,120030],\"mapped\",[111]],[[120031,120031],\"mapped\",[112]],[[120032,120032],\"mapped\",[113]],[[120033,120033],\"mapped\",[114]],[[120034,120034],\"mapped\",[115]],[[120035,120035],\"mapped\",[116]],[[120036,120036],\"mapped\",[117]],[[120037,120037],\"mapped\",[118]],[[120038,120038],\"mapped\",[119]],[[120039,120039],\"mapped\",[120]],[[120040,120040],\"mapped\",[121]],[[120041,120041],\"mapped\",[122]],[[120042,120042],\"mapped\",[97]],[[120043,120043],\"mapped\",[98]],[[120044,120044],\"mapped\",[99]],[[120045,120045],\"mapped\",[100]],[[120046,120046],\"mapped\",[101]],[[120047,120047],\"mapped\",[102]],[[120048,120048],\"mapped\",[103]],[[120049,120049],\"mapped\",[104]],[[120050,120050],\"mapped\",[105]],[[120051,120051],\"mapped\",[106]],[[120052,120052],\"mapped\",[107]],[[120053,120053],\"mapped\",[108]],[[120054,120054],\"mapped\",[109]],[[120055,120055],\"mapped\",[110]],[[120056,120056],\"mapped\",[111]],[[120057,120057],\"mapped\",[112]],[[120058,120058],\"mapped\",[113]],[[120059,120059],\"mapped\",[114]],[[120060,120060],\"mapped\",[115]],[[120061,120061],\"mapped\",[116]],[[120062,120062],\"mapped\",[117]],[[120063,120063],\"mapped\",[118]],[[120064,120064],\"mapped\",[119]],[[120065,120065],\"mapped\",[120]],[[120066,120066],\"mapped\",[121]],[[120067,120067],\"mapped\",[122]],[[120068,120068],\"mapped\",[97]],[[120069,120069],\"mapped\",[98]],[[120070,120070],\"disallowed\"],[[120071,120071],\"mapped\",[100]],[[120072,120072],\"mapped\",[101]],[[120073,120073],\"mapped\",[102]],[[120074,120074],\"mapped\",[103]],[[120075,120076],\"disallowed\"],[[120077,120077],\"mapped\",[106]],[[120078,120078],\"mapped\",[107]],[[120079,120079],\"mapped\",[108]],[[120080,120080],\"mapped\",[109]],[[120081,120081],\"mapped\",[110]],[[120082,120082],\"mapped\",[111]],[[120083,120083],\"mapped\",[112]],[[120084,120084],\"mapped\",[113]],[[120085,120085],\"disallowed\"],[[120086,120086],\"mapped\",[115]],[[120087,120087],\"mapped\",[116]],[[120088,120088],\"mapped\",[117]],[[120089,120089],\"mapped\",[118]],[[120090,120090],\"mapped\",[119]],[[120091,120091],\"mapped\",[120]],[[120092,120092],\"mapped\",[121]],[[120093,120093],\"disallowed\"],[[120094,120094],\"mapped\",[97]],[[120095,120095],\"mapped\",[98]],[[120096,120096],\"mapped\",[99]],[[120097,120097],\"mapped\",[100]],[[120098,120098],\"mapped\",[101]],[[120099,120099],\"mapped\",[102]],[[120100,120100],\"mapped\",[103]],[[120101,120101],\"mapped\",[104]],[[120102,120102],\"mapped\",[105]],[[120103,120103],\"mapped\",[106]],[[120104,120104],\"mapped\",[107]],[[120105,120105],\"mapped\",[108]],[[120106,120106],\"mapped\",[109]],[[120107,120107],\"mapped\",[110]],[[120108,120108],\"mapped\",[111]],[[120109,120109],\"mapped\",[112]],[[120110,120110],\"mapped\",[113]],[[120111,120111],\"mapped\",[114]],[[120112,120112],\"mapped\",[115]],[[120113,120113],\"mapped\",[116]],[[120114,120114],\"mapped\",[117]],[[120115,120115],\"mapped\",[118]],[[120116,120116],\"mapped\",[119]],[[120117,120117],\"mapped\",[120]],[[120118,120118],\"mapped\",[121]],[[120119,120119],\"mapped\",[122]],[[120120,120120],\"mapped\",[97]],[[120121,120121],\"mapped\",[98]],[[120122,120122],\"disallowed\"],[[120123,120123],\"mapped\",[100]],[[120124,120124],\"mapped\",[101]],[[120125,120125],\"mapped\",[102]],[[120126,120126],\"mapped\",[103]],[[120127,120127],\"disallowed\"],[[120128,120128],\"mapped\",[105]],[[120129,120129],\"mapped\",[106]],[[120130,120130],\"mapped\",[107]],[[120131,120131],\"mapped\",[108]],[[120132,120132],\"mapped\",[109]],[[120133,120133],\"disallowed\"],[[120134,120134],\"mapped\",[111]],[[120135,120137],\"disallowed\"],[[120138,120138],\"mapped\",[115]],[[120139,120139],\"mapped\",[116]],[[120140,120140],\"mapped\",[117]],[[120141,120141],\"mapped\",[118]],[[120142,120142],\"mapped\",[119]],[[120143,120143],\"mapped\",[120]],[[120144,120144],\"mapped\",[121]],[[120145,120145],\"disallowed\"],[[120146,120146],\"mapped\",[97]],[[120147,120147],\"mapped\",[98]],[[120148,120148],\"mapped\",[99]],[[120149,120149],\"mapped\",[100]],[[120150,120150],\"mapped\",[101]],[[120151,120151],\"mapped\",[102]],[[120152,120152],\"mapped\",[103]],[[120153,120153],\"mapped\",[104]],[[120154,120154],\"mapped\",[105]],[[120155,120155],\"mapped\",[106]],[[120156,120156],\"mapped\",[107]],[[120157,120157],\"mapped\",[108]],[[120158,120158],\"mapped\",[109]],[[120159,120159],\"mapped\",[110]],[[120160,120160],\"mapped\",[111]],[[120161,120161],\"mapped\",[112]],[[120162,120162],\"mapped\",[113]],[[120163,120163],\"mapped\",[114]],[[120164,120164],\"mapped\",[115]],[[120165,120165],\"mapped\",[116]],[[120166,120166],\"mapped\",[117]],[[120167,120167],\"mapped\",[118]],[[120168,120168],\"mapped\",[119]],[[120169,120169],\"mapped\",[120]],[[120170,120170],\"mapped\",[121]],[[120171,120171],\"mapped\",[122]],[[120172,120172],\"mapped\",[97]],[[120173,120173],\"mapped\",[98]],[[120174,120174],\"mapped\",[99]],[[120175,120175],\"mapped\",[100]],[[120176,120176],\"mapped\",[101]],[[120177,120177],\"mapped\",[102]],[[120178,120178],\"mapped\",[103]],[[120179,120179],\"mapped\",[104]],[[120180,120180],\"mapped\",[105]],[[120181,120181],\"mapped\",[106]],[[120182,120182],\"mapped\",[107]],[[120183,120183],\"mapped\",[108]],[[120184,120184],\"mapped\",[109]],[[120185,120185],\"mapped\",[110]],[[120186,120186],\"mapped\",[111]],[[120187,120187],\"mapped\",[112]],[[120188,120188],\"mapped\",[113]],[[120189,120189],\"mapped\",[114]],[[120190,120190],\"mapped\",[115]],[[120191,120191],\"mapped\",[116]],[[120192,120192],\"mapped\",[117]],[[120193,120193],\"mapped\",[118]],[[120194,120194],\"mapped\",[119]],[[120195,120195],\"mapped\",[120]],[[120196,120196],\"mapped\",[121]],[[120197,120197],\"mapped\",[122]],[[120198,120198],\"mapped\",[97]],[[120199,120199],\"mapped\",[98]],[[120200,120200],\"mapped\",[99]],[[120201,120201],\"mapped\",[100]],[[120202,120202],\"mapped\",[101]],[[120203,120203],\"mapped\",[102]],[[120204,120204],\"mapped\",[103]],[[120205,120205],\"mapped\",[104]],[[120206,120206],\"mapped\",[105]],[[120207,120207],\"mapped\",[106]],[[120208,120208],\"mapped\",[107]],[[120209,120209],\"mapped\",[108]],[[120210,120210],\"mapped\",[109]],[[120211,120211],\"mapped\",[110]],[[120212,120212],\"mapped\",[111]],[[120213,120213],\"mapped\",[112]],[[120214,120214],\"mapped\",[113]],[[120215,120215],\"mapped\",[114]],[[120216,120216],\"mapped\",[115]],[[120217,120217],\"mapped\",[116]],[[120218,120218],\"mapped\",[117]],[[120219,120219],\"mapped\",[118]],[[120220,120220],\"mapped\",[119]],[[120221,120221],\"mapped\",[120]],[[120222,120222],\"mapped\",[121]],[[120223,120223],\"mapped\",[122]],[[120224,120224],\"mapped\",[97]],[[120225,120225],\"mapped\",[98]],[[120226,120226],\"mapped\",[99]],[[120227,120227],\"mapped\",[100]],[[120228,120228],\"mapped\",[101]],[[120229,120229],\"mapped\",[102]],[[120230,120230],\"mapped\",[103]],[[120231,120231],\"mapped\",[104]],[[120232,120232],\"mapped\",[105]],[[120233,120233],\"mapped\",[106]],[[120234,120234],\"mapped\",[107]],[[120235,120235],\"mapped\",[108]],[[120236,120236],\"mapped\",[109]],[[120237,120237],\"mapped\",[110]],[[120238,120238],\"mapped\",[111]],[[120239,120239],\"mapped\",[112]],[[120240,120240],\"mapped\",[113]],[[120241,120241],\"mapped\",[114]],[[120242,120242],\"mapped\",[115]],[[120243,120243],\"mapped\",[116]],[[120244,120244],\"mapped\",[117]],[[120245,120245],\"mapped\",[118]],[[120246,120246],\"mapped\",[119]],[[120247,120247],\"mapped\",[120]],[[120248,120248],\"mapped\",[121]],[[120249,120249],\"mapped\",[122]],[[120250,120250],\"mapped\",[97]],[[120251,120251],\"mapped\",[98]],[[120252,120252],\"mapped\",[99]],[[120253,120253],\"mapped\",[100]],[[120254,120254],\"mapped\",[101]],[[120255,120255],\"mapped\",[102]],[[120256,120256],\"mapped\",[103]],[[120257,120257],\"mapped\",[104]],[[120258,120258],\"mapped\",[105]],[[120259,120259],\"mapped\",[106]],[[120260,120260],\"mapped\",[107]],[[120261,120261],\"mapped\",[108]],[[120262,120262],\"mapped\",[109]],[[120263,120263],\"mapped\",[110]],[[120264,120264],\"mapped\",[111]],[[120265,120265],\"mapped\",[112]],[[120266,120266],\"mapped\",[113]],[[120267,120267],\"mapped\",[114]],[[120268,120268],\"mapped\",[115]],[[120269,120269],\"mapped\",[116]],[[120270,120270],\"mapped\",[117]],[[120271,120271],\"mapped\",[118]],[[120272,120272],\"mapped\",[119]],[[120273,120273],\"mapped\",[120]],[[120274,120274],\"mapped\",[121]],[[120275,120275],\"mapped\",[122]],[[120276,120276],\"mapped\",[97]],[[120277,120277],\"mapped\",[98]],[[120278,120278],\"mapped\",[99]],[[120279,120279],\"mapped\",[100]],[[120280,120280],\"mapped\",[101]],[[120281,120281],\"mapped\",[102]],[[120282,120282],\"mapped\",[103]],[[120283,120283],\"mapped\",[104]],[[120284,120284],\"mapped\",[105]],[[120285,120285],\"mapped\",[106]],[[120286,120286],\"mapped\",[107]],[[120287,120287],\"mapped\",[108]],[[120288,120288],\"mapped\",[109]],[[120289,120289],\"mapped\",[110]],[[120290,120290],\"mapped\",[111]],[[120291,120291],\"mapped\",[112]],[[120292,120292],\"mapped\",[113]],[[120293,120293],\"mapped\",[114]],[[120294,120294],\"mapped\",[115]],[[120295,120295],\"mapped\",[116]],[[120296,120296],\"mapped\",[117]],[[120297,120297],\"mapped\",[118]],[[120298,120298],\"mapped\",[119]],[[120299,120299],\"mapped\",[120]],[[120300,120300],\"mapped\",[121]],[[120301,120301],\"mapped\",[122]],[[120302,120302],\"mapped\",[97]],[[120303,120303],\"mapped\",[98]],[[120304,120304],\"mapped\",[99]],[[120305,120305],\"mapped\",[100]],[[120306,120306],\"mapped\",[101]],[[120307,120307],\"mapped\",[102]],[[120308,120308],\"mapped\",[103]],[[120309,120309],\"mapped\",[104]],[[120310,120310],\"mapped\",[105]],[[120311,120311],\"mapped\",[106]],[[120312,120312],\"mapped\",[107]],[[120313,120313],\"mapped\",[108]],[[120314,120314],\"mapped\",[109]],[[120315,120315],\"mapped\",[110]],[[120316,120316],\"mapped\",[111]],[[120317,120317],\"mapped\",[112]],[[120318,120318],\"mapped\",[113]],[[120319,120319],\"mapped\",[114]],[[120320,120320],\"mapped\",[115]],[[120321,120321],\"mapped\",[116]],[[120322,120322],\"mapped\",[117]],[[120323,120323],\"mapped\",[118]],[[120324,120324],\"mapped\",[119]],[[120325,120325],\"mapped\",[120]],[[120326,120326],\"mapped\",[121]],[[120327,120327],\"mapped\",[122]],[[120328,120328],\"mapped\",[97]],[[120329,120329],\"mapped\",[98]],[[120330,120330],\"mapped\",[99]],[[120331,120331],\"mapped\",[100]],[[120332,120332],\"mapped\",[101]],[[120333,120333],\"mapped\",[102]],[[120334,120334],\"mapped\",[103]],[[120335,120335],\"mapped\",[104]],[[120336,120336],\"mapped\",[105]],[[120337,120337],\"mapped\",[106]],[[120338,120338],\"mapped\",[107]],[[120339,120339],\"mapped\",[108]],[[120340,120340],\"mapped\",[109]],[[120341,120341],\"mapped\",[110]],[[120342,120342],\"mapped\",[111]],[[120343,120343],\"mapped\",[112]],[[120344,120344],\"mapped\",[113]],[[120345,120345],\"mapped\",[114]],[[120346,120346],\"mapped\",[115]],[[120347,120347],\"mapped\",[116]],[[120348,120348],\"mapped\",[117]],[[120349,120349],\"mapped\",[118]],[[120350,120350],\"mapped\",[119]],[[120351,120351],\"mapped\",[120]],[[120352,120352],\"mapped\",[121]],[[120353,120353],\"mapped\",[122]],[[120354,120354],\"mapped\",[97]],[[120355,120355],\"mapped\",[98]],[[120356,120356],\"mapped\",[99]],[[120357,120357],\"mapped\",[100]],[[120358,120358],\"mapped\",[101]],[[120359,120359],\"mapped\",[102]],[[120360,120360],\"mapped\",[103]],[[120361,120361],\"mapped\",[104]],[[120362,120362],\"mapped\",[105]],[[120363,120363],\"mapped\",[106]],[[120364,120364],\"mapped\",[107]],[[120365,120365],\"mapped\",[108]],[[120366,120366],\"mapped\",[109]],[[120367,120367],\"mapped\",[110]],[[120368,120368],\"mapped\",[111]],[[120369,120369],\"mapped\",[112]],[[120370,120370],\"mapped\",[113]],[[120371,120371],\"mapped\",[114]],[[120372,120372],\"mapped\",[115]],[[120373,120373],\"mapped\",[116]],[[120374,120374],\"mapped\",[117]],[[120375,120375],\"mapped\",[118]],[[120376,120376],\"mapped\",[119]],[[120377,120377],\"mapped\",[120]],[[120378,120378],\"mapped\",[121]],[[120379,120379],\"mapped\",[122]],[[120380,120380],\"mapped\",[97]],[[120381,120381],\"mapped\",[98]],[[120382,120382],\"mapped\",[99]],[[120383,120383],\"mapped\",[100]],[[120384,120384],\"mapped\",[101]],[[120385,120385],\"mapped\",[102]],[[120386,120386],\"mapped\",[103]],[[120387,120387],\"mapped\",[104]],[[120388,120388],\"mapped\",[105]],[[120389,120389],\"mapped\",[106]],[[120390,120390],\"mapped\",[107]],[[120391,120391],\"mapped\",[108]],[[120392,120392],\"mapped\",[109]],[[120393,120393],\"mapped\",[110]],[[120394,120394],\"mapped\",[111]],[[120395,120395],\"mapped\",[112]],[[120396,120396],\"mapped\",[113]],[[120397,120397],\"mapped\",[114]],[[120398,120398],\"mapped\",[115]],[[120399,120399],\"mapped\",[116]],[[120400,120400],\"mapped\",[117]],[[120401,120401],\"mapped\",[118]],[[120402,120402],\"mapped\",[119]],[[120403,120403],\"mapped\",[120]],[[120404,120404],\"mapped\",[121]],[[120405,120405],\"mapped\",[122]],[[120406,120406],\"mapped\",[97]],[[120407,120407],\"mapped\",[98]],[[120408,120408],\"mapped\",[99]],[[120409,120409],\"mapped\",[100]],[[120410,120410],\"mapped\",[101]],[[120411,120411],\"mapped\",[102]],[[120412,120412],\"mapped\",[103]],[[120413,120413],\"mapped\",[104]],[[120414,120414],\"mapped\",[105]],[[120415,120415],\"mapped\",[106]],[[120416,120416],\"mapped\",[107]],[[120417,120417],\"mapped\",[108]],[[120418,120418],\"mapped\",[109]],[[120419,120419],\"mapped\",[110]],[[120420,120420],\"mapped\",[111]],[[120421,120421],\"mapped\",[112]],[[120422,120422],\"mapped\",[113]],[[120423,120423],\"mapped\",[114]],[[120424,120424],\"mapped\",[115]],[[120425,120425],\"mapped\",[116]],[[120426,120426],\"mapped\",[117]],[[120427,120427],\"mapped\",[118]],[[120428,120428],\"mapped\",[119]],[[120429,120429],\"mapped\",[120]],[[120430,120430],\"mapped\",[121]],[[120431,120431],\"mapped\",[122]],[[120432,120432],\"mapped\",[97]],[[120433,120433],\"mapped\",[98]],[[120434,120434],\"mapped\",[99]],[[120435,120435],\"mapped\",[100]],[[120436,120436],\"mapped\",[101]],[[120437,120437],\"mapped\",[102]],[[120438,120438],\"mapped\",[103]],[[120439,120439],\"mapped\",[104]],[[120440,120440],\"mapped\",[105]],[[120441,120441],\"mapped\",[106]],[[120442,120442],\"mapped\",[107]],[[120443,120443],\"mapped\",[108]],[[120444,120444],\"mapped\",[109]],[[120445,120445],\"mapped\",[110]],[[120446,120446],\"mapped\",[111]],[[120447,120447],\"mapped\",[112]],[[120448,120448],\"mapped\",[113]],[[120449,120449],\"mapped\",[114]],[[120450,120450],\"mapped\",[115]],[[120451,120451],\"mapped\",[116]],[[120452,120452],\"mapped\",[117]],[[120453,120453],\"mapped\",[118]],[[120454,120454],\"mapped\",[119]],[[120455,120455],\"mapped\",[120]],[[120456,120456],\"mapped\",[121]],[[120457,120457],\"mapped\",[122]],[[120458,120458],\"mapped\",[97]],[[120459,120459],\"mapped\",[98]],[[120460,120460],\"mapped\",[99]],[[120461,120461],\"mapped\",[100]],[[120462,120462],\"mapped\",[101]],[[120463,120463],\"mapped\",[102]],[[120464,120464],\"mapped\",[103]],[[120465,120465],\"mapped\",[104]],[[120466,120466],\"mapped\",[105]],[[120467,120467],\"mapped\",[106]],[[120468,120468],\"mapped\",[107]],[[120469,120469],\"mapped\",[108]],[[120470,120470],\"mapped\",[109]],[[120471,120471],\"mapped\",[110]],[[120472,120472],\"mapped\",[111]],[[120473,120473],\"mapped\",[112]],[[120474,120474],\"mapped\",[113]],[[120475,120475],\"mapped\",[114]],[[120476,120476],\"mapped\",[115]],[[120477,120477],\"mapped\",[116]],[[120478,120478],\"mapped\",[117]],[[120479,120479],\"mapped\",[118]],[[120480,120480],\"mapped\",[119]],[[120481,120481],\"mapped\",[120]],[[120482,120482],\"mapped\",[121]],[[120483,120483],\"mapped\",[122]],[[120484,120484],\"mapped\",[305]],[[120485,120485],\"mapped\",[567]],[[120486,120487],\"disallowed\"],[[120488,120488],\"mapped\",[945]],[[120489,120489],\"mapped\",[946]],[[120490,120490],\"mapped\",[947]],[[120491,120491],\"mapped\",[948]],[[120492,120492],\"mapped\",[949]],[[120493,120493],\"mapped\",[950]],[[120494,120494],\"mapped\",[951]],[[120495,120495],\"mapped\",[952]],[[120496,120496],\"mapped\",[953]],[[120497,120497],\"mapped\",[954]],[[120498,120498],\"mapped\",[955]],[[120499,120499],\"mapped\",[956]],[[120500,120500],\"mapped\",[957]],[[120501,120501],\"mapped\",[958]],[[120502,120502],\"mapped\",[959]],[[120503,120503],\"mapped\",[960]],[[120504,120504],\"mapped\",[961]],[[120505,120505],\"mapped\",[952]],[[120506,120506],\"mapped\",[963]],[[120507,120507],\"mapped\",[964]],[[120508,120508],\"mapped\",[965]],[[120509,120509],\"mapped\",[966]],[[120510,120510],\"mapped\",[967]],[[120511,120511],\"mapped\",[968]],[[120512,120512],\"mapped\",[969]],[[120513,120513],\"mapped\",[8711]],[[120514,120514],\"mapped\",[945]],[[120515,120515],\"mapped\",[946]],[[120516,120516],\"mapped\",[947]],[[120517,120517],\"mapped\",[948]],[[120518,120518],\"mapped\",[949]],[[120519,120519],\"mapped\",[950]],[[120520,120520],\"mapped\",[951]],[[120521,120521],\"mapped\",[952]],[[120522,120522],\"mapped\",[953]],[[120523,120523],\"mapped\",[954]],[[120524,120524],\"mapped\",[955]],[[120525,120525],\"mapped\",[956]],[[120526,120526],\"mapped\",[957]],[[120527,120527],\"mapped\",[958]],[[120528,120528],\"mapped\",[959]],[[120529,120529],\"mapped\",[960]],[[120530,120530],\"mapped\",[961]],[[120531,120532],\"mapped\",[963]],[[120533,120533],\"mapped\",[964]],[[120534,120534],\"mapped\",[965]],[[120535,120535],\"mapped\",[966]],[[120536,120536],\"mapped\",[967]],[[120537,120537],\"mapped\",[968]],[[120538,120538],\"mapped\",[969]],[[120539,120539],\"mapped\",[8706]],[[120540,120540],\"mapped\",[949]],[[120541,120541],\"mapped\",[952]],[[120542,120542],\"mapped\",[954]],[[120543,120543],\"mapped\",[966]],[[120544,120544],\"mapped\",[961]],[[120545,120545],\"mapped\",[960]],[[120546,120546],\"mapped\",[945]],[[120547,120547],\"mapped\",[946]],[[120548,120548],\"mapped\",[947]],[[120549,120549],\"mapped\",[948]],[[120550,120550],\"mapped\",[949]],[[120551,120551],\"mapped\",[950]],[[120552,120552],\"mapped\",[951]],[[120553,120553],\"mapped\",[952]],[[120554,120554],\"mapped\",[953]],[[120555,120555],\"mapped\",[954]],[[120556,120556],\"mapped\",[955]],[[120557,120557],\"mapped\",[956]],[[120558,120558],\"mapped\",[957]],[[120559,120559],\"mapped\",[958]],[[120560,120560],\"mapped\",[959]],[[120561,120561],\"mapped\",[960]],[[120562,120562],\"mapped\",[961]],[[120563,120563],\"mapped\",[952]],[[120564,120564],\"mapped\",[963]],[[120565,120565],\"mapped\",[964]],[[120566,120566],\"mapped\",[965]],[[120567,120567],\"mapped\",[966]],[[120568,120568],\"mapped\",[967]],[[120569,120569],\"mapped\",[968]],[[120570,120570],\"mapped\",[969]],[[120571,120571],\"mapped\",[8711]],[[120572,120572],\"mapped\",[945]],[[120573,120573],\"mapped\",[946]],[[120574,120574],\"mapped\",[947]],[[120575,120575],\"mapped\",[948]],[[120576,120576],\"mapped\",[949]],[[120577,120577],\"mapped\",[950]],[[120578,120578],\"mapped\",[951]],[[120579,120579],\"mapped\",[952]],[[120580,120580],\"mapped\",[953]],[[120581,120581],\"mapped\",[954]],[[120582,120582],\"mapped\",[955]],[[120583,120583],\"mapped\",[956]],[[120584,120584],\"mapped\",[957]],[[120585,120585],\"mapped\",[958]],[[120586,120586],\"mapped\",[959]],[[120587,120587],\"mapped\",[960]],[[120588,120588],\"mapped\",[961]],[[120589,120590],\"mapped\",[963]],[[120591,120591],\"mapped\",[964]],[[120592,120592],\"mapped\",[965]],[[120593,120593],\"mapped\",[966]],[[120594,120594],\"mapped\",[967]],[[120595,120595],\"mapped\",[968]],[[120596,120596],\"mapped\",[969]],[[120597,120597],\"mapped\",[8706]],[[120598,120598],\"mapped\",[949]],[[120599,120599],\"mapped\",[952]],[[120600,120600],\"mapped\",[954]],[[120601,120601],\"mapped\",[966]],[[120602,120602],\"mapped\",[961]],[[120603,120603],\"mapped\",[960]],[[120604,120604],\"mapped\",[945]],[[120605,120605],\"mapped\",[946]],[[120606,120606],\"mapped\",[947]],[[120607,120607],\"mapped\",[948]],[[120608,120608],\"mapped\",[949]],[[120609,120609],\"mapped\",[950]],[[120610,120610],\"mapped\",[951]],[[120611,120611],\"mapped\",[952]],[[120612,120612],\"mapped\",[953]],[[120613,120613],\"mapped\",[954]],[[120614,120614],\"mapped\",[955]],[[120615,120615],\"mapped\",[956]],[[120616,120616],\"mapped\",[957]],[[120617,120617],\"mapped\",[958]],[[120618,120618],\"mapped\",[959]],[[120619,120619],\"mapped\",[960]],[[120620,120620],\"mapped\",[961]],[[120621,120621],\"mapped\",[952]],[[120622,120622],\"mapped\",[963]],[[120623,120623],\"mapped\",[964]],[[120624,120624],\"mapped\",[965]],[[120625,120625],\"mapped\",[966]],[[120626,120626],\"mapped\",[967]],[[120627,120627],\"mapped\",[968]],[[120628,120628],\"mapped\",[969]],[[120629,120629],\"mapped\",[8711]],[[120630,120630],\"mapped\",[945]],[[120631,120631],\"mapped\",[946]],[[120632,120632],\"mapped\",[947]],[[120633,120633],\"mapped\",[948]],[[120634,120634],\"mapped\",[949]],[[120635,120635],\"mapped\",[950]],[[120636,120636],\"mapped\",[951]],[[120637,120637],\"mapped\",[952]],[[120638,120638],\"mapped\",[953]],[[120639,120639],\"mapped\",[954]],[[120640,120640],\"mapped\",[955]],[[120641,120641],\"mapped\",[956]],[[120642,120642],\"mapped\",[957]],[[120643,120643],\"mapped\",[958]],[[120644,120644],\"mapped\",[959]],[[120645,120645],\"mapped\",[960]],[[120646,120646],\"mapped\",[961]],[[120647,120648],\"mapped\",[963]],[[120649,120649],\"mapped\",[964]],[[120650,120650],\"mapped\",[965]],[[120651,120651],\"mapped\",[966]],[[120652,120652],\"mapped\",[967]],[[120653,120653],\"mapped\",[968]],[[120654,120654],\"mapped\",[969]],[[120655,120655],\"mapped\",[8706]],[[120656,120656],\"mapped\",[949]],[[120657,120657],\"mapped\",[952]],[[120658,120658],\"mapped\",[954]],[[120659,120659],\"mapped\",[966]],[[120660,120660],\"mapped\",[961]],[[120661,120661],\"mapped\",[960]],[[120662,120662],\"mapped\",[945]],[[120663,120663],\"mapped\",[946]],[[120664,120664],\"mapped\",[947]],[[120665,120665],\"mapped\",[948]],[[120666,120666],\"mapped\",[949]],[[120667,120667],\"mapped\",[950]],[[120668,120668],\"mapped\",[951]],[[120669,120669],\"mapped\",[952]],[[120670,120670],\"mapped\",[953]],[[120671,120671],\"mapped\",[954]],[[120672,120672],\"mapped\",[955]],[[120673,120673],\"mapped\",[956]],[[120674,120674],\"mapped\",[957]],[[120675,120675],\"mapped\",[958]],[[120676,120676],\"mapped\",[959]],[[120677,120677],\"mapped\",[960]],[[120678,120678],\"mapped\",[961]],[[120679,120679],\"mapped\",[952]],[[120680,120680],\"mapped\",[963]],[[120681,120681],\"mapped\",[964]],[[120682,120682],\"mapped\",[965]],[[120683,120683],\"mapped\",[966]],[[120684,120684],\"mapped\",[967]],[[120685,120685],\"mapped\",[968]],[[120686,120686],\"mapped\",[969]],[[120687,120687],\"mapped\",[8711]],[[120688,120688],\"mapped\",[945]],[[120689,120689],\"mapped\",[946]],[[120690,120690],\"mapped\",[947]],[[120691,120691],\"mapped\",[948]],[[120692,120692],\"mapped\",[949]],[[120693,120693],\"mapped\",[950]],[[120694,120694],\"mapped\",[951]],[[120695,120695],\"mapped\",[952]],[[120696,120696],\"mapped\",[953]],[[120697,120697],\"mapped\",[954]],[[120698,120698],\"mapped\",[955]],[[120699,120699],\"mapped\",[956]],[[120700,120700],\"mapped\",[957]],[[120701,120701],\"mapped\",[958]],[[120702,120702],\"mapped\",[959]],[[120703,120703],\"mapped\",[960]],[[120704,120704],\"mapped\",[961]],[[120705,120706],\"mapped\",[963]],[[120707,120707],\"mapped\",[964]],[[120708,120708],\"mapped\",[965]],[[120709,120709],\"mapped\",[966]],[[120710,120710],\"mapped\",[967]],[[120711,120711],\"mapped\",[968]],[[120712,120712],\"mapped\",[969]],[[120713,120713],\"mapped\",[8706]],[[120714,120714],\"mapped\",[949]],[[120715,120715],\"mapped\",[952]],[[120716,120716],\"mapped\",[954]],[[120717,120717],\"mapped\",[966]],[[120718,120718],\"mapped\",[961]],[[120719,120719],\"mapped\",[960]],[[120720,120720],\"mapped\",[945]],[[120721,120721],\"mapped\",[946]],[[120722,120722],\"mapped\",[947]],[[120723,120723],\"mapped\",[948]],[[120724,120724],\"mapped\",[949]],[[120725,120725],\"mapped\",[950]],[[120726,120726],\"mapped\",[951]],[[120727,120727],\"mapped\",[952]],[[120728,120728],\"mapped\",[953]],[[120729,120729],\"mapped\",[954]],[[120730,120730],\"mapped\",[955]],[[120731,120731],\"mapped\",[956]],[[120732,120732],\"mapped\",[957]],[[120733,120733],\"mapped\",[958]],[[120734,120734],\"mapped\",[959]],[[120735,120735],\"mapped\",[960]],[[120736,120736],\"mapped\",[961]],[[120737,120737],\"mapped\",[952]],[[120738,120738],\"mapped\",[963]],[[120739,120739],\"mapped\",[964]],[[120740,120740],\"mapped\",[965]],[[120741,120741],\"mapped\",[966]],[[120742,120742],\"mapped\",[967]],[[120743,120743],\"mapped\",[968]],[[120744,120744],\"mapped\",[969]],[[120745,120745],\"mapped\",[8711]],[[120746,120746],\"mapped\",[945]],[[120747,120747],\"mapped\",[946]],[[120748,120748],\"mapped\",[947]],[[120749,120749],\"mapped\",[948]],[[120750,120750],\"mapped\",[949]],[[120751,120751],\"mapped\",[950]],[[120752,120752],\"mapped\",[951]],[[120753,120753],\"mapped\",[952]],[[120754,120754],\"mapped\",[953]],[[120755,120755],\"mapped\",[954]],[[120756,120756],\"mapped\",[955]],[[120757,120757],\"mapped\",[956]],[[120758,120758],\"mapped\",[957]],[[120759,120759],\"mapped\",[958]],[[120760,120760],\"mapped\",[959]],[[120761,120761],\"mapped\",[960]],[[120762,120762],\"mapped\",[961]],[[120763,120764],\"mapped\",[963]],[[120765,120765],\"mapped\",[964]],[[120766,120766],\"mapped\",[965]],[[120767,120767],\"mapped\",[966]],[[120768,120768],\"mapped\",[967]],[[120769,120769],\"mapped\",[968]],[[120770,120770],\"mapped\",[969]],[[120771,120771],\"mapped\",[8706]],[[120772,120772],\"mapped\",[949]],[[120773,120773],\"mapped\",[952]],[[120774,120774],\"mapped\",[954]],[[120775,120775],\"mapped\",[966]],[[120776,120776],\"mapped\",[961]],[[120777,120777],\"mapped\",[960]],[[120778,120779],\"mapped\",[989]],[[120780,120781],\"disallowed\"],[[120782,120782],\"mapped\",[48]],[[120783,120783],\"mapped\",[49]],[[120784,120784],\"mapped\",[50]],[[120785,120785],\"mapped\",[51]],[[120786,120786],\"mapped\",[52]],[[120787,120787],\"mapped\",[53]],[[120788,120788],\"mapped\",[54]],[[120789,120789],\"mapped\",[55]],[[120790,120790],\"mapped\",[56]],[[120791,120791],\"mapped\",[57]],[[120792,120792],\"mapped\",[48]],[[120793,120793],\"mapped\",[49]],[[120794,120794],\"mapped\",[50]],[[120795,120795],\"mapped\",[51]],[[120796,120796],\"mapped\",[52]],[[120797,120797],\"mapped\",[53]],[[120798,120798],\"mapped\",[54]],[[120799,120799],\"mapped\",[55]],[[120800,120800],\"mapped\",[56]],[[120801,120801],\"mapped\",[57]],[[120802,120802],\"mapped\",[48]],[[120803,120803],\"mapped\",[49]],[[120804,120804],\"mapped\",[50]],[[120805,120805],\"mapped\",[51]],[[120806,120806],\"mapped\",[52]],[[120807,120807],\"mapped\",[53]],[[120808,120808],\"mapped\",[54]],[[120809,120809],\"mapped\",[55]],[[120810,120810],\"mapped\",[56]],[[120811,120811],\"mapped\",[57]],[[120812,120812],\"mapped\",[48]],[[120813,120813],\"mapped\",[49]],[[120814,120814],\"mapped\",[50]],[[120815,120815],\"mapped\",[51]],[[120816,120816],\"mapped\",[52]],[[120817,120817],\"mapped\",[53]],[[120818,120818],\"mapped\",[54]],[[120819,120819],\"mapped\",[55]],[[120820,120820],\"mapped\",[56]],[[120821,120821],\"mapped\",[57]],[[120822,120822],\"mapped\",[48]],[[120823,120823],\"mapped\",[49]],[[120824,120824],\"mapped\",[50]],[[120825,120825],\"mapped\",[51]],[[120826,120826],\"mapped\",[52]],[[120827,120827],\"mapped\",[53]],[[120828,120828],\"mapped\",[54]],[[120829,120829],\"mapped\",[55]],[[120830,120830],\"mapped\",[56]],[[120831,120831],\"mapped\",[57]],[[120832,121343],\"valid\",[],\"NV8\"],[[121344,121398],\"valid\"],[[121399,121402],\"valid\",[],\"NV8\"],[[121403,121452],\"valid\"],[[121453,121460],\"valid\",[],\"NV8\"],[[121461,121461],\"valid\"],[[121462,121475],\"valid\",[],\"NV8\"],[[121476,121476],\"valid\"],[[121477,121483],\"valid\",[],\"NV8\"],[[121484,121498],\"disallowed\"],[[121499,121503],\"valid\"],[[121504,121504],\"disallowed\"],[[121505,121519],\"valid\"],[[121520,124927],\"disallowed\"],[[124928,125124],\"valid\"],[[125125,125126],\"disallowed\"],[[125127,125135],\"valid\",[],\"NV8\"],[[125136,125142],\"valid\"],[[125143,126463],\"disallowed\"],[[126464,126464],\"mapped\",[1575]],[[126465,126465],\"mapped\",[1576]],[[126466,126466],\"mapped\",[1580]],[[126467,126467],\"mapped\",[1583]],[[126468,126468],\"disallowed\"],[[126469,126469],\"mapped\",[1608]],[[126470,126470],\"mapped\",[1586]],[[126471,126471],\"mapped\",[1581]],[[126472,126472],\"mapped\",[1591]],[[126473,126473],\"mapped\",[1610]],[[126474,126474],\"mapped\",[1603]],[[126475,126475],\"mapped\",[1604]],[[126476,126476],\"mapped\",[1605]],[[126477,126477],\"mapped\",[1606]],[[126478,126478],\"mapped\",[1587]],[[126479,126479],\"mapped\",[1593]],[[126480,126480],\"mapped\",[1601]],[[126481,126481],\"mapped\",[1589]],[[126482,126482],\"mapped\",[1602]],[[126483,126483],\"mapped\",[1585]],[[126484,126484],\"mapped\",[1588]],[[126485,126485],\"mapped\",[1578]],[[126486,126486],\"mapped\",[1579]],[[126487,126487],\"mapped\",[1582]],[[126488,126488],\"mapped\",[1584]],[[126489,126489],\"mapped\",[1590]],[[126490,126490],\"mapped\",[1592]],[[126491,126491],\"mapped\",[1594]],[[126492,126492],\"mapped\",[1646]],[[126493,126493],\"mapped\",[1722]],[[126494,126494],\"mapped\",[1697]],[[126495,126495],\"mapped\",[1647]],[[126496,126496],\"disallowed\"],[[126497,126497],\"mapped\",[1576]],[[126498,126498],\"mapped\",[1580]],[[126499,126499],\"disallowed\"],[[126500,126500],\"mapped\",[1607]],[[126501,126502],\"disallowed\"],[[126503,126503],\"mapped\",[1581]],[[126504,126504],\"disallowed\"],[[126505,126505],\"mapped\",[1610]],[[126506,126506],\"mapped\",[1603]],[[126507,126507],\"mapped\",[1604]],[[126508,126508],\"mapped\",[1605]],[[126509,126509],\"mapped\",[1606]],[[126510,126510],\"mapped\",[1587]],[[126511,126511],\"mapped\",[1593]],[[126512,126512],\"mapped\",[1601]],[[126513,126513],\"mapped\",[1589]],[[126514,126514],\"mapped\",[1602]],[[126515,126515],\"disallowed\"],[[126516,126516],\"mapped\",[1588]],[[126517,126517],\"mapped\",[1578]],[[126518,126518],\"mapped\",[1579]],[[126519,126519],\"mapped\",[1582]],[[126520,126520],\"disallowed\"],[[126521,126521],\"mapped\",[1590]],[[126522,126522],\"disallowed\"],[[126523,126523],\"mapped\",[1594]],[[126524,126529],\"disallowed\"],[[126530,126530],\"mapped\",[1580]],[[126531,126534],\"disallowed\"],[[126535,126535],\"mapped\",[1581]],[[126536,126536],\"disallowed\"],[[126537,126537],\"mapped\",[1610]],[[126538,126538],\"disallowed\"],[[126539,126539],\"mapped\",[1604]],[[126540,126540],\"disallowed\"],[[126541,126541],\"mapped\",[1606]],[[126542,126542],\"mapped\",[1587]],[[126543,126543],\"mapped\",[1593]],[[126544,126544],\"disallowed\"],[[126545,126545],\"mapped\",[1589]],[[126546,126546],\"mapped\",[1602]],[[126547,126547],\"disallowed\"],[[126548,126548],\"mapped\",[1588]],[[126549,126550],\"disallowed\"],[[126551,126551],\"mapped\",[1582]],[[126552,126552],\"disallowed\"],[[126553,126553],\"mapped\",[1590]],[[126554,126554],\"disallowed\"],[[126555,126555],\"mapped\",[1594]],[[126556,126556],\"disallowed\"],[[126557,126557],\"mapped\",[1722]],[[126558,126558],\"disallowed\"],[[126559,126559],\"mapped\",[1647]],[[126560,126560],\"disallowed\"],[[126561,126561],\"mapped\",[1576]],[[126562,126562],\"mapped\",[1580]],[[126563,126563],\"disallowed\"],[[126564,126564],\"mapped\",[1607]],[[126565,126566],\"disallowed\"],[[126567,126567],\"mapped\",[1581]],[[126568,126568],\"mapped\",[1591]],[[126569,126569],\"mapped\",[1610]],[[126570,126570],\"mapped\",[1603]],[[126571,126571],\"disallowed\"],[[126572,126572],\"mapped\",[1605]],[[126573,126573],\"mapped\",[1606]],[[126574,126574],\"mapped\",[1587]],[[126575,126575],\"mapped\",[1593]],[[126576,126576],\"mapped\",[1601]],[[126577,126577],\"mapped\",[1589]],[[126578,126578],\"mapped\",[1602]],[[126579,126579],\"disallowed\"],[[126580,126580],\"mapped\",[1588]],[[126581,126581],\"mapped\",[1578]],[[126582,126582],\"mapped\",[1579]],[[126583,126583],\"mapped\",[1582]],[[126584,126584],\"disallowed\"],[[126585,126585],\"mapped\",[1590]],[[126586,126586],\"mapped\",[1592]],[[126587,126587],\"mapped\",[1594]],[[126588,126588],\"mapped\",[1646]],[[126589,126589],\"disallowed\"],[[126590,126590],\"mapped\",[1697]],[[126591,126591],\"disallowed\"],[[126592,126592],\"mapped\",[1575]],[[126593,126593],\"mapped\",[1576]],[[126594,126594],\"mapped\",[1580]],[[126595,126595],\"mapped\",[1583]],[[126596,126596],\"mapped\",[1607]],[[126597,126597],\"mapped\",[1608]],[[126598,126598],\"mapped\",[1586]],[[126599,126599],\"mapped\",[1581]],[[126600,126600],\"mapped\",[1591]],[[126601,126601],\"mapped\",[1610]],[[126602,126602],\"disallowed\"],[[126603,126603],\"mapped\",[1604]],[[126604,126604],\"mapped\",[1605]],[[126605,126605],\"mapped\",[1606]],[[126606,126606],\"mapped\",[1587]],[[126607,126607],\"mapped\",[1593]],[[126608,126608],\"mapped\",[1601]],[[126609,126609],\"mapped\",[1589]],[[126610,126610],\"mapped\",[1602]],[[126611,126611],\"mapped\",[1585]],[[126612,126612],\"mapped\",[1588]],[[126613,126613],\"mapped\",[1578]],[[126614,126614],\"mapped\",[1579]],[[126615,126615],\"mapped\",[1582]],[[126616,126616],\"mapped\",[1584]],[[126617,126617],\"mapped\",[1590]],[[126618,126618],\"mapped\",[1592]],[[126619,126619],\"mapped\",[1594]],[[126620,126624],\"disallowed\"],[[126625,126625],\"mapped\",[1576]],[[126626,126626],\"mapped\",[1580]],[[126627,126627],\"mapped\",[1583]],[[126628,126628],\"disallowed\"],[[126629,126629],\"mapped\",[1608]],[[126630,126630],\"mapped\",[1586]],[[126631,126631],\"mapped\",[1581]],[[126632,126632],\"mapped\",[1591]],[[126633,126633],\"mapped\",[1610]],[[126634,126634],\"disallowed\"],[[126635,126635],\"mapped\",[1604]],[[126636,126636],\"mapped\",[1605]],[[126637,126637],\"mapped\",[1606]],[[126638,126638],\"mapped\",[1587]],[[126639,126639],\"mapped\",[1593]],[[126640,126640],\"mapped\",[1601]],[[126641,126641],\"mapped\",[1589]],[[126642,126642],\"mapped\",[1602]],[[126643,126643],\"mapped\",[1585]],[[126644,126644],\"mapped\",[1588]],[[126645,126645],\"mapped\",[1578]],[[126646,126646],\"mapped\",[1579]],[[126647,126647],\"mapped\",[1582]],[[126648,126648],\"mapped\",[1584]],[[126649,126649],\"mapped\",[1590]],[[126650,126650],\"mapped\",[1592]],[[126651,126651],\"mapped\",[1594]],[[126652,126703],\"disallowed\"],[[126704,126705],\"valid\",[],\"NV8\"],[[126706,126975],\"disallowed\"],[[126976,127019],\"valid\",[],\"NV8\"],[[127020,127023],\"disallowed\"],[[127024,127123],\"valid\",[],\"NV8\"],[[127124,127135],\"disallowed\"],[[127136,127150],\"valid\",[],\"NV8\"],[[127151,127152],\"disallowed\"],[[127153,127166],\"valid\",[],\"NV8\"],[[127167,127167],\"valid\",[],\"NV8\"],[[127168,127168],\"disallowed\"],[[127169,127183],\"valid\",[],\"NV8\"],[[127184,127184],\"disallowed\"],[[127185,127199],\"valid\",[],\"NV8\"],[[127200,127221],\"valid\",[],\"NV8\"],[[127222,127231],\"disallowed\"],[[127232,127232],\"disallowed\"],[[127233,127233],\"disallowed_STD3_mapped\",[48,44]],[[127234,127234],\"disallowed_STD3_mapped\",[49,44]],[[127235,127235],\"disallowed_STD3_mapped\",[50,44]],[[127236,127236],\"disallowed_STD3_mapped\",[51,44]],[[127237,127237],\"disallowed_STD3_mapped\",[52,44]],[[127238,127238],\"disallowed_STD3_mapped\",[53,44]],[[127239,127239],\"disallowed_STD3_mapped\",[54,44]],[[127240,127240],\"disallowed_STD3_mapped\",[55,44]],[[127241,127241],\"disallowed_STD3_mapped\",[56,44]],[[127242,127242],\"disallowed_STD3_mapped\",[57,44]],[[127243,127244],\"valid\",[],\"NV8\"],[[127245,127247],\"disallowed\"],[[127248,127248],\"disallowed_STD3_mapped\",[40,97,41]],[[127249,127249],\"disallowed_STD3_mapped\",[40,98,41]],[[127250,127250],\"disallowed_STD3_mapped\",[40,99,41]],[[127251,127251],\"disallowed_STD3_mapped\",[40,100,41]],[[127252,127252],\"disallowed_STD3_mapped\",[40,101,41]],[[127253,127253],\"disallowed_STD3_mapped\",[40,102,41]],[[127254,127254],\"disallowed_STD3_mapped\",[40,103,41]],[[127255,127255],\"disallowed_STD3_mapped\",[40,104,41]],[[127256,127256],\"disallowed_STD3_mapped\",[40,105,41]],[[127257,127257],\"disallowed_STD3_mapped\",[40,106,41]],[[127258,127258],\"disallowed_STD3_mapped\",[40,107,41]],[[127259,127259],\"disallowed_STD3_mapped\",[40,108,41]],[[127260,127260],\"disallowed_STD3_mapped\",[40,109,41]],[[127261,127261],\"disallowed_STD3_mapped\",[40,110,41]],[[127262,127262],\"disallowed_STD3_mapped\",[40,111,41]],[[127263,127263],\"disallowed_STD3_mapped\",[40,112,41]],[[127264,127264],\"disallowed_STD3_mapped\",[40,113,41]],[[127265,127265],\"disallowed_STD3_mapped\",[40,114,41]],[[127266,127266],\"disallowed_STD3_mapped\",[40,115,41]],[[127267,127267],\"disallowed_STD3_mapped\",[40,116,41]],[[127268,127268],\"disallowed_STD3_mapped\",[40,117,41]],[[127269,127269],\"disallowed_STD3_mapped\",[40,118,41]],[[127270,127270],\"disallowed_STD3_mapped\",[40,119,41]],[[127271,127271],\"disallowed_STD3_mapped\",[40,120,41]],[[127272,127272],\"disallowed_STD3_mapped\",[40,121,41]],[[127273,127273],\"disallowed_STD3_mapped\",[40,122,41]],[[127274,127274],\"mapped\",[12308,115,12309]],[[127275,127275],\"mapped\",[99]],[[127276,127276],\"mapped\",[114]],[[127277,127277],\"mapped\",[99,100]],[[127278,127278],\"mapped\",[119,122]],[[127279,127279],\"disallowed\"],[[127280,127280],\"mapped\",[97]],[[127281,127281],\"mapped\",[98]],[[127282,127282],\"mapped\",[99]],[[127283,127283],\"mapped\",[100]],[[127284,127284],\"mapped\",[101]],[[127285,127285],\"mapped\",[102]],[[127286,127286],\"mapped\",[103]],[[127287,127287],\"mapped\",[104]],[[127288,127288],\"mapped\",[105]],[[127289,127289],\"mapped\",[106]],[[127290,127290],\"mapped\",[107]],[[127291,127291],\"mapped\",[108]],[[127292,127292],\"mapped\",[109]],[[127293,127293],\"mapped\",[110]],[[127294,127294],\"mapped\",[111]],[[127295,127295],\"mapped\",[112]],[[127296,127296],\"mapped\",[113]],[[127297,127297],\"mapped\",[114]],[[127298,127298],\"mapped\",[115]],[[127299,127299],\"mapped\",[116]],[[127300,127300],\"mapped\",[117]],[[127301,127301],\"mapped\",[118]],[[127302,127302],\"mapped\",[119]],[[127303,127303],\"mapped\",[120]],[[127304,127304],\"mapped\",[121]],[[127305,127305],\"mapped\",[122]],[[127306,127306],\"mapped\",[104,118]],[[127307,127307],\"mapped\",[109,118]],[[127308,127308],\"mapped\",[115,100]],[[127309,127309],\"mapped\",[115,115]],[[127310,127310],\"mapped\",[112,112,118]],[[127311,127311],\"mapped\",[119,99]],[[127312,127318],\"valid\",[],\"NV8\"],[[127319,127319],\"valid\",[],\"NV8\"],[[127320,127326],\"valid\",[],\"NV8\"],[[127327,127327],\"valid\",[],\"NV8\"],[[127328,127337],\"valid\",[],\"NV8\"],[[127338,127338],\"mapped\",[109,99]],[[127339,127339],\"mapped\",[109,100]],[[127340,127343],\"disallowed\"],[[127344,127352],\"valid\",[],\"NV8\"],[[127353,127353],\"valid\",[],\"NV8\"],[[127354,127354],\"valid\",[],\"NV8\"],[[127355,127356],\"valid\",[],\"NV8\"],[[127357,127358],\"valid\",[],\"NV8\"],[[127359,127359],\"valid\",[],\"NV8\"],[[127360,127369],\"valid\",[],\"NV8\"],[[127370,127373],\"valid\",[],\"NV8\"],[[127374,127375],\"valid\",[],\"NV8\"],[[127376,127376],\"mapped\",[100,106]],[[127377,127386],\"valid\",[],\"NV8\"],[[127387,127461],\"disallowed\"],[[127462,127487],\"valid\",[],\"NV8\"],[[127488,127488],\"mapped\",[12411,12363]],[[127489,127489],\"mapped\",[12467,12467]],[[127490,127490],\"mapped\",[12469]],[[127491,127503],\"disallowed\"],[[127504,127504],\"mapped\",[25163]],[[127505,127505],\"mapped\",[23383]],[[127506,127506],\"mapped\",[21452]],[[127507,127507],\"mapped\",[12487]],[[127508,127508],\"mapped\",[20108]],[[127509,127509],\"mapped\",[22810]],[[127510,127510],\"mapped\",[35299]],[[127511,127511],\"mapped\",[22825]],[[127512,127512],\"mapped\",[20132]],[[127513,127513],\"mapped\",[26144]],[[127514,127514],\"mapped\",[28961]],[[127515,127515],\"mapped\",[26009]],[[127516,127516],\"mapped\",[21069]],[[127517,127517],\"mapped\",[24460]],[[127518,127518],\"mapped\",[20877]],[[127519,127519],\"mapped\",[26032]],[[127520,127520],\"mapped\",[21021]],[[127521,127521],\"mapped\",[32066]],[[127522,127522],\"mapped\",[29983]],[[127523,127523],\"mapped\",[36009]],[[127524,127524],\"mapped\",[22768]],[[127525,127525],\"mapped\",[21561]],[[127526,127526],\"mapped\",[28436]],[[127527,127527],\"mapped\",[25237]],[[127528,127528],\"mapped\",[25429]],[[127529,127529],\"mapped\",[19968]],[[127530,127530],\"mapped\",[19977]],[[127531,127531],\"mapped\",[36938]],[[127532,127532],\"mapped\",[24038]],[[127533,127533],\"mapped\",[20013]],[[127534,127534],\"mapped\",[21491]],[[127535,127535],\"mapped\",[25351]],[[127536,127536],\"mapped\",[36208]],[[127537,127537],\"mapped\",[25171]],[[127538,127538],\"mapped\",[31105]],[[127539,127539],\"mapped\",[31354]],[[127540,127540],\"mapped\",[21512]],[[127541,127541],\"mapped\",[28288]],[[127542,127542],\"mapped\",[26377]],[[127543,127543],\"mapped\",[26376]],[[127544,127544],\"mapped\",[30003]],[[127545,127545],\"mapped\",[21106]],[[127546,127546],\"mapped\",[21942]],[[127547,127551],\"disallowed\"],[[127552,127552],\"mapped\",[12308,26412,12309]],[[127553,127553],\"mapped\",[12308,19977,12309]],[[127554,127554],\"mapped\",[12308,20108,12309]],[[127555,127555],\"mapped\",[12308,23433,12309]],[[127556,127556],\"mapped\",[12308,28857,12309]],[[127557,127557],\"mapped\",[12308,25171,12309]],[[127558,127558],\"mapped\",[12308,30423,12309]],[[127559,127559],\"mapped\",[12308,21213,12309]],[[127560,127560],\"mapped\",[12308,25943,12309]],[[127561,127567],\"disallowed\"],[[127568,127568],\"mapped\",[24471]],[[127569,127569],\"mapped\",[21487]],[[127570,127743],\"disallowed\"],[[127744,127776],\"valid\",[],\"NV8\"],[[127777,127788],\"valid\",[],\"NV8\"],[[127789,127791],\"valid\",[],\"NV8\"],[[127792,127797],\"valid\",[],\"NV8\"],[[127798,127798],\"valid\",[],\"NV8\"],[[127799,127868],\"valid\",[],\"NV8\"],[[127869,127869],\"valid\",[],\"NV8\"],[[127870,127871],\"valid\",[],\"NV8\"],[[127872,127891],\"valid\",[],\"NV8\"],[[127892,127903],\"valid\",[],\"NV8\"],[[127904,127940],\"valid\",[],\"NV8\"],[[127941,127941],\"valid\",[],\"NV8\"],[[127942,127946],\"valid\",[],\"NV8\"],[[127947,127950],\"valid\",[],\"NV8\"],[[127951,127955],\"valid\",[],\"NV8\"],[[127956,127967],\"valid\",[],\"NV8\"],[[127968,127984],\"valid\",[],\"NV8\"],[[127985,127991],\"valid\",[],\"NV8\"],[[127992,127999],\"valid\",[],\"NV8\"],[[128000,128062],\"valid\",[],\"NV8\"],[[128063,128063],\"valid\",[],\"NV8\"],[[128064,128064],\"valid\",[],\"NV8\"],[[128065,128065],\"valid\",[],\"NV8\"],[[128066,128247],\"valid\",[],\"NV8\"],[[128248,128248],\"valid\",[],\"NV8\"],[[128249,128252],\"valid\",[],\"NV8\"],[[128253,128254],\"valid\",[],\"NV8\"],[[128255,128255],\"valid\",[],\"NV8\"],[[128256,128317],\"valid\",[],\"NV8\"],[[128318,128319],\"valid\",[],\"NV8\"],[[128320,128323],\"valid\",[],\"NV8\"],[[128324,128330],\"valid\",[],\"NV8\"],[[128331,128335],\"valid\",[],\"NV8\"],[[128336,128359],\"valid\",[],\"NV8\"],[[128360,128377],\"valid\",[],\"NV8\"],[[128378,128378],\"disallowed\"],[[128379,128419],\"valid\",[],\"NV8\"],[[128420,128420],\"disallowed\"],[[128421,128506],\"valid\",[],\"NV8\"],[[128507,128511],\"valid\",[],\"NV8\"],[[128512,128512],\"valid\",[],\"NV8\"],[[128513,128528],\"valid\",[],\"NV8\"],[[128529,128529],\"valid\",[],\"NV8\"],[[128530,128532],\"valid\",[],\"NV8\"],[[128533,128533],\"valid\",[],\"NV8\"],[[128534,128534],\"valid\",[],\"NV8\"],[[128535,128535],\"valid\",[],\"NV8\"],[[128536,128536],\"valid\",[],\"NV8\"],[[128537,128537],\"valid\",[],\"NV8\"],[[128538,128538],\"valid\",[],\"NV8\"],[[128539,128539],\"valid\",[],\"NV8\"],[[128540,128542],\"valid\",[],\"NV8\"],[[128543,128543],\"valid\",[],\"NV8\"],[[128544,128549],\"valid\",[],\"NV8\"],[[128550,128551],\"valid\",[],\"NV8\"],[[128552,128555],\"valid\",[],\"NV8\"],[[128556,128556],\"valid\",[],\"NV8\"],[[128557,128557],\"valid\",[],\"NV8\"],[[128558,128559],\"valid\",[],\"NV8\"],[[128560,128563],\"valid\",[],\"NV8\"],[[128564,128564],\"valid\",[],\"NV8\"],[[128565,128576],\"valid\",[],\"NV8\"],[[128577,128578],\"valid\",[],\"NV8\"],[[128579,128580],\"valid\",[],\"NV8\"],[[128581,128591],\"valid\",[],\"NV8\"],[[128592,128639],\"valid\",[],\"NV8\"],[[128640,128709],\"valid\",[],\"NV8\"],[[128710,128719],\"valid\",[],\"NV8\"],[[128720,128720],\"valid\",[],\"NV8\"],[[128721,128735],\"disallowed\"],[[128736,128748],\"valid\",[],\"NV8\"],[[128749,128751],\"disallowed\"],[[128752,128755],\"valid\",[],\"NV8\"],[[128756,128767],\"disallowed\"],[[128768,128883],\"valid\",[],\"NV8\"],[[128884,128895],\"disallowed\"],[[128896,128980],\"valid\",[],\"NV8\"],[[128981,129023],\"disallowed\"],[[129024,129035],\"valid\",[],\"NV8\"],[[129036,129039],\"disallowed\"],[[129040,129095],\"valid\",[],\"NV8\"],[[129096,129103],\"disallowed\"],[[129104,129113],\"valid\",[],\"NV8\"],[[129114,129119],\"disallowed\"],[[129120,129159],\"valid\",[],\"NV8\"],[[129160,129167],\"disallowed\"],[[129168,129197],\"valid\",[],\"NV8\"],[[129198,129295],\"disallowed\"],[[129296,129304],\"valid\",[],\"NV8\"],[[129305,129407],\"disallowed\"],[[129408,129412],\"valid\",[],\"NV8\"],[[129413,129471],\"disallowed\"],[[129472,129472],\"valid\",[],\"NV8\"],[[129473,131069],\"disallowed\"],[[131070,131071],\"disallowed\"],[[131072,173782],\"valid\"],[[173783,173823],\"disallowed\"],[[173824,177972],\"valid\"],[[177973,177983],\"disallowed\"],[[177984,178205],\"valid\"],[[178206,178207],\"disallowed\"],[[178208,183969],\"valid\"],[[183970,194559],\"disallowed\"],[[194560,194560],\"mapped\",[20029]],[[194561,194561],\"mapped\",[20024]],[[194562,194562],\"mapped\",[20033]],[[194563,194563],\"mapped\",[131362]],[[194564,194564],\"mapped\",[20320]],[[194565,194565],\"mapped\",[20398]],[[194566,194566],\"mapped\",[20411]],[[194567,194567],\"mapped\",[20482]],[[194568,194568],\"mapped\",[20602]],[[194569,194569],\"mapped\",[20633]],[[194570,194570],\"mapped\",[20711]],[[194571,194571],\"mapped\",[20687]],[[194572,194572],\"mapped\",[13470]],[[194573,194573],\"mapped\",[132666]],[[194574,194574],\"mapped\",[20813]],[[194575,194575],\"mapped\",[20820]],[[194576,194576],\"mapped\",[20836]],[[194577,194577],\"mapped\",[20855]],[[194578,194578],\"mapped\",[132380]],[[194579,194579],\"mapped\",[13497]],[[194580,194580],\"mapped\",[20839]],[[194581,194581],\"mapped\",[20877]],[[194582,194582],\"mapped\",[132427]],[[194583,194583],\"mapped\",[20887]],[[194584,194584],\"mapped\",[20900]],[[194585,194585],\"mapped\",[20172]],[[194586,194586],\"mapped\",[20908]],[[194587,194587],\"mapped\",[20917]],[[194588,194588],\"mapped\",[168415]],[[194589,194589],\"mapped\",[20981]],[[194590,194590],\"mapped\",[20995]],[[194591,194591],\"mapped\",[13535]],[[194592,194592],\"mapped\",[21051]],[[194593,194593],\"mapped\",[21062]],[[194594,194594],\"mapped\",[21106]],[[194595,194595],\"mapped\",[21111]],[[194596,194596],\"mapped\",[13589]],[[194597,194597],\"mapped\",[21191]],[[194598,194598],\"mapped\",[21193]],[[194599,194599],\"mapped\",[21220]],[[194600,194600],\"mapped\",[21242]],[[194601,194601],\"mapped\",[21253]],[[194602,194602],\"mapped\",[21254]],[[194603,194603],\"mapped\",[21271]],[[194604,194604],\"mapped\",[21321]],[[194605,194605],\"mapped\",[21329]],[[194606,194606],\"mapped\",[21338]],[[194607,194607],\"mapped\",[21363]],[[194608,194608],\"mapped\",[21373]],[[194609,194611],\"mapped\",[21375]],[[194612,194612],\"mapped\",[133676]],[[194613,194613],\"mapped\",[28784]],[[194614,194614],\"mapped\",[21450]],[[194615,194615],\"mapped\",[21471]],[[194616,194616],\"mapped\",[133987]],[[194617,194617],\"mapped\",[21483]],[[194618,194618],\"mapped\",[21489]],[[194619,194619],\"mapped\",[21510]],[[194620,194620],\"mapped\",[21662]],[[194621,194621],\"mapped\",[21560]],[[194622,194622],\"mapped\",[21576]],[[194623,194623],\"mapped\",[21608]],[[194624,194624],\"mapped\",[21666]],[[194625,194625],\"mapped\",[21750]],[[194626,194626],\"mapped\",[21776]],[[194627,194627],\"mapped\",[21843]],[[194628,194628],\"mapped\",[21859]],[[194629,194630],\"mapped\",[21892]],[[194631,194631],\"mapped\",[21913]],[[194632,194632],\"mapped\",[21931]],[[194633,194633],\"mapped\",[21939]],[[194634,194634],\"mapped\",[21954]],[[194635,194635],\"mapped\",[22294]],[[194636,194636],\"mapped\",[22022]],[[194637,194637],\"mapped\",[22295]],[[194638,194638],\"mapped\",[22097]],[[194639,194639],\"mapped\",[22132]],[[194640,194640],\"mapped\",[20999]],[[194641,194641],\"mapped\",[22766]],[[194642,194642],\"mapped\",[22478]],[[194643,194643],\"mapped\",[22516]],[[194644,194644],\"mapped\",[22541]],[[194645,194645],\"mapped\",[22411]],[[194646,194646],\"mapped\",[22578]],[[194647,194647],\"mapped\",[22577]],[[194648,194648],\"mapped\",[22700]],[[194649,194649],\"mapped\",[136420]],[[194650,194650],\"mapped\",[22770]],[[194651,194651],\"mapped\",[22775]],[[194652,194652],\"mapped\",[22790]],[[194653,194653],\"mapped\",[22810]],[[194654,194654],\"mapped\",[22818]],[[194655,194655],\"mapped\",[22882]],[[194656,194656],\"mapped\",[136872]],[[194657,194657],\"mapped\",[136938]],[[194658,194658],\"mapped\",[23020]],[[194659,194659],\"mapped\",[23067]],[[194660,194660],\"mapped\",[23079]],[[194661,194661],\"mapped\",[23000]],[[194662,194662],\"mapped\",[23142]],[[194663,194663],\"mapped\",[14062]],[[194664,194664],\"disallowed\"],[[194665,194665],\"mapped\",[23304]],[[194666,194667],\"mapped\",[23358]],[[194668,194668],\"mapped\",[137672]],[[194669,194669],\"mapped\",[23491]],[[194670,194670],\"mapped\",[23512]],[[194671,194671],\"mapped\",[23527]],[[194672,194672],\"mapped\",[23539]],[[194673,194673],\"mapped\",[138008]],[[194674,194674],\"mapped\",[23551]],[[194675,194675],\"mapped\",[23558]],[[194676,194676],\"disallowed\"],[[194677,194677],\"mapped\",[23586]],[[194678,194678],\"mapped\",[14209]],[[194679,194679],\"mapped\",[23648]],[[194680,194680],\"mapped\",[23662]],[[194681,194681],\"mapped\",[23744]],[[194682,194682],\"mapped\",[23693]],[[194683,194683],\"mapped\",[138724]],[[194684,194684],\"mapped\",[23875]],[[194685,194685],\"mapped\",[138726]],[[194686,194686],\"mapped\",[23918]],[[194687,194687],\"mapped\",[23915]],[[194688,194688],\"mapped\",[23932]],[[194689,194689],\"mapped\",[24033]],[[194690,194690],\"mapped\",[24034]],[[194691,194691],\"mapped\",[14383]],[[194692,194692],\"mapped\",[24061]],[[194693,194693],\"mapped\",[24104]],[[194694,194694],\"mapped\",[24125]],[[194695,194695],\"mapped\",[24169]],[[194696,194696],\"mapped\",[14434]],[[194697,194697],\"mapped\",[139651]],[[194698,194698],\"mapped\",[14460]],[[194699,194699],\"mapped\",[24240]],[[194700,194700],\"mapped\",[24243]],[[194701,194701],\"mapped\",[24246]],[[194702,194702],\"mapped\",[24266]],[[194703,194703],\"mapped\",[172946]],[[194704,194704],\"mapped\",[24318]],[[194705,194706],\"mapped\",[140081]],[[194707,194707],\"mapped\",[33281]],[[194708,194709],\"mapped\",[24354]],[[194710,194710],\"mapped\",[14535]],[[194711,194711],\"mapped\",[144056]],[[194712,194712],\"mapped\",[156122]],[[194713,194713],\"mapped\",[24418]],[[194714,194714],\"mapped\",[24427]],[[194715,194715],\"mapped\",[14563]],[[194716,194716],\"mapped\",[24474]],[[194717,194717],\"mapped\",[24525]],[[194718,194718],\"mapped\",[24535]],[[194719,194719],\"mapped\",[24569]],[[194720,194720],\"mapped\",[24705]],[[194721,194721],\"mapped\",[14650]],[[194722,194722],\"mapped\",[14620]],[[194723,194723],\"mapped\",[24724]],[[194724,194724],\"mapped\",[141012]],[[194725,194725],\"mapped\",[24775]],[[194726,194726],\"mapped\",[24904]],[[194727,194727],\"mapped\",[24908]],[[194728,194728],\"mapped\",[24910]],[[194729,194729],\"mapped\",[24908]],[[194730,194730],\"mapped\",[24954]],[[194731,194731],\"mapped\",[24974]],[[194732,194732],\"mapped\",[25010]],[[194733,194733],\"mapped\",[24996]],[[194734,194734],\"mapped\",[25007]],[[194735,194735],\"mapped\",[25054]],[[194736,194736],\"mapped\",[25074]],[[194737,194737],\"mapped\",[25078]],[[194738,194738],\"mapped\",[25104]],[[194739,194739],\"mapped\",[25115]],[[194740,194740],\"mapped\",[25181]],[[194741,194741],\"mapped\",[25265]],[[194742,194742],\"mapped\",[25300]],[[194743,194743],\"mapped\",[25424]],[[194744,194744],\"mapped\",[142092]],[[194745,194745],\"mapped\",[25405]],[[194746,194746],\"mapped\",[25340]],[[194747,194747],\"mapped\",[25448]],[[194748,194748],\"mapped\",[25475]],[[194749,194749],\"mapped\",[25572]],[[194750,194750],\"mapped\",[142321]],[[194751,194751],\"mapped\",[25634]],[[194752,194752],\"mapped\",[25541]],[[194753,194753],\"mapped\",[25513]],[[194754,194754],\"mapped\",[14894]],[[194755,194755],\"mapped\",[25705]],[[194756,194756],\"mapped\",[25726]],[[194757,194757],\"mapped\",[25757]],[[194758,194758],\"mapped\",[25719]],[[194759,194759],\"mapped\",[14956]],[[194760,194760],\"mapped\",[25935]],[[194761,194761],\"mapped\",[25964]],[[194762,194762],\"mapped\",[143370]],[[194763,194763],\"mapped\",[26083]],[[194764,194764],\"mapped\",[26360]],[[194765,194765],\"mapped\",[26185]],[[194766,194766],\"mapped\",[15129]],[[194767,194767],\"mapped\",[26257]],[[194768,194768],\"mapped\",[15112]],[[194769,194769],\"mapped\",[15076]],[[194770,194770],\"mapped\",[20882]],[[194771,194771],\"mapped\",[20885]],[[194772,194772],\"mapped\",[26368]],[[194773,194773],\"mapped\",[26268]],[[194774,194774],\"mapped\",[32941]],[[194775,194775],\"mapped\",[17369]],[[194776,194776],\"mapped\",[26391]],[[194777,194777],\"mapped\",[26395]],[[194778,194778],\"mapped\",[26401]],[[194779,194779],\"mapped\",[26462]],[[194780,194780],\"mapped\",[26451]],[[194781,194781],\"mapped\",[144323]],[[194782,194782],\"mapped\",[15177]],[[194783,194783],\"mapped\",[26618]],[[194784,194784],\"mapped\",[26501]],[[194785,194785],\"mapped\",[26706]],[[194786,194786],\"mapped\",[26757]],[[194787,194787],\"mapped\",[144493]],[[194788,194788],\"mapped\",[26766]],[[194789,194789],\"mapped\",[26655]],[[194790,194790],\"mapped\",[26900]],[[194791,194791],\"mapped\",[15261]],[[194792,194792],\"mapped\",[26946]],[[194793,194793],\"mapped\",[27043]],[[194794,194794],\"mapped\",[27114]],[[194795,194795],\"mapped\",[27304]],[[194796,194796],\"mapped\",[145059]],[[194797,194797],\"mapped\",[27355]],[[194798,194798],\"mapped\",[15384]],[[194799,194799],\"mapped\",[27425]],[[194800,194800],\"mapped\",[145575]],[[194801,194801],\"mapped\",[27476]],[[194802,194802],\"mapped\",[15438]],[[194803,194803],\"mapped\",[27506]],[[194804,194804],\"mapped\",[27551]],[[194805,194805],\"mapped\",[27578]],[[194806,194806],\"mapped\",[27579]],[[194807,194807],\"mapped\",[146061]],[[194808,194808],\"mapped\",[138507]],[[194809,194809],\"mapped\",[146170]],[[194810,194810],\"mapped\",[27726]],[[194811,194811],\"mapped\",[146620]],[[194812,194812],\"mapped\",[27839]],[[194813,194813],\"mapped\",[27853]],[[194814,194814],\"mapped\",[27751]],[[194815,194815],\"mapped\",[27926]],[[194816,194816],\"mapped\",[27966]],[[194817,194817],\"mapped\",[28023]],[[194818,194818],\"mapped\",[27969]],[[194819,194819],\"mapped\",[28009]],[[194820,194820],\"mapped\",[28024]],[[194821,194821],\"mapped\",[28037]],[[194822,194822],\"mapped\",[146718]],[[194823,194823],\"mapped\",[27956]],[[194824,194824],\"mapped\",[28207]],[[194825,194825],\"mapped\",[28270]],[[194826,194826],\"mapped\",[15667]],[[194827,194827],\"mapped\",[28363]],[[194828,194828],\"mapped\",[28359]],[[194829,194829],\"mapped\",[147153]],[[194830,194830],\"mapped\",[28153]],[[194831,194831],\"mapped\",[28526]],[[194832,194832],\"mapped\",[147294]],[[194833,194833],\"mapped\",[147342]],[[194834,194834],\"mapped\",[28614]],[[194835,194835],\"mapped\",[28729]],[[194836,194836],\"mapped\",[28702]],[[194837,194837],\"mapped\",[28699]],[[194838,194838],\"mapped\",[15766]],[[194839,194839],\"mapped\",[28746]],[[194840,194840],\"mapped\",[28797]],[[194841,194841],\"mapped\",[28791]],[[194842,194842],\"mapped\",[28845]],[[194843,194843],\"mapped\",[132389]],[[194844,194844],\"mapped\",[28997]],[[194845,194845],\"mapped\",[148067]],[[194846,194846],\"mapped\",[29084]],[[194847,194847],\"disallowed\"],[[194848,194848],\"mapped\",[29224]],[[194849,194849],\"mapped\",[29237]],[[194850,194850],\"mapped\",[29264]],[[194851,194851],\"mapped\",[149000]],[[194852,194852],\"mapped\",[29312]],[[194853,194853],\"mapped\",[29333]],[[194854,194854],\"mapped\",[149301]],[[194855,194855],\"mapped\",[149524]],[[194856,194856],\"mapped\",[29562]],[[194857,194857],\"mapped\",[29579]],[[194858,194858],\"mapped\",[16044]],[[194859,194859],\"mapped\",[29605]],[[194860,194861],\"mapped\",[16056]],[[194862,194862],\"mapped\",[29767]],[[194863,194863],\"mapped\",[29788]],[[194864,194864],\"mapped\",[29809]],[[194865,194865],\"mapped\",[29829]],[[194866,194866],\"mapped\",[29898]],[[194867,194867],\"mapped\",[16155]],[[194868,194868],\"mapped\",[29988]],[[194869,194869],\"mapped\",[150582]],[[194870,194870],\"mapped\",[30014]],[[194871,194871],\"mapped\",[150674]],[[194872,194872],\"mapped\",[30064]],[[194873,194873],\"mapped\",[139679]],[[194874,194874],\"mapped\",[30224]],[[194875,194875],\"mapped\",[151457]],[[194876,194876],\"mapped\",[151480]],[[194877,194877],\"mapped\",[151620]],[[194878,194878],\"mapped\",[16380]],[[194879,194879],\"mapped\",[16392]],[[194880,194880],\"mapped\",[30452]],[[194881,194881],\"mapped\",[151795]],[[194882,194882],\"mapped\",[151794]],[[194883,194883],\"mapped\",[151833]],[[194884,194884],\"mapped\",[151859]],[[194885,194885],\"mapped\",[30494]],[[194886,194887],\"mapped\",[30495]],[[194888,194888],\"mapped\",[30538]],[[194889,194889],\"mapped\",[16441]],[[194890,194890],\"mapped\",[30603]],[[194891,194891],\"mapped\",[16454]],[[194892,194892],\"mapped\",[16534]],[[194893,194893],\"mapped\",[152605]],[[194894,194894],\"mapped\",[30798]],[[194895,194895],\"mapped\",[30860]],[[194896,194896],\"mapped\",[30924]],[[194897,194897],\"mapped\",[16611]],[[194898,194898],\"mapped\",[153126]],[[194899,194899],\"mapped\",[31062]],[[194900,194900],\"mapped\",[153242]],[[194901,194901],\"mapped\",[153285]],[[194902,194902],\"mapped\",[31119]],[[194903,194903],\"mapped\",[31211]],[[194904,194904],\"mapped\",[16687]],[[194905,194905],\"mapped\",[31296]],[[194906,194906],\"mapped\",[31306]],[[194907,194907],\"mapped\",[31311]],[[194908,194908],\"mapped\",[153980]],[[194909,194910],\"mapped\",[154279]],[[194911,194911],\"disallowed\"],[[194912,194912],\"mapped\",[16898]],[[194913,194913],\"mapped\",[154539]],[[194914,194914],\"mapped\",[31686]],[[194915,194915],\"mapped\",[31689]],[[194916,194916],\"mapped\",[16935]],[[194917,194917],\"mapped\",[154752]],[[194918,194918],\"mapped\",[31954]],[[194919,194919],\"mapped\",[17056]],[[194920,194920],\"mapped\",[31976]],[[194921,194921],\"mapped\",[31971]],[[194922,194922],\"mapped\",[32000]],[[194923,194923],\"mapped\",[155526]],[[194924,194924],\"mapped\",[32099]],[[194925,194925],\"mapped\",[17153]],[[194926,194926],\"mapped\",[32199]],[[194927,194927],\"mapped\",[32258]],[[194928,194928],\"mapped\",[32325]],[[194929,194929],\"mapped\",[17204]],[[194930,194930],\"mapped\",[156200]],[[194931,194931],\"mapped\",[156231]],[[194932,194932],\"mapped\",[17241]],[[194933,194933],\"mapped\",[156377]],[[194934,194934],\"mapped\",[32634]],[[194935,194935],\"mapped\",[156478]],[[194936,194936],\"mapped\",[32661]],[[194937,194937],\"mapped\",[32762]],[[194938,194938],\"mapped\",[32773]],[[194939,194939],\"mapped\",[156890]],[[194940,194940],\"mapped\",[156963]],[[194941,194941],\"mapped\",[32864]],[[194942,194942],\"mapped\",[157096]],[[194943,194943],\"mapped\",[32880]],[[194944,194944],\"mapped\",[144223]],[[194945,194945],\"mapped\",[17365]],[[194946,194946],\"mapped\",[32946]],[[194947,194947],\"mapped\",[33027]],[[194948,194948],\"mapped\",[17419]],[[194949,194949],\"mapped\",[33086]],[[194950,194950],\"mapped\",[23221]],[[194951,194951],\"mapped\",[157607]],[[194952,194952],\"mapped\",[157621]],[[194953,194953],\"mapped\",[144275]],[[194954,194954],\"mapped\",[144284]],[[194955,194955],\"mapped\",[33281]],[[194956,194956],\"mapped\",[33284]],[[194957,194957],\"mapped\",[36766]],[[194958,194958],\"mapped\",[17515]],[[194959,194959],\"mapped\",[33425]],[[194960,194960],\"mapped\",[33419]],[[194961,194961],\"mapped\",[33437]],[[194962,194962],\"mapped\",[21171]],[[194963,194963],\"mapped\",[33457]],[[194964,194964],\"mapped\",[33459]],[[194965,194965],\"mapped\",[33469]],[[194966,194966],\"mapped\",[33510]],[[194967,194967],\"mapped\",[158524]],[[194968,194968],\"mapped\",[33509]],[[194969,194969],\"mapped\",[33565]],[[194970,194970],\"mapped\",[33635]],[[194971,194971],\"mapped\",[33709]],[[194972,194972],\"mapped\",[33571]],[[194973,194973],\"mapped\",[33725]],[[194974,194974],\"mapped\",[33767]],[[194975,194975],\"mapped\",[33879]],[[194976,194976],\"mapped\",[33619]],[[194977,194977],\"mapped\",[33738]],[[194978,194978],\"mapped\",[33740]],[[194979,194979],\"mapped\",[33756]],[[194980,194980],\"mapped\",[158774]],[[194981,194981],\"mapped\",[159083]],[[194982,194982],\"mapped\",[158933]],[[194983,194983],\"mapped\",[17707]],[[194984,194984],\"mapped\",[34033]],[[194985,194985],\"mapped\",[34035]],[[194986,194986],\"mapped\",[34070]],[[194987,194987],\"mapped\",[160714]],[[194988,194988],\"mapped\",[34148]],[[194989,194989],\"mapped\",[159532]],[[194990,194990],\"mapped\",[17757]],[[194991,194991],\"mapped\",[17761]],[[194992,194992],\"mapped\",[159665]],[[194993,194993],\"mapped\",[159954]],[[194994,194994],\"mapped\",[17771]],[[194995,194995],\"mapped\",[34384]],[[194996,194996],\"mapped\",[34396]],[[194997,194997],\"mapped\",[34407]],[[194998,194998],\"mapped\",[34409]],[[194999,194999],\"mapped\",[34473]],[[195000,195000],\"mapped\",[34440]],[[195001,195001],\"mapped\",[34574]],[[195002,195002],\"mapped\",[34530]],[[195003,195003],\"mapped\",[34681]],[[195004,195004],\"mapped\",[34600]],[[195005,195005],\"mapped\",[34667]],[[195006,195006],\"mapped\",[34694]],[[195007,195007],\"disallowed\"],[[195008,195008],\"mapped\",[34785]],[[195009,195009],\"mapped\",[34817]],[[195010,195010],\"mapped\",[17913]],[[195011,195011],\"mapped\",[34912]],[[195012,195012],\"mapped\",[34915]],[[195013,195013],\"mapped\",[161383]],[[195014,195014],\"mapped\",[35031]],[[195015,195015],\"mapped\",[35038]],[[195016,195016],\"mapped\",[17973]],[[195017,195017],\"mapped\",[35066]],[[195018,195018],\"mapped\",[13499]],[[195019,195019],\"mapped\",[161966]],[[195020,195020],\"mapped\",[162150]],[[195021,195021],\"mapped\",[18110]],[[195022,195022],\"mapped\",[18119]],[[195023,195023],\"mapped\",[35488]],[[195024,195024],\"mapped\",[35565]],[[195025,195025],\"mapped\",[35722]],[[195026,195026],\"mapped\",[35925]],[[195027,195027],\"mapped\",[162984]],[[195028,195028],\"mapped\",[36011]],[[195029,195029],\"mapped\",[36033]],[[195030,195030],\"mapped\",[36123]],[[195031,195031],\"mapped\",[36215]],[[195032,195032],\"mapped\",[163631]],[[195033,195033],\"mapped\",[133124]],[[195034,195034],\"mapped\",[36299]],[[195035,195035],\"mapped\",[36284]],[[195036,195036],\"mapped\",[36336]],[[195037,195037],\"mapped\",[133342]],[[195038,195038],\"mapped\",[36564]],[[195039,195039],\"mapped\",[36664]],[[195040,195040],\"mapped\",[165330]],[[195041,195041],\"mapped\",[165357]],[[195042,195042],\"mapped\",[37012]],[[195043,195043],\"mapped\",[37105]],[[195044,195044],\"mapped\",[37137]],[[195045,195045],\"mapped\",[165678]],[[195046,195046],\"mapped\",[37147]],[[195047,195047],\"mapped\",[37432]],[[195048,195048],\"mapped\",[37591]],[[195049,195049],\"mapped\",[37592]],[[195050,195050],\"mapped\",[37500]],[[195051,195051],\"mapped\",[37881]],[[195052,195052],\"mapped\",[37909]],[[195053,195053],\"mapped\",[166906]],[[195054,195054],\"mapped\",[38283]],[[195055,195055],\"mapped\",[18837]],[[195056,195056],\"mapped\",[38327]],[[195057,195057],\"mapped\",[167287]],[[195058,195058],\"mapped\",[18918]],[[195059,195059],\"mapped\",[38595]],[[195060,195060],\"mapped\",[23986]],[[195061,195061],\"mapped\",[38691]],[[195062,195062],\"mapped\",[168261]],[[195063,195063],\"mapped\",[168474]],[[195064,195064],\"mapped\",[19054]],[[195065,195065],\"mapped\",[19062]],[[195066,195066],\"mapped\",[38880]],[[195067,195067],\"mapped\",[168970]],[[195068,195068],\"mapped\",[19122]],[[195069,195069],\"mapped\",[169110]],[[195070,195071],\"mapped\",[38923]],[[195072,195072],\"mapped\",[38953]],[[195073,195073],\"mapped\",[169398]],[[195074,195074],\"mapped\",[39138]],[[195075,195075],\"mapped\",[19251]],[[195076,195076],\"mapped\",[39209]],[[195077,195077],\"mapped\",[39335]],[[195078,195078],\"mapped\",[39362]],[[195079,195079],\"mapped\",[39422]],[[195080,195080],\"mapped\",[19406]],[[195081,195081],\"mapped\",[170800]],[[195082,195082],\"mapped\",[39698]],[[195083,195083],\"mapped\",[40000]],[[195084,195084],\"mapped\",[40189]],[[195085,195085],\"mapped\",[19662]],[[195086,195086],\"mapped\",[19693]],[[195087,195087],\"mapped\",[40295]],[[195088,195088],\"mapped\",[172238]],[[195089,195089],\"mapped\",[19704]],[[195090,195090],\"mapped\",[172293]],[[195091,195091],\"mapped\",[172558]],[[195092,195092],\"mapped\",[172689]],[[195093,195093],\"mapped\",[40635]],[[195094,195094],\"mapped\",[19798]],[[195095,195095],\"mapped\",[40697]],[[195096,195096],\"mapped\",[40702]],[[195097,195097],\"mapped\",[40709]],[[195098,195098],\"mapped\",[40719]],[[195099,195099],\"mapped\",[40726]],[[195100,195100],\"mapped\",[40763]],[[195101,195101],\"mapped\",[173568]],[[195102,196605],\"disallowed\"],[[196606,196607],\"disallowed\"],[[196608,262141],\"disallowed\"],[[262142,262143],\"disallowed\"],[[262144,327677],\"disallowed\"],[[327678,327679],\"disallowed\"],[[327680,393213],\"disallowed\"],[[393214,393215],\"disallowed\"],[[393216,458749],\"disallowed\"],[[458750,458751],\"disallowed\"],[[458752,524285],\"disallowed\"],[[524286,524287],\"disallowed\"],[[524288,589821],\"disallowed\"],[[589822,589823],\"disallowed\"],[[589824,655357],\"disallowed\"],[[655358,655359],\"disallowed\"],[[655360,720893],\"disallowed\"],[[720894,720895],\"disallowed\"],[[720896,786429],\"disallowed\"],[[786430,786431],\"disallowed\"],[[786432,851965],\"disallowed\"],[[851966,851967],\"disallowed\"],[[851968,917501],\"disallowed\"],[[917502,917503],\"disallowed\"],[[917504,917504],\"disallowed\"],[[917505,917505],\"disallowed\"],[[917506,917535],\"disallowed\"],[[917536,917631],\"disallowed\"],[[917632,917759],\"disallowed\"],[[917760,917999],\"ignored\"],[[918000,983037],\"disallowed\"],[[983038,983039],\"disallowed\"],[[983040,1048573],\"disallowed\"],[[1048574,1048575],\"disallowed\"],[[1048576,1114109],\"disallowed\"],[[1114110,1114111],\"disallowed\"]]", "\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n", "\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n", "\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\nexports.AbortError = AbortError;\n", "const nodeFetch = require('node-fetch')\nconst realFetch = nodeFetch.default || nodeFetch\n\nconst fetch = function (url, options) {\n  // Support schemaless URIs on the server for parity with the browser.\n  // Ex: //github.com/ -> https://github.com/\n  if (/^\\/\\//.test(url)) {\n    url = 'https:' + url\n  }\n  return realFetch.call(this, url, options)\n}\n\nfetch.ponyfill = true\n\nmodule.exports = exports = fetch\nexports.fetch = fetch\nexports.Headers = nodeFetch.Headers\nexports.Request = nodeFetch.Request\nexports.Response = nodeFetch.Response\n\n// Needed for TypeScript consumers without esModuleInterop.\nexports.default = fetch\n", "'use strict';\n\nvar process = require('process');\nvar node_os = require('node:os');\nvar path = require('node:path');\nvar node_process = require('node:process');\nvar fs = require('fs');\n\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\n\nvar path__namespace = /*#__PURE__*/_interopNamespaceDefault(path);\n\n/**\n * Environment Key.\n */\nlet EnvironmentKey = /*#__PURE__*/function (EnvironmentKey) {\n  EnvironmentKey[\"ScwConfigPath\"] = \"SCW_CONFIG_PATH\";\n  EnvironmentKey[\"ScwAccessKey\"] = \"SCW_ACCESS_KEY\";\n  EnvironmentKey[\"ScwSecretKey\"] = \"SCW_SECRET_KEY\";\n  EnvironmentKey[\"ScwAPIURL\"] = \"SCW_API_URL\";\n  EnvironmentKey[\"ScwDefaultOrganizationId\"] = \"SCW_DEFAULT_ORGANIZATION_ID\";\n  EnvironmentKey[\"ScwDefaultProjectId\"] = \"SCW_DEFAULT_PROJECT_ID\";\n  EnvironmentKey[\"ScwDefaultRegion\"] = \"SCW_DEFAULT_REGION\";\n  EnvironmentKey[\"ScwDefaultZone\"] = \"SCW_DEFAULT_ZONE\";\n  return EnvironmentKey;\n}({});\n\n/**\n * Gets the Scaleway directory.\n *\n * @returns The path to the Scaleway diretory\n *\n * @internal\n */\nconst getScwConfigurationDirectory = () => {\n  const xdgConfigPath = node_process.env.XDG_CONFIG_HOME;\n  if (typeof xdgConfigPath === 'string' && xdgConfigPath.length > 0) {\n    return path__namespace.join(xdgConfigPath, 'scw');\n  }\n  return path__namespace.join(node_os.homedir(), '.config', 'scw');\n};\n\n/**\n * Gets the configuration file path.\n *\n * @returns The path to the configuration file\n *\n * @internal\n */\nconst resolveConfigurationFilePath = () => {\n  // Try path defined by user in env variables\n  const envFilePath = node_process.env[EnvironmentKey.ScwConfigPath];\n  if (typeof envFilePath === 'string' && envFilePath.length > 0) {\n    return envFilePath;\n  }\n\n  // or fallback on the default path\n  return path__namespace.join(getScwConfigurationDirectory(), 'config.yaml');\n};\n\nconst STRIP_COMMENT_REGEX = /(^|\\s)[;#]/;\nconst DETECT_SECTION_REGEX = /^\\s*([^]+):\\s*$/;\nconst DETECT_ITEM_REGEX = /^\\s*(.+?)\\s*:\\s*(.+?)\\s*$/;\n\n/**\n * Converts YAML to configuration map.\n *\n * @param input - YAML string\n * @returns The configuration map\n *\n * @internal\n */\nconst convertYamlToConfiguration = input => {\n  let foundProfilesKey = false;\n  let currentSection = 'default';\n  const map = {};\n  if (typeof input !== 'string') {\n    return map;\n  }\n  input.split(/\\r?\\n/).forEach(rawLine => {\n    // remove comments\n    const line = rawLine.split(STRIP_COMMENT_REGEX)[0];\n    // parse sections\n    const newSection = DETECT_SECTION_REGEX.exec(line);\n    if (newSection) {\n      currentSection = undefined;\n      if (newSection[1] === 'profiles') {\n        foundProfilesKey = true;\n      } else if (foundProfilesKey) {\n        [, currentSection] = newSection;\n      }\n    }\n    // parse items\n    else if (currentSection) {\n      const item = DETECT_ITEM_REGEX.exec(line);\n      if (item) {\n        if (typeof map[currentSection] !== 'object') {\n          map[currentSection] = {};\n        }\n        [,, map[currentSection][item[1]]] = item;\n      }\n    }\n  });\n  return map;\n};\n\n/**\n * Loads configuration from a file.\n *\n * @param filePath - Path to the configuration file\n * @returns The configuration\n *\n * @throws Error\n * Thrown if the file doesn't exist.\n *\n * @internal\n */\nconst loadConfigurationFromFile = filePath => {\n  // `readFileSync` returns a string when encoding option is specified.\n  // {@link https://nodejs.org/api/fs.html#fs_fs_readfilesync_path_options}\n  const fileContent = fs.readFileSync(filePath, 'utf-8');\n  return convertYamlToConfiguration(fileContent);\n};\n\nconst convertFileConfigToSDK = obj => ({\n  accessKey: obj.access_key,\n  apiURL: obj.api_url,\n  defaultOrganizationId: obj.default_organization_id,\n  defaultProjectId: obj.default_project_id,\n  defaultRegion: obj.default_region,\n  defaultZone: obj.default_zone,\n  secretKey: obj.secret_key\n});\n\n/**\n * Loads profile from environment values.\n *\n * @returns The profile filled with values found in the environment\n *\n * @public\n */\nconst loadProfileFromEnvironmentValues = () => ({\n  accessKey: process.env[EnvironmentKey.ScwAccessKey],\n  apiURL: process.env[EnvironmentKey.ScwAPIURL],\n  defaultOrganizationId: process.env[EnvironmentKey.ScwDefaultOrganizationId],\n  defaultProjectId: process.env[EnvironmentKey.ScwDefaultProjectId],\n  defaultRegion: process.env[EnvironmentKey.ScwDefaultRegion],\n  defaultZone: process.env[EnvironmentKey.ScwDefaultZone],\n  secretKey: process.env[EnvironmentKey.ScwSecretKey]\n});\n\n/**\n * Loads all the profiles from configuration file.\n *\n * @param params - The parameters to load the profile\n * @returns The profiles filled with values found in the configuration profile\n *\n * @throws Error\n * Thrown if the configuration file couldn't be found.\n *\n * @public\n */\nconst loadAllProfilesFromConfigurationFile = params => {\n  const filePath = params?.filepath ?? resolveConfigurationFilePath();\n  if (typeof filePath !== 'string' || filePath.length === 0) {\n    throw new Error('Could not find the path to the configuration file.');\n  }\n  const configs = loadConfigurationFromFile(filePath);\n  return Object.keys(configs).reduce((prev, pKey) => ({\n    ...prev,\n    [pKey]: convertFileConfigToSDK(configs[pKey])\n  }), {});\n};\n\n/**\n * Loads profile from configuration file.\n *\n * @param params - The parameters to load the profile\n * @returns The profile filled with values found in the configuration profile\n *\n * @throws Error\n * Thrown if the configuration file couldn't be found,\n * or if the specified profile can't be found.\n *\n * @public\n */\nconst loadProfileFromConfigurationFile = params => {\n  const configs = loadAllProfilesFromConfigurationFile(params);\n  const profileName = params?.profileName ?? 'default';\n  const profileMap = configs[profileName];\n  if (typeof profileMap !== 'object') {\n    throw new Error(`Could not find the desired profile '${profileName}' in the configuration file.`);\n  }\n  return profileMap;\n};\n\nexports.loadAllProfilesFromConfigurationFile = loadAllProfilesFromConfigurationFile;\nexports.loadProfileFromConfigurationFile = loadProfileFromConfigurationFile;\nexports.loadProfileFromEnvironmentValues = loadProfileFromEnvironmentValues;\n", "'use strict';\n\n// eslint-disable-next-line eslint-comments/disable-enable-pair\n/* eslint-disable @typescript-eslint/naming-convention */\nlet LevelResolver = /*#__PURE__*/function (LevelResolver) {\n  LevelResolver[LevelResolver[\"silent\"] = 0] = \"silent\";\n  LevelResolver[LevelResolver[\"error\"] = 1] = \"error\";\n  LevelResolver[LevelResolver[\"warn\"] = 2] = \"warn\";\n  LevelResolver[LevelResolver[\"info\"] = 3] = \"info\";\n  LevelResolver[LevelResolver[\"debug\"] = 4] = \"debug\";\n  return LevelResolver;\n}({});\nconst shouldLog = (currentLevel, level) => LevelResolver[level] <= currentLevel;\n\n/**\n * A Logger using console output.\n *\n * @param logLevel - The logger level name\n * @param prefix - An optional logger message prefix\n * @param output - The output to print logs, using by default the global console object\n *\n * @internal\n */\nclass ConsoleLogger {\n  constructor(logLevel, prefix = '', output = console) {\n    this.logLevel = logLevel;\n    this.prefix = prefix;\n    this.output = output;\n    this.level = LevelResolver[this.logLevel];\n  }\n  makeMethod(method) {\n    return message => {\n      if (shouldLog(this.level, method)) {\n        this.output[method](this.prefix ? `${this.prefix} ${message}` : message);\n      }\n    };\n  }\n  debug = this.makeMethod('debug');\n  error = this.makeMethod('error');\n  info = this.makeMethod('info');\n  warn = this.makeMethod('warn');\n}\n\nlet sdkLogger = /*#__PURE__*/new ConsoleLogger('silent');\n\n/**\n * Sets a logger to be used within the SDK.\n *\n * @param logger - The Logger instance\n *\n * @public\n */\nconst setLogger = logger => {\n  sdkLogger = logger;\n};\n\n/**\n * Sets the logger to console logger with given logLevel (log is disabled by default).\n *\n * @param logLevel - The Log level (default to 'warn')\n * @param prefix - A Log message prefix (default to 'scaleway-sdk-js:')\n *\n * @public\n */\nconst enableConsoleLogger = (logLevel = 'warn', prefix = 'scaleway-sdk-js:') => setLogger(new ConsoleLogger(logLevel, prefix));\n\n/**\n * Returns the active SDK logger.\n *\n * @internal\n */\nconst getLogger = () => sdkLogger;\n\n/**\n * Adds an header to a request through an interceptor.\n *\n * @param key - The header key\n * @param value - The header value\n * @returns The Request interceptor\n *\n * @internal\n */\nconst addHeaderInterceptor = (key, value) => ({\n  request\n}) => {\n  const clone = request.clone();\n  if (value !== undefined) {\n    clone.headers.append(key, value);\n  }\n  return clone;\n};\n\n/**\n * Adds asynchronously an header to a request through an interceptor.\n *\n * @param key - The header key\n * @param value - The header value as a Promise\n * @returns The Request interceptor\n *\n * @internal\n */\nconst addAsyncHeaderInterceptor = (key, getter) => async request => addHeaderInterceptor(key, await getter())(request);\n\nconst isAccessKeyRegex = /^SCW[A-Z0-9]{17}$/i;\nconst isRegionRegex = /^[a-z]{2}-[a-z]{3}$/i;\nconst isUUIDRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\nconst isZoneRegex = /^[a-z]{2}-[a-z]{3}-[1-9]$/i;\n\n/** Returns true if the given string has a valid UUID format. */\nconst isUUID = str => isUUIDRegex.test(str);\n\n/** Returns true if the given string has a valid Scaleway access key format. */\nconst isAccessKey = str => isAccessKeyRegex.test(str);\n\n/** Returns true if the given string has a valid Scaleway secret key format. */\nconst isSecretKey = str => isUUID(str);\n\n/** Returns true if the given string has a valid Scaleway organization ID format. */\nconst isOrganizationId = str => isUUID(str);\n\n/** Returns true if the given string has a valid Scaleway project ID format. */\nconst isProjectId = str => isUUID(str);\n\n/** Returns true if the given string has a valid region format. */\nconst isRegion = str => isRegionRegex.test(str);\n\n/** Returns true if the given string has a valid zone format. */\nconst isZone = str => isZoneRegex.test(str);\n\n/** Returns true if the given string has a valid URL format and starts by `http(s):`. */\nconst isURL = str => {\n  let url;\n  try {\n    url = new URL(str);\n  } catch {\n    return false;\n  }\n  return url.protocol === 'http:' || url.protocol === 'https:';\n};\n\n/**\n * Holds access key and secret key.\n *\n * @public\n */\n\n/**\n * Holds default values of a Scaleway profile.\n *\n * @public\n */\n\n/**\n * Holds values of a Scaleway profile.\n *\n * @public\n */\n\n/**\n * Verifies that the payload contains both the accessKey and the secretKey.\n *\n * @param obj - The secrets\n * @returns Whether the secrets are not empty.\n *\n * @internal\n */\nconst hasAuthenticationSecrets = obj => typeof obj.accessKey === 'string' && obj.accessKey !== '' && typeof obj.secretKey === 'string' && obj.secretKey !== '';\n\n/**\n * Asserts the format of secrets.\n *\n * @param obj - The secrets\n * @returns Whether the secrets use a valid format\n *\n * @throws Error\n * Thrown if either the accessKey or the secretKey has en invalid format.\n *\n * @internal\n */\nfunction assertValidAuthenticationSecrets(obj) {\n  if (!(obj.accessKey && obj.secretKey)) {\n    throw new Error(`Invalid secrets, accessKey & secretKey must be defined. See https://www.scaleway.com/en/docs/identity-and-access-management/iam/how-to/create-api-keys/`);\n  }\n  if (!isAccessKey(obj.accessKey)) {\n    throw new Error(`Invalid access key format '${obj.accessKey}', expected SCWXXXXXXXXXXXXXXXXX format. See https://www.scaleway.com/en/docs/identity-and-access-management/iam/how-to/create-api-keys/`);\n  }\n  if (!isSecretKey(obj.secretKey)) {\n    throw new Error(`Invalid secret key format '${obj.secretKey}', expected a UUID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx. See https://www.scaleway.com/en/docs/identity-and-access-management/iam/how-to/create-api-keys/`);\n  }\n}\n\nconst SESSION_HEADER_KEY = 'x-session-token';\nconst AUTH_HEADER_KEY = 'x-auth-token';\n/**\n * Authenticates with a session token.\n *\n * @param getToken - The token accessor\n * @returns The request interceptor\n *\n * @deprecated Please use addAsyncHeaderInterceptor instead.\n *\n * @internal\n */\nconst authenticateWithSessionToken = getToken => addAsyncHeaderInterceptor(SESSION_HEADER_KEY, getToken);\n\n/**\n * Authenticates with a secrets.\n *\n * @param getToken - The secrets\n * @returns The request interceptor\n *\n * @throws Error\n * Thrown if the secrets are invalid.\n *\n * @internal\n */\nconst authenticateWithSecrets = secrets => {\n  assertValidAuthenticationSecrets(secrets);\n  return addHeaderInterceptor(AUTH_HEADER_KEY, secrets.secretKey);\n};\n\n/**\n * Obfuscates a token.\n *\n * @param key - The token\n * @returns The obfuscated token\n *\n * @internal\n */\nconst obfuscateToken = key => `${key.substring(0, 5)}xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx`;\n\n/**\n * Obfuscates an UUID.\n *\n * @param key - The UUID\n * @returns The obfuscated UUID\n *\n * @internal\n */\nconst obfuscateUUID = key => `${key.substring(0, 8)}-xxxx-xxxx-xxxx-xxxxxxxxxxxx`;\n/**\n * Obfuscates headers entry.\n *\n * @param array - The header entry\n * @returns The obfuscated entry\n *\n * @internal\n */\nconst obfuscateAuthHeadersEntry = ([name, value]) => {\n  if (name === SESSION_HEADER_KEY) return [name, obfuscateToken(value)];\n  if (name === AUTH_HEADER_KEY) return [name, obfuscateUUID(value)];\n  return [name, value];\n};\n\n/**\n * A factory to build {@link Settings}.\n *\n * @public\n */\n\n/**\n * Instantiates the SDK from a configuration {@link Profile}.\n *\n * @param profile - The profile\n * @returns A factory {@link ClientConfig}\n *\n * @remarks This method should be used in conjunction with the initializer `createAdvancedClient`.\n *\n * @public\n */\nconst withProfile = profile => settings => {\n  const newSettings = {\n    ...settings\n  };\n  if (profile.apiURL) {\n    newSettings.apiURL = profile.apiURL;\n  }\n  if (profile.defaultOrganizationId) {\n    newSettings.defaultOrganizationId = profile.defaultOrganizationId;\n  }\n  if (profile.defaultProjectId) {\n    newSettings.defaultProjectId = profile.defaultProjectId;\n  }\n  if (profile.defaultRegion) {\n    newSettings.defaultRegion = profile.defaultRegion;\n  }\n  if (profile.defaultZone) {\n    newSettings.defaultZone = profile.defaultZone;\n  }\n  if (hasAuthenticationSecrets(profile)) {\n    newSettings.interceptors = [{\n      request: authenticateWithSecrets(profile)\n    }, ...newSettings.interceptors];\n  }\n  return newSettings;\n};\n\n/**\n * Instantiates the SDK with a different HTTP client.\n *\n * @param httpClient - A fetch compatible HTTP client\n * @returns A factory {@link ClientConfig}\n *\n * @remarks This method should be used in conjunction with the initializer `createAdvancedClient`.\n *\n * @public\n */\nconst withHTTPClient = httpClient => settings => ({\n  ...settings,\n  httpClient\n});\n\n/**\n * Instantiates the SDK with a default page size.\n *\n * @param defaultPageSize - The default page size\n * @returns A factory {@link ClientConfig}\n *\n * @remarks This method should be used in conjunction with the initializer `createAdvancedClient`.\n *\n * @public\n */\nconst withDefaultPageSize = defaultPageSize => settings => ({\n  ...settings,\n  defaultPageSize\n});\n\n/**\n * Instantiates the SDK with a different default user agent.\n *\n * @param userAgent - The default user agent\n * @returns A factory {@link ClientConfig}\n *\n * @remarks This method should be used in conjunction with the initializer `createAdvancedClient`.\n *\n * @public\n */\nconst withUserAgent = userAgent => settings => ({\n  ...settings,\n  userAgent\n});\n\n/**\n * Instantiates the SDK with an additional user agent.\n *\n * @param userAgent - The suffix to append to default user agent\n * @returns A factory {@link ClientConfig}\n *\n * @remarks This method should be used in conjunction with the initializer `createAdvancedClient`.\n *\n * @public\n */\nconst withUserAgentSuffix = userAgent => settings => ({\n  ...settings,\n  userAgent: settings.userAgent ? `${settings.userAgent} ${userAgent}` : userAgent\n});\n\n/**\n * Instantiates the SDK with additional interceptors.\n *\n * @param interceptors - The additional {@link NetworkInterceptors} interceptors\n * @returns A factory {@link ClientConfig}\n *\n * @remarks\n * It doesn't override the existing interceptors, but instead push more to the list.\n * This method should be used in conjunction with the initializer `createAdvancedClient`.\n *\n * @example\n * ```\n * withAdditionalInterceptors([\n *   {\n *     request: ({ request }) => {\n *       console.log(`Do something with ${JSON.stringify(request)}`)\n *       return request\n *     },\n *     response: ({ response }) => {\n *       console.log(`Do something with ${JSON.stringify(response)}`)\n *       return response\n *     },\n *     responseError: async ({\n *       request,\n *       error,\n *     }: {\n *       request: Request\n *       error: unknown\n *     }) => {\n *       console.log(\n *         `Do something with ${JSON.stringify(request)} and ${JSON.stringify(\n *           error,\n *         )}`,\n *       )\n *       throw error // or return Promise.resolve(someData)\n *     },\n *   },\n * ])\n * ```\n *\n * @public\n */\nconst withAdditionalInterceptors = interceptors => settings => ({\n  ...settings,\n  interceptors: settings.interceptors.concat(interceptors)\n});\n\n/**\n * Instantiates the SDK with legacy interceptors.\n */\n/* eslint-disable deprecation/deprecation */\nconst withLegacyInterceptors = () => settings => {\n  if (!settings.requestInterceptors && !settings.responseInterceptors) {\n    return settings;\n  }\n  const allInterceptors = settings.interceptors.concat((settings.requestInterceptors ?? []).map(obj => ({\n    request: obj\n  })), (settings.responseInterceptors ?? []).map(obj => ({\n    response: obj\n  })));\n  return {\n    ...settings,\n    interceptors: allInterceptors\n  };\n};\n/* eslint-enable deprecation/deprecation */\n\n/**\n * Holds default values of settings.\n *\n * @public\n */\n\n/**\n * Settings hold the values of all client options.\n *\n * @public\n */\n\n/**\n * Validates the content of a {@link Settings} object.\n *\n * @throws Error\n * Thrown if {@link Settings} aren't valid.\n *\n * @internal\n */\nconst assertValidSettings = obj => {\n  // Default Organization ID.\n  if (obj.defaultOrganizationId !== undefined) {\n    if (typeof obj.defaultOrganizationId !== 'string' || obj.defaultOrganizationId.length === 0) {\n      throw new Error('Default organization ID cannot be empty');\n    }\n    if (!isOrganizationId(obj.defaultOrganizationId)) {\n      throw new Error(`Invalid organization ID format '${obj.defaultOrganizationId}', expected a UUID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx`);\n    }\n  }\n\n  // Default Project ID.\n  if (obj.defaultProjectId !== undefined) {\n    if (typeof obj.defaultProjectId !== 'string' || obj.defaultProjectId.length === 0) {\n      throw new Error('Default project ID cannot be empty');\n    }\n    if (!isProjectId(obj.defaultProjectId)) {\n      throw new Error(`Invalid project ID format '${obj.defaultProjectId}', expected a UUID: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx`);\n    }\n  }\n\n  // Default Region.\n  if (obj.defaultRegion && !isRegion(obj.defaultRegion)) {\n    throw new Error(`Invalid default region format '${obj.defaultRegion}'`);\n  }\n\n  // Default Zone.\n  if (obj.defaultZone && !isZone(obj.defaultZone)) {\n    throw new Error(`Invalid default zone format '${obj.defaultZone}'`);\n  }\n\n  // API URL.\n  if (!isURL(obj.apiURL)) {\n    throw new Error(`Invalid URL ${obj.apiURL}`);\n  }\n  if (obj.apiURL.endsWith('/')) {\n    throw new Error(`Invalid URL ${obj.apiURL}: it should not have a trailing slash`);\n  }\n\n  // HTTP Client.\n  if (typeof obj.httpClient !== typeof fetch) {\n    throw new Error(`Invalid HTTP Client`);\n  }\n\n  // Default Page Size.\n  if (obj.defaultPageSize !== undefined && (typeof obj.defaultPageSize !== 'number' || Number.isNaN(obj.defaultPageSize) || obj.defaultPageSize <= 0)) {\n    throw new Error(`Invalid defaultPageSize ${obj.defaultPageSize}: it should be a number above 0`);\n  }\n\n  // User Agent.\n  if (typeof obj.userAgent !== 'string') {\n    throw new Error(`Invalid User-Agent`);\n  }\n};\n\nconst version = 'v2.22.0';\nconst userAgent = `scaleway-sdk-js/${version}`;\n\nconst isBrowser = () =>\n// eslint-disable-next-line @typescript-eslint/prefer-optional-chain\ntypeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n/**\n * Composes request interceptors.\n *\n * @param interceptors - A list of request interceptors\n * @returns An async composed interceptor\n *\n * @internal\n */\nconst composeRequestInterceptors = interceptors => async request => interceptors.reduce(async (asyncResult, interceptor) => interceptor({\n  request: await asyncResult\n}), Promise.resolve(request));\n\n/**\n * Composes response interceptors.\n *\n * @param interceptors - A list of response interceptors\n * @returns An async composed interceptor\n *\n * @internal\n */\nconst composeResponseInterceptors = interceptors => async response => interceptors.reduce(async (asyncResult, interceptor) => interceptor({\n  response: await asyncResult\n}), Promise.resolve(response));\n\n/**\n * Compose response error interceptors.\n *\n * @internal\n */\nconst composeResponseErrorInterceptors = interceptors => async (request, error) => {\n  let prevError = error;\n  for (const interceptor of interceptors) {\n    try {\n      const res = await interceptor({\n        request,\n        error: prevError\n      });\n      return res;\n    } catch (err) {\n      prevError = err;\n    }\n  }\n  throw prevError;\n};\n\n/**\n * Converts a string to PascalCase.\n *\n * @param str - The input string\n * @returns The string in PascalCase\n *\n * @internal\n */\nconst toPascalCase = str => str.replace(/\\w+/g, word => `${word[0].toUpperCase()}${word.slice(1).toLowerCase()}`);\n\n/**\n * Converts a Headers entry to string.\n *\n * @param entry - The header entry as a string tuple\n * @returns A serialized string\n *\n * @internal\n */\nconst serializeHeadersEntry = ([name, value]) => `${toPascalCase(name)}: ${value}`;\n\n/**\n * Converts Headers to safe to log strings (with obfuscated auth secrets).\n *\n * @param headers - The Headers\n * @returns Serialized headers strings\n *\n * @internal\n */\nconst serializeHeaders = headers => Array.from(headers.entries(), serializeHeadersEntry);\n\n/**\n * Dumps a Request into a readable string.\n *\n * @param request - The request\n * @returns The readable string\n *\n * @internal\n */\nconst dumpRequest = async request => [`${request.method.toUpperCase()}: ${request.url}`, ...serializeHeaders(request.headers), await request.clone().text()].join('\\r\\n');\n\n/**\n * Dumps a Response into a readable string.\n *\n * @param response - The response\n * @returns The readable string\n *\n * @internal\n */\nconst dumpResponse = async response => [`HTTP ${response.status} ${response.ok ? 'OK' : 'NOK'}`, ...serializeHeaders(response.headers), await response.clone().text()].join('\\r\\n');\n\n/**\n * Mapper of an header entry.\n *\n * @internal\n */\n\n/**\n * HTTP Request with obfuscated secrets.\n *\n * @internal\n */\nclass ObfuscatedRequest extends Request {\n  constructor(request, obfuscate) {\n    super(request);\n    this.request = request;\n    this.obfuscate = obfuscate;\n  }\n  get headers() {\n    return new Headers(Array.from(this.request.headers, this.obfuscate));\n  }\n  clone() {\n    return new ObfuscatedRequest(this.request, this.obfuscate);\n  }\n}\n\n/**\n * Creates an interceptor to obfuscate the requests.\n *\n * @param obfuscate - The Header entries obfuscator mapper\n * @returns The obfuscated Request\n *\n * @internal\n */\nconst obfuscateInterceptor = obfuscate => ({\n  request\n}) => new ObfuscatedRequest(request, obfuscate);\nconst identity = ({\n  request\n}) => request;\n\n/**\n * Creates an interceptor to log the requests.\n *\n * @param identifier - The request identifier\n * @param obfuscate - The obfuscation interceptor\n * @returns The interceptor\n *\n * @internal\n */\nconst logRequest = (identifier, obfuscate = identity) => async ({\n  request\n}) => {\n  if (shouldLog(LevelResolver[getLogger().logLevel], 'debug')) {\n    getLogger().debug(`--------------- Scaleway SDK REQUEST ${identifier} ---------------\n${await dumpRequest(await obfuscate({\n      request\n    }))}\n---------------------------------------------------------`);\n  }\n  return request;\n};\n\n/**\n * Creates an interceptor to log the responses.\n *\n * @param identifier - The request identifier\n * @returns The interceptor\n *\n * @internal\n */\nconst logResponse = identifier => async ({\n  response\n}) => {\n  if (shouldLog(LevelResolver[getLogger().logLevel], 'debug')) {\n    getLogger().debug(`--------------- Scaleway SDK RESPONSE ${identifier} ---------------\n${await dumpResponse(response)}\n---------------------------------------------------------`);\n  }\n  return response;\n};\n\n/**\n * Validates an object is of type Response without using `instanceof`.\n *\n * @remarks Check issue #509 for more context.\n *\n * @internal\n */\nconst isResponse = obj => obj !== null && obj !== undefined && typeof obj === 'object' && 'status' in obj && typeof obj.status === 'number' && 'statusText' in obj && typeof obj.statusText === 'string' && 'headers' in obj && typeof obj.headers === 'object' && 'body' in obj && typeof obj.body !== 'undefined';\n\n/**\n * Validates an unknown object is a JSON Object.\n *\n * @internal\n */\nconst isJSONObject = obj => {\n  const objT = typeof obj;\n  return obj !== undefined && obj !== null && objT !== 'string' && objT !== 'number' && objT !== 'boolean' && !Array.isArray(obj) && objT === 'object';\n};\n\n/**\n * Verifies the object is a record of string to string[].\n *\n * @param obj - The object\n * @returns Whether the object is of the expected type\n *\n * @internal\n */\nconst isRecordOfStringArray = obj => {\n  if (!isJSONObject(obj)) {\n    return false;\n  }\n  for (const elt of Object.values(obj)) {\n    if (!Array.isArray(elt) || Object.values(elt).find(x => typeof x !== 'string') !== undefined) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Builds the default message for {@link ScalewayError}.\n *\n * @param status - The response code\n * @param body - The response body\n * @returns The error message\n *\n * @internal\n */\nconst buildDefaultMessage = (status, body) => {\n  const message = [`http error ${status}`];\n  if (typeof body === 'string') {\n    message.push(body);\n  } else if (isJSONObject(body)) {\n    if (typeof body.resource === 'string') {\n      message.push(`resource ${body.resource}`);\n    }\n    if (typeof body.message === 'string') {\n      message.push(body.message);\n    }\n    if (body.fields && isRecordOfStringArray(body.fields)) {\n      message.push(Object.entries(body.fields).map(([name, list]) => `${name} (${list.join(', ')})`).join(', '));\n    }\n  }\n  return message.join(': ');\n};\n\n/**\n * Scaleway error.\n *\n * @public\n */\nclass ScalewayError extends Error {\n  /** The message originating from the payload. */\n\n  constructor( /** The response status. */\n  status, /** The response payload. */\n  body, /** The augmented message. */\n  message = buildDefaultMessage(status, body)) {\n    super(message); // 'Error' breaks prototype chain here\n    this.status = status;\n    this.body = body;\n    this.message = message;\n    this.name = 'ScalewayError';\n    this.rawMessage = typeof body === 'object' && typeof body.message === 'string' ? body.message : undefined;\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n  static fromJSON(status, obj) {\n    return new ScalewayError(status, obj);\n  }\n  toString() {\n    return `${this.name}: ${this.message}`;\n  }\n}\n\n/**\n * Details of an {@link InvalidArgumentsError} error.\n *\n * @public\n */\n\n/**\n * Build the default message for {@link InvalidArgumentsError}.\n *\n * @param list - The list of {@link InvalidArgumentsErrorDetails}\n * @returns The error message\n *\n * @internal\n */\nconst buildMessage$5 = list => {\n  const invalidArgs = list.reduce((acc, details) => {\n    let readableReason = '';\n    switch (details.reason) {\n      case 'required':\n        readableReason = `is required`;\n        break;\n      case 'format':\n        readableReason = `is wrongly formatted`;\n        break;\n      case 'constraint':\n        readableReason = `does not respect constraint`;\n        break;\n      default:\n        readableReason = `is invalid for unexpected reason`;\n        break;\n    }\n    if (details.helpMessage && details.helpMessage.length > 0) {\n      readableReason = readableReason.concat(`, `, details.helpMessage);\n    }\n    acc.push(`${details.argumentName} ${readableReason}`);\n    return acc;\n  }, []);\n  return `invalid argument(s): ${invalidArgs.join('; ')}`;\n};\n\n/**\n * InvalidArguments error happens when one or many fields are invalid in the request message.\n *\n * @public\n */\nclass InvalidArgumentsError extends ScalewayError {\n  constructor(status, body, details) {\n    super(status, body, buildMessage$5(details));\n    this.status = status;\n    this.body = body;\n    this.details = details;\n    this.name = 'InvalidArgumentsError';\n  }\n  static fromJSON(status, obj) {\n    if (!Array.isArray(obj.details)) return null;\n    return new InvalidArgumentsError(status, obj, obj.details.reduce((list, detail) => isJSONObject(detail) && typeof detail.argument_name === 'string' && typeof detail.reason === 'string' ? list.concat({\n      argumentName: detail.argument_name,\n      helpMessage: typeof detail.help_message === 'string' ? detail.help_message : undefined,\n      reason: detail.reason\n    }) : list, []));\n  }\n}\n\n/**\n * Scope of an {@link QuotasExceededErrorDetails} error.\n *\n * @public\n */\n\n/**\n * Details of an {@link QuotasExceededError} error.\n *\n * @public\n */\n\n/**\n * Build the default message for {@link QuotasExceededError}.\n *\n * @param list - The list of {@link QuotasExceededErrorDetails}\n * @returns The error message\n *\n * @internal\n */\nconst buildMessage$4 = list => `quota(s) exceeded: ${list.map(details => {\n  const message = `${details.resource} has reached its quota (${details.current}/${details.quota})`;\n  return details.scope ? `${message} for ${details.scope.kind} '${details.scope.id}'` : message;\n}).join('; ')}`;\nconst buildScope = detail => {\n  if (typeof detail.organization_id === 'string' && detail.organization_id.length) {\n    return {\n      id: detail.organization_id,\n      kind: 'organization'\n    };\n  }\n  if (typeof detail.project_id === 'string' && detail.project_id.length) {\n    return {\n      id: detail.project_id,\n      kind: 'project'\n    };\n  }\n  return undefined;\n};\n\n/**\n * QuotasExceeded error happens when one or many resource exceed quotas during the creation of a resource.\n *\n * @public\n */\nclass QuotasExceededError extends ScalewayError {\n  constructor(status, body, list) {\n    super(status, body, buildMessage$4(list));\n    this.status = status;\n    this.body = body;\n    this.list = list;\n    this.name = 'QuotasExceededError';\n  }\n  static fromJSON(status, obj) {\n    if (!Array.isArray(obj.details)) return null;\n    return new QuotasExceededError(status, obj, obj.details.reduce((list, detail) => isJSONObject(detail) && typeof detail.resource === 'string' && typeof detail.quota === 'number' && typeof detail.current === 'number' ? list.concat({\n      current: detail.current,\n      quota: detail.quota,\n      resource: detail.resource,\n      scope: buildScope(detail)\n    }) : list, []));\n  }\n}\n\n/**\n * InvalidRequest error is only returned by the instance API.\n *\n * @public\n */\nclass InvalidRequestMapper {\n  static fromJSON(status, obj) {\n    if (typeof obj.message === 'string' && obj.message.toLowerCase().includes('quota exceeded for this resource')) {\n      return new QuotasExceededError(status, obj, [{\n        current: 0,\n        quota: 0,\n        resource: typeof obj.resource === 'string' ? obj.resource : ''\n      }]);\n    }\n    const fields = obj.fields && isRecordOfStringArray(obj.fields) ? obj.fields : {};\n    const fieldsMessages = Object.entries(fields);\n    if (fieldsMessages.length) {\n      return new InvalidArgumentsError(status, obj, fieldsMessages.map(([argumentName, messages]) => messages.map(helpMessage => ({\n        argumentName,\n        helpMessage,\n        reason: 'constraint'\n      }))).flat());\n    }\n    return new ScalewayError(status, obj);\n  }\n}\n\n/**\n * ResourceNotFound error happens when getting a resource that does not exist anymore.\n *\n * @public\n */\nclass ResourceNotFoundError extends ScalewayError {\n  constructor(status, body, resource, resourceId) {\n    super(status, body, `resource ${resource} with ID ${resourceId} is not found`);\n    this.status = status;\n    this.body = body;\n    this.resource = resource;\n    this.resourceId = resourceId;\n    this.name = 'ResourceNotFoundError';\n  }\n  static fromJSON(status, obj) {\n    if (typeof obj.resource !== 'string' || typeof obj.resource_id !== 'string') {\n      return null;\n    }\n    return new ResourceNotFoundError(status, obj, obj.resource, obj.resource_id);\n  }\n}\n\n/**\n * UnknownResource error is only returned by the instance API.\n *\n * @public\n */\nclass UnknownResourceMapper {\n  static fromJSON(status, obj) {\n    // Split the message\n    // Note: some errors uses ' and not \"\n    // Examples: `\"111...\" not found` or `Security Group '111...' not found`\n    const messageParts = typeof obj.message === 'string' ? obj.message.split(/\"|'/) : [];\n    if (messageParts.length === 3 && isUUID(messageParts[1])) {\n      return new ResourceNotFoundError(status, obj,\n      // transform `Security group ` to `security_group`\n      // `.replaceAll()` may be too recent to use yet.\n      // that's why we're using `.split(' ').join('_')` for now.\n      messageParts[0].trim().toLowerCase().split(' ').join('_'), messageParts[1]);\n    }\n    return new ScalewayError(status, obj);\n  }\n}\n\n/**\n * AlreadyExists error is used when a resource already exists.\n *\n * @public\n */\nclass AlreadyExistsError extends ScalewayError {\n  constructor(status, body, resource, resourceId, helpMessage) {\n    super(status, body, `resource ${resource} with ID ${resourceId} already exists: ${helpMessage}`);\n    this.status = status;\n    this.body = body;\n    this.resource = resource;\n    this.resourceId = resourceId;\n    this.helpMessage = helpMessage;\n    this.name = 'AlreadyExistsError';\n  }\n  static fromJSON(status, obj) {\n    if (typeof obj.resource !== 'string' || typeof obj.resource_id !== 'string' || typeof obj.help_message !== 'string') {\n      return null;\n    }\n    return new AlreadyExistsError(status, obj, obj.resource, obj.resource_id, obj.help_message);\n  }\n}\n\n/**\n * Build the default message for {@link DeniedAuthenticationError}.\n *\n * @param method - The authentication method\n * @param reason - The deny reason\n * @returns The error message\n *\n * @internal\n */\nconst buildMessage$3 = (method, reason) => {\n  let reasonDesc;\n  switch (reason) {\n    case 'invalid_argument':\n      reasonDesc = `invalid ${method} format or empty value`;\n      break;\n    case 'not_found':\n      reasonDesc = `${method} does not exist`;\n      break;\n    case 'expired':\n      reasonDesc = `${method} is expired`;\n      break;\n    default:\n      reasonDesc = `unknown reason for ${method}`;\n  }\n  return `denied authentication: ${reasonDesc}`;\n};\n\n/**\n * DeniedAuthentication error is used by the API Gateway auth service to deny a request.\n *\n * @public\n */\nclass DeniedAuthenticationError extends ScalewayError {\n  constructor(status, body, method, reason) {\n    super(status, body, buildMessage$3(method, reason));\n    this.status = status;\n    this.body = body;\n    this.method = method;\n    this.reason = reason;\n    this.name = 'DeniedAuthenticationError';\n  }\n  static fromJSON(status, obj) {\n    if (typeof obj.method !== 'string' || typeof obj.reason !== 'string') {\n      return null;\n    }\n    return new DeniedAuthenticationError(status, obj, obj.method, obj.reason);\n  }\n}\n\n/**\n * OutOfStock error happens when stocks are empty for the resource.\n *\n * @public\n */\nclass OutOfStockError extends ScalewayError {\n  constructor(status, body, resource) {\n    super(status, body, `resource ${resource} is out of stock`);\n    this.status = status;\n    this.body = body;\n    this.resource = resource;\n    this.name = 'OutOfStockError';\n  }\n  static fromJSON(status, obj) {\n    if (typeof obj.resource !== 'string') return null;\n    return new OutOfStockError(status, obj, obj.resource);\n  }\n}\n\n/**\n * Details of an {@link PermissionsDeniedError} error.\n *\n * @public\n */\n\n/**\n * Build the default message for {@link PermissionsDeniedError}.\n *\n * @param list - The list of {@link PermissionsDeniedErrorDetails}\n * @returns The error message\n *\n * @internal\n */\nconst buildMessage$2 = list => `insufficient permissions: ${list.map(({\n  action,\n  resource\n}) => `${action} ${resource}`).join('; ')}`;\n\n/**\n * PermissionsDenied error happens when one or many permissions are not accorded to the user making the request.\n *\n * @public\n */\nclass PermissionsDeniedError extends ScalewayError {\n  constructor(status, body, list) {\n    super(status, body, buildMessage$2(list));\n    this.status = status;\n    this.body = body;\n    this.list = list;\n    this.name = 'PermissionsDeniedError';\n  }\n  static fromJSON(status, obj) {\n    if (!Array.isArray(obj.details)) return null;\n    return new PermissionsDeniedError(status, obj, obj.details.reduce((list, detail) => isJSONObject(detail) && typeof detail.resource === 'string' && typeof detail.action === 'string' ? list.concat({\n      action: detail.action,\n      resource: detail.resource\n    }) : list, []));\n  }\n}\n\n/**\n * Build the default message for {@link PreconditionFailedError}.\n *\n * @param precondition - The precondition\n * @param helpMessage - The message which should help the user to fix the root cause\n * @returns The error message\n *\n * @internal\n */\nconst buildMessage$1 = (precondition, helpMessage) => {\n  let message = `precondition failed: ${precondition}`;\n  if (typeof helpMessage === 'string' && helpMessage.length > 0) {\n    message = message.concat(', ', helpMessage);\n  }\n  return message;\n};\n\n/**\n * PreconditionFailed error is used when a precondition is not respected.\n *\n * @public\n */\nclass PreconditionFailedError extends ScalewayError {\n  constructor(status, body, precondition, helpMessage) {\n    super(status, body, buildMessage$1(precondition, helpMessage));\n    this.status = status;\n    this.body = body;\n    this.precondition = precondition;\n    this.helpMessage = helpMessage;\n    this.name = 'PreconditionFailedError';\n  }\n  static fromJSON(status, obj) {\n    if (typeof obj.precondition !== 'string' || typeof obj.help_message !== 'string') {\n      return null;\n    }\n    return new PreconditionFailedError(status, obj, obj.precondition, obj.help_message);\n  }\n}\n\n/**\n * ResourceExpired error happens when trying to access a resource that has expired.\n *\n * @public\n */\nclass ResourceExpiredError extends ScalewayError {\n  constructor(status, body, resource, resourceId, expiredSince) {\n    super(status, body, `resource ${resource} with ID ${resourceId} expired since ${expiredSince.toISOString()}`);\n    this.status = status;\n    this.body = body;\n    this.resource = resource;\n    this.resourceId = resourceId;\n    this.expiredSince = expiredSince;\n    this.name = 'ResourceExpiredError';\n  }\n  static fromJSON(status, obj) {\n    if (typeof obj.resource !== 'string' || typeof obj.resource_id !== 'string' || typeof obj.expired_since !== 'string') {\n      return null;\n    }\n    return new ResourceExpiredError(status, obj, obj.resource, obj.resource_id, new Date(obj.expired_since));\n  }\n}\n\n/**\n * ResourceLocked error happens when a resource is locked by trust and safety.\n *\n * @public\n */\nclass ResourceLockedError extends ScalewayError {\n  constructor(status, body, resource, resourceId) {\n    super(status, body, `resource ${resource} with ID ${resourceId} is locked`);\n    this.status = status;\n    this.body = body;\n    this.resource = resource;\n    this.resourceId = resourceId;\n    this.name = 'ResourceLockedError';\n  }\n  static fromJSON(status, obj) {\n    if (typeof obj.resource !== 'string' || typeof obj.resource_id !== 'string') {\n      return null;\n    }\n    return new ResourceLockedError(status, obj, obj.resource, obj.resource_id);\n  }\n}\n\n/**\n * Quota policy of {@link TooManyRequestsError}.\n *\n * @public\n */\n\n/**\n * Build the default message for {@link TooManyRequestsError}.\n *\n * @internal\n */\nconst buildMessage = (helpMessage, limit, resetSeconds, resetAt) => {\n  const details = [];\n  if (limit) {\n    if (limit.windowSeconds) {\n      details.push(`quota is ${limit.quota} for ${limit.windowSeconds}s`);\n    } else {\n      details.push(`quota is ${limit.quota}`);\n    }\n  }\n  if (resetSeconds) {\n    details.push(`resets in ${resetSeconds}s`);\n  } else if (resetAt) {\n    details.push(`resets at ${resetAt.toISOString()}`);\n  }\n  let output = `too many requests`;\n  if (details.length > 0) {\n    output += ` (${details.join(', ')})`;\n  }\n  if (helpMessage.length > 0) {\n    output += `: ${helpMessage}`;\n  }\n  return output;\n};\n\n/**\n * TooManyRequestsError error happens when fetching too many times a resource.\n *\n * @public\n */\nclass TooManyRequestsError extends ScalewayError {\n  constructor(status, body, helpMessage, limit, /** The number of seconds until the quota resets */\n  resetSeconds, /** The timestamp when the quota resets */\n  resetAt) {\n    super(status, body, buildMessage(helpMessage, limit, resetSeconds, resetAt));\n    this.status = status;\n    this.body = body;\n    this.helpMessage = helpMessage;\n    this.limit = limit;\n    this.resetSeconds = resetSeconds;\n    this.resetAt = resetAt;\n    this.name = 'TooManyRequestsError';\n  }\n  static fromJSON(status, obj) {\n    if (typeof obj.help_message !== 'string') return null;\n    let limit;\n    if (isJSONObject(obj.limit) && typeof obj.limit.quota === 'number') {\n      limit = {\n        quota: obj.limit.quota,\n        windowSeconds: typeof obj.limit.window_seconds === 'number' ? obj.limit.window_seconds : undefined\n      };\n    }\n    return new TooManyRequestsError(status, obj, obj.help_message, limit, typeof obj.reset_seconds === 'number' ? obj.reset_seconds : undefined, typeof obj.reset_at === 'string' ? new Date(obj.reset_at) : undefined);\n  }\n}\n\n/**\n * TransientState error happens when trying to perform an action on a resource in a transient state.\n *\n * @public\n */\nclass TransientStateError extends ScalewayError {\n  constructor(status, body, resource, resourceId, currentState) {\n    super(status, body, `resource ${resource} with ID ${resourceId} is in a transient state: ${currentState}`);\n    this.status = status;\n    this.body = body;\n    this.resource = resource;\n    this.resourceId = resourceId;\n    this.currentState = currentState;\n    this.name = 'TransientStateError';\n  }\n  static fromJSON(status, obj) {\n    if (typeof obj.resource !== 'string' || typeof obj.resource_id !== 'string' || typeof obj.current_state !== 'string') {\n      return null;\n    }\n    return new TransientStateError(status, obj, obj.resource, obj.resource_id, obj.current_state);\n  }\n}\n\n/**\n * Unmarshals a standard error from raw body.\n *\n * @param type - The error type\n * @param status - The status code\n * @param body - The error response\n * @returns The standard error if found\n *\n * @internal\n */\nconst unmarshalStandardError = (type, status, body) => {\n  let error;\n  switch (type) {\n    case 'denied_authentication':\n      error = DeniedAuthenticationError;\n      break;\n    case 'invalid_arguments':\n      error = InvalidArgumentsError;\n      break;\n    case 'out_of_stock':\n      error = OutOfStockError;\n      break;\n    case 'permissions_denied':\n      error = PermissionsDeniedError;\n      break;\n    case 'precondition_failed':\n      error = PreconditionFailedError;\n      break;\n    case 'quotas_exceeded':\n      error = QuotasExceededError;\n      break;\n    case 'expired':\n      error = ResourceExpiredError;\n      break;\n    case 'not_found':\n      error = ResourceNotFoundError;\n      break;\n    case 'locked':\n      error = ResourceLockedError;\n      break;\n    case 'transient_state':\n      error = TransientStateError;\n      break;\n    case 'already_exists':\n      error = AlreadyExistsError;\n      break;\n    case 'too_many_requests':\n      error = TooManyRequestsError;\n      break;\n    default:\n      return null;\n  }\n  return error.fromJSON(status, body);\n};\n\n/**\n * Unmarshals a non-standard error from raw body.\n *\n * @param type - The error type\n * @param status - The status code\n * @param body - The error response\n * @returns The non-standard error if found\n *\n * @internal\n */\nconst unmarshalNonStandardError = (type, status, body) => {\n  switch (type) {\n    case 'unknown_resource':\n      return UnknownResourceMapper.fromJSON(status, body);\n    case 'invalid_request_error':\n      return InvalidRequestMapper.fromJSON(status, body);\n    default:\n      return null;\n  }\n};\n\n/**\n * Parses Scaleway error from raw body.\n *\n * @param status - The status code\n * @param body - The error response\n * @returns The resolved error\n *\n * @internal\n */\nconst parseScalewayError = (status, body) => {\n  const parsableError = typeof body.type === 'string' && (unmarshalStandardError(body.type, status, body) ?? unmarshalNonStandardError(body.type, status, body));\n  return parsableError || new ScalewayError(status, body);\n};\n\nconst X_TOTAL_COUNT_HEADER_KEY = 'x-total-count';\nconst TOTAL_COUNT_RES_KEY = 'total_count';\n\n/**\n * Fixes the totalCount property for old APIs.\n *\n * @internal\n */\nconst fixLegacyTotalCount = (obj, headers) => {\n  const headerVal = headers.get(X_TOTAL_COUNT_HEADER_KEY);\n  if (!headerVal) {\n    return obj;\n  }\n  const totalCount = parseInt(headerVal, 10);\n  if (Number.isNaN(totalCount)) {\n    return obj;\n  }\n  if (isJSONObject(obj) && !(TOTAL_COUNT_RES_KEY in obj)) {\n    return Object.assign(obj, {\n      [TOTAL_COUNT_RES_KEY]: totalCount\n    });\n  }\n  return obj;\n};\n\n/**\n * Makes response parser.\n *\n * @param unmarshaller - The response payload unmarshaller\n * @returns An async converter of HTTP Response to desired result\n *\n * @throws {@link ScalewayError}\n * Thrown by the API if the request couldn't be completed.\n *\n * @throws TypeError\n * Thrown if the response parameter isn't of the expected type.\n *\n * @throws Error\n * JSON parsing could trigger an error.\n *\n * @internal\n */\nconst responseParser = (unmarshaller, responseType) => async response => {\n  if (!isResponse(response)) {\n    throw new TypeError('Invalid response object');\n  }\n  if (response.ok) {\n    if (response.status === 204) return unmarshaller(undefined);\n    const contentType = response.headers.get('Content-Type');\n    try {\n      if (responseType === 'json' && contentType === 'application/json') {\n        return unmarshaller(fixLegacyTotalCount(await response.json(), response.headers));\n      }\n      if (responseType === 'blob') {\n        return unmarshaller(await response.blob());\n      }\n      return unmarshaller(await response.text());\n    } catch (err) {\n      throw new ScalewayError(response.status, `could not parse '${contentType ?? ''}' response${err instanceof Error ? `: ${err.message}` : ''}`);\n    }\n  }\n  const error = await response.clone().json().catch(() => response.text());\n  if (isJSONObject(error)) throw parseScalewayError(response.status, error);\n  throw new ScalewayError(response.status, typeof error === 'string' ? error : 'cannot read error response body');\n};\n\n/**\n * Builds Request from {@link ScwRequest} & {@link Settings}.\n *\n * @param request - A scaleway request\n * @param settings - The settings\n * @returns A fetch Request\n *\n * @internal\n */\nconst buildRequest = (request, settings) => {\n  let {\n    path\n  } = request;\n  if (request.urlParams instanceof URLSearchParams) {\n    path = path.concat(`?${request.urlParams.toString()}`);\n  }\n  return new Request(`${settings.apiURL}${path}`, {\n    body: request.body,\n    headers: {\n      Accept: 'application/json',\n      ...( /* istanbul ignore next */!isBrowser() ? {\n        'User-Agent': settings.userAgent\n      } : {}),\n      ...request.headers\n    },\n    method: request.method\n  });\n};\nconst asIs = response => response;\n/**\n * Builds a resource fetcher.\n *\n * @param settings - The {@link Settings} object\n * @param httpClient - The HTTP client that should be used to call the API\n * @returns The fetcher\n *\n * @internal\n */\nconst buildFetcher = (settings, httpClient) => {\n  let requestNumber = 0;\n  const prepareRequest = requestId => composeRequestInterceptors([...settings.interceptors.map(obj => obj.request).filter(obj => obj), logRequest(requestId, obfuscateInterceptor(obfuscateAuthHeadersEntry))]);\n  const prepareResponse = requestId => composeResponseInterceptors([...settings.interceptors.map(obj => obj.response).filter(obj => obj), logResponse(requestId)]);\n  const prepareResponseErrors = () => composeResponseErrorInterceptors(settings.interceptors.map(obj => obj.responseError).filter(obj => obj));\n  return async (request, unwrapper = asIs) => {\n    const requestId = `${requestNumber += 1}`;\n    const reqInterceptors = prepareRequest(requestId);\n    const finalRequest = await reqInterceptors(buildRequest(request, settings));\n    try {\n      const response = await httpClient(finalRequest);\n      const resInterceptors = prepareResponse(requestId);\n      const finalResponse = await resInterceptors(response);\n      const resUnmarshaller = responseParser(unwrapper, request.responseType ?? 'json');\n      const unmarshaledResponse = await resUnmarshaller(finalResponse);\n      return unmarshaledResponse;\n    } catch (err) {\n      const resErrorInterceptors = prepareResponseErrors();\n      const handledError = await resErrorInterceptors(finalRequest, err);\n      return unwrapper(handledError);\n    }\n  };\n};\n\n/** Default {@link Settings} values. */\nconst DEFAULT_SETTINGS = {\n  apiURL: 'https://api.scaleway.com',\n  httpClient: fetch,\n  interceptors: [],\n  userAgent\n};\n\n/**\n * Scaleway client.\n */\n\n/**\n * Creates a Scaleway client with advanced options.\n * You can either use existing factories\n * (like `withProfile`, `withUserAgentSuffix`, etc)\n * or write your own using the interface `ClientConfig`.\n *\n * @example\n * Creates a client with factories:\n * ```\n * createAdvancedClient(\n *   (obj: Settings) => ({\n *     ...obj,\n *     defaultPageSize: 100 ,\n *     httpClient: myFetchWrapper,\n *   }),\n *   withUserAgentSuffix('bot-name/1.0'),\n * )\n * ```\n *\n * @throws Error\n * Thrown if the setup fails.\n *\n * @public\n */\nconst createAdvancedClient = (...configs) => {\n  const settings = configs.concat([withLegacyInterceptors()]).reduce((currentSettings, config) => config(currentSettings), DEFAULT_SETTINGS);\n  assertValidSettings(settings);\n  getLogger().info(`init Scaleway SDK version ${version}`);\n  return {\n    fetch: buildFetcher(settings, settings.httpClient),\n    settings\n  };\n};\n\n/**\n * Creates a Scaleway client with a profile.\n *\n * @example\n * Creates a client with credentials & default values (see https://www.scaleway.com/en/docs/identity-and-access-management/iam/how-to/create-api-keys/):\n * ```\n * import { createClient } from '@scaleway/sdk'\n *\n * createClient({\n *   accessKey: 'SCWXXXXXXXXXXXXXXXXX',\n *   secretKey: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx',\n *   defaultProjectId: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx',\n *   defaultRegion: 'fr-par',\n *   defaultZone: 'fr-par-1',\n * })\n * ```\n *\n * @example\n * Creates a client by loading values from the environment (see https://www.scaleway.com/en/docs/identity-and-access-management/iam/how-to/create-api-keys/)\n * or the config file created by CLI `scw init` (see https://www.scaleway.com/en/cli/):\n * ```\n * import { loadProfileFromConfigurationFile } from '@scaleway/configuration-loader'\n * import { createClient } from '@scaleway/sdk'\n *\n * createClient({\n *   ...await loadProfileFromConfigurationFile(),\n *   defaultZone: 'fr-par-3',\n * })\n * ```\n *\n * @throws Error\n * Thrown if the setup fails.\n *\n * @public\n */\nconst createClient = (profile = {}) => createAdvancedClient(withProfile(profile));\n\nvar index$B = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AlreadyExistsError: AlreadyExistsError,\n  DeniedAuthenticationError: DeniedAuthenticationError,\n  InvalidArgumentsError: InvalidArgumentsError,\n  OutOfStockError: OutOfStockError,\n  PermissionsDeniedError: PermissionsDeniedError,\n  PreconditionFailedError: PreconditionFailedError,\n  QuotasExceededError: QuotasExceededError,\n  ResourceExpiredError: ResourceExpiredError,\n  ResourceLockedError: ResourceLockedError,\n  ResourceNotFoundError: ResourceNotFoundError,\n  ScalewayError: ScalewayError,\n  TooManyRequestsError: TooManyRequestsError,\n  TransientStateError: TransientStateError\n});\n\n/**\n * Sleep for a specified number of time.\n *\n * @param ms - The number of milliseconds\n * @returns The sleep promise\n *\n * @internal\n */\nconst sleep = ms => new Promise(resolve => {\n  setTimeout(resolve, ms);\n});\n\nconst DEFAULT_TIMEOUT_SECONDS = 300;\nconst DEFAULT_MIN_DELAY_SECONDS = 1;\nconst DEFAULT_MAX_DELAY_SECONDS = 30;\n\n/**\n * Creates an exponential backoff interval strategy.\n *\n * @param minDelay - The minimum delay before the next try in seconds\n * @param maxDelay - The maximum delay before the next try in seconds\n * @returns An exponential backoff generator\n *\n * @internal\n */\nfunction* createExponentialBackoffStrategy(minDelay, maxDelay) {\n  if (minDelay < 1 || maxDelay < 1 || minDelay > maxDelay) {\n    throw new Error('Waiter: minDelay must be >= 1 and maxDelay must be >= minDelay');\n  }\n  let attempt = 1;\n  const ceiling = Math.log(maxDelay / minDelay) / Math.log(2) + 1;\n  const randomInRange = (min, max) => min + Math.random() * (max - min);\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  while (true) {\n    if (attempt > ceiling) {\n      yield maxDelay;\n    } else {\n      yield randomInRange(minDelay, minDelay * 2 ** (attempt - 1));\n    }\n    attempt += 1;\n  }\n}\n\n/**\n * Tries a specific logic several times until it succeeds, timeouts, or throws an exception.\n *\n * @param retry - The function to retry logic between each interval\n * @param strategy - A generated interval strategy iterator\n * @param timeout - The maximum time elapsed before timeout error\n *\n * @throws An timeout exception or error thrown by the logic being run\n *\n * @internal\n */\nconst tryAtIntervals = async (retry, strategy, timeout = DEFAULT_TIMEOUT_SECONDS) => {\n  const timeoutTimestamp = Date.now() + timeout * 1000;\n  let retryCount = 0;\n  while (Date.now() <= timeoutTimestamp) {\n    const delay = strategy.next(retryCount += 1).value * 1000;\n    // Break if timeout has been reached\n    if (timeoutTimestamp <= Date.now() + delay) break;\n    // Wait before the next retry\n    await sleep(delay);\n    // Retry\n    const {\n      value,\n      done\n    } = await retry();\n    if (done) return value;\n  }\n  throw new Error(`Timeout after ${timeout}s`);\n};\n\n/**\n * Represents the condition to stop waiting for a resource.\n *\n * @public\n */\n\n/**\n * The options to wait until a resource is ready.\n *\n * @public\n */\n\n/**\n * Fetches resource several times until an expected condition is reached, timeouts, or throws an exception.\n *\n * @param stop - The condition to stop waiting\n * @param fetcher - The method to retrieve resource\n * @param request - The resource request options\n * @param options - The retry strategy options\n * @param strategy - An optional custom strategy\n *\n * @returns A promise of resource\n *\n * @public\n */\nconst waitForResource = (stop, fetcher, request, options, strategy = createExponentialBackoffStrategy(options?.minDelay ?? DEFAULT_MIN_DELAY_SECONDS, options?.maxDelay ?? DEFAULT_MAX_DELAY_SECONDS)) => tryAtIntervals(async () => {\n  const value = await fetcher(request);\n  return {\n    done: await stop(value),\n    value\n  };\n}, strategy, options?.timeout);\n\n/**\n * Abstract class to instantiate API from a {@link Client}.\n *\n * @internal\n */\nlet API$z = class API {\n  constructor(client) {\n    this.client = client;\n  }\n};\n\n/**\n * Returns the parameter if it's valid as path parameter\n * (string and not empty, or number), else throws an exception.\n *\n * @param name - The parameter name\n * @param param - The parameter value\n * @returns The parameter value\n *\n * @throws TypeError\n * Thrown if the parameter is invalid.\n *\n * @internal\n */\nfunction validatePathParam(name, param) {\n  if (typeof param === 'string' && param.length > 0) return param;\n  if (typeof param === 'number') return param.toString();\n  throw new TypeError(`param ${name} cannot be empty in request`);\n}\n\n/**\n * Resolves the ideal parameter and value amongst an optional list.\n *\n * @param list - The list to be looking into\n * @param isRequired - If at least one \"one-of\" should be found, false by default\n * @returns The parameter and value\n *\n * @throws TypeError\n * Thrown if isRequired is true, and no value or default value is specified.\n *\n * @internal\n */\nconst resolveOneOf = (list, isRequired = false) => {\n  const elt = list.find(obj => obj.value !== undefined) ?? list.find(obj => obj.default !== undefined);\n  const value = elt?.value ?? elt?.default;\n  if (elt && value !== undefined) {\n    return {\n      [elt.param]: value\n    };\n  }\n  if (isRequired) {\n    const keyList = list.map(obj => obj.param).join(' or ');\n    throw new TypeError(`one of ${keyList} must be indicated in the request`);\n  }\n  return {};\n};\n/**\n * Filters defined parameters tuples and converts them to URLSearchParams.\n *\n * @param paramTuples - The key/value pairs\n * @returns URLSearchParams\n *\n * @internal\n */\nconst urlParams = (...paramTuples) => {\n  const params = new URLSearchParams();\n  for (const [key, value] of paramTuples) {\n    if (typeof key === 'string' && value != null) {\n      if (Array.isArray(value)) {\n        for (const innerValue of value) {\n          if (innerValue !== null) {\n            params.append(key, innerValue instanceof Date ? innerValue.toISOString() : innerValue.toString());\n          }\n        }\n      } else {\n        params.append(key, value instanceof Date ? value.toISOString() : value.toString());\n      }\n    }\n  }\n  return params;\n};\n\n/**\n * Unmarshals data to Date object.\n *\n * @internal\n */\nconst unmarshalDate = data => {\n  if (typeof data !== 'string') {\n    return undefined;\n  }\n  const date = new Date(data);\n  if (Number.isNaN(date.getTime())) {\n    return undefined;\n  }\n  return date;\n};\n\n/**\n * Unmarshals array of object.\n *\n * @internal\n */\nconst unmarshalArrayOfObject = (data, unmarshaller, emptyFallback = true) => {\n  if (!Array.isArray(data)) {\n    return emptyFallback ? [] : undefined;\n  }\n  return data.map(elt => unmarshaller(elt));\n};\n\n/**\n * Unmarshals map of object.\n *\n * @internal\n */\nconst unmarshalMapOfObject = (data, unmarshaller, emptyFallback = true) => {\n  if (!data || typeof data !== 'object' || !(data instanceof Object) || Array.isArray(data)) {\n    return emptyFallback ? {} : undefined;\n  }\n  return Object.entries(data).reduce((acc, [key, value]) => ({\n    ...acc,\n    [key]: unmarshaller(value)\n  }), {});\n};\n\n/**\n * Unmarshals {@link Money}\n *\n * @internal\n */\nconst unmarshalMoney = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Money' failed as data isn't a dictionary.`);\n  }\n  return {\n    currencyCode: data.currency_code,\n    nanos: data.nanos,\n    units: data.units\n  };\n};\n\n/**\n * Unmarshals {@link ServiceInfo}.\n *\n * @internal\n */\nconst unmarshalServiceInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServiceInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    description: data.description,\n    documentationUrl: data.documentation_url,\n    name: data.name,\n    version: data.version\n  };\n};\n\n/**\n * Unmarshals {@link ScwFile}.\n *\n * @internal\n */\nconst unmarshalScwFile = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ScwFile' failed as data isn't a dictionary.`);\n  }\n  return {\n    content: data.content,\n    contentType: data.content_type,\n    name: data.name\n  };\n};\n\n/**\n * Unmarshals {@link TimeSeriesPoint}\n *\n * @remarks To optimize the size of this message,\n * the JSON is compressed in an array instead of a dictionary.\n * Example: `[\"2019-08-08T15:00:00Z\", 0.2]`.\n *\n * @internal\n */\nconst unmarshalTimeSeriesPoint = data => {\n  if (!Array.isArray(data)) {\n    throw new TypeError(`Unmarshalling the type 'TimeSeriesPoint' failed as data isn't an array.`);\n  }\n  return {\n    timestamp: unmarshalDate(data[0]),\n    value: data[1]\n  };\n};\n\n/**\n * Unmarshals {@link TimeSeries}\n *\n * @internal\n */\nconst unmarshalTimeSeries = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'TimeSeries' failed as data isn't a dictionary.`);\n  }\n  return {\n    metadata: data.metadata,\n    name: data.name,\n    points: unmarshalArrayOfObject(data.points, unmarshalTimeSeriesPoint)\n  };\n};\n\n/**\n * Marshals {@link ScwFile}.\n *\n * @internal\n */\nconst marshalScwFile = obj => ({\n  content: obj.content,\n  content_type: obj.contentType,\n  name: obj.name\n});\n\n/**\n * Marshals {@link Money}\n *\n * @internal\n */\nconst marshalMoney = obj => ({\n  currency_code: obj.currencyCode,\n  nanos: obj.nanos,\n  units: obj.units\n});\n\n/**\n * Marshals {@link TimeSeriesPoint}\n *\n * @internal\n */\nconst marshalTimeSeriesPoint = obj => ({\n  timestamp: obj.timestamp?.toISOString(),\n  value: obj.value\n});\n\n/**\n * Marshals {@link TimeSeries}\n *\n * @internal\n */\nconst marshalTimeSeries = obj => ({\n  metadata: obj.metadata,\n  name: obj.name,\n  points: obj.points.map(elt => marshalTimeSeriesPoint(elt))\n});\n\nconst extract = key => result => result[key];\nfunction* pages(key, fetcher, request, firstPage) {\n  if (!Array.isArray(firstPage[key])) {\n    throw new Error(`Property ${key} is not a list in paginated result`);\n  }\n  const getList = extract(key);\n  let page = request.page || 1;\n  if (page === 1) {\n    yield Promise.resolve(getList(firstPage));\n    page += 1;\n  }\n  const {\n    length\n  } = firstPage[key];\n  if (!length) return;\n  const {\n    totalCount\n  } = firstPage;\n  while (page <= Math.floor((totalCount + length - 1) / length)) {\n    yield fetcher({\n      ...request,\n      page\n    }).then(getList);\n    page += 1;\n  }\n}\n\n/**\n * Fetches a paginated resource.\n *\n * @param key - The resource key of values list\n * @param fetcher - The method to retrieve paginated resources\n * @param request - A request with pagination options\n * @param initial - The first page\n * @returns An async generator of resources arrays\n */\nasync function* fetchPaginated(key, fetcher, request, initial = fetcher(request)) {\n  yield* pages(key, fetcher, request, await initial);\n}\n\n/**\n * Fetches all paginated resource.\n *\n * @param key - The resource key of values list\n * @param fetcher - The method to retrieve paginated resources\n * @param request - A request with pagination options\n * @param initial - The first page\n * @returns A resources array Promise\n */\nconst fetchAll = async (key, fetcher, request, initial = fetcher(request)) => (await Promise.all(Array.from(pages(key, fetcher, request, await initial)))).flat();\n\n/**\n * Enriches a listing method with helpers.\n *\n * @param key - The resource key of values list\n * @param fetcher - The method to retrieve paginated resources\n * @param request - A request with pagination options\n * @returns A resource Promise with the pagination helpers\n *\n * @internal\n */\nconst enrichForPagination = (key, fetcher, request) => {\n  const firstPage = fetcher(request);\n  return Object.assign(firstPage, {\n    all: () => fetchAll(key, fetcher, request, firstPage),\n    [Symbol.asyncIterator]: () => fetchPaginated(key, fetcher, request, firstPage)\n  });\n};\n\nconst ADJECTIVES = ['admiring', 'adoring', 'affectionate', 'agitated', 'amazing', 'angry', 'awesome', 'beautiful', 'blissful', 'bold', 'boring', 'brave', 'busy', 'charming', 'clever', 'cool', 'compassionate', 'competent', 'condescending', 'confident', 'cranky', 'crazy', 'dazzling', 'determined', 'distracted', 'dreamy', 'eager', 'ecstatic', 'elastic', 'elated', 'elegant', 'eloquent', 'epic', 'exciting', 'fervent', 'festive', 'flamboyant', 'focused', 'friendly', 'frosty', 'funny', 'gallant', 'gifted', 'goofy', 'gracious', 'great', 'happy', 'hardcore', 'heuristic', 'hopeful', 'hungry', 'infallible', 'inspiring', 'interesting', 'intelligent', 'jolly', 'jovial', 'keen', 'kind', 'laughing', 'loving', 'lucid', 'magical', 'mystifying', 'modest', 'musing', 'naughty', 'nervous', 'nice', 'nifty', 'nostalgic', 'objective', 'optimistic', 'peaceful', 'pedantic', 'pensive', 'practical', 'priceless', 'quirky', 'quizzical', 'recursing', 'relaxed', 'reverent', 'romantic', 'sad', 'serene', 'sharp', 'silly', 'sleepy', 'stoic', 'strange', 'stupefied', 'suspicious', 'sweet', 'tender', 'thirsty', 'trusting', 'unruffled', 'upbeat', 'vibrant', 'vigilant', 'vigorous', 'wizardly', 'wonderful', 'xenodochial', 'youthful', 'zealous', 'zen'];\nconst NAMES = ['albattani', 'allen', 'almeida', 'antonelli', 'agnesi', 'archimedes', 'ardinghelli', 'aryabhata', 'austin', 'babbage', 'banach', 'banzai', 'bardeen', 'bartik', 'bassi', 'beaver', 'bell', 'benz', 'bhabha', 'bhaskara', 'black', 'blackburn', 'blackwell', 'bohr', 'booth', 'borg', 'bose', 'bouman', 'boyd', 'brahmagupta', 'brattain', 'brown', 'buck', 'burnell', 'cannon', 'carson', 'cartwright', 'carver', 'cerf', 'chandrasekhar', 'chaplygin', 'chatelet', 'chatterjee', 'chebyshev', 'cohen', 'chaum', 'clarke', 'colden', 'cori', 'cray', 'curran', 'curie', 'darwin', 'davinci', 'dewdney', 'dhawan', 'diffie', 'dijkstra', 'dirac', 'driscoll', 'dubinsky', 'easley', 'edison', 'einstein', 'elbakyan', 'elgamal', 'elion', 'ellis', 'engelbart', 'euclid', 'euler', 'faraday', 'feistel', 'fermat', 'fermi', 'feynman', 'franklin', 'gagarin', 'galileo', 'galois', 'ganguly', 'gates', 'gauss', 'germain', 'goldberg', 'goldstine', 'goldwasser', 'golick', 'goodall', 'gould', 'greider', 'grothendieck', 'haibt', 'hamilton', 'haslett', 'hawking', 'hellman', 'heisenberg', 'hermann', 'herschel', 'hertz', 'heyrovsky', 'hodgkin', 'hofstadter', 'hoover', 'hopper', 'hugle', 'hypatia', 'ishizaka', 'jackson', 'jang', 'jemison', 'jennings', 'jepsen', 'johnson', 'joliot', 'jones', 'kalam', 'kapitsa', 'kare', 'keldysh', 'keller', 'kepler', 'khayyam', 'khorana', 'kilby', 'kirch', 'knuth', 'kowalevski', 'lalande', 'lamarr', 'lamport', 'leakey', 'leavitt', 'lederberg', 'lehmann', 'lewin', 'lichterman', 'liskov', 'lovelace', 'lumiere', 'mahavira', 'margulis', 'matsumoto', 'maxwell', 'mayer', 'mccarthy', 'mcclintock', 'mclaren', 'mclean', 'mcnulty', 'mendel', 'mendeleev', 'meitner', 'meninsky', 'merkle', 'mestorf', 'mirzakhani', 'montalcini', 'moore', 'morse', 'murdock', 'moser', 'napier', 'nash', 'neumann', 'newton', 'niel', 'nightingale', 'nobel', 'noether', 'northcutt', 'noyce', 'panini', 'pare', 'pascal', 'pasteur', 'payne', 'perlman', 'pike', 'poincare', 'poitras', 'proskuriakova', 'ptolemy', 'raman', 'ramanujan', 'ride', 'ritchie', 'rhodes', 'robinson', 'roentgen', 'rosalind', 'rubin', 'saha', 'sammet', 'sanderson', 'satoshi', 'shamir', 'shannon', 'shaw', 'shirley', 'shockley', 'shtern', 'sinoussi', 'snyder', 'solomon', 'spence', 'stonebraker', 'sutherland', 'swanson', 'swartz', 'swirles', 'taussig', 'tereshkova', 'tesla', 'tharp', 'thompson', 'torvalds', 'tu', 'turing', 'varahamihira', 'vaughan', 'visvesvaraya', 'volhard', 'villani', 'wescoff', 'wilbur', 'wiles', 'williams', 'williamson', 'wilson', 'wing', 'wozniak', 'wright', 'wu', 'yalow', 'yonath', 'zhukovsky'];\nconst randomName = (prefix = '', separator = '-') => {\n  const name = `${ADJECTIVES[Math.floor(Math.random() * ADJECTIVES.length)] ?? ''}${separator}${NAMES[Math.floor(Math.random() * NAMES.length)] ?? ''}`;\n  if (name === `boring${separator}wozniak`) {\n    return randomName(prefix, separator);\n  }\n  return prefix.length > 0 ? `${prefix}${separator}${name}` : name;\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalProject$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Project' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    id: data.id,\n    name: data.name,\n    organizationId: data.organization_id,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalListProjectsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListProjectsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    projects: unmarshalArrayOfObject(data.projects, unmarshalProject$1),\n    totalCount: data.total_count\n  };\n};\nconst marshalCreateProjectRequest = (request, defaults) => ({\n  description: request.description,\n  name: request.name || randomName('proj'),\n  organization_id: request.organizationId ?? defaults.defaultOrganizationId\n});\nconst marshalUpdateProjectRequest = (request, defaults) => ({\n  description: request.description,\n  name: request.name\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$x = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * Account API.\n *\n * User related data. This API allows you to manage projects.\n */\nlet API$y = class API extends API$z {\n  /**\n   * Create a new Project for an Organization. Deprecated in favor of Account\n   * API v3. Generate a new Project for an Organization, specifying its\n   * configuration including name and description.\n   *\n   * @deprecated\n   * @param request - The request {@link CreateProjectRequest}\n   * @returns A Promise of Project\n   */\n  createProject = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreateProjectRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$x,\n    method: 'POST',\n    path: `/account/v2/projects`\n  }, unmarshalProject$1);\n  pageOfListProjects = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/account/v2/projects`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId ?? this.client.settings.defaultOrganizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_ids', request.projectIds])\n  }, unmarshalListProjectsResponse$1);\n\n  /**\n   * List all Projects of an Organization. Deprecated in favor of Account API\n   * v3. List all Projects of an Organization. The response will include the\n   * total number of Projects as well as their associated Organizations, names\n   * and IDs. Other information include the creation and update date of the\n   * Project.\n   *\n   * @deprecated\n   * @param request - The request {@link ListProjectsRequest}\n   * @returns A Promise of ListProjectsResponse\n   */\n  listProjects = (request = {}) => enrichForPagination('projects', this.pageOfListProjects, request);\n\n  /**\n   * Get an existing Project. Deprecated in favor of Account API v3. Retrieve\n   * information about an existing Project, specified by its Project ID. Its\n   * full details, including ID, name and description, are returned in the\n   * response object.\n   *\n   * @deprecated\n   * @param request - The request {@link GetProjectRequest}\n   * @returns A Promise of Project\n   */\n  getProject = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/account/v2/projects/${validatePathParam('projectId', request.projectId ?? this.client.settings.defaultProjectId)}`\n  }, unmarshalProject$1);\n\n  /**\n   * Delete an existing Project. Deprecated in favor of Account API v3. Delete\n   * an existing Project, specified by its Project ID. The Project needs to be\n   * empty (meaning there are no resources left in it) to be deleted\n   * effectively. Note that deleting a Project is permanent, and cannot be\n   * undone.\n   *\n   * @deprecated\n   * @param request - The request {@link DeleteProjectRequest}\n   */\n  deleteProject = (request = {}) => this.client.fetch({\n    method: 'DELETE',\n    path: `/account/v2/projects/${validatePathParam('projectId', request.projectId ?? this.client.settings.defaultProjectId)}`\n  });\n\n  /**\n   * Update Project. Deprecated in favor of Account API v3. Update the\n   * parameters of an existing Project, specified by its Project ID. These\n   * parameters include the name and description.\n   *\n   * @deprecated\n   * @param request - The request {@link UpdateProjectRequest}\n   * @returns A Promise of Project\n   */\n  updateProject = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalUpdateProjectRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$x,\n    method: 'PATCH',\n    path: `/account/v2/projects/${validatePathParam('projectId', request.projectId ?? this.client.settings.defaultProjectId)}`\n  }, unmarshalProject$1);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$x = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$y\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalProject = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Project' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    id: data.id,\n    name: data.name,\n    organizationId: data.organization_id,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalListProjectsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListProjectsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    projects: unmarshalArrayOfObject(data.projects, unmarshalProject),\n    totalCount: data.total_count\n  };\n};\nconst marshalProjectApiCreateProjectRequest = (request, defaults) => ({\n  description: request.description,\n  name: request.name || randomName('proj'),\n  organization_id: request.organizationId ?? defaults.defaultOrganizationId\n});\nconst marshalProjectApiUpdateProjectRequest = (request, defaults) => ({\n  description: request.description,\n  name: request.name\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$w = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * Account API.\n *\n * This API allows you to manage projects.\n */\nclass ProjectAPI extends API$z {\n  /**\n   * Create a new Project for an Organization. Generate a new Project for an\n   * Organization, specifying its configuration including name and description.\n   *\n   * @param request - The request {@link ProjectApiCreateProjectRequest}\n   * @returns A Promise of Project\n   */\n  createProject = request => this.client.fetch({\n    body: JSON.stringify(marshalProjectApiCreateProjectRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$w,\n    method: 'POST',\n    path: `/account/v3/projects`\n  }, unmarshalProject);\n  pageOfListProjects = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/account/v3/projects`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId ?? this.client.settings.defaultOrganizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_ids', request.projectIds])\n  }, unmarshalListProjectsResponse);\n\n  /**\n   * List all Projects of an Organization. List all Projects of an Organization.\n   * The response will include the total number of Projects as well as their\n   * associated Organizations, names, and IDs. Other information includes the\n   * creation and update date of the Project.\n   *\n   * @param request - The request {@link ProjectApiListProjectsRequest}\n   * @returns A Promise of ListProjectsResponse\n   */\n  listProjects = (request = {}) => enrichForPagination('projects', this.pageOfListProjects, request);\n\n  /**\n   * Get an existing Project. Retrieve information about an existing Project,\n   * specified by its Project ID. Its full details, including ID, name and\n   * description, are returned in the response object.\n   *\n   * @param request - The request {@link ProjectApiGetProjectRequest}\n   * @returns A Promise of Project\n   */\n  getProject = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/account/v3/projects/${validatePathParam('projectId', request.projectId ?? this.client.settings.defaultProjectId)}`\n  }, unmarshalProject);\n\n  /**\n   * Delete an existing Project. Delete an existing Project, specified by its\n   * Project ID. The Project needs to be empty (meaning there are no resources\n   * left in it) to be deleted effectively. Note that deleting a Project is\n   * permanent, and cannot be undone.\n   *\n   * @param request - The request {@link ProjectApiDeleteProjectRequest}\n   */\n  deleteProject = (request = {}) => this.client.fetch({\n    method: 'DELETE',\n    path: `/account/v3/projects/${validatePathParam('projectId', request.projectId ?? this.client.settings.defaultProjectId)}`\n  });\n\n  /**\n   * Update Project. Update the parameters of an existing Project, specified by\n   * its Project ID. These parameters include the name and description.\n   *\n   * @param request - The request {@link ProjectApiUpdateProjectRequest}\n   * @returns A Promise of Project\n   */\n  updateProject = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalProjectApiUpdateProjectRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$w,\n    method: 'PATCH',\n    path: `/account/v3/projects/${validatePathParam('projectId', request.projectId ?? this.client.settings.defaultProjectId)}`\n  }, unmarshalProject);\n}\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst ProjectApiCreateProjectRequest = {\n  description: {\n    maxLength: 200\n  },\n  name: {\n    maxLength: 64,\n    minLength: 1,\n    pattern: /^[a-zA-Z0-9\\._\\- ]+$/\n  }\n};\nconst ProjectApiListProjectsRequest = {\n  name: {\n    maxLength: 64,\n    minLength: 1,\n    pattern: /^[a-zA-Z0-9\\._\\- ]+$/\n  },\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 100\n  }\n};\nconst ProjectApiUpdateProjectRequest = {\n  description: {\n    maxLength: 200\n  },\n  name: {\n    maxLength: 64,\n    minLength: 1,\n    pattern: /^[a-zA-Z0-9\\._\\- ]+$/\n  }\n};\n\nvar validationRules_gen$g = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ProjectApiCreateProjectRequest: ProjectApiCreateProjectRequest,\n  ProjectApiListProjectsRequest: ProjectApiListProjectsRequest,\n  ProjectApiUpdateProjectRequest: ProjectApiUpdateProjectRequest\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$w = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ProjectAPI: ProjectAPI,\n  ValidationRules: validationRules_gen$g\n});\n\nvar index$A = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v2: index_gen$x,\n  v3: index_gen$w\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link ServerStatus}. */\nconst SERVER_TRANSIENT_STATUSES$3 = ['starting', 'rebooting', 'updating', 'locking', 'unlocking', 'reinstalling'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalOS$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OS' failed as data isn't a dictionary.`);\n  }\n  return {\n    compatibleServerTypes: data.compatible_server_types,\n    id: data.id,\n    imageUrl: data.image_url,\n    label: data.label,\n    name: data.name\n  };\n};\nconst unmarshalServerTypeCPU = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerTypeCPU' failed as data isn't a dictionary.`);\n  }\n  return {\n    coreCount: data.core_count,\n    name: data.name\n  };\n};\nconst unmarshalServerTypeDisk = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerTypeDisk' failed as data isn't a dictionary.`);\n  }\n  return {\n    capacity: data.capacity,\n    type: data.type\n  };\n};\nconst unmarshalServerTypeMemory = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerTypeMemory' failed as data isn't a dictionary.`);\n  }\n  return {\n    capacity: data.capacity,\n    type: data.type\n  };\n};\nconst unmarshalServerType$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerType' failed as data isn't a dictionary.`);\n  }\n  return {\n    cpu: data.cpu ? unmarshalServerTypeCPU(data.cpu) : undefined,\n    disk: data.disk ? unmarshalServerTypeDisk(data.disk) : undefined,\n    memory: data.memory ? unmarshalServerTypeMemory(data.memory) : undefined,\n    minimumLeaseDuration: data.minimum_lease_duration,\n    name: data.name,\n    stock: data.stock\n  };\n};\nconst unmarshalServer$3 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Server' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    deletableAt: unmarshalDate(data.deletable_at),\n    id: data.id,\n    ip: data.ip,\n    name: data.name,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    status: data.status,\n    type: data.type,\n    updatedAt: unmarshalDate(data.updated_at),\n    vncUrl: data.vnc_url,\n    zone: data.zone\n  };\n};\nconst unmarshalListOSResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListOSResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    os: unmarshalArrayOfObject(data.os, unmarshalOS$2),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListServerTypesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListServerTypesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    serverTypes: unmarshalArrayOfObject(data.server_types, unmarshalServerType$1)\n  };\n};\nconst unmarshalListServersResponse$3 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListServersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    servers: unmarshalArrayOfObject(data.servers, unmarshalServer$3),\n    totalCount: data.total_count\n  };\n};\nconst marshalCreateServerRequest$3 = (request, defaults) => ({\n  name: request.name || randomName('as'),\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  type: request.type\n});\nconst marshalUpdateServerRequest$3 = (request, defaults) => ({\n  name: request.name\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$v = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Apple silicon API. */\nlet API$x = class API extends API$z {\n  /** Lists the available zones of the API. */\n  static LOCALITIES = ['fr-par-3'];\n\n  /**\n   * List server types. List all technical details about Apple silicon server\n   * types available in the specified zone. Since there is only one Availability\n   * Zone for Apple silicon servers, the targeted value is `fr-par-3`.\n   *\n   * @param request - The request {@link ListServerTypesRequest}\n   * @returns A Promise of ListServerTypesResponse\n   */\n  listServerTypes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/apple-silicon/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/server-types`\n  }, unmarshalListServerTypesResponse);\n\n  /**\n   * Get a server type. Get technical details (CPU, disk size etc.) of a server\n   * type.\n   *\n   * @param request - The request {@link GetServerTypeRequest}\n   * @returns A Promise of ServerType\n   */\n  getServerType = request => this.client.fetch({\n    method: 'GET',\n    path: `/apple-silicon/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/server-type/${validatePathParam('serverType', request.serverType)}`\n  }, unmarshalServerType$1);\n\n  /**\n   * Create a server. Create a new server in the targeted zone, specifying its\n   * configuration including name and type.\n   *\n   * @param request - The request {@link CreateServerRequest}\n   * @returns A Promise of Server\n   */\n  createServer = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateServerRequest$3(request, this.client.settings)),\n    headers: jsonContentHeaders$v,\n    method: 'POST',\n    path: `/apple-silicon/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers`\n  }, unmarshalServer$3);\n  pageOfListServers = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/apple-silicon/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers`,\n    urlParams: urlParams(['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListServersResponse$3);\n\n  /**\n   * List all servers. List all servers in the specified zone. By default,\n   * returned servers in the list are ordered by creation date in ascending\n   * order, though this can be modified via the `order_by` field.\n   *\n   * @param request - The request {@link ListServersRequest}\n   * @returns A Promise of ListServersResponse\n   */\n  listServers = (request = {}) => enrichForPagination('servers', this.pageOfListServers, request);\n  pageOfListOS = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/apple-silicon/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/os`,\n    urlParams: urlParams(['name', request.name], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['server_type', request.serverType])\n  }, unmarshalListOSResponse$2);\n\n  /**\n   * List all Operating Systems (OS). List all Operating Systems (OS). The\n   * response will include the total number of OS as well as their associated\n   * IDs, names and labels.\n   *\n   * @param request - The request {@link ListOSRequest}\n   * @returns A Promise of ListOSResponse\n   */\n  listOS = (request = {}) => enrichForPagination('os', this.pageOfListOS, request);\n\n  /**\n   * Get an Operating System (OS). Get an Operating System (OS). The response\n   * will include the OS's unique ID as well as its name and label.\n   *\n   * @param request - The request {@link GetOSRequest}\n   * @returns A Promise of OS\n   */\n  getOS = request => this.client.fetch({\n    method: 'GET',\n    path: `/apple-silicon/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/os/${validatePathParam('osId', request.osId)}`\n  }, unmarshalOS$2);\n\n  /**\n   * Get a server. Retrieve information about an existing Apple silicon server,\n   * specified by its server ID. Its full details, including name, status and IP\n   * address, are returned in the response object.\n   *\n   * @param request - The request {@link GetServerRequest}\n   * @returns A Promise of Server\n   */\n  getServer = request => this.client.fetch({\n    method: 'GET',\n    path: `/apple-silicon/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}`\n  }, unmarshalServer$3);\n\n  /**\n   * Waits for {@link Server} to be in a final state.\n   *\n   * @param request - The request {@link GetServerRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Server\n   */\n  waitForServer = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!SERVER_TRANSIENT_STATUSES$3.includes(res.status))), this.getServer, request, options);\n\n  /**\n   * Update a server. Update the parameters of an existing Apple silicon server,\n   * specified by its server ID.\n   *\n   * @param request - The request {@link UpdateServerRequest}\n   * @returns A Promise of Server\n   */\n  updateServer = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateServerRequest$3(request, this.client.settings)),\n    headers: jsonContentHeaders$v,\n    method: 'PATCH',\n    path: `/apple-silicon/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}`\n  }, unmarshalServer$3);\n\n  /**\n   * Delete a server. Delete an existing Apple silicon server, specified by its\n   * server ID. Deleting a server is permanent, and cannot be undone. Note that\n   * the minimum allocation period for Apple silicon-as-a-service is 24 hours,\n   * meaning you cannot delete your server prior to that.\n   *\n   * @param request - The request {@link DeleteServerRequest}\n   */\n  deleteServer = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/apple-silicon/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}`\n  });\n\n  /**\n   * Reboot a server. Reboot an existing Apple silicon server, specified by its\n   * server ID.\n   *\n   * @param request - The request {@link RebootServerRequest}\n   * @returns A Promise of Server\n   */\n  rebootServer = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$v,\n    method: 'POST',\n    path: `/apple-silicon/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/reboot`\n  }, unmarshalServer$3);\n\n  /**\n   * Reinstall a server. Reinstall an existing Apple silicon server (specified\n   * by its server ID) from a new image (OS). All the data on the disk is\n   * deleted and all configuration is reset to the defailt configuration values\n   * of the image (OS).\n   *\n   * @param request - The request {@link ReinstallServerRequest}\n   * @returns A Promise of Server\n   */\n  reinstallServer = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$v,\n    method: 'POST',\n    path: `/apple-silicon/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/reinstall`\n  }, unmarshalServer$3);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$v = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$x,\n  SERVER_TRANSIENT_STATUSES: SERVER_TRANSIENT_STATUSES$3\n});\n\nvar index$z = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1alpha1: index_gen$v\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link ServerInstallStatus}. */\nconst SERVER_INSTALL_TRANSIENT_STATUSES$1 = ['to_install', 'installing'];\n\n/** Lists transient statutes of the enum {@link ServerPrivateNetworkStatus}. */\nconst SERVER_PRIVATE_NETWORK_TRANSIENT_STATUSES = ['attaching', 'detaching'];\n\n/** Lists transient statutes of the enum {@link ServerStatus}. */\nconst SERVER_TRANSIENT_STATUSES$2 = ['delivering', 'stopping', 'starting', 'deleting', 'ordered', 'resetting'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalIP$3 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'IP' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    id: data.id,\n    reverse: data.reverse,\n    reverseStatus: data.reverse_status,\n    reverseStatusMessage: data.reverse_status_message,\n    version: data.version\n  };\n};\nconst unmarshalOSOSField = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OSOSField' failed as data isn't a dictionary.`);\n  }\n  return {\n    defaultValue: data.default_value,\n    editable: data.editable,\n    required: data.required\n  };\n};\nconst unmarshalOS$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OS' failed as data isn't a dictionary.`);\n  }\n  return {\n    allowed: data.allowed,\n    enabled: data.enabled,\n    id: data.id,\n    licenseRequired: data.license_required,\n    logoUrl: data.logo_url,\n    name: data.name,\n    password: data.password ? unmarshalOSOSField(data.password) : undefined,\n    servicePassword: data.service_password ? unmarshalOSOSField(data.service_password) : undefined,\n    serviceUser: data.service_user ? unmarshalOSOSField(data.service_user) : undefined,\n    ssh: data.ssh ? unmarshalOSOSField(data.ssh) : undefined,\n    user: data.user ? unmarshalOSOSField(data.user) : undefined,\n    version: data.version\n  };\n};\nconst unmarshalCPU$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CPU' failed as data isn't a dictionary.`);\n  }\n  return {\n    benchmark: data.benchmark,\n    coreCount: data.core_count,\n    frequency: data.frequency,\n    name: data.name,\n    threadCount: data.thread_count\n  };\n};\nconst unmarshalDisk$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Disk' failed as data isn't a dictionary.`);\n  }\n  return {\n    capacity: data.capacity,\n    type: data.type\n  };\n};\nconst unmarshalMemory$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Memory' failed as data isn't a dictionary.`);\n  }\n  return {\n    capacity: data.capacity,\n    frequency: data.frequency,\n    isEcc: data.is_ecc,\n    type: data.type\n  };\n};\nconst unmarshalOfferOptionOffer = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OfferOptionOffer' failed as data isn't a dictionary.`);\n  }\n  return {\n    enabled: data.enabled,\n    id: data.id,\n    manageable: data.manageable,\n    name: data.name,\n    osId: data.os_id,\n    price: data.price ? unmarshalMoney(data.price) : undefined,\n    subscriptionPeriod: data.subscription_period\n  };\n};\nconst unmarshalPersistentMemory$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PersistentMemory' failed as data isn't a dictionary.`);\n  }\n  return {\n    capacity: data.capacity,\n    frequency: data.frequency,\n    type: data.type\n  };\n};\nconst unmarshalRaidController$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RaidController' failed as data isn't a dictionary.`);\n  }\n  return {\n    model: data.model,\n    raidLevel: data.raid_level\n  };\n};\nconst unmarshalOffer$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Offer' failed as data isn't a dictionary.`);\n  }\n  return {\n    bandwidth: data.bandwidth,\n    commercialRange: data.commercial_range,\n    cpus: unmarshalArrayOfObject(data.cpus, unmarshalCPU$1),\n    disks: unmarshalArrayOfObject(data.disks, unmarshalDisk$1),\n    enable: data.enable,\n    fee: data.fee ? unmarshalMoney(data.fee) : undefined,\n    id: data.id,\n    incompatibleOsIds: data.incompatible_os_ids,\n    memories: unmarshalArrayOfObject(data.memories, unmarshalMemory$1),\n    name: data.name,\n    operationPath: data.operation_path,\n    options: unmarshalArrayOfObject(data.options, unmarshalOfferOptionOffer),\n    persistentMemories: unmarshalArrayOfObject(data.persistent_memories, unmarshalPersistentMemory$1),\n    pricePerHour: data.price_per_hour ? unmarshalMoney(data.price_per_hour) : undefined,\n    pricePerMonth: data.price_per_month ? unmarshalMoney(data.price_per_month) : undefined,\n    privateBandwidth: data.private_bandwidth,\n    quotaName: data.quota_name,\n    raidControllers: unmarshalArrayOfObject(data.raid_controllers, unmarshalRaidController$1),\n    sharedBandwidth: data.shared_bandwidth,\n    stock: data.stock,\n    subscriptionPeriod: data.subscription_period,\n    tags: data.tags\n  };\n};\nconst unmarshalOption = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Option' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    manageable: data.manageable,\n    name: data.name\n  };\n};\nconst unmarshalServerPrivateNetwork = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerPrivateNetwork' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    privateNetworkId: data.private_network_id,\n    projectId: data.project_id,\n    serverId: data.server_id,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at),\n    vlan: data.vlan\n  };\n};\nconst unmarshalServerInstall$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerInstall' failed as data isn't a dictionary.`);\n  }\n  return {\n    hostname: data.hostname,\n    osId: data.os_id,\n    serviceUrl: data.service_url,\n    serviceUser: data.service_user,\n    sshKeyIds: data.ssh_key_ids,\n    status: data.status,\n    user: data.user\n  };\n};\nconst unmarshalServerOption$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerOption' failed as data isn't a dictionary.`);\n  }\n  return {\n    expiresAt: unmarshalDate(data.expires_at),\n    id: data.id,\n    manageable: data.manageable,\n    name: data.name,\n    status: data.status\n  };\n};\nconst unmarshalServerRescueServer = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerRescueServer' failed as data isn't a dictionary.`);\n  }\n  return {\n    password: data.password,\n    user: data.user\n  };\n};\nconst unmarshalServer$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Server' failed as data isn't a dictionary.`);\n  }\n  return {\n    bootType: data.boot_type,\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    domain: data.domain,\n    id: data.id,\n    install: data.install ? unmarshalServerInstall$1(data.install) : undefined,\n    ips: unmarshalArrayOfObject(data.ips, unmarshalIP$3),\n    name: data.name,\n    offerId: data.offer_id,\n    offerName: data.offer_name,\n    options: unmarshalArrayOfObject(data.options, unmarshalServerOption$1),\n    organizationId: data.organization_id,\n    pingStatus: data.ping_status,\n    projectId: data.project_id,\n    rescueServer: data.rescue_server ? unmarshalServerRescueServer(data.rescue_server) : undefined,\n    status: data.status,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalSetting = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Setting' failed as data isn't a dictionary.`);\n  }\n  return {\n    enabled: data.enabled,\n    id: data.id,\n    projectId: data.project_id,\n    type: data.type\n  };\n};\nconst unmarshalBMCAccess$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'BMCAccess' failed as data isn't a dictionary.`);\n  }\n  return {\n    expiresAt: unmarshalDate(data.expires_at),\n    login: data.login,\n    password: data.password,\n    url: data.url\n  };\n};\nconst unmarshalGetServerMetricsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetServerMetricsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    pings: data.pings ? unmarshalTimeSeries(data.pings) : undefined\n  };\n};\nconst unmarshalListOSResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListOSResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    os: unmarshalArrayOfObject(data.os, unmarshalOS$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListOffersResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListOffersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    offers: unmarshalArrayOfObject(data.offers, unmarshalOffer$2),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListOptionsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListOptionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    options: unmarshalArrayOfObject(data.options, unmarshalOption),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalServerEvent$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerEvent' failed as data isn't a dictionary.`);\n  }\n  return {\n    action: data.action,\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalListServerEventsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListServerEventsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    events: unmarshalArrayOfObject(data.events, unmarshalServerEvent$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListServerPrivateNetworksResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListServerPrivateNetworksResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    serverPrivateNetworks: unmarshalArrayOfObject(data.server_private_networks, unmarshalServerPrivateNetwork),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListServersResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListServersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    servers: unmarshalArrayOfObject(data.servers, unmarshalServer$2),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSettingsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSettingsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    settings: unmarshalArrayOfObject(data.settings, unmarshalSetting),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalSetServerPrivateNetworksResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetServerPrivateNetworksResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    serverPrivateNetworks: unmarshalArrayOfObject(data.server_private_networks, unmarshalServerPrivateNetwork)\n  };\n};\nconst marshalAddOptionServerRequest = (request, defaults) => ({\n  expires_at: request.expiresAt\n});\nconst marshalCreateServerRequestInstall = (request, defaults) => ({\n  hostname: request.hostname,\n  os_id: request.osId,\n  password: request.password,\n  service_password: request.servicePassword,\n  service_user: request.serviceUser,\n  ssh_key_ids: request.sshKeyIds,\n  user: request.user\n});\nconst marshalCreateServerRequest$2 = (request, defaults) => ({\n  description: request.description,\n  install: request.install !== undefined ? marshalCreateServerRequestInstall(request.install) : undefined,\n  name: request.name,\n  offer_id: request.offerId,\n  option_ids: request.optionIds,\n  tags: request.tags,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project_id',\n    value: request.projectId\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization_id',\n    value: request.organizationId\n  }])\n});\nconst marshalInstallServerRequest$1 = (request, defaults) => ({\n  hostname: request.hostname,\n  os_id: request.osId,\n  password: request.password,\n  service_password: request.servicePassword,\n  service_user: request.serviceUser,\n  ssh_key_ids: request.sshKeyIds,\n  user: request.user\n});\nconst marshalPrivateNetworkApiAddServerPrivateNetworkRequest = (request, defaults) => ({\n  private_network_id: request.privateNetworkId\n});\nconst marshalPrivateNetworkApiSetServerPrivateNetworksRequest = (request, defaults) => ({\n  private_network_ids: request.privateNetworkIds\n});\nconst marshalRebootServerRequest = (request, defaults) => ({\n  boot_type: request.bootType\n});\nconst marshalStartBMCAccessRequest$1 = (request, defaults) => ({\n  ip: request.ip\n});\nconst marshalStartServerRequest = (request, defaults) => ({\n  boot_type: request.bootType\n});\nconst marshalUpdateIPRequest$2 = (request, defaults) => ({\n  reverse: request.reverse\n});\nconst marshalUpdateServerRequest$2 = (request, defaults) => ({\n  description: request.description,\n  name: request.name,\n  tags: request.tags\n});\nconst marshalUpdateSettingRequest = (request, defaults) => ({\n  enabled: request.enabled\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$u = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * Elastic Metal API.\n *\n * This API allows to manage your Elastic Metal server.\n */\nlet API$w = class API extends API$z {\n  /** Lists the available zones of the API. */\n  static LOCALITIES = ['fr-par-1', 'fr-par-2', 'nl-ams-1', 'nl-ams-2'];\n  pageOfListServers = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers`,\n    urlParams: urlParams(['name', request.name], ['option_id', request.optionId], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['status', request.status], ['tags', request.tags])\n  }, unmarshalListServersResponse$2);\n\n  /**\n   * List Elastic Metal servers for an Organization. List Elastic Metal servers\n   * for a specific Organization.\n   *\n   * @param request - The request {@link ListServersRequest}\n   * @returns A Promise of ListServersResponse\n   */\n  listServers = (request = {}) => enrichForPagination('servers', this.pageOfListServers, request);\n\n  /**\n   * Get a specific Elastic Metal server. Get full details of an existing\n   * Elastic Metal server associated with the ID.\n   *\n   * @param request - The request {@link GetServerRequest}\n   * @returns A Promise of Server\n   */\n  getServer = request => this.client.fetch({\n    method: 'GET',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}`\n  }, unmarshalServer$2);\n\n  /**\n   * Waits for {@link Server} to be in a final state.\n   *\n   * @param request - The request {@link GetServerRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Server\n   */\n  waitForServer = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!SERVER_TRANSIENT_STATUSES$2.includes(res.status))), this.getServer, request, options);\n\n  /**\n   * Create an Elastic Metal server. Create a new Elastic Metal server. Once the\n   * server is created, proceed with the [installation of an OS](#post-3e949e).\n   *\n   * @param request - The request {@link CreateServerRequest}\n   * @returns A Promise of Server\n   */\n  createServer = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateServerRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$u,\n    method: 'POST',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers`\n  }, unmarshalServer$2);\n\n  /**\n   * Update an Elastic Metal server. Update the server associated with the ID.\n   * You can update parameters such as the server's name, tags and description.\n   * Any parameters left null in the request body are not updated.\n   *\n   * @param request - The request {@link UpdateServerRequest}\n   * @returns A Promise of Server\n   */\n  updateServer = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateServerRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$u,\n    method: 'PATCH',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}`\n  }, unmarshalServer$2);\n\n  /**\n   * Install an Elastic Metal server. Install an Operating System (OS) on the\n   * Elastic Metal server with a specific ID.\n   *\n   * @param request - The request {@link InstallServerRequest}\n   * @returns A Promise of Server\n   */\n  installServer = request => this.client.fetch({\n    body: JSON.stringify(marshalInstallServerRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$u,\n    method: 'POST',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/install`\n  }, unmarshalServer$2);\n\n  /**\n   * Return server metrics. Get the ping status of the server associated with\n   * the ID.\n   *\n   * @param request - The request {@link GetServerMetricsRequest}\n   * @returns A Promise of GetServerMetricsResponse\n   */\n  getServerMetrics = request => this.client.fetch({\n    method: 'GET',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/metrics`\n  }, unmarshalGetServerMetricsResponse);\n\n  /**\n   * Delete an Elastic Metal server. Delete the server associated with the ID.\n   *\n   * @param request - The request {@link DeleteServerRequest}\n   * @returns A Promise of Server\n   */\n  deleteServer = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}`\n  }, unmarshalServer$2);\n\n  /**\n   * Reboot an Elastic Metal server. Reboot the Elastic Metal server associated\n   * with the ID, use the `boot_type` `rescue` to reboot the server in rescue\n   * mode.\n   *\n   * @param request - The request {@link RebootServerRequest}\n   * @returns A Promise of Server\n   */\n  rebootServer = request => this.client.fetch({\n    body: JSON.stringify(marshalRebootServerRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$u,\n    method: 'POST',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/reboot`\n  }, unmarshalServer$2);\n\n  /**\n   * Start an Elastic Metal server. Start the server associated with the ID.\n   *\n   * @param request - The request {@link StartServerRequest}\n   * @returns A Promise of Server\n   */\n  startServer = request => this.client.fetch({\n    body: JSON.stringify(marshalStartServerRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$u,\n    method: 'POST',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/start`\n  }, unmarshalServer$2);\n\n  /**\n   * Stop an Elastic Metal server. Stop the server associated with the ID. The\n   * server remains allocated to your account and all data remains on the local\n   * storage of the server.\n   *\n   * @param request - The request {@link StopServerRequest}\n   * @returns A Promise of Server\n   */\n  stopServer = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$u,\n    method: 'POST',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/stop`\n  }, unmarshalServer$2);\n  pageOfListServerEvents = request => this.client.fetch({\n    method: 'GET',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/events`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListServerEventsResponse$1);\n\n  /**\n   * List server events. List event (i.e. start/stop/reboot) associated to the\n   * server ID.\n   *\n   * @param request - The request {@link ListServerEventsRequest}\n   * @returns A Promise of ListServerEventsResponse\n   */\n  listServerEvents = request => enrichForPagination('events', this.pageOfListServerEvents, request);\n\n  /**\n   * Start BMC access. Start BMC (Baseboard Management Controller) access\n   * associated with the ID. The BMC (Baseboard Management Controller) access is\n   * available one hour after the installation of the server. You need first to\n   * create an option Remote Access. You will find the ID and the price with a\n   * call to listOffers\n   * (https://developers.scaleway.com/en/products/baremetal/api/#get-78db92).\n   * Then add the option\n   * https://developers.scaleway.com/en/products/baremetal/api/#post-b14abd.\n   * After adding the BMC option, you need to Get Remote Access to get the\n   * login/password\n   * https://developers.scaleway.com/en/products/baremetal/api/#get-cefc0f. Do\n   * not forget to delete the Option after use.\n   *\n   * @param request - The request {@link StartBMCAccessRequest}\n   * @returns A Promise of BMCAccess\n   */\n  startBMCAccess = request => this.client.fetch({\n    body: JSON.stringify(marshalStartBMCAccessRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$u,\n    method: 'POST',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/bmc-access`\n  }, unmarshalBMCAccess$1);\n\n  /**\n   * Get BMC access. Get the BMC (Baseboard Management Controller) access\n   * associated with the ID, including the URL and login information needed to\n   * connect.\n   *\n   * @param request - The request {@link GetBMCAccessRequest}\n   * @returns A Promise of BMCAccess\n   */\n  getBMCAccess = request => this.client.fetch({\n    method: 'GET',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/bmc-access`\n  }, unmarshalBMCAccess$1);\n\n  /**\n   * Stop BMC access. Stop BMC (Baseboard Management Controller) access\n   * associated with the ID.\n   *\n   * @param request - The request {@link StopBMCAccessRequest}\n   */\n  stopBMCAccess = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/bmc-access`\n  });\n\n  /**\n   * Update IP. Configure the IP address associated with the server ID and IP\n   * ID. You can use this method to set a reverse DNS for an IP address.\n   *\n   * @param request - The request {@link UpdateIPRequest}\n   * @returns A Promise of IP\n   */\n  updateIP = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateIPRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$u,\n    method: 'PATCH',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/ips/${validatePathParam('ipId', request.ipId)}`\n  }, unmarshalIP$3);\n\n  /**\n   * Add server option. Add an option, such as Private Networks, to a specific\n   * server.\n   *\n   * @param request - The request {@link AddOptionServerRequest}\n   * @returns A Promise of Server\n   */\n  addOptionServer = request => this.client.fetch({\n    body: JSON.stringify(marshalAddOptionServerRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$u,\n    method: 'POST',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/options/${validatePathParam('optionId', request.optionId)}`\n  }, unmarshalServer$2);\n\n  /**\n   * Delete server option. Delete an option from a specific server.\n   *\n   * @param request - The request {@link DeleteOptionServerRequest}\n   * @returns A Promise of Server\n   */\n  deleteOptionServer = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/options/${validatePathParam('optionId', request.optionId)}`\n  }, unmarshalServer$2);\n  pageOfListOffers = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/offers`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['subscription_period', request.subscriptionPeriod])\n  }, unmarshalListOffersResponse$2);\n\n  /**\n   * List offers. List all available Elastic Metal server configurations.\n   *\n   * @param request - The request {@link ListOffersRequest}\n   * @returns A Promise of ListOffersResponse\n   */\n  listOffers = (request = {}) => enrichForPagination('offers', this.pageOfListOffers, request);\n\n  /**\n   * Get offer. Get details of an offer identified by its offer ID.\n   *\n   * @param request - The request {@link GetOfferRequest}\n   * @returns A Promise of Offer\n   */\n  getOffer = request => this.client.fetch({\n    method: 'GET',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/offers/${validatePathParam('offerId', request.offerId)}`\n  }, unmarshalOffer$2);\n\n  /**\n   * Get option. Return specific option for the ID.\n   *\n   * @param request - The request {@link GetOptionRequest}\n   * @returns A Promise of Option\n   */\n  getOption = request => this.client.fetch({\n    method: 'GET',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/options/${validatePathParam('optionId', request.optionId)}`\n  }, unmarshalOption);\n  pageOfListOptions = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/options`,\n    urlParams: urlParams(['name', request.name], ['offer_id', request.offerId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListOptionsResponse);\n\n  /**\n   * List options. List all options matching with filters.\n   *\n   * @param request - The request {@link ListOptionsRequest}\n   * @returns A Promise of ListOptionsResponse\n   */\n  listOptions = (request = {}) => enrichForPagination('options', this.pageOfListOptions, request);\n  pageOfListSettings = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/settings`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalListSettingsResponse);\n\n  /**\n   * List all settings. Return all settings for a Project ID.\n   *\n   * @param request - The request {@link ListSettingsRequest}\n   * @returns A Promise of ListSettingsResponse\n   */\n  listSettings = (request = {}) => enrichForPagination('settings', this.pageOfListSettings, request);\n\n  /**\n   * Update setting. Update a setting for a Project ID (enable or disable).\n   *\n   * @param request - The request {@link UpdateSettingRequest}\n   * @returns A Promise of Setting\n   */\n  updateSetting = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateSettingRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$u,\n    method: 'PATCH',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/settings/${validatePathParam('settingId', request.settingId)}`\n  }, unmarshalSetting);\n  pageOfListOS = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/os`,\n    urlParams: urlParams(['offer_id', request.offerId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListOSResponse$1);\n\n  /**\n   * List available OSes. List all OSes that are available for installation on\n   * Elastic Metal servers.\n   *\n   * @param request - The request {@link ListOSRequest}\n   * @returns A Promise of ListOSResponse\n   */\n  listOS = (request = {}) => enrichForPagination('os', this.pageOfListOS, request);\n\n  /**\n   * Get OS with an ID. Return the specific OS for the ID.\n   *\n   * @param request - The request {@link GetOSRequest}\n   * @returns A Promise of OS\n   */\n  getOS = request => this.client.fetch({\n    method: 'GET',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/os/${validatePathParam('osId', request.osId)}`\n  }, unmarshalOS$1);\n};\n\n/** Elastic Metal Private Network API. */\nclass PrivateNetworkAPI extends API$z {\n  /** Lists the available zones of the API. */\n  static LOCALITIES = ['fr-par-2'];\n\n  /**\n   * Add a server to a Private Network.\n   *\n   * @param request - The request\n   *   {@link PrivateNetworkApiAddServerPrivateNetworkRequest}\n   * @returns A Promise of ServerPrivateNetwork\n   */\n  addServerPrivateNetwork = request => this.client.fetch({\n    body: JSON.stringify(marshalPrivateNetworkApiAddServerPrivateNetworkRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$u,\n    method: 'POST',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/private-networks`\n  }, unmarshalServerPrivateNetwork);\n\n  /**\n   * Set multiple Private Networks on a server.\n   *\n   * @param request - The request\n   *   {@link PrivateNetworkApiSetServerPrivateNetworksRequest}\n   * @returns A Promise of SetServerPrivateNetworksResponse\n   */\n  setServerPrivateNetworks = request => this.client.fetch({\n    body: JSON.stringify(marshalPrivateNetworkApiSetServerPrivateNetworksRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$u,\n    method: 'PUT',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/private-networks`\n  }, unmarshalSetServerPrivateNetworksResponse);\n  pageOfListServerPrivateNetworks = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/server-private-networks`,\n    urlParams: urlParams(['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['private_network_id', request.privateNetworkId], ['project_id', request.projectId], ['server_id', request.serverId])\n  }, unmarshalListServerPrivateNetworksResponse);\n\n  /**\n   * List the Private Networks of a server.\n   *\n   * @param request - The request\n   *   {@link PrivateNetworkApiListServerPrivateNetworksRequest}\n   * @returns A Promise of ListServerPrivateNetworksResponse\n   */\n  listServerPrivateNetworks = (request = {}) => enrichForPagination('serverPrivateNetworks', this.pageOfListServerPrivateNetworks, request);\n\n  /**\n   * Delete a Private Network.\n   *\n   * @param request - The request\n   *   {@link PrivateNetworkApiDeleteServerPrivateNetworkRequest}\n   */\n  deleteServerPrivateNetwork = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/baremetal/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}`\n  });\n}\n\nclass BaremetalV1UtilsAPI extends API$w {\n  /**\n   * Waits for {@link ServerInstall} to be in a final state.\n   *\n   * @param request - The request {@link GetServerRequest}\n   * @param options - The waiting options\n   * @returns A Promise of ServerInstall\n   */\n  waitForServerInstall = (request, options) => tryAtIntervals(async () => {\n    const value = await this.getServer(request).then(server => {\n      if (!server.install) {\n        throw new Error(`Server creation has not begun for server ${request.serverId}`);\n      }\n      return server.install;\n    });\n    return {\n      done: !SERVER_INSTALL_TRANSIENT_STATUSES$1.includes(value.status),\n      value\n    };\n  }, createExponentialBackoffStrategy(options?.minDelay ?? 1, options?.maxDelay ?? 30), options?.timeout);\n}\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst CreateServerRequest = {\n  description: {\n    maxLength: 255\n  },\n  name: {\n    minLength: 1\n  }\n};\nconst CreateServerRequestInstall = {\n  hostname: {\n    maxLength: 255\n  },\n  password: {\n    maxLength: 255\n  },\n  servicePassword: {\n    maxLength: 255\n  },\n  serviceUser: {\n    maxLength: 255\n  },\n  user: {\n    maxLength: 255\n  }\n};\nconst InstallServerRequest$1 = {\n  hostname: {\n    maxLength: 255\n  },\n  password: {\n    maxLength: 255\n  },\n  servicePassword: {\n    maxLength: 255\n  },\n  serviceUser: {\n    maxLength: 255\n  },\n  user: {\n    maxLength: 255\n  }\n};\nconst ListOSRequest$1 = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListOffersRequest$1 = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListOptionsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListServerEventsRequest$1 = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListServersRequest$1 = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListSettingsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst UpdateServerRequest$1 = {\n  description: {\n    maxLength: 255\n  },\n  name: {\n    maxLength: 255\n  }\n};\n\nvar validationRules_gen$f = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CreateServerRequest: CreateServerRequest,\n  CreateServerRequestInstall: CreateServerRequestInstall,\n  InstallServerRequest: InstallServerRequest$1,\n  ListOSRequest: ListOSRequest$1,\n  ListOffersRequest: ListOffersRequest$1,\n  ListOptionsRequest: ListOptionsRequest,\n  ListServerEventsRequest: ListServerEventsRequest$1,\n  ListServersRequest: ListServersRequest$1,\n  ListSettingsRequest: ListSettingsRequest,\n  UpdateServerRequest: UpdateServerRequest$1\n});\n\nvar index$y = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: BaremetalV1UtilsAPI,\n  PrivateNetworkAPI: PrivateNetworkAPI,\n  SERVER_INSTALL_TRANSIENT_STATUSES: SERVER_INSTALL_TRANSIENT_STATUSES$1,\n  SERVER_PRIVATE_NETWORK_TRANSIENT_STATUSES: SERVER_PRIVATE_NETWORK_TRANSIENT_STATUSES,\n  SERVER_TRANSIENT_STATUSES: SERVER_TRANSIENT_STATUSES$2,\n  ValidationRules: validationRules_gen$f\n});\n\nvar index$x = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1: index$y\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalGetConsumptionResponseConsumption = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetConsumptionResponseConsumption' failed as data isn't a dictionary.`);\n  }\n  return {\n    category: data.category,\n    description: data.description,\n    operationPath: data.operation_path,\n    projectId: data.project_id,\n    value: data.value ? unmarshalMoney(data.value) : undefined\n  };\n};\nconst unmarshalGetConsumptionResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetConsumptionResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    consumptions: unmarshalArrayOfObject(data.consumptions, unmarshalGetConsumptionResponseConsumption),\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalDiscountCoupon$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DiscountCoupon' failed as data isn't a dictionary.`);\n  }\n  return {\n    description: data.description\n  };\n};\nconst unmarshalDiscountFilter$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DiscountFilter' failed as data isn't a dictionary.`);\n  }\n  return {\n    type: data.type,\n    value: data.value\n  };\n};\nconst unmarshalDiscount$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Discount' failed as data isn't a dictionary.`);\n  }\n  return {\n    coupon: data.coupon ? unmarshalDiscountCoupon$1(data.coupon) : undefined,\n    creationDate: unmarshalDate(data.creation_date),\n    description: data.description,\n    filters: unmarshalArrayOfObject(data.filters, unmarshalDiscountFilter$1),\n    id: data.id,\n    mode: data.mode,\n    organizationId: data.organization_id,\n    startDate: unmarshalDate(data.start_date),\n    stopDate: unmarshalDate(data.stop_date),\n    value: data.value,\n    valueRemaining: data.value_remaining,\n    valueUsed: data.value_used\n  };\n};\nconst unmarshalListDiscountsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDiscountsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    discounts: unmarshalArrayOfObject(data.discounts, unmarshalDiscount$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalInvoice$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Invoice' failed as data isn't a dictionary.`);\n  }\n  return {\n    dueDate: unmarshalDate(data.due_date),\n    id: data.id,\n    invoiceType: data.invoice_type,\n    issuedDate: unmarshalDate(data.issued_date),\n    number: data.number,\n    startDate: unmarshalDate(data.start_date),\n    totalTaxed: data.total_taxed ? unmarshalMoney(data.total_taxed) : undefined,\n    totalUntaxed: data.total_untaxed ? unmarshalMoney(data.total_untaxed) : undefined\n  };\n};\nconst unmarshalListInvoicesResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListInvoicesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    invoices: unmarshalArrayOfObject(data.invoices, unmarshalInvoice$2),\n    totalCount: data.total_count\n  };\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n/**\n * Billing API.\n *\n * This API allows you to query your consumption.\n */\nlet API$v = class API extends API$z {\n  /**\n   * Get current month's consumption. The consumption reflects the amount of\n   * money you have spent for the products you have used. The consumption value\n   * is monetary and is not computed in real time.\n   *\n   * @param request - The request {@link GetConsumptionRequest}\n   * @returns A Promise of GetConsumptionResponse\n   */\n  getConsumption = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/billing/v2alpha1/consumption`,\n    urlParams: urlParams(['organization_id', request.organizationId ?? this.client.settings.defaultOrganizationId])\n  }, unmarshalGetConsumptionResponse);\n  pageOfListInvoices = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/billing/v2alpha1/invoices`,\n    urlParams: urlParams(['invoice_type', request.invoiceType], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['started_after', request.startedAfter], ['started_before', request.startedBefore])\n  }, unmarshalListInvoicesResponse$2);\n\n  /**\n   * List invoices. List all your invoices, filtering by `start_date` and\n   * `invoice_type`. Each invoice has its own ID.\n   *\n   * @param request - The request {@link ListInvoicesRequest}\n   * @returns A Promise of ListInvoicesResponse\n   */\n  listInvoices = (request = {}) => enrichForPagination('invoices', this.pageOfListInvoices, request);\n\n  /**\n   * Download an invoice. Download a specific invoice, specified by its ID.\n   *\n   * @param request - The request {@link DownloadInvoiceRequest}\n   * @returns A Promise of Blob\n   */\n  downloadInvoice = request => this.client.fetch({\n    method: 'GET',\n    path: `/billing/v2alpha1/invoices/${validatePathParam('invoiceId', request.invoiceId)}/download`,\n    urlParams: urlParams(['dl', 1], ['file_type', request.fileType]),\n    responseType: 'blob'\n  });\n  pageOfListDiscounts = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/billing/v2alpha1/discounts`,\n    urlParams: urlParams(['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListDiscountsResponse$1);\n\n  /**\n   * List all user's discounts. List all discounts for an organization and\n   * usable categories/products/offers/references/regions/zones where the\n   * discount can be applied.\n   *\n   * @param request - The request {@link ListDiscountsRequest}\n   * @returns A Promise of ListDiscountsResponse\n   */\n  listDiscounts = (request = {}) => enrichForPagination('discounts', this.pageOfListDiscounts, request);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$u = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$v\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalInvoice$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Invoice' failed as data isn't a dictionary.`);\n  }\n  return {\n    billingPeriod: unmarshalDate(data.billing_period),\n    dueDate: unmarshalDate(data.due_date),\n    id: data.id,\n    issuedDate: unmarshalDate(data.issued_date),\n    number: data.number,\n    organizationId: data.organization_id,\n    organizationName: data.organization_name,\n    sellerName: data.seller_name,\n    startDate: unmarshalDate(data.start_date),\n    state: data.state,\n    stopDate: unmarshalDate(data.stop_date),\n    totalDiscount: data.total_discount ? unmarshalMoney(data.total_discount) : undefined,\n    totalTax: data.total_tax ? unmarshalMoney(data.total_tax) : undefined,\n    totalTaxed: data.total_taxed ? unmarshalMoney(data.total_taxed) : undefined,\n    totalUndiscount: data.total_undiscount ? unmarshalMoney(data.total_undiscount) : undefined,\n    totalUntaxed: data.total_untaxed ? unmarshalMoney(data.total_untaxed) : undefined,\n    type: data.type\n  };\n};\nconst unmarshalListConsumptionsResponseConsumption = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListConsumptionsResponseConsumption' failed as data isn't a dictionary.`);\n  }\n  return {\n    billedQuantity: data.billed_quantity,\n    categoryName: data.category_name,\n    productName: data.product_name,\n    projectId: data.project_id,\n    resourceName: data.resource_name,\n    sku: data.sku,\n    unit: data.unit,\n    value: data.value ? unmarshalMoney(data.value) : undefined\n  };\n};\nconst unmarshalListConsumptionsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListConsumptionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    consumptions: unmarshalArrayOfObject(data.consumptions, unmarshalListConsumptionsResponseConsumption),\n    totalCount: data.total_count,\n    totalDiscountUntaxedValue: data.total_discount_untaxed_value,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalDiscountCoupon = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DiscountCoupon' failed as data isn't a dictionary.`);\n  }\n  return {\n    description: data.description\n  };\n};\nconst unmarshalDiscountFilter = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DiscountFilter' failed as data isn't a dictionary.`);\n  }\n  return {\n    type: data.type,\n    value: data.value\n  };\n};\nconst unmarshalDiscount = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Discount' failed as data isn't a dictionary.`);\n  }\n  return {\n    coupon: data.coupon ? unmarshalDiscountCoupon(data.coupon) : undefined,\n    creationDate: unmarshalDate(data.creation_date),\n    description: data.description,\n    filters: unmarshalArrayOfObject(data.filters, unmarshalDiscountFilter),\n    id: data.id,\n    mode: data.mode,\n    organizationId: data.organization_id,\n    startDate: unmarshalDate(data.start_date),\n    stopDate: unmarshalDate(data.stop_date),\n    value: data.value,\n    valueRemaining: data.value_remaining,\n    valueUsed: data.value_used\n  };\n};\nconst unmarshalListDiscountsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDiscountsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    discounts: unmarshalArrayOfObject(data.discounts, unmarshalDiscount),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListInvoicesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListInvoicesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    invoices: unmarshalArrayOfObject(data.invoices, unmarshalInvoice$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListTaxesResponseTax = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTaxesResponseTax' failed as data isn't a dictionary.`);\n  }\n  return {\n    currency: data.currency,\n    description: data.description,\n    rate: data.rate,\n    totalTaxValue: data.total_tax_value\n  };\n};\nconst unmarshalListTaxesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTaxesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    taxes: unmarshalArrayOfObject(data.taxes, unmarshalListTaxesResponseTax),\n    totalCount: data.total_count,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n/**\n * Billing API.\n *\n * This API allows you to query your consumption.\n */\nlet API$u = class API extends API$z {\n  pageOfListConsumptions = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/billing/v2beta1/consumptions`,\n    urlParams: urlParams(['billing_period', request.billingPeriod], ['category_name', request.categoryName], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ...Object.entries(resolveOneOf([{\n      default: this.client.settings.defaultOrganizationId,\n      param: 'organization_id',\n      value: request.organizationId\n    }, {\n      default: this.client.settings.defaultProjectId,\n      param: 'project_id',\n      value: request.projectId\n    }])))\n  }, unmarshalListConsumptionsResponse);\n\n  /**\n   * Get monthly consumption. Consumption allows you to retrieve your past or\n   * current consumption cost, by project or category.\n   *\n   * @param request - The request {@link ListConsumptionsRequest}\n   * @returns A Promise of ListConsumptionsResponse\n   */\n  listConsumptions = (request = {}) => enrichForPagination('consumptions', this.pageOfListConsumptions, request);\n  pageOfListTaxes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/billing/v2beta1/taxes`,\n    urlParams: urlParams(['billing_period', request.billingPeriod], ['order_by', request.orderBy], ['organization_id', request.organizationId ?? this.client.settings.defaultOrganizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListTaxesResponse);\n\n  /**\n   * Get monthly consumption taxes. Consumption Tax allows you to retrieve your\n   * past or current tax charges, by project or category.\n   *\n   * @param request - The request {@link ListTaxesRequest}\n   * @returns A Promise of ListTaxesResponse\n   */\n  listTaxes = (request = {}) => enrichForPagination('taxes', this.pageOfListTaxes, request);\n  pageOfListInvoices = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/billing/v2beta1/invoices`,\n    urlParams: urlParams(['billing_period_start_after', request.billingPeriodStartAfter], ['billing_period_start_before', request.billingPeriodStartBefore], ['invoice_type', request.invoiceType], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListInvoicesResponse$1);\n\n  /**\n   * List invoices. List all your invoices, filtering by `start_date` and\n   * `invoice_type`. Each invoice has its own ID.\n   *\n   * @param request - The request {@link ListInvoicesRequest}\n   * @returns A Promise of ListInvoicesResponse\n   */\n  listInvoices = (request = {}) => enrichForPagination('invoices', this.pageOfListInvoices, request);\n\n  /**\n   * Export invoices. Export invoices in a CSV file.\n   *\n   * @param request - The request {@link ExportInvoicesRequest}\n   * @returns A Promise of Blob\n   */\n  exportInvoices = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/billing/v2beta1/export-invoices`,\n    urlParams: urlParams(['dl', 1], ['billing_period_start_after', request.billingPeriodStartAfter], ['billing_period_start_before', request.billingPeriodStartBefore], ['file_type', request.fileType], ['invoice_type', request.invoiceType], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize]),\n    responseType: 'blob'\n  });\n\n  /**\n   * Get an invoice. Get a specific invoice, specified by its ID.\n   *\n   * @param request - The request {@link GetInvoiceRequest}\n   * @returns A Promise of Invoice\n   */\n  getInvoice = request => this.client.fetch({\n    method: 'GET',\n    path: `/billing/v2beta1/invoices/${validatePathParam('invoiceId', request.invoiceId)}`\n  }, unmarshalInvoice$1);\n\n  /**\n   * Download an invoice. Download a specific invoice, specified by its ID.\n   *\n   * @param request - The request {@link DownloadInvoiceRequest}\n   * @returns A Promise of Blob\n   */\n  downloadInvoice = request => this.client.fetch({\n    method: 'GET',\n    path: `/billing/v2beta1/invoices/${validatePathParam('invoiceId', request.invoiceId)}/download`,\n    urlParams: urlParams(['dl', 1], ['file_type', request.fileType]),\n    responseType: 'blob'\n  });\n  pageOfListDiscounts = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/billing/v2beta1/discounts`,\n    urlParams: urlParams(['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListDiscountsResponse);\n\n  /**\n   * List discounts. List all discounts for your organization and usable\n   * categories, products, offers, references, regions and zones where the\n   * discount can be applied.\n   *\n   * @param request - The request {@link ListDiscountsRequest}\n   * @returns A Promise of ListDiscountsResponse\n   */\n  listDiscounts = (request = {}) => enrichForPagination('discounts', this.pageOfListDiscounts, request);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$t = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$u\n});\n\nvar index$w = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v2alpha1: index_gen$u,\n  v2beta1: index_gen$t\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link ReferenceStatus}. */\nconst REFERENCE_TRANSIENT_STATUSES = ['attaching', 'detaching', 'creating'];\n\n/** Lists transient statutes of the enum {@link SnapshotStatus}. */\nconst SNAPSHOT_TRANSIENT_STATUSES$3 = ['creating', 'deleting'];\n\n/** Lists transient statutes of the enum {@link VolumeStatus}. */\nconst VOLUME_TRANSIENT_STATUSES$1 = ['creating', 'deleting', 'resizing', 'snapshotting'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalReference = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Reference' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    productResourceId: data.product_resource_id,\n    productResourceType: data.product_resource_type,\n    status: data.status,\n    type: data.type\n  };\n};\nconst unmarshalSnapshotParentVolume = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SnapshotParentVolume' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    name: data.name,\n    status: data.status,\n    type: data.type\n  };\n};\nconst unmarshalSnapshot$3 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Snapshot' failed as data isn't a dictionary.`);\n  }\n  return {\n    class: data.class,\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    name: data.name,\n    parentVolume: data.parent_volume ? unmarshalSnapshotParentVolume(data.parent_volume) : undefined,\n    projectId: data.project_id,\n    references: unmarshalArrayOfObject(data.references, unmarshalReference),\n    size: data.size,\n    status: data.status,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalVolumeSpecifications = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'VolumeSpecifications' failed as data isn't a dictionary.`);\n  }\n  return {\n    class: data.class,\n    perfIops: data.perf_iops\n  };\n};\nconst unmarshalVolume$4 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Volume' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    lastDetachedAt: unmarshalDate(data.last_detached_at),\n    name: data.name,\n    parentSnapshotId: data.parent_snapshot_id,\n    projectId: data.project_id,\n    references: unmarshalArrayOfObject(data.references, unmarshalReference),\n    size: data.size,\n    specs: data.specs ? unmarshalVolumeSpecifications(data.specs) : undefined,\n    status: data.status,\n    tags: data.tags,\n    type: data.type,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalListSnapshotsResponse$3 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSnapshotsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    snapshots: unmarshalArrayOfObject(data.snapshots, unmarshalSnapshot$3),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalVolumeType$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'VolumeType' failed as data isn't a dictionary.`);\n  }\n  return {\n    pricing: data.pricing ? unmarshalMoney(data.pricing) : undefined,\n    snapshotPricing: data.snapshot_pricing ? unmarshalMoney(data.snapshot_pricing) : undefined,\n    specs: data.specs ? unmarshalVolumeSpecifications(data.specs) : undefined,\n    type: data.type\n  };\n};\nconst unmarshalListVolumeTypesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListVolumeTypesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    volumeTypes: unmarshalArrayOfObject(data.volume_types, unmarshalVolumeType$1)\n  };\n};\nconst unmarshalListVolumesResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListVolumesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    volumes: unmarshalArrayOfObject(data.volumes, unmarshalVolume$4)\n  };\n};\nconst marshalCreateSnapshotRequest$3 = (request, defaults) => ({\n  name: request.name,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  tags: request.tags,\n  volume_id: request.volumeId\n});\nconst marshalCreateVolumeRequestFromEmpty = (request, defaults) => ({\n  size: request.size\n});\nconst marshalCreateVolumeRequestFromSnapshot = (request, defaults) => ({\n  size: request.size,\n  snapshot_id: request.snapshotId\n});\nconst marshalCreateVolumeRequest$2 = (request, defaults) => ({\n  name: request.name,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  tags: request.tags,\n  ...resolveOneOf([{\n    param: 'from_empty',\n    value: request.fromEmpty !== undefined ? marshalCreateVolumeRequestFromEmpty(request.fromEmpty) : undefined\n  }, {\n    param: 'from_snapshot',\n    value: request.fromSnapshot !== undefined ? marshalCreateVolumeRequestFromSnapshot(request.fromSnapshot) : undefined\n  }]),\n  ...resolveOneOf([{\n    param: 'perf_iops',\n    value: request.perfIops\n  }])\n});\nconst marshalUpdateSnapshotRequest$3 = (request, defaults) => ({\n  name: request.name,\n  tags: request.tags\n});\nconst marshalUpdateVolumeRequest$2 = (request, defaults) => ({\n  name: request.name,\n  perf_iops: request.perfIops,\n  size: request.size,\n  tags: request.tags\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$t = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * Scaleway Block Storage API.\n *\n * This API allows you to use and manage your Block Storage volumes.\n */\nlet API$t = class API extends API$z {\n  /** Lists the available zones of the API. */\n  static LOCALITIES = ['fr-par-1', 'fr-par-2', 'nl-ams-1', 'nl-ams-3', 'pl-waw-3'];\n  pageOfListVolumeTypes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/block/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/volume-types`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListVolumeTypesResponse);\n\n  /**\n   * List volume types. List all available volume types in a specified zone. The\n   * volume types listed are ordered by name in ascending order.\n   *\n   * @param request - The request {@link ListVolumeTypesRequest}\n   * @returns A Promise of ListVolumeTypesResponse\n   */\n  listVolumeTypes = (request = {}) => enrichForPagination('volumeTypes', this.pageOfListVolumeTypes, request);\n  pageOfListVolumes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/block/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/volumes`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['product_resource_id', request.productResourceId], ['project_id', request.projectId])\n  }, unmarshalListVolumesResponse$2);\n\n  /**\n   * List volumes. List all existing volumes in a specified zone. By default,\n   * the volumes listed are ordered by creation date in ascending order. This\n   * can be modified via the `order_by` field.\n   *\n   * @param request - The request {@link ListVolumesRequest}\n   * @returns A Promise of ListVolumesResponse\n   */\n  listVolumes = (request = {}) => enrichForPagination('volumes', this.pageOfListVolumes, request);\n\n  /**\n   * Create a volume. To create a new volume from scratch, you must specify\n   * `from_empty` and the `size`. To create a volume from an existing snapshot,\n   * specify `from_snapshot` and the `snapshot_id` in the request payload\n   * instead, size is optional and can be specified if you need to extend the\n   * original size. The volume will take on the same volume class and underlying\n   * IOPS limitations as the original snapshot.\n   *\n   * @param request - The request {@link CreateVolumeRequest}\n   * @returns A Promise of Volume\n   */\n  createVolume = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateVolumeRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$t,\n    method: 'POST',\n    path: `/block/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/volumes`\n  }, unmarshalVolume$4);\n\n  /**\n   * Get a volume. Retrieve technical information about a specific volume.\n   * Details such as size, type, and status are returned in the response.\n   *\n   * @param request - The request {@link GetVolumeRequest}\n   * @returns A Promise of Volume\n   */\n  getVolume = request => this.client.fetch({\n    method: 'GET',\n    path: `/block/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/volumes/${validatePathParam('volumeId', request.volumeId)}`\n  }, unmarshalVolume$4);\n\n  /**\n   * Waits for {@link Volume} to be in a final state.\n   *\n   * @param request - The request {@link GetVolumeRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Volume\n   */\n  waitForVolume = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!VOLUME_TRANSIENT_STATUSES$1.includes(res.status))), this.getVolume, request, options);\n\n  /**\n   * Delete a detached volume. You must specify the `volume_id` of the volume\n   * you want to delete. The volume must not be in the `in_use` status.\n   *\n   * @param request - The request {@link DeleteVolumeRequest}\n   */\n  deleteVolume = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/block/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/volumes/${validatePathParam('volumeId', request.volumeId)}`\n  });\n\n  /**\n   * Update a volume. Update the technical details of a volume, such as its\n   * name, tags, or its new size and `volume_type` (within the same Block\n   * Storage class). You can only resize a volume to a larger size. It is\n   * currently not possible to change your Block Storage Class.\n   *\n   * @param request - The request {@link UpdateVolumeRequest}\n   * @returns A Promise of Volume\n   */\n  updateVolume = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateVolumeRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$t,\n    method: 'PATCH',\n    path: `/block/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/volumes/${validatePathParam('volumeId', request.volumeId)}`\n  }, unmarshalVolume$4);\n  pageOfListSnapshots = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/block/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/snapshots`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['volume_id', request.volumeId])\n  }, unmarshalListSnapshotsResponse$3);\n\n  /**\n   * List all snapshots. List all available snapshots in a specified zone. By\n   * default, the snapshots listed are ordered by creation date in ascending\n   * order. This can be modified via the `order_by` field.\n   *\n   * @param request - The request {@link ListSnapshotsRequest}\n   * @returns A Promise of ListSnapshotsResponse\n   */\n  listSnapshots = (request = {}) => enrichForPagination('snapshots', this.pageOfListSnapshots, request);\n\n  /**\n   * Get a snapshot. Retrieve technical information about a specific snapshot.\n   * Details such as size, volume type, and status are returned in the\n   * response.\n   *\n   * @param request - The request {@link GetSnapshotRequest}\n   * @returns A Promise of Snapshot\n   */\n  getSnapshot = request => this.client.fetch({\n    method: 'GET',\n    path: `/block/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}`\n  }, unmarshalSnapshot$3);\n\n  /**\n   * Waits for {@link Snapshot} to be in a final state.\n   *\n   * @param request - The request {@link GetSnapshotRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Snapshot\n   */\n  waitForSnapshot = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!SNAPSHOT_TRANSIENT_STATUSES$3.includes(res.status))), this.getSnapshot, request, options);\n\n  /**\n   * Create a snapshot of a volume. To create a snapshot, the volume must be in\n   * the `in_use` or the `available` status. If your volume is in a transient\n   * state, you need to wait until the end of the current operation.\n   *\n   * @param request - The request {@link CreateSnapshotRequest}\n   * @returns A Promise of Snapshot\n   */\n  createSnapshot = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateSnapshotRequest$3(request, this.client.settings)),\n    headers: jsonContentHeaders$t,\n    method: 'POST',\n    path: `/block/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/snapshots`\n  }, unmarshalSnapshot$3);\n\n  /**\n   * Delete a snapshot. You must specify the `snapshot_id` of the snapshot you\n   * want to delete. The snapshot must not be in use.\n   *\n   * @param request - The request {@link DeleteSnapshotRequest}\n   */\n  deleteSnapshot = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/block/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}`\n  });\n\n  /**\n   * Update a snapshot. Update the name or tags of the snapshot.\n   *\n   * @param request - The request {@link UpdateSnapshotRequest}\n   * @returns A Promise of Snapshot\n   */\n  updateSnapshot = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateSnapshotRequest$3(request, this.client.settings)),\n    headers: jsonContentHeaders$t,\n    method: 'PATCH',\n    path: `/block/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}`\n  }, unmarshalSnapshot$3);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst CreateSnapshotRequest = {\n  name: {\n    minLength: 1\n  }\n};\nconst CreateVolumeRequest = {\n  name: {\n    minLength: 1\n  }\n};\nconst ListSnapshotsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListVolumeTypesRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListVolumesRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst Reference = {\n  productResourceType: {\n    minLength: 1\n  }\n};\n\nvar validationRules_gen$e = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CreateSnapshotRequest: CreateSnapshotRequest,\n  CreateVolumeRequest: CreateVolumeRequest,\n  ListSnapshotsRequest: ListSnapshotsRequest,\n  ListVolumeTypesRequest: ListVolumeTypesRequest,\n  ListVolumesRequest: ListVolumesRequest,\n  Reference: Reference\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$s = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$t,\n  REFERENCE_TRANSIENT_STATUSES: REFERENCE_TRANSIENT_STATUSES,\n  SNAPSHOT_TRANSIENT_STATUSES: SNAPSHOT_TRANSIENT_STATUSES$3,\n  VOLUME_TRANSIENT_STATUSES: VOLUME_TRANSIENT_STATUSES$1,\n  ValidationRules: validationRules_gen$e\n});\n\nvar index$v = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1alpha1: index_gen$s\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link CockpitStatus}. */\nconst COCKPIT_TRANSIENT_STATUSES = ['creating', 'deleting', 'updating'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalContactPointEmail = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ContactPointEmail' failed as data isn't a dictionary.`);\n  }\n  return {\n    to: data.to\n  };\n};\nconst unmarshalContactPoint = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ContactPoint' failed as data isn't a dictionary.`);\n  }\n  return {\n    email: data.email ? unmarshalContactPointEmail(data.email) : undefined\n  };\n};\nconst unmarshalDatasource = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Datasource' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    isManagedByScaleway: data.is_managed_by_scaleway,\n    name: data.name,\n    projectId: data.project_id,\n    type: data.type,\n    url: data.url\n  };\n};\nconst unmarshalGrafanaProductDashboard = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GrafanaProductDashboard' failed as data isn't a dictionary.`);\n  }\n  return {\n    dashboardName: data.dashboard_name,\n    tags: data.tags,\n    title: data.title,\n    url: data.url,\n    variables: data.variables\n  };\n};\nconst unmarshalGrafanaUser = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GrafanaUser' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    login: data.login,\n    password: data.password,\n    role: data.role\n  };\n};\nconst unmarshalTokenScopes = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'TokenScopes' failed as data isn't a dictionary.`);\n  }\n  return {\n    queryLogs: data.query_logs,\n    queryMetrics: data.query_metrics,\n    queryTraces: data.query_traces,\n    setupAlerts: data.setup_alerts,\n    setupLogsRules: data.setup_logs_rules,\n    setupMetricsRules: data.setup_metrics_rules,\n    writeLogs: data.write_logs,\n    writeMetrics: data.write_metrics,\n    writeTraces: data.write_traces\n  };\n};\nconst unmarshalToken$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Token' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    name: data.name,\n    projectId: data.project_id,\n    scopes: data.scopes ? unmarshalTokenScopes(data.scopes) : undefined,\n    secretKey: data.secret_key,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalCockpitEndpoints = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CockpitEndpoints' failed as data isn't a dictionary.`);\n  }\n  return {\n    alertmanagerUrl: data.alertmanager_url,\n    grafanaUrl: data.grafana_url,\n    logsUrl: data.logs_url,\n    metricsUrl: data.metrics_url,\n    tracesUrl: data.traces_url\n  };\n};\nconst unmarshalPlan = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Plan' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    logsIngestionPrice: data.logs_ingestion_price,\n    name: data.name,\n    retentionLogsInterval: data.retention_logs_interval,\n    retentionMetricsInterval: data.retention_metrics_interval,\n    retentionPrice: data.retention_price,\n    retentionTracesInterval: data.retention_traces_interval,\n    sampleIngestionPrice: data.sample_ingestion_price,\n    tracesIngestionPrice: data.traces_ingestion_price\n  };\n};\nconst unmarshalCockpit = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Cockpit' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    endpoints: data.endpoints ? unmarshalCockpitEndpoints(data.endpoints) : undefined,\n    managedAlertsEnabled: data.managed_alerts_enabled,\n    plan: data.plan ? unmarshalPlan(data.plan) : undefined,\n    projectId: data.project_id,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalCockpitMetrics = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CockpitMetrics' failed as data isn't a dictionary.`);\n  }\n  return {\n    timeseries: unmarshalArrayOfObject(data.timeseries, unmarshalTimeSeries)\n  };\n};\nconst unmarshalListContactPointsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListContactPointsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    contactPoints: unmarshalArrayOfObject(data.contact_points, unmarshalContactPoint),\n    hasAdditionalContactPoints: data.has_additional_contact_points,\n    hasAdditionalReceivers: data.has_additional_receivers,\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListDatasourcesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDatasourcesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    datasources: unmarshalArrayOfObject(data.datasources, unmarshalDatasource),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListGrafanaProductDashboardsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListGrafanaProductDashboardsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    dashboards: unmarshalArrayOfObject(data.dashboards, unmarshalGrafanaProductDashboard),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListGrafanaUsersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListGrafanaUsersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    grafanaUsers: unmarshalArrayOfObject(data.grafana_users, unmarshalGrafanaUser),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListPlansResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListPlansResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    plans: unmarshalArrayOfObject(data.plans, unmarshalPlan),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListTokensResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTokensResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    tokens: unmarshalArrayOfObject(data.tokens, unmarshalToken$2),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalSelectPlanResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SelectPlanResponse' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst marshalActivateCockpitRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalContactPointEmail = (request, defaults) => ({\n  to: request.to\n});\nconst marshalContactPoint = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'email',\n    value: request.email !== undefined ? marshalContactPointEmail(request.email) : undefined\n  }])\n});\nconst marshalCreateContactPointRequest = (request, defaults) => ({\n  contact_point: request.contactPoint !== undefined ? marshalContactPoint(request.contactPoint) : undefined,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalCreateDatasourceRequest = (request, defaults) => ({\n  is_default: request.isDefault,\n  name: request.name,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  type: request.type\n});\nconst marshalCreateGrafanaUserRequest = (request, defaults) => ({\n  login: request.login,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  role: request.role\n});\nconst marshalTokenScopes = (request, defaults) => ({\n  query_logs: request.queryLogs,\n  query_metrics: request.queryMetrics,\n  query_traces: request.queryTraces,\n  setup_alerts: request.setupAlerts,\n  setup_logs_rules: request.setupLogsRules,\n  setup_metrics_rules: request.setupMetricsRules,\n  write_logs: request.writeLogs,\n  write_metrics: request.writeMetrics,\n  write_traces: request.writeTraces\n});\nconst marshalCreateTokenRequest$2 = (request, defaults) => ({\n  name: request.name || randomName('token'),\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  scopes: request.scopes !== undefined ? marshalTokenScopes(request.scopes) : undefined\n});\nconst marshalDeactivateCockpitRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalDeleteContactPointRequest = (request, defaults) => ({\n  contact_point: request.contactPoint !== undefined ? marshalContactPoint(request.contactPoint) : undefined,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalDeleteGrafanaUserRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalDisableManagedAlertsRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalEnableManagedAlertsRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalResetGrafanaUserPasswordRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalSelectPlanRequest = (request, defaults) => ({\n  plan_id: request.planId,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalTriggerTestAlertRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$s = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * Cockpit API.\n *\n * The Cockpit API allows you to activate your Cockpit to store metrics and\n * logs. It also provides you with a dedicated Grafana for dashboarding to\n * visualize your metrics and logs.\n */\nlet API$s = class API extends API$z {\n  /**\n   * Activate the Cockpit of a given Project specified by the Project ID.\n   *\n   * @param request - The request {@link ActivateCockpitRequest}\n   * @returns A Promise of Cockpit\n   */\n  activateCockpit = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalActivateCockpitRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$s,\n    method: 'POST',\n    path: `/cockpit/v1beta1/activate`\n  }, unmarshalCockpit);\n\n  /**\n   * Retrieve the Cockpit of a given Project specified by the Project ID.\n   *\n   * @param request - The request {@link GetCockpitRequest}\n   * @returns A Promise of Cockpit\n   */\n  getCockpit = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/cockpit/v1beta1/cockpit`,\n    urlParams: urlParams(['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalCockpit);\n\n  /**\n   * Waits for {@link Cockpit} to be in a final state.\n   *\n   * @param request - The request {@link GetCockpitRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Cockpit\n   */\n  waitForCockpit = (request = {}, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!COCKPIT_TRANSIENT_STATUSES.includes(res.status))), this.getCockpit, request, options);\n\n  /**\n   * Retrieve metrics from your Cockpit specified by the ID of the Project the\n   * Cockpit belongs to.\n   *\n   * @param request - The request {@link GetCockpitMetricsRequest}\n   * @returns A Promise of CockpitMetrics\n   */\n  getCockpitMetrics = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/cockpit/v1beta1/cockpit/metrics`,\n    urlParams: urlParams(['end_date', request.endDate], ['metric_name', request.metricName], ['project_id', request.projectId ?? this.client.settings.defaultProjectId], ['start_date', request.startDate])\n  }, unmarshalCockpitMetrics);\n\n  /**\n   * Deactivate the Cockpit of a given Project specified by the Project ID.\n   *\n   * @param request - The request {@link DeactivateCockpitRequest}\n   * @returns A Promise of Cockpit\n   */\n  deactivateCockpit = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalDeactivateCockpitRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$s,\n    method: 'POST',\n    path: `/cockpit/v1beta1/deactivate`\n  }, unmarshalCockpit);\n\n  /**\n   * Create a data source for a given Project specified by the Project ID and\n   * the data source type.\n   *\n   * @param request - The request {@link CreateDatasourceRequest}\n   * @returns A Promise of Datasource\n   */\n  createDatasource = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateDatasourceRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$s,\n    method: 'POST',\n    path: `/cockpit/v1beta1/datasources`\n  }, unmarshalDatasource);\n\n  /**\n   * Delete a given data source specified by the data source ID.\n   *\n   * @param request - The request {@link DeleteDatasourceRequest}\n   */\n  deleteDatasource = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/cockpit/v1beta1/datasources/${validatePathParam('datasourceId', request.datasourceId)}`\n  });\n  pageOfListDatasources = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/cockpit/v1beta1/datasources`,\n    urlParams: urlParams(['is_managed_by_scaleway', request.isManagedByScaleway], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId ?? this.client.settings.defaultProjectId], ['types', request.types])\n  }, unmarshalListDatasourcesResponse);\n\n  /**\n   * Get a list of data sources for the specified Project ID.\n   *\n   * @param request - The request {@link ListDatasourcesRequest}\n   * @returns A Promise of ListDatasourcesResponse\n   */\n  listDatasources = (request = {}) => enrichForPagination('datasources', this.pageOfListDatasources, request);\n\n  /**\n   * Create a token in a given Project specified by the Project ID.\n   *\n   * @param request - The request {@link CreateTokenRequest}\n   * @returns A Promise of Token\n   */\n  createToken = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreateTokenRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$s,\n    method: 'POST',\n    path: `/cockpit/v1beta1/tokens`\n  }, unmarshalToken$2);\n  pageOfListTokens = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/cockpit/v1beta1/tokens`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalListTokensResponse$2);\n\n  /**\n   * Get a list of tokens in a given Project specified by the Project ID.\n   *\n   * @param request - The request {@link ListTokensRequest}\n   * @returns A Promise of ListTokensResponse\n   */\n  listTokens = (request = {}) => enrichForPagination('tokens', this.pageOfListTokens, request);\n\n  /**\n   * Retrieve a given token specified by the token ID.\n   *\n   * @param request - The request {@link GetTokenRequest}\n   * @returns A Promise of Token\n   */\n  getToken = request => this.client.fetch({\n    method: 'GET',\n    path: `/cockpit/v1beta1/tokens/${validatePathParam('tokenId', request.tokenId)}`\n  }, unmarshalToken$2);\n\n  /**\n   * Delete a given token specified by the token ID.\n   *\n   * @param request - The request {@link DeleteTokenRequest}\n   */\n  deleteToken = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/cockpit/v1beta1/tokens/${validatePathParam('tokenId', request.tokenId)}`\n  });\n\n  /**\n   * Create a contact point associated with the default receiver, to receive\n   * alerts.\n   *\n   * @param request - The request {@link CreateContactPointRequest}\n   * @returns A Promise of ContactPoint\n   */\n  createContactPoint = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreateContactPointRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$s,\n    method: 'POST',\n    path: `/cockpit/v1beta1/contact-points`\n  }, unmarshalContactPoint);\n  pageOfListContactPoints = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/cockpit/v1beta1/contact-points`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalListContactPointsResponse);\n\n  /**\n   * Get a list of contact points created for a given Cockpit, specified by the\n   * ID of the Project the Cockpit belongs to.\n   *\n   * @param request - The request {@link ListContactPointsRequest}\n   * @returns A Promise of ListContactPointsResponse\n   */\n  listContactPoints = (request = {}) => enrichForPagination('contactPoints', this.pageOfListContactPoints, request);\n\n  /**\n   * Delete a contact point associated with the default receiver.\n   *\n   * @param request - The request {@link DeleteContactPointRequest}\n   */\n  deleteContactPoint = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalDeleteContactPointRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$s,\n    method: 'POST',\n    path: `/cockpit/v1beta1/delete-contact-point`\n  });\n\n  /**\n   * Enable the sending of managed alerts for a given Cockpit, specified by the\n   * ID of the Project the Cockpit belongs to.\n   *\n   * @param request - The request {@link EnableManagedAlertsRequest}\n   */\n  enableManagedAlerts = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalEnableManagedAlertsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$s,\n    method: 'POST',\n    path: `/cockpit/v1beta1/enable-managed-alerts`\n  });\n\n  /**\n   * Disable the sending of managed alerts for a given Cockpit, specified by the\n   * ID of the Project the Cockpit belongs to.\n   *\n   * @param request - The request {@link DisableManagedAlertsRequest}\n   */\n  disableManagedAlerts = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalDisableManagedAlertsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$s,\n    method: 'POST',\n    path: `/cockpit/v1beta1/disable-managed-alerts`\n  });\n\n  /**\n   * Send a test alert to make sure your contact points get notified when an\n   * actual alert is triggered.\n   *\n   * @param request - The request {@link TriggerTestAlertRequest}\n   */\n  triggerTestAlert = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalTriggerTestAlertRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$s,\n    method: 'POST',\n    path: `/cockpit/v1beta1/trigger-test-alert`\n  });\n\n  /**\n   * Create a Grafana user for your Cockpit's Grafana. Make sure you save the\n   * automatically-generated password and the Grafana user ID.\n   *\n   * @param request - The request {@link CreateGrafanaUserRequest}\n   * @returns A Promise of GrafanaUser\n   */\n  createGrafanaUser = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateGrafanaUserRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$s,\n    method: 'POST',\n    path: `/cockpit/v1beta1/grafana-users`\n  }, unmarshalGrafanaUser);\n  pageOfListGrafanaUsers = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/cockpit/v1beta1/grafana-users`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalListGrafanaUsersResponse);\n\n  /**\n   * Get a list of all Grafana users created in your Cockpit's Grafana.\n   *\n   * @param request - The request {@link ListGrafanaUsersRequest}\n   * @returns A Promise of ListGrafanaUsersResponse\n   */\n  listGrafanaUsers = (request = {}) => enrichForPagination('grafanaUsers', this.pageOfListGrafanaUsers, request);\n\n  /**\n   * Delete a Grafana user from your Cockpit's Grafana, specified by the ID of\n   * the Project the Cockpit belongs to, and the ID of the Grafana user.\n   *\n   * @param request - The request {@link DeleteGrafanaUserRequest}\n   */\n  deleteGrafanaUser = request => this.client.fetch({\n    body: JSON.stringify(marshalDeleteGrafanaUserRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$s,\n    method: 'POST',\n    path: `/cockpit/v1beta1/grafana-users/${validatePathParam('grafanaUserId', request.grafanaUserId)}/delete`\n  });\n\n  /**\n   * Reset the password of a Grafana user, specified by the ID of the Project\n   * the Cockpit belongs to, and the ID of the Grafana user.\n   *\n   * @param request - The request {@link ResetGrafanaUserPasswordRequest}\n   * @returns A Promise of GrafanaUser\n   */\n  resetGrafanaUserPassword = request => this.client.fetch({\n    body: JSON.stringify(marshalResetGrafanaUserPasswordRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$s,\n    method: 'POST',\n    path: `/cockpit/v1beta1/grafana-users/${validatePathParam('grafanaUserId', request.grafanaUserId)}/reset-password`\n  }, unmarshalGrafanaUser);\n  pageOfListPlans = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/cockpit/v1beta1/plans`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListPlansResponse);\n\n  /**\n   * Get a list of all pricing plans available.\n   *\n   * @param request - The request {@link ListPlansRequest}\n   * @returns A Promise of ListPlansResponse\n   */\n  listPlans = (request = {}) => enrichForPagination('plans', this.pageOfListPlans, request);\n\n  /**\n   * Select your chosen pricing plan for your Cockpit, specifying the Cockpit's\n   * Project ID and the pricing plan's ID in the request.\n   *\n   * @param request - The request {@link SelectPlanRequest}\n   * @returns A Promise of SelectPlanResponse\n   */\n  selectPlan = request => this.client.fetch({\n    body: JSON.stringify(marshalSelectPlanRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$s,\n    method: 'POST',\n    path: `/cockpit/v1beta1/select-plan`\n  }, unmarshalSelectPlanResponse);\n  pageOfListGrafanaProductDashboards = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/cockpit/v1beta1/grafana-product-dashboards`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId ?? this.client.settings.defaultProjectId], ['tags', request.tags])\n  }, unmarshalListGrafanaProductDashboardsResponse);\n\n  /**\n   * List product dashboards. Get a list of available product dashboards.\n   *\n   * @param request - The request {@link ListGrafanaProductDashboardsRequest}\n   * @returns A Promise of ListGrafanaProductDashboardsResponse\n   */\n  listGrafanaProductDashboards = (request = {}) => enrichForPagination('dashboards', this.pageOfListGrafanaProductDashboards, request);\n\n  /**\n   * Get a product dashboard. Get a product dashboard specified by the dashboard\n   * ID.\n   *\n   * @param request - The request {@link GetGrafanaProductDashboardRequest}\n   * @returns A Promise of GrafanaProductDashboard\n   */\n  getGrafanaProductDashboard = request => this.client.fetch({\n    method: 'GET',\n    path: `/cockpit/v1beta1/grafana-product-dashboards/${validatePathParam('dashboardName', request.dashboardName)}`,\n    urlParams: urlParams(['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalGrafanaProductDashboard);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$r = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$s,\n  COCKPIT_TRANSIENT_STATUSES: COCKPIT_TRANSIENT_STATUSES\n});\n\nvar index$u = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1beta1: index_gen$r\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link ContainerStatus}. */\nconst CONTAINER_TRANSIENT_STATUSES = ['deleting', 'creating', 'pending'];\n\n/** Lists transient statutes of the enum {@link CronStatus}. */\nconst CRON_TRANSIENT_STATUSES$1 = ['deleting', 'creating', 'pending'];\n\n/** Lists transient statutes of the enum {@link DomainStatus}. */\nconst DOMAIN_TRANSIENT_STATUSES$3 = ['deleting', 'creating', 'pending'];\n\n/** Lists transient statutes of the enum {@link NamespaceStatus}. */\nconst NAMESPACE_TRANSIENT_STATUSES$2 = ['deleting', 'creating', 'pending'];\n\n/** Lists transient statutes of the enum {@link TokenStatus}. */\nconst TOKEN_TRANSIENT_STATUSES$1 = ['deleting', 'creating'];\n\n/** Lists transient statutes of the enum {@link TriggerStatus}. */\nconst TRIGGER_TRANSIENT_STATUSES$1 = ['deleting', 'creating', 'pending'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalSecretHashedValue$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SecretHashedValue' failed as data isn't a dictionary.`);\n  }\n  return {\n    hashedValue: data.hashed_value,\n    key: data.key\n  };\n};\nconst unmarshalContainer = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Container' failed as data isn't a dictionary.`);\n  }\n  return {\n    cpuLimit: data.cpu_limit,\n    description: data.description,\n    domainName: data.domain_name,\n    environmentVariables: data.environment_variables,\n    errorMessage: data.error_message,\n    httpOption: data.http_option,\n    id: data.id,\n    maxConcurrency: data.max_concurrency,\n    maxScale: data.max_scale,\n    memoryLimit: data.memory_limit,\n    minScale: data.min_scale,\n    name: data.name,\n    namespaceId: data.namespace_id,\n    port: data.port,\n    privacy: data.privacy,\n    protocol: data.protocol,\n    region: data.region,\n    registryImage: data.registry_image,\n    secretEnvironmentVariables: unmarshalArrayOfObject(data.secret_environment_variables, unmarshalSecretHashedValue$1),\n    status: data.status,\n    timeout: data.timeout\n  };\n};\nconst unmarshalCron$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Cron' failed as data isn't a dictionary.`);\n  }\n  return {\n    args: data.args,\n    containerId: data.container_id,\n    id: data.id,\n    name: data.name,\n    schedule: data.schedule,\n    status: data.status\n  };\n};\nconst unmarshalDomain$3 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Domain' failed as data isn't a dictionary.`);\n  }\n  return {\n    containerId: data.container_id,\n    errorMessage: data.error_message,\n    hostname: data.hostname,\n    id: data.id,\n    status: data.status,\n    url: data.url\n  };\n};\nconst unmarshalNamespace$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Namespace' failed as data isn't a dictionary.`);\n  }\n  return {\n    description: data.description,\n    environmentVariables: data.environment_variables,\n    errorMessage: data.error_message,\n    id: data.id,\n    name: data.name,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    region: data.region,\n    registryEndpoint: data.registry_endpoint,\n    registryNamespaceId: data.registry_namespace_id,\n    secretEnvironmentVariables: unmarshalArrayOfObject(data.secret_environment_variables, unmarshalSecretHashedValue$1),\n    status: data.status\n  };\n};\nconst unmarshalToken$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Token' failed as data isn't a dictionary.`);\n  }\n  return {\n    containerId: data.container_id,\n    description: data.description,\n    expiresAt: unmarshalDate(data.expires_at),\n    id: data.id,\n    namespaceId: data.namespace_id,\n    publicKey: data.public_key,\n    status: data.status,\n    token: data.token\n  };\n};\nconst unmarshalTriggerMnqNatsClientConfig$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'TriggerMnqNatsClientConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    mnqCredentialId: data.mnq_credential_id,\n    mnqNatsAccountId: data.mnq_nats_account_id,\n    mnqProjectId: data.mnq_project_id,\n    mnqRegion: data.mnq_region,\n    subject: data.subject\n  };\n};\nconst unmarshalTriggerMnqSqsClientConfig$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'TriggerMnqSqsClientConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    mnqCredentialId: data.mnq_credential_id,\n    mnqProjectId: data.mnq_project_id,\n    mnqRegion: data.mnq_region,\n    queue: data.queue\n  };\n};\nconst unmarshalTriggerSqsClientConfig$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'TriggerSqsClientConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    accessKey: data.access_key,\n    endpoint: data.endpoint,\n    queueUrl: data.queue_url,\n    secretKey: data.secret_key\n  };\n};\nconst unmarshalTrigger$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Trigger' failed as data isn't a dictionary.`);\n  }\n  return {\n    containerId: data.container_id,\n    description: data.description,\n    errorMessage: data.error_message,\n    id: data.id,\n    inputType: data.input_type,\n    name: data.name,\n    scwNatsConfig: data.scw_nats_config ? unmarshalTriggerMnqNatsClientConfig$1(data.scw_nats_config) : undefined,\n    scwSqsConfig: data.scw_sqs_config ? unmarshalTriggerMnqSqsClientConfig$1(data.scw_sqs_config) : undefined,\n    sqsConfig: data.sqs_config ? unmarshalTriggerSqsClientConfig$1(data.sqs_config) : undefined,\n    status: data.status\n  };\n};\nconst unmarshalListContainersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListContainersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    containers: unmarshalArrayOfObject(data.containers, unmarshalContainer),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListCronsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListCronsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    crons: unmarshalArrayOfObject(data.crons, unmarshalCron$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListDomainsResponse$3 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDomainsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    domains: unmarshalArrayOfObject(data.domains, unmarshalDomain$3),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListNamespacesResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListNamespacesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    namespaces: unmarshalArrayOfObject(data.namespaces, unmarshalNamespace$2),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListTokensResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTokensResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    tokens: unmarshalArrayOfObject(data.tokens, unmarshalToken$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListTriggersResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTriggersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    triggers: unmarshalArrayOfObject(data.triggers, unmarshalTrigger$1)\n  };\n};\nconst marshalSecret$1 = (request, defaults) => ({\n  key: request.key,\n  value: request.value\n});\nconst marshalCreateContainerRequest = (request, defaults) => ({\n  cpu_limit: request.cpuLimit,\n  description: request.description,\n  environment_variables: request.environmentVariables,\n  http_option: request.httpOption,\n  max_concurrency: request.maxConcurrency,\n  max_scale: request.maxScale,\n  memory_limit: request.memoryLimit,\n  min_scale: request.minScale,\n  name: request.name,\n  namespace_id: request.namespaceId,\n  port: request.port,\n  privacy: request.privacy,\n  protocol: request.protocol,\n  registry_image: request.registryImage,\n  secret_environment_variables: request.secretEnvironmentVariables !== undefined ? request.secretEnvironmentVariables.map(elt => marshalSecret$1(elt)) : undefined,\n  timeout: request.timeout\n});\nconst marshalCreateCronRequest$1 = (request, defaults) => ({\n  args: request.args,\n  container_id: request.containerId,\n  name: request.name,\n  schedule: request.schedule\n});\nconst marshalCreateDomainRequest$2 = (request, defaults) => ({\n  container_id: request.containerId,\n  hostname: request.hostname\n});\nconst marshalCreateNamespaceRequest$2 = (request, defaults) => ({\n  description: request.description,\n  environment_variables: request.environmentVariables,\n  name: request.name || randomName('cns'),\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  secret_environment_variables: request.secretEnvironmentVariables !== undefined ? request.secretEnvironmentVariables.map(elt => marshalSecret$1(elt)) : undefined\n});\nconst marshalCreateTokenRequest$1 = (request, defaults) => ({\n  description: request.description,\n  expires_at: request.expiresAt,\n  ...resolveOneOf([{\n    param: 'container_id',\n    value: request.containerId\n  }, {\n    param: 'namespace_id',\n    value: request.namespaceId\n  }])\n});\nconst marshalCreateTriggerRequestMnqNatsClientConfig$1 = (request, defaults) => ({\n  mnq_nats_account_id: request.mnqNatsAccountId,\n  mnq_project_id: request.mnqProjectId,\n  mnq_region: request.mnqRegion,\n  subject: request.subject\n});\nconst marshalCreateTriggerRequestMnqSqsClientConfig$1 = (request, defaults) => ({\n  mnq_project_id: request.mnqProjectId,\n  mnq_region: request.mnqRegion,\n  queue: request.queue\n});\nconst marshalCreateTriggerRequestSqsClientConfig$1 = (request, defaults) => ({\n  access_key: request.accessKey,\n  endpoint: request.endpoint,\n  queue_url: request.queueUrl,\n  secret_key: request.secretKey\n});\nconst marshalCreateTriggerRequest$1 = (request, defaults) => ({\n  container_id: request.containerId,\n  description: request.description,\n  name: request.name,\n  ...resolveOneOf([{\n    param: 'scw_sqs_config',\n    value: request.scwSqsConfig !== undefined ? marshalCreateTriggerRequestMnqSqsClientConfig$1(request.scwSqsConfig) : undefined\n  }, {\n    param: 'scw_nats_config',\n    value: request.scwNatsConfig !== undefined ? marshalCreateTriggerRequestMnqNatsClientConfig$1(request.scwNatsConfig) : undefined\n  }, {\n    param: 'sqs_config',\n    value: request.sqsConfig !== undefined ? marshalCreateTriggerRequestSqsClientConfig$1(request.sqsConfig) : undefined\n  }])\n});\nconst marshalUpdateContainerRequest = (request, defaults) => ({\n  cpu_limit: request.cpuLimit,\n  description: request.description,\n  environment_variables: request.environmentVariables,\n  http_option: request.httpOption,\n  max_concurrency: request.maxConcurrency,\n  max_scale: request.maxScale,\n  memory_limit: request.memoryLimit,\n  min_scale: request.minScale,\n  port: request.port,\n  privacy: request.privacy,\n  protocol: request.protocol,\n  redeploy: request.redeploy,\n  registry_image: request.registryImage,\n  secret_environment_variables: request.secretEnvironmentVariables !== undefined ? request.secretEnvironmentVariables.map(elt => marshalSecret$1(elt)) : undefined,\n  timeout: request.timeout\n});\nconst marshalUpdateCronRequest$1 = (request, defaults) => ({\n  args: request.args,\n  container_id: request.containerId,\n  name: request.name,\n  schedule: request.schedule\n});\nconst marshalUpdateNamespaceRequest$2 = (request, defaults) => ({\n  description: request.description,\n  environment_variables: request.environmentVariables,\n  secret_environment_variables: request.secretEnvironmentVariables !== undefined ? request.secretEnvironmentVariables.map(elt => marshalSecret$1(elt)) : undefined\n});\nconst marshalUpdateTriggerRequestSqsClientConfig$1 = (request, defaults) => ({\n  access_key: request.accessKey,\n  secret_key: request.secretKey\n});\nconst marshalUpdateTriggerRequest$1 = (request, defaults) => ({\n  description: request.description,\n  name: request.name,\n  ...resolveOneOf([{\n    param: 'sqs_config',\n    value: request.sqsConfig !== undefined ? marshalUpdateTriggerRequestSqsClientConfig$1(request.sqsConfig) : undefined\n  }])\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$r = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Serverless Containers API. */\nlet API$r = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n  pageOfListNamespaces = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListNamespacesResponse$2);\n\n  /**\n   * List all your namespaces. List all namespaces in a specified region.\n   *\n   * @param request - The request {@link ListNamespacesRequest}\n   * @returns A Promise of ListNamespacesResponse\n   */\n  listNamespaces = (request = {}) => enrichForPagination('namespaces', this.pageOfListNamespaces, request);\n\n  /**\n   * Get a namespace. Get the namespace associated with the specified ID.\n   *\n   * @param request - The request {@link GetNamespaceRequest}\n   * @returns A Promise of Namespace\n   */\n  getNamespace = request => this.client.fetch({\n    method: 'GET',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces/${validatePathParam('namespaceId', request.namespaceId)}`\n  }, unmarshalNamespace$2);\n\n  /**\n   * Waits for {@link Namespace} to be in a final state.\n   *\n   * @param request - The request {@link GetNamespaceRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Namespace\n   */\n  waitForNamespace = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!NAMESPACE_TRANSIENT_STATUSES$2.includes(res.status))), this.getNamespace, request, options);\n\n  /**\n   * Create a new namespace. Create a new namespace in a specified region.\n   *\n   * @param request - The request {@link CreateNamespaceRequest}\n   * @returns A Promise of Namespace\n   */\n  createNamespace = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreateNamespaceRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$r,\n    method: 'POST',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces`\n  }, unmarshalNamespace$2);\n\n  /**\n   * Update an existing namespace. Update the space associated with the\n   * specified ID.\n   *\n   * @param request - The request {@link UpdateNamespaceRequest}\n   * @returns A Promise of Namespace\n   */\n  updateNamespace = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateNamespaceRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$r,\n    method: 'PATCH',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces/${validatePathParam('namespaceId', request.namespaceId)}`\n  }, unmarshalNamespace$2);\n\n  /**\n   * Delete an existing namespace. Delete the namespace associated with the\n   * specified ID.\n   *\n   * @param request - The request {@link DeleteNamespaceRequest}\n   * @returns A Promise of Namespace\n   */\n  deleteNamespace = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces/${validatePathParam('namespaceId', request.namespaceId)}`\n  }, unmarshalNamespace$2);\n  pageOfListContainers = request => this.client.fetch({\n    method: 'GET',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/containers`,\n    urlParams: urlParams(['name', request.name], ['namespace_id', request.namespaceId], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListContainersResponse);\n\n  /**\n   * List all your containers. List all containers for a specified region.\n   *\n   * @param request - The request {@link ListContainersRequest}\n   * @returns A Promise of ListContainersResponse\n   */\n  listContainers = request => enrichForPagination('containers', this.pageOfListContainers, request);\n\n  /**\n   * Get a container. Get the container associated with the specified ID.\n   *\n   * @param request - The request {@link GetContainerRequest}\n   * @returns A Promise of Container\n   */\n  getContainer = request => this.client.fetch({\n    method: 'GET',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/containers/${validatePathParam('containerId', request.containerId)}`\n  }, unmarshalContainer);\n\n  /**\n   * Waits for {@link Container} to be in a final state.\n   *\n   * @param request - The request {@link GetContainerRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Container\n   */\n  waitForContainer = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!CONTAINER_TRANSIENT_STATUSES.includes(res.status))), this.getContainer, request, options);\n\n  /**\n   * Create a new container. Create a new container in the specified region.\n   *\n   * @param request - The request {@link CreateContainerRequest}\n   * @returns A Promise of Container\n   */\n  createContainer = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateContainerRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$r,\n    method: 'POST',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/containers`\n  }, unmarshalContainer);\n\n  /**\n   * Update an existing container. Update the container associated with the\n   * specified ID.\n   *\n   * @param request - The request {@link UpdateContainerRequest}\n   * @returns A Promise of Container\n   */\n  updateContainer = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateContainerRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$r,\n    method: 'PATCH',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/containers/${validatePathParam('containerId', request.containerId)}`\n  }, unmarshalContainer);\n\n  /**\n   * Delete a container. Delete the container associated with the specified ID.\n   *\n   * @param request - The request {@link DeleteContainerRequest}\n   * @returns A Promise of Container\n   */\n  deleteContainer = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/containers/${validatePathParam('containerId', request.containerId)}`\n  }, unmarshalContainer);\n\n  /**\n   * Deploy a container. Deploy a container associated with the specified ID.\n   *\n   * @param request - The request {@link DeployContainerRequest}\n   * @returns A Promise of Container\n   */\n  deployContainer = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$r,\n    method: 'POST',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/containers/${validatePathParam('containerId', request.containerId)}/deploy`\n  }, unmarshalContainer);\n  pageOfListCrons = request => this.client.fetch({\n    method: 'GET',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/crons`,\n    urlParams: urlParams(['container_id', request.containerId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListCronsResponse$1);\n\n  /**\n   * List all your crons.\n   *\n   * @param request - The request {@link ListCronsRequest}\n   * @returns A Promise of ListCronsResponse\n   */\n  listCrons = request => enrichForPagination('crons', this.pageOfListCrons, request);\n\n  /**\n   * Get a cron. Get the cron associated with the specified ID.\n   *\n   * @param request - The request {@link GetCronRequest}\n   * @returns A Promise of Cron\n   */\n  getCron = request => this.client.fetch({\n    method: 'GET',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/crons/${validatePathParam('cronId', request.cronId)}`\n  }, unmarshalCron$1);\n\n  /**\n   * Waits for {@link Cron} to be in a final state.\n   *\n   * @param request - The request {@link GetCronRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Cron\n   */\n  waitForCron = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!CRON_TRANSIENT_STATUSES$1.includes(res.status))), this.getCron, request, options);\n\n  /**\n   * Create a new cron.\n   *\n   * @param request - The request {@link CreateCronRequest}\n   * @returns A Promise of Cron\n   */\n  createCron = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateCronRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$r,\n    method: 'POST',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/crons`\n  }, unmarshalCron$1);\n\n  /**\n   * Update an existing cron. Update the cron associated with the specified ID.\n   *\n   * @param request - The request {@link UpdateCronRequest}\n   * @returns A Promise of Cron\n   */\n  updateCron = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateCronRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$r,\n    method: 'PATCH',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/crons/${validatePathParam('cronId', request.cronId)}`\n  }, unmarshalCron$1);\n\n  /**\n   * Delete an existing cron. Delete the cron associated with the specified ID.\n   *\n   * @param request - The request {@link DeleteCronRequest}\n   * @returns A Promise of Cron\n   */\n  deleteCron = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/crons/${validatePathParam('cronId', request.cronId)}`\n  }, unmarshalCron$1);\n  pageOfListDomains = request => this.client.fetch({\n    method: 'GET',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains`,\n    urlParams: urlParams(['container_id', request.containerId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListDomainsResponse$3);\n\n  /**\n   * List all domain name bindings. List all domain name bindings in a specified\n   * region.\n   *\n   * @param request - The request {@link ListDomainsRequest}\n   * @returns A Promise of ListDomainsResponse\n   */\n  listDomains = request => enrichForPagination('domains', this.pageOfListDomains, request);\n\n  /**\n   * Get a domain name binding. Get a domain name binding for the container with\n   * the specified ID.\n   *\n   * @param request - The request {@link GetDomainRequest}\n   * @returns A Promise of Domain\n   */\n  getDomain = request => this.client.fetch({\n    method: 'GET',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains/${validatePathParam('domainId', request.domainId)}`\n  }, unmarshalDomain$3);\n\n  /**\n   * Waits for {@link Domain} to be in a final state.\n   *\n   * @param request - The request {@link GetDomainRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Domain\n   */\n  waitForDomain = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!DOMAIN_TRANSIENT_STATUSES$3.includes(res.status))), this.getDomain, request, options);\n\n  /**\n   * Create a domain name binding. Create a domain name binding for the\n   * container with the specified ID.\n   *\n   * @param request - The request {@link CreateDomainRequest}\n   * @returns A Promise of Domain\n   */\n  createDomain = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateDomainRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$r,\n    method: 'POST',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains`\n  }, unmarshalDomain$3);\n\n  /**\n   * Delete a domain name binding. Delete the domain name binding with the\n   * specific ID.\n   *\n   * @param request - The request {@link DeleteDomainRequest}\n   * @returns A Promise of Domain\n   */\n  deleteDomain = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains/${validatePathParam('domainId', request.domainId)}`\n  }, unmarshalDomain$3);\n\n  /**\n   * Create a JWT token. Deprecated in favor of CreateToken.\n   *\n   * @deprecated\n   * @param request - The request {@link IssueJWTRequest}\n   * @returns A Promise of Token\n   */\n  issueJWT = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/issue-jwt`,\n    urlParams: urlParams(['expires_at', request.expiresAt], ...Object.entries(resolveOneOf([{\n      param: 'container_id',\n      value: request.containerId\n    }, {\n      param: 'namespace_id',\n      value: request.namespaceId\n    }])))\n  }, unmarshalToken$1);\n\n  /**\n   * Create a new revocable token.\n   *\n   * @param request - The request {@link CreateTokenRequest}\n   * @returns A Promise of Token\n   */\n  createToken = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreateTokenRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$r,\n    method: 'POST',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/tokens`\n  }, unmarshalToken$1);\n\n  /**\n   * Get a token. Get a token with a specified ID.\n   *\n   * @param request - The request {@link GetTokenRequest}\n   * @returns A Promise of Token\n   */\n  getToken = request => this.client.fetch({\n    method: 'GET',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/tokens/${validatePathParam('tokenId', request.tokenId)}`\n  }, unmarshalToken$1);\n\n  /**\n   * Waits for {@link Token} to be in a final state.\n   *\n   * @param request - The request {@link GetTokenRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Token\n   */\n  waitForToken = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!TOKEN_TRANSIENT_STATUSES$1.includes(res.status))), this.getToken, request, options);\n  pageOfListTokens = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/tokens`,\n    urlParams: urlParams(['container_id', request.containerId], ['namespace_id', request.namespaceId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListTokensResponse$1);\n\n  /**\n   * List all tokens. List all tokens belonging to a specified Organization or\n   * Project.\n   *\n   * @param request - The request {@link ListTokensRequest}\n   * @returns A Promise of ListTokensResponse\n   */\n  listTokens = (request = {}) => enrichForPagination('tokens', this.pageOfListTokens, request);\n\n  /**\n   * Delete a token. Delete a token with a specified ID.\n   *\n   * @param request - The request {@link DeleteTokenRequest}\n   * @returns A Promise of Token\n   */\n  deleteToken = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/tokens/${validatePathParam('tokenId', request.tokenId)}`\n  }, unmarshalToken$1);\n\n  /**\n   * Create a trigger. Create a new trigger for a specified container.\n   *\n   * @param request - The request {@link CreateTriggerRequest}\n   * @returns A Promise of Trigger\n   */\n  createTrigger = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateTriggerRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$r,\n    method: 'POST',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/triggers`\n  }, unmarshalTrigger$1);\n\n  /**\n   * Get a trigger. Get a trigger with a specified ID.\n   *\n   * @param request - The request {@link GetTriggerRequest}\n   * @returns A Promise of Trigger\n   */\n  getTrigger = request => this.client.fetch({\n    method: 'GET',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/triggers/${validatePathParam('triggerId', request.triggerId)}`\n  }, unmarshalTrigger$1);\n\n  /**\n   * Waits for {@link Trigger} to be in a final state.\n   *\n   * @param request - The request {@link GetTriggerRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Trigger\n   */\n  waitForTrigger = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!TRIGGER_TRANSIENT_STATUSES$1.includes(res.status))), this.getTrigger, request, options);\n  pageOfListTriggers = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/triggers`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ...Object.entries(resolveOneOf([{\n      param: 'container_id',\n      value: request.containerId\n    }, {\n      param: 'namespace_id',\n      value: request.namespaceId\n    }, {\n      default: this.client.settings.defaultProjectId,\n      param: 'project_id',\n      value: request.projectId\n    }])))\n  }, unmarshalListTriggersResponse$1);\n\n  /**\n   * List all triggers. List all triggers belonging to a specified Organization\n   * or Project.\n   *\n   * @param request - The request {@link ListTriggersRequest}\n   * @returns A Promise of ListTriggersResponse\n   */\n  listTriggers = (request = {}) => enrichForPagination('triggers', this.pageOfListTriggers, request);\n\n  /**\n   * Update a trigger. Update a trigger with a specified ID.\n   *\n   * @param request - The request {@link UpdateTriggerRequest}\n   * @returns A Promise of Trigger\n   */\n  updateTrigger = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateTriggerRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$r,\n    method: 'PATCH',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/triggers/${validatePathParam('triggerId', request.triggerId)}`\n  }, unmarshalTrigger$1);\n\n  /**\n   * Delete a trigger. Delete a trigger with a specified ID.\n   *\n   * @param request - The request {@link DeleteTriggerRequest}\n   * @returns A Promise of Trigger\n   */\n  deleteTrigger = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/containers/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/triggers/${validatePathParam('triggerId', request.triggerId)}`\n  }, unmarshalTrigger$1);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst CreateTriggerRequest$1 = {\n  description: {\n    maxLength: 255\n  },\n  name: {\n    maxLength: 50,\n    minLength: 1\n  }\n};\nconst CreateTriggerRequestMnqNatsClientConfig$1 = {\n  mnqRegion: {\n    maxLength: 20,\n    minLength: 1\n  },\n  subject: {\n    maxLength: 100,\n    minLength: 1,\n    pattern: /^[^\\s]+$/\n  }\n};\nconst CreateTriggerRequestMnqSqsClientConfig$1 = {\n  mnqRegion: {\n    maxLength: 20,\n    minLength: 1\n  },\n  queue: {\n    maxLength: 100,\n    minLength: 1\n  }\n};\nconst UpdateTriggerRequest$1 = {\n  description: {\n    maxLength: 255\n  },\n  name: {\n    maxLength: 50,\n    minLength: 1\n  }\n};\n\nvar validationRules_gen$d = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CreateTriggerRequest: CreateTriggerRequest$1,\n  CreateTriggerRequestMnqNatsClientConfig: CreateTriggerRequestMnqNatsClientConfig$1,\n  CreateTriggerRequestMnqSqsClientConfig: CreateTriggerRequestMnqSqsClientConfig$1,\n  UpdateTriggerRequest: UpdateTriggerRequest$1\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$q = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$r,\n  CONTAINER_TRANSIENT_STATUSES: CONTAINER_TRANSIENT_STATUSES,\n  CRON_TRANSIENT_STATUSES: CRON_TRANSIENT_STATUSES$1,\n  DOMAIN_TRANSIENT_STATUSES: DOMAIN_TRANSIENT_STATUSES$3,\n  NAMESPACE_TRANSIENT_STATUSES: NAMESPACE_TRANSIENT_STATUSES$2,\n  TOKEN_TRANSIENT_STATUSES: TOKEN_TRANSIENT_STATUSES$1,\n  TRIGGER_TRANSIENT_STATUSES: TRIGGER_TRANSIENT_STATUSES$1,\n  ValidationRules: validationRules_gen$d\n});\n\nvar index$t = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1beta1: index_gen$q\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link BMCAccessStatus}. */\nconst BMC_ACCESS_TRANSIENT_STATUSES = ['creating', 'deleting'];\n\n/** Lists transient statutes of the enum {@link IPv6BlockDelegationStatus}. */\nconst I_PV6_BLOCK_DELEGATION_TRANSIENT_STATUSES = ['updating'];\n\n/** Lists transient statutes of the enum {@link RpnGroupMemberStatus}. */\nconst RPN_GROUP_MEMBER_TRANSIENT_STATUSES = ['creating', 'deleting'];\n\n/** Lists transient statutes of the enum {@link RpnSanStatus}. */\nconst RPN_SAN_TRANSIENT_STATUSES = ['creating', 'deleting'];\n\n/** Lists transient statutes of the enum {@link RpnV2GroupStatus}. */\nconst RPN_V2_GROUP_TRANSIENT_STATUSES = ['creating', 'updating', 'deleting'];\n\n/** Lists transient statutes of the enum {@link RpnV2MemberStatus}. */\nconst RPN_V2_MEMBER_TRANSIENT_STATUSES = ['creating', 'updating', 'deleting'];\n\n/** Lists transient statutes of the enum {@link ServerInstallStatus}. */\nconst SERVER_INSTALL_TRANSIENT_STATUSES = ['booting', 'setting_up_raid', 'partitioning', 'formatting', 'installing', 'configuring', 'configuring_bootloader', 'rebooting'];\n\n/** Lists transient statutes of the enum {@link ServerStatus}. */\nconst SERVER_TRANSIENT_STATUSES$1 = ['delivering', 'installing'];\n\n/** Lists transient statutes of the enum {@link ServiceProvisioningStatus}. */\nconst SERVICE_PROVISIONING_TRANSIENT_STATUSES = ['delivering', 'expiring'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalIP$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'IP' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    cidr: data.cidr,\n    gateway: data.gateway,\n    ipId: data.ip_id,\n    netmask: data.netmask,\n    reverse: data.reverse,\n    semantic: data.semantic,\n    status: data.status,\n    version: data.version\n  };\n};\nconst unmarshalCPU = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CPU' failed as data isn't a dictionary.`);\n  }\n  return {\n    coreCount: data.core_count,\n    frequency: data.frequency,\n    name: data.name,\n    threadCount: data.thread_count\n  };\n};\nconst unmarshalDisk = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Disk' failed as data isn't a dictionary.`);\n  }\n  return {\n    capacity: data.capacity,\n    type: data.type\n  };\n};\nconst unmarshalMemory = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Memory' failed as data isn't a dictionary.`);\n  }\n  return {\n    capacity: data.capacity,\n    frequency: data.frequency,\n    isEcc: data.is_ecc,\n    type: data.type\n  };\n};\nconst unmarshalPersistentMemory = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PersistentMemory' failed as data isn't a dictionary.`);\n  }\n  return {\n    capacity: data.capacity,\n    frequency: data.frequency,\n    model: data.model\n  };\n};\nconst unmarshalRaidController = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RaidController' failed as data isn't a dictionary.`);\n  }\n  return {\n    model: data.model,\n    raidLevel: data.raid_level\n  };\n};\nconst unmarshalOfferAntiDosInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OfferAntiDosInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    type: data.type\n  };\n};\nconst unmarshalOfferBackupInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OfferBackupInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    size: data.size\n  };\n};\nconst unmarshalOfferBandwidthInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OfferBandwidthInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    speed: data.speed\n  };\n};\nconst unmarshalOfferFailoverBlockInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OfferFailoverBlockInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    onetimeFees: data.onetime_fees ? unmarshalOffer$1(data.onetime_fees) : undefined\n  };\n};\nconst unmarshalOfferFailoverIpInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OfferFailoverIpInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    onetimeFees: data.onetime_fees ? unmarshalOffer$1(data.onetime_fees) : undefined\n  };\n};\nconst unmarshalOfferLicenseInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OfferLicenseInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    boundToIp: data.bound_to_ip\n  };\n};\nconst unmarshalOfferRPNInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OfferRPNInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    speed: data.speed\n  };\n};\nconst unmarshalOfferSANInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OfferSANInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    deviceType: data.device_type,\n    ha: data.ha,\n    size: data.size\n  };\n};\nconst unmarshalOfferServerInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OfferServerInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    availableOptions: unmarshalArrayOfObject(data.available_options, unmarshalOffer$1),\n    bandwidth: data.bandwidth,\n    commercialRange: data.commercial_range,\n    connectivity: data.connectivity,\n    cpus: unmarshalArrayOfObject(data.cpus, unmarshalCPU),\n    disks: unmarshalArrayOfObject(data.disks, unmarshalDisk),\n    memories: unmarshalArrayOfObject(data.memories, unmarshalMemory),\n    onetimeFees: data.onetime_fees ? unmarshalOffer$1(data.onetime_fees) : undefined,\n    persistentMemories: unmarshalArrayOfObject(data.persistent_memories, unmarshalPersistentMemory),\n    raidControllers: unmarshalArrayOfObject(data.raid_controllers, unmarshalRaidController),\n    rpnVersion: data.rpn_version,\n    stock: data.stock,\n    stockByDatacenter: data.stock_by_datacenter\n  };\n};\nconst unmarshalOfferServiceLevelInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OfferServiceLevelInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    antidos: data.antidos,\n    availableOptions: unmarshalArrayOfObject(data.available_options, unmarshalOffer$1),\n    customization: data.customization,\n    extraFailoverQuota: data.extra_failover_quota,\n    git: data.git,\n    highRpnBandwidth: data.high_rpn_bandwidth,\n    prioritySupport: data.priority_support,\n    salesSupport: data.sales_support,\n    sla: data.sla,\n    supportPhone: data.support_phone,\n    supportTicket: data.support_ticket\n  };\n};\nconst unmarshalOfferStorageInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OfferStorageInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    maxQuota: data.max_quota,\n    size: data.size\n  };\n};\nconst unmarshalOffer$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Offer' failed as data isn't a dictionary.`);\n  }\n  return {\n    antidosInfo: data.antidos_info ? unmarshalOfferAntiDosInfo(data.antidos_info) : undefined,\n    backupInfo: data.backup_info ? unmarshalOfferBackupInfo(data.backup_info) : undefined,\n    bandwidthInfo: data.bandwidth_info ? unmarshalOfferBandwidthInfo(data.bandwidth_info) : undefined,\n    catalog: data.catalog,\n    failoverBlockInfo: data.failover_block_info ? unmarshalOfferFailoverBlockInfo(data.failover_block_info) : undefined,\n    failoverIpInfo: data.failover_ip_info ? unmarshalOfferFailoverIpInfo(data.failover_ip_info) : undefined,\n    id: data.id,\n    licenseInfo: data.license_info ? unmarshalOfferLicenseInfo(data.license_info) : undefined,\n    name: data.name,\n    paymentFrequency: data.payment_frequency,\n    pricing: data.pricing ? unmarshalMoney(data.pricing) : undefined,\n    rpnInfo: data.rpn_info ? unmarshalOfferRPNInfo(data.rpn_info) : undefined,\n    sanInfo: data.san_info ? unmarshalOfferSANInfo(data.san_info) : undefined,\n    serverInfo: data.server_info ? unmarshalOfferServerInfo(data.server_info) : undefined,\n    serviceLevelInfo: data.service_level_info ? unmarshalOfferServiceLevelInfo(data.service_level_info) : undefined,\n    storageInfo: data.storage_info ? unmarshalOfferStorageInfo(data.storage_info) : undefined,\n    usbStorageInfo: data.usb_storage_info ? unmarshalOfferStorageInfo(data.usb_storage_info) : undefined\n  };\n};\nconst unmarshalOS = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OS' failed as data isn't a dictionary.`);\n  }\n  return {\n    allowCustomPartitioning: data.allow_custom_partitioning,\n    allowSshKeys: data.allow_ssh_keys,\n    allowedFilesystems: data.allowed_filesystems,\n    arch: data.arch,\n    displayName: data.display_name,\n    hostnameMaxLength: data.hostname_max_length,\n    hostnameRegex: data.hostname_regex,\n    id: data.id,\n    licenseOffers: unmarshalArrayOfObject(data.license_offers, unmarshalOffer$1),\n    maxPartitions: data.max_partitions,\n    name: data.name,\n    panelPasswordRegex: data.panel_password_regex,\n    passwordRegex: data.password_regex,\n    releasedAt: unmarshalDate(data.released_at),\n    requiresAdminPassword: data.requires_admin_password,\n    requiresLicense: data.requires_license,\n    requiresPanelPassword: data.requires_panel_password,\n    requiresUser: data.requires_user,\n    requiresValidHostname: data.requires_valid_hostname,\n    type: data.type,\n    version: data.version\n  };\n};\nconst unmarshalRpnSan = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RpnSan' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    datacenterName: data.datacenter_name,\n    deliveredAt: unmarshalDate(data.delivered_at),\n    expiresAt: unmarshalDate(data.expires_at),\n    id: data.id,\n    iqn: data.iqn,\n    iqnSuffix: data.iqn_suffix,\n    offer: data.offer ? unmarshalOffer$1(data.offer) : undefined,\n    offerId: data.offer_id,\n    offerName: data.offer_name,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    rpnv1Compatible: data.rpnv1_compatible,\n    rpnv1Implicit: data.rpnv1_implicit,\n    serverHostname: data.server_hostname,\n    status: data.status,\n    storageSize: data.storage_size,\n    terminatedAt: unmarshalDate(data.terminated_at)\n  };\n};\nconst unmarshalRpnGroup = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RpnGroup' failed as data isn't a dictionary.`);\n  }\n  return {\n    active: data.active,\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    membersCount: data.members_count,\n    name: data.name,\n    organizationId: data.organization_id,\n    owner: data.owner,\n    projectId: data.project_id,\n    type: data.type\n  };\n};\nconst unmarshalNetworkInterface = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'NetworkInterface' failed as data isn't a dictionary.`);\n  }\n  return {\n    cardId: data.card_id,\n    deviceId: data.device_id,\n    ips: unmarshalArrayOfObject(data.ips, unmarshalIP$2),\n    mac: data.mac,\n    type: data.type\n  };\n};\nconst unmarshalServerLocation$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerLocation' failed as data isn't a dictionary.`);\n  }\n  return {\n    datacenterName: data.datacenter_name,\n    rack: data.rack,\n    room: data.room\n  };\n};\nconst unmarshalServerOption = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerOption' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    expiredAt: unmarshalDate(data.expired_at),\n    offer: data.offer ? unmarshalOffer$1(data.offer) : undefined,\n    options: unmarshalArrayOfObject(data.options, unmarshalServerOption),\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalServiceLevel = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServiceLevel' failed as data isn't a dictionary.`);\n  }\n  return {\n    level: data.level,\n    offerId: data.offer_id\n  };\n};\nconst unmarshalServer$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Server' failed as data isn't a dictionary.`);\n  }\n  return {\n    abuseContact: data.abuse_contact,\n    createdAt: unmarshalDate(data.created_at),\n    expiredAt: unmarshalDate(data.expired_at),\n    hasBmc: data.has_bmc,\n    hostname: data.hostname,\n    id: data.id,\n    interfaces: unmarshalArrayOfObject(data.interfaces, unmarshalNetworkInterface),\n    ipv6Slaac: data.ipv6_slaac,\n    isOutsourced: data.is_outsourced,\n    isRpnv2Member: data.is_rpnv2_member,\n    level: data.level ? unmarshalServiceLevel(data.level) : undefined,\n    location: data.location ? unmarshalServerLocation$1(data.location) : undefined,\n    offer: data.offer ? unmarshalOffer$1(data.offer) : undefined,\n    options: unmarshalArrayOfObject(data.options, unmarshalServerOption),\n    organizationId: data.organization_id,\n    os: data.os ? unmarshalOS(data.os) : undefined,\n    projectId: data.project_id,\n    qinq: data.qinq,\n    rebootedAt: unmarshalDate(data.rebooted_at),\n    rescueOs: data.rescue_os ? unmarshalOS(data.rescue_os) : undefined,\n    status: data.status,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalRpnV2GroupSubnet = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RpnV2GroupSubnet' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    cidr: data.cidr\n  };\n};\nconst unmarshalRpnV2Group = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RpnV2Group' failed as data isn't a dictionary.`);\n  }\n  return {\n    compatibleRpnv1: data.compatible_rpnv1,\n    gateway: data.gateway,\n    id: data.id,\n    membersCount: data.members_count,\n    name: data.name,\n    organizationId: data.organization_id,\n    owner: data.owner,\n    projectId: data.project_id,\n    rpnv1Group: data.rpnv1_group ? unmarshalRpnGroup(data.rpnv1_group) : undefined,\n    status: data.status,\n    subnet: data.subnet ? unmarshalRpnV2GroupSubnet(data.subnet) : undefined,\n    type: data.type\n  };\n};\nconst unmarshalService = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Service' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    deliveredAt: unmarshalDate(data.delivered_at),\n    expiresAt: unmarshalDate(data.expires_at),\n    id: data.id,\n    offer: data.offer ? unmarshalOffer$1(data.offer) : undefined,\n    provisioningStatus: data.provisioning_status,\n    resourceId: data.resource_id,\n    terminatedAt: unmarshalDate(data.terminated_at),\n    type: data.type\n  };\n};\nconst unmarshalFailoverBlock = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'FailoverBlock' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    cidr: data.cidr,\n    gatewayIp: data.gateway_ip,\n    id: data.id,\n    ipVersion: data.ip_version,\n    nameservers: data.nameservers,\n    netmask: data.netmask\n  };\n};\nconst unmarshalFailoverIP = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'FailoverIP' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    block: data.block ? unmarshalFailoverBlock(data.block) : undefined,\n    cidr: data.cidr,\n    gatewayIp: data.gateway_ip,\n    id: data.id,\n    ipVersion: data.ip_version,\n    mac: data.mac,\n    netmask: data.netmask,\n    reverse: data.reverse,\n    serverId: data.server_id,\n    serverZone: data.server_zone,\n    status: data.status,\n    type: data.type\n  };\n};\nconst unmarshalBMCAccess = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'BMCAccess' failed as data isn't a dictionary.`);\n  }\n  return {\n    expiresAt: unmarshalDate(data.expires_at),\n    login: data.login,\n    password: data.password,\n    status: data.status,\n    url: data.url\n  };\n};\nconst unmarshalBackup = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Backup' failed as data isn't a dictionary.`);\n  }\n  return {\n    aclEnabled: data.acl_enabled,\n    autologin: data.autologin,\n    id: data.id,\n    login: data.login,\n    quotaFiles: data.quota_files,\n    quotaFilesUsed: data.quota_files_used,\n    quotaSpace: data.quota_space,\n    quotaSpaceUsed: data.quota_space_used,\n    server: data.server,\n    status: data.status\n  };\n};\nconst unmarshalCanOrderResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CanOrderResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    billingOk: data.billing_ok,\n    canOrder: data.can_order,\n    emailConfirmed: data.email_confirmed,\n    message: data.message,\n    paymentMode: data.payment_mode,\n    phoneConfirmed: data.phone_confirmed,\n    quotaOk: data.quota_ok,\n    userConfirmed: data.user_confirmed\n  };\n};\nconst unmarshalCreateFailoverIPsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CreateFailoverIPsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    services: unmarshalArrayOfObject(data.services, unmarshalService),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalGetIPv6BlockQuotasResponseQuota = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetIPv6BlockQuotasResponseQuota' failed as data isn't a dictionary.`);\n  }\n  return {\n    cidr: data.cidr,\n    quota: data.quota\n  };\n};\nconst unmarshalGetIPv6BlockQuotasResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetIPv6BlockQuotasResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    quotas: unmarshalArrayOfObject(data.quotas, unmarshalGetIPv6BlockQuotasResponseQuota),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalGetRemainingQuotaResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetRemainingQuotaResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    failoverBlockQuota: data.failover_block_quota,\n    failoverBlockRemainingQuota: data.failover_block_remaining_quota,\n    failoverIpQuota: data.failover_ip_quota,\n    failoverIpRemainingQuota: data.failover_ip_remaining_quota\n  };\n};\nconst unmarshalGetRpnStatusResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetRpnStatusResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    operationsLeft: data.operations_left,\n    status: data.status\n  };\n};\nconst unmarshalIPv6Block = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'IPv6Block' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    cidr: data.cidr,\n    delegationStatus: data.delegation_status,\n    duid: data.duid,\n    id: data.id,\n    nameservers: data.nameservers,\n    subnets: unmarshalArrayOfObject(data.subnets, unmarshalIPv6Block)\n  };\n};\nconst unmarshalInvoice = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Invoice' failed as data isn't a dictionary.`);\n  }\n  return {\n    content: data.content,\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    paidAt: unmarshalDate(data.paid_at),\n    paymentMethod: data.payment_method,\n    status: data.status,\n    totalWithTaxes: data.total_with_taxes ? unmarshalMoney(data.total_with_taxes) : undefined,\n    totalWithoutTaxes: data.total_without_taxes ? unmarshalMoney(data.total_without_taxes) : undefined,\n    transactionId: data.transaction_id\n  };\n};\nconst unmarshalListFailoverIPsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListFailoverIPsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    failoverIps: unmarshalArrayOfObject(data.failover_ips, unmarshalFailoverIP),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListIPv6BlockSubnetsAvailableResponseSubnet = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListIPv6BlockSubnetsAvailableResponseSubnet' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    cidr: data.cidr\n  };\n};\nconst unmarshalListIPv6BlockSubnetsAvailableResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListIPv6BlockSubnetsAvailableResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    subnetAvailables: unmarshalArrayOfObject(data.subnet_availables, unmarshalListIPv6BlockSubnetsAvailableResponseSubnet),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalInvoiceSummary = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'InvoiceSummary' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    paidAt: unmarshalDate(data.paid_at),\n    paymentMethod: data.payment_method,\n    status: data.status,\n    totalWithTaxes: data.total_with_taxes ? unmarshalMoney(data.total_with_taxes) : undefined,\n    totalWithoutTaxes: data.total_without_taxes ? unmarshalMoney(data.total_without_taxes) : undefined,\n    transactionId: data.transaction_id\n  };\n};\nconst unmarshalListInvoicesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListInvoicesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    invoices: unmarshalArrayOfObject(data.invoices, unmarshalInvoiceSummary),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalRpnSanIpRpnV2Group = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RpnSanIpRpnV2Group' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    name: data.name\n  };\n};\nconst unmarshalRpnSanIpServer = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RpnSanIpServer' failed as data isn't a dictionary.`);\n  }\n  return {\n    datacenterName: data.datacenter_name,\n    hostname: data.hostname,\n    id: data.id\n  };\n};\nconst unmarshalRpnSanIp = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RpnSanIp' failed as data isn't a dictionary.`);\n  }\n  return {\n    ip: data.ip ? unmarshalIP$2(data.ip) : undefined,\n    rpnv2Group: data.rpnv2_group ? unmarshalRpnSanIpRpnV2Group(data.rpnv2_group) : undefined,\n    server: data.server ? unmarshalRpnSanIpServer(data.server) : undefined,\n    type: data.type\n  };\n};\nconst unmarshalListIpsResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListIpsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    ips: unmarshalArrayOfObject(data.ips, unmarshalRpnSanIp),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListOSResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListOSResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    os: unmarshalArrayOfObject(data.os, unmarshalOS),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListOffersResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListOffersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    offers: unmarshalArrayOfObject(data.offers, unmarshalOffer$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalRefundSummary = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RefundSummary' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    method: data.method,\n    refundedAt: unmarshalDate(data.refunded_at),\n    status: data.status,\n    totalWithTaxes: data.total_with_taxes ? unmarshalMoney(data.total_with_taxes) : undefined,\n    totalWithoutTaxes: data.total_without_taxes ? unmarshalMoney(data.total_without_taxes) : undefined\n  };\n};\nconst unmarshalListRefundsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRefundsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    refunds: unmarshalArrayOfObject(data.refunds, unmarshalRefundSummary),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalRpnSanServer = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RpnSanServer' failed as data isn't a dictionary.`);\n  }\n  return {\n    datacenterName: data.datacenter_name,\n    hostname: data.hostname,\n    id: data.id,\n    sans: unmarshalArrayOfObject(data.sans, unmarshalRpnSan),\n    zone: data.zone\n  };\n};\nconst unmarshalListRpnCapableSanServersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRpnCapableSanServersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    sanServers: unmarshalArrayOfObject(data.san_servers, unmarshalRpnSanServer),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListRpnCapableServersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRpnCapableServersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    servers: unmarshalArrayOfObject(data.servers, unmarshalServer$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalRpnGroupMember = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RpnGroupMember' failed as data isn't a dictionary.`);\n  }\n  return {\n    groupId: data.group_id,\n    groupName: data.group_name,\n    groupOwner: data.group_owner,\n    id: data.id,\n    owner: data.owner,\n    sanServer: data.san_server ? unmarshalRpnSanServer(data.san_server) : undefined,\n    server: data.server ? unmarshalServer$1(data.server) : undefined,\n    speed: data.speed,\n    status: data.status\n  };\n};\nconst unmarshalListRpnGroupMembersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRpnGroupMembersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    members: unmarshalArrayOfObject(data.members, unmarshalRpnGroupMember),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListRpnGroupsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRpnGroupsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rpnGroups: unmarshalArrayOfObject(data.rpn_groups, unmarshalRpnGroup),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListRpnInvitesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRpnInvitesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    members: unmarshalArrayOfObject(data.members, unmarshalRpnGroupMember),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalRpnSanSummary = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RpnSanSummary' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    datacenterName: data.datacenter_name,\n    deliveredAt: unmarshalDate(data.delivered_at),\n    expiresAt: unmarshalDate(data.expires_at),\n    id: data.id,\n    iqnSuffix: data.iqn_suffix,\n    offerId: data.offer_id,\n    offerName: data.offer_name,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    rpnv1Compatible: data.rpnv1_compatible,\n    rpnv1Implicit: data.rpnv1_implicit,\n    serverHostname: data.server_hostname,\n    status: data.status,\n    storageSize: data.storage_size,\n    terminatedAt: unmarshalDate(data.terminated_at)\n  };\n};\nconst unmarshalListRpnSansResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRpnSansResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rpnSans: unmarshalArrayOfObject(data.rpn_sans, unmarshalRpnSanSummary),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalRpnServerCapability = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RpnServerCapability' failed as data isn't a dictionary.`);\n  }\n  return {\n    canJoinQinqGroup: data.can_join_qinq_group,\n    canJoinRpnv2Group: data.can_join_rpnv2_group,\n    compatibleQinq: data.compatible_qinq,\n    datacenterName: data.datacenter_name,\n    hostname: data.hostname,\n    id: data.id,\n    ipAddress: data.ip_address,\n    rpnVersion: data.rpn_version,\n    rpnv1GroupCount: data.rpnv1_group_count,\n    rpnv2GroupCount: data.rpnv2_group_count,\n    zone: data.zone\n  };\n};\nconst unmarshalListRpnServerCapabilitiesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRpnServerCapabilitiesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    servers: unmarshalArrayOfObject(data.servers, unmarshalRpnServerCapability),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListRpnV2CapableResourcesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRpnV2CapableResourcesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    servers: unmarshalArrayOfObject(data.servers, unmarshalServer$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalRpnV2Member = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RpnV2Member' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    rpnv1Group: data.rpnv1_group ? unmarshalRpnGroup(data.rpnv1_group) : undefined,\n    server: data.server ? unmarshalServer$1(data.server) : undefined,\n    speed: data.speed,\n    status: data.status,\n    vlan: data.vlan\n  };\n};\nconst unmarshalLog$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Log' failed as data isn't a dictionary.`);\n  }\n  return {\n    action: data.action,\n    createdAt: unmarshalDate(data.created_at),\n    finishedAt: unmarshalDate(data.finished_at),\n    group: data.group ? unmarshalRpnV2Group(data.group) : undefined,\n    id: data.id,\n    member: data.member ? unmarshalRpnV2Member(data.member) : undefined,\n    status: data.status\n  };\n};\nconst unmarshalListRpnV2GroupLogsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRpnV2GroupLogsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    logs: unmarshalArrayOfObject(data.logs, unmarshalLog$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListRpnV2GroupsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRpnV2GroupsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rpnGroups: unmarshalArrayOfObject(data.rpn_groups, unmarshalRpnV2Group),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListRpnV2MembersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRpnV2MembersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    members: unmarshalArrayOfObject(data.members, unmarshalRpnV2Member),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalServerDisk = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerDisk' failed as data isn't a dictionary.`);\n  }\n  return {\n    capacity: data.capacity,\n    connector: data.connector,\n    id: data.id,\n    isAddon: data.is_addon,\n    type: data.type\n  };\n};\nconst unmarshalListServerDisksResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListServerDisksResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    disks: unmarshalArrayOfObject(data.disks, unmarshalServerDisk),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalServerEvent = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerEvent' failed as data isn't a dictionary.`);\n  }\n  return {\n    date: unmarshalDate(data.date),\n    description: data.description,\n    eventId: data.event_id\n  };\n};\nconst unmarshalListServerEventsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListServerEventsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    events: unmarshalArrayOfObject(data.events, unmarshalServerEvent),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalServerSummary$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerSummary' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    datacenterName: data.datacenter_name,\n    expiredAt: unmarshalDate(data.expired_at),\n    hostname: data.hostname,\n    id: data.id,\n    interfaces: unmarshalArrayOfObject(data.interfaces, unmarshalNetworkInterface),\n    isOutsourced: data.is_outsourced,\n    level: data.level ? unmarshalServiceLevel(data.level) : undefined,\n    offerId: data.offer_id,\n    offerName: data.offer_name,\n    organizationId: data.organization_id,\n    osId: data.os_id,\n    projectId: data.project_id,\n    qinq: data.qinq,\n    rpnVersion: data.rpn_version,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalListServersResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListServersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    servers: unmarshalArrayOfObject(data.servers, unmarshalServerSummary$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListServicesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListServicesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    services: unmarshalArrayOfObject(data.services, unmarshalService),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSubscribableServerOptionsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSubscribableServerOptionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    serverOptions: unmarshalArrayOfObject(data.server_options, unmarshalOffer$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalRaidArray = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RaidArray' failed as data isn't a dictionary.`);\n  }\n  return {\n    disks: unmarshalArrayOfObject(data.disks, unmarshalServerDisk),\n    raidLevel: data.raid_level\n  };\n};\nconst unmarshalRaid = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Raid' failed as data isn't a dictionary.`);\n  }\n  return {\n    raidArrays: unmarshalArrayOfObject(data.raid_arrays, unmarshalRaidArray)\n  };\n};\nconst unmarshalRefund = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Refund' failed as data isn't a dictionary.`);\n  }\n  return {\n    content: data.content,\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    method: data.method,\n    refundedAt: unmarshalDate(data.refunded_at),\n    status: data.status,\n    totalWithTaxes: data.total_with_taxes ? unmarshalMoney(data.total_with_taxes) : undefined,\n    totalWithoutTaxes: data.total_without_taxes ? unmarshalMoney(data.total_without_taxes) : undefined\n  };\n};\nconst unmarshalRescue = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Rescue' failed as data isn't a dictionary.`);\n  }\n  return {\n    login: data.login,\n    osId: data.os_id,\n    password: data.password,\n    protocol: data.protocol\n  };\n};\nconst unmarshalPartition = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Partition' failed as data isn't a dictionary.`);\n  }\n  return {\n    capacity: data.capacity,\n    connectors: data.connectors,\n    fileSystem: data.file_system,\n    mountPoint: data.mount_point,\n    raidLevel: data.raid_level,\n    type: data.type\n  };\n};\nconst unmarshalServerDefaultPartitioning = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerDefaultPartitioning' failed as data isn't a dictionary.`);\n  }\n  return {\n    partitions: unmarshalArrayOfObject(data.partitions, unmarshalPartition)\n  };\n};\nconst unmarshalServerInstall = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerInstall' failed as data isn't a dictionary.`);\n  }\n  return {\n    hostname: data.hostname,\n    osId: data.os_id,\n    panelUrl: data.panel_url,\n    partitions: unmarshalArrayOfObject(data.partitions, unmarshalPartition),\n    sshKeyIds: data.ssh_key_ids,\n    status: data.status,\n    userLogin: data.user_login\n  };\n};\nconst unmarshalSubscribeStorageOptionsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SubscribeStorageOptionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    services: unmarshalArrayOfObject(data.services, unmarshalService)\n  };\n};\nconst marshalAttachFailoverIPToMacAddressRequest = (request, defaults) => ({\n  mac: request.mac,\n  type: request.type\n});\nconst marshalAttachFailoverIPsRequest = (request, defaults) => ({\n  fips_ids: request.fipsIds,\n  server_id: request.serverId\n});\nconst marshalCreateFailoverIPsRequest = (request, defaults) => ({\n  offer_id: request.offerId,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  quantity: request.quantity\n});\nconst marshalCreateServerRequest$1 = (request, defaults) => ({\n  datacenter_name: request.datacenterName,\n  offer_id: request.offerId,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  server_option_ids: request.serverOptionIds\n});\nconst marshalDetachFailoverIPsRequest = (request, defaults) => ({\n  fips_ids: request.fipsIds\n});\nconst marshalIPv6BlockApiCreateIPv6BlockRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalIPv6BlockApiCreateIPv6BlockSubnetRequest = (request, defaults) => ({\n  address: request.address,\n  cidr: request.cidr\n});\nconst marshalIPv6BlockApiUpdateIPv6BlockRequest = (request, defaults) => ({\n  nameservers: request.nameservers\n});\nconst marshalInstallPartition = (request, defaults) => ({\n  capacity: request.capacity,\n  connectors: request.connectors,\n  file_system: request.fileSystem,\n  mount_point: request.mountPoint,\n  raid_level: request.raidLevel\n});\nconst marshalInstallServerRequest = (request, defaults) => ({\n  hostname: request.hostname,\n  ip_id: request.ipId,\n  license_offer_id: request.licenseOfferId,\n  os_id: request.osId,\n  panel_password: request.panelPassword,\n  partitions: request.partitions !== undefined ? request.partitions.map(elt => marshalInstallPartition(elt)) : undefined,\n  root_password: request.rootPassword,\n  ssh_key_ids: request.sshKeyIds,\n  user_login: request.userLogin,\n  user_password: request.userPassword\n});\nconst marshalRpnSanApiAddIpRequest = (request, defaults) => ({\n  ip_ids: request.ipIds\n});\nconst marshalRpnSanApiCreateRpnSanRequest = (request, defaults) => ({\n  offer_id: request.offerId,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalRpnSanApiRemoveIpRequest = (request, defaults) => ({\n  ip_ids: request.ipIds\n});\nconst marshalRpnV1ApiAddRpnGroupMembersRequest = (request, defaults) => ({\n  san_server_ids: request.sanServerIds,\n  server_ids: request.serverIds\n});\nconst marshalRpnV1ApiCreateRpnGroupRequest = (request, defaults) => ({\n  name: request.name,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  san_server_ids: request.sanServerIds,\n  server_ids: request.serverIds\n});\nconst marshalRpnV1ApiDeleteRpnGroupMembersRequest = (request, defaults) => ({\n  member_ids: request.memberIds\n});\nconst marshalRpnV1ApiLeaveRpnGroupRequest = (request, defaults) => ({\n  member_ids: request.memberIds,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalRpnV1ApiRpnGroupInviteRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  server_ids: request.serverIds\n});\nconst marshalRpnV1ApiUpdateRpnGroupNameRequest = (request, defaults) => ({\n  name: request.name\n});\nconst marshalRpnV2ApiAddRpnV2MembersRequest = (request, defaults) => ({\n  servers: request.servers\n});\nconst marshalRpnV2ApiCreateRpnV2GroupRequest = (request, defaults) => ({\n  name: request.name,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  servers: request.servers,\n  type: request.type\n});\nconst marshalRpnV2ApiDeleteRpnV2MembersRequest = (request, defaults) => ({\n  member_ids: request.memberIds\n});\nconst marshalRpnV2ApiEnableRpnV2GroupCompatibilityRequest = (request, defaults) => ({\n  rpnv1_group_id: request.rpnv1GroupId\n});\nconst marshalRpnV2ApiUpdateRpnV2GroupNameRequest = (request, defaults) => ({\n  name: request.name\n});\nconst marshalRpnV2ApiUpdateRpnV2VlanForMembersRequest = (request, defaults) => ({\n  member_ids: request.memberIds,\n  vlan: request.vlan\n});\nconst marshalStartBMCAccessRequest = (request, defaults) => ({\n  ip: request.ip\n});\nconst marshalStartRescueRequest = (request, defaults) => ({\n  os_id: request.osId\n});\nconst marshalSubscribeServerOptionRequest = (request, defaults) => ({\n  option_id: request.optionId\n});\nconst marshalSubscribeStorageOptionsRequest = (request, defaults) => ({\n  options_ids: request.optionsIds\n});\nconst marshalUpdatableRaidArray = (request, defaults) => ({\n  disk_ids: request.diskIds,\n  raid_level: request.raidLevel\n});\nconst marshalUpdateRaidRequest = (request, defaults) => ({\n  raid_arrays: request.raidArrays.map(elt => marshalUpdatableRaidArray(elt))\n});\nconst marshalUpdateReverseRequest = (request, defaults) => ({\n  reverse: request.reverse\n});\nconst marshalUpdateServerBackupRequest = (request, defaults) => ({\n  acl_enabled: request.aclEnabled,\n  autologin: request.autologin,\n  password: request.password\n});\nconst marshalUpdateServerRequest$1 = (request, defaults) => ({\n  enable_ipv6: request.enableIpv6,\n  hostname: request.hostname\n});\nconst marshalUpdateServerTagsRequest = (request, defaults) => ({\n  tags: request.tags\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$q = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Dedibox Phoenix API. */\nlet API$q = class API extends API$z {\n  /** Lists the available zones of the API. */\n  static LOCALITIES = ['fr-par-1', 'fr-par-2', 'nl-ams-1'];\n  pageOfListServers = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId ?? this.client.settings.defaultProjectId], ['search', request.search])\n  }, unmarshalListServersResponse$1);\n\n  /**\n   * List baremetal servers for project.\n   *\n   * @param request - The request {@link ListServersRequest}\n   * @returns A Promise of ListServersResponse\n   */\n  listServers = (request = {}) => enrichForPagination('servers', this.pageOfListServers, request);\n\n  /**\n   * Get a specific baremetal server. Get the server associated with the given\n   * ID.\n   *\n   * @param request - The request {@link GetServerRequest}\n   * @returns A Promise of Server\n   */\n  getServer = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}`\n  }, unmarshalServer$1);\n\n  /**\n   * Waits for {@link Server} to be in a final state.\n   *\n   * @param request - The request {@link GetServerRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Server\n   */\n  waitForServer = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!SERVER_TRANSIENT_STATUSES$1.includes(res.status))), this.getServer, request, options);\n  getServerBackup = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/backups`\n  }, unmarshalBackup);\n  updateServerBackup = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateServerBackupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'PATCH',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/backups`\n  }, unmarshalBackup);\n  pageOfListSubscribableServerOptions = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/subscribable-server-options`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListSubscribableServerOptionsResponse);\n\n  /**\n   * List subscribable server options. List subscribable options associated to\n   * the given server ID.\n   *\n   * @param request - The request {@link ListSubscribableServerOptionsRequest}\n   * @returns A Promise of ListSubscribableServerOptionsResponse\n   */\n  listSubscribableServerOptions = request => enrichForPagination('serverOptions', this.pageOfListSubscribableServerOptions, request);\n\n  /**\n   * Subscribe server option. Subscribe option for the given server ID.\n   *\n   * @param request - The request {@link SubscribeServerOptionRequest}\n   * @returns A Promise of Service\n   */\n  subscribeServerOption = request => this.client.fetch({\n    body: JSON.stringify(marshalSubscribeServerOptionRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'PATCH',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/subscribe-server-option`\n  }, unmarshalService);\n\n  /**\n   * Create a baremetal server. Create a new baremetal server. The order return\n   * you a service ID to follow the provisionning status you could call\n   * GetService.\n   *\n   * @param request - The request {@link CreateServerRequest}\n   * @returns A Promise of Service\n   */\n  createServer = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateServerRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers`\n  }, unmarshalService);\n\n  /**\n   * Subscribe storage server option. Subscribe storage option for the given\n   * server ID.\n   *\n   * @param request - The request {@link SubscribeStorageOptionsRequest}\n   * @returns A Promise of SubscribeStorageOptionsResponse\n   */\n  subscribeStorageOptions = request => this.client.fetch({\n    body: JSON.stringify(marshalSubscribeStorageOptionsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/subscribe-storage-options`\n  }, unmarshalSubscribeStorageOptionsResponse);\n\n  /**\n   * Update a baremetal server. Update the server associated with the given ID.\n   *\n   * @param request - The request {@link UpdateServerRequest}\n   * @returns A Promise of Server\n   */\n  updateServer = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateServerRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'PATCH',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}`\n  }, unmarshalServer$1);\n  updateServerTags = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateServerTagsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/tags`\n  }, unmarshalServer$1);\n\n  /**\n   * Reboot a baremetal server. Reboot the server associated with the given ID,\n   * use boot param to reboot in rescue.\n   *\n   * @param request - The request {@link RebootServerRequest}\n   */\n  rebootServer = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/reboot`\n  });\n\n  /**\n   * Start a baremetal server. Start the server associated with the given ID.\n   *\n   * @param request - The request {@link StartServerRequest}\n   */\n  startServer = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/start`\n  });\n\n  /**\n   * Stop a baremetal server. Stop the server associated with the given ID.\n   *\n   * @param request - The request {@link StopServerRequest}\n   */\n  stopServer = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/stop`\n  });\n\n  /**\n   * Delete a baremetal server. Delete the server associated with the given ID.\n   *\n   * @param request - The request {@link DeleteServerRequest}\n   */\n  deleteServer = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}`\n  });\n  pageOfListServerEvents = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/events`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListServerEventsResponse);\n\n  /**\n   * List server events. List events associated to the given server ID.\n   *\n   * @param request - The request {@link ListServerEventsRequest}\n   * @returns A Promise of ListServerEventsResponse\n   */\n  listServerEvents = request => enrichForPagination('events', this.pageOfListServerEvents, request);\n  pageOfListServerDisks = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/disks`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListServerDisksResponse);\n\n  /**\n   * List server disks. List disks associated to the given server ID.\n   *\n   * @param request - The request {@link ListServerDisksRequest}\n   * @returns A Promise of ListServerDisksResponse\n   */\n  listServerDisks = request => enrichForPagination('disks', this.pageOfListServerDisks, request);\n  getOrderedService = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ordered-services/${validatePathParam('orderedServiceId', request.orderedServiceId)}`\n  }, unmarshalService);\n\n  /**\n   * Get a specific service. Get the service associated with the given ID.\n   *\n   * @param request - The request {@link GetServiceRequest}\n   * @returns A Promise of Service\n   */\n  getService = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$q,\n    method: 'PATCH',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/services/${validatePathParam('serviceId', request.serviceId)}`\n  }, unmarshalService);\n\n  /**\n   * Delete a specific service. Delete the service associated with the given ID.\n   *\n   * @param request - The request {@link DeleteServiceRequest}\n   * @returns A Promise of Service\n   */\n  deleteService = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/services/${validatePathParam('serviceId', request.serviceId)}`\n  }, unmarshalService);\n  pageOfListServices = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/services`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListServicesResponse);\n\n  /**\n   * List services.\n   *\n   * @param request - The request {@link ListServicesRequest}\n   * @returns A Promise of ListServicesResponse\n   */\n  listServices = (request = {}) => enrichForPagination('services', this.pageOfListServices, request);\n\n  /**\n   * Install a baremetal server. Install an OS on the server associated with the\n   * given ID.\n   *\n   * @param request - The request {@link InstallServerRequest}\n   * @returns A Promise of ServerInstall\n   */\n  installServer = request => this.client.fetch({\n    body: JSON.stringify(marshalInstallServerRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/install`\n  }, unmarshalServerInstall);\n\n  /**\n   * Get a specific server installation status. Get the server installation\n   * status associated with the given server ID.\n   *\n   * @param request - The request {@link GetServerInstallRequest}\n   * @returns A Promise of ServerInstall\n   */\n  getServerInstall = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/install`\n  }, unmarshalServerInstall);\n\n  /**\n   * Waits for {@link ServerInstall} to be in a final state.\n   *\n   * @param request - The request {@link GetServerInstallRequest}\n   * @param options - The waiting options\n   * @returns A Promise of ServerInstall\n   */\n  waitForServerInstall = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!SERVER_INSTALL_TRANSIENT_STATUSES.includes(res.status))), this.getServerInstall, request, options);\n\n  /**\n   * Cancels the current (running) server installation. Cancels the current\n   * server installation associated with the given server ID.\n   *\n   * @param request - The request {@link CancelServerInstallRequest}\n   */\n  cancelServerInstall = request => this.client.fetch({\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/cancel-install`\n  });\n\n  /**\n   * Get server default partitioning. Get the server default partitioning schema\n   * associated with the given server ID and OS ID.\n   *\n   * @param request - The request {@link GetServerDefaultPartitioningRequest}\n   * @returns A Promise of ServerDefaultPartitioning\n   */\n  getServerDefaultPartitioning = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/partitioning/${validatePathParam('osId', request.osId)}`\n  }, unmarshalServerDefaultPartitioning);\n\n  /**\n   * Start BMC (Baseboard Management Controller) access for a given baremetal\n   * server. Start BMC (Baseboard Management Controller) access associated with\n   * the given ID. The BMC (Baseboard Management Controller) access is available\n   * one hour after the installation of the server.\n   *\n   * @param request - The request {@link StartBMCAccessRequest}\n   */\n  startBMCAccess = request => this.client.fetch({\n    body: JSON.stringify(marshalStartBMCAccessRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/bmc-access`\n  });\n\n  /**\n   * Get BMC (Baseboard Management Controller) access for a given baremetal\n   * server. Get the BMC (Baseboard Management Controller) access associated\n   * with the given ID.\n   *\n   * @param request - The request {@link GetBMCAccessRequest}\n   * @returns A Promise of BMCAccess\n   */\n  getBMCAccess = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/bmc-access`\n  }, unmarshalBMCAccess);\n\n  /**\n   * Waits for {@link BMCAccess} to be in a final state.\n   *\n   * @param request - The request {@link GetBMCAccessRequest}\n   * @param options - The waiting options\n   * @returns A Promise of BMCAccess\n   */\n  waitForBMCAccess = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!BMC_ACCESS_TRANSIENT_STATUSES.includes(res.status))), this.getBMCAccess, request, options);\n\n  /**\n   * Stop BMC (Baseboard Management Controller) access for a given baremetal\n   * server. Stop BMC (Baseboard Management Controller) access associated with\n   * the given ID.\n   *\n   * @param request - The request {@link StopBMCAccessRequest}\n   */\n  stopBMCAccess = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/bmc-access`\n  });\n  pageOfListOffers = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/offers`,\n    urlParams: urlParams(['available_only', request.availableOnly], ['catalog', request.catalog], ['commercial_range', request.commercialRange], ['is_failover_block', request.isFailoverBlock], ['is_failover_ip', request.isFailoverIp], ['is_rpn_san', request.isRpnSan], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['sold_in', request.soldIn && request.soldIn.length > 0 ? request.soldIn.join(',') : undefined])\n  }, unmarshalListOffersResponse$1);\n\n  /**\n   * List offers. List all available server offers.\n   *\n   * @param request - The request {@link ListOffersRequest}\n   * @returns A Promise of ListOffersResponse\n   */\n  listOffers = (request = {}) => enrichForPagination('offers', this.pageOfListOffers, request);\n\n  /**\n   * Get offer. Return specific offer for the given ID.\n   *\n   * @param request - The request {@link GetOfferRequest}\n   * @returns A Promise of Offer\n   */\n  getOffer = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/offers/${validatePathParam('offerId', request.offerId)}`,\n    urlParams: urlParams(['project_id', request.projectId])\n  }, unmarshalOffer$1);\n  pageOfListOS = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/os`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['server_id', request.serverId], ['type', request.type])\n  }, unmarshalListOSResponse);\n\n  /**\n   * List all available OS that can be install on a baremetal server.\n   *\n   * @param request - The request {@link ListOSRequest}\n   * @returns A Promise of ListOSResponse\n   */\n  listOS = request => enrichForPagination('os', this.pageOfListOS, request);\n\n  /**\n   * Get an OS with a given ID. Return specific OS for the given ID.\n   *\n   * @param request - The request {@link GetOSRequest}\n   * @returns A Promise of OS\n   */\n  getOS = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/os/${validatePathParam('osId', request.osId)}`,\n    urlParams: urlParams(['project_id', request.projectId], ['server_id', request.serverId])\n  }, unmarshalOS);\n\n  /**\n   * Update reverse of ip. Update reverse of ip associated with the given ID.\n   *\n   * @param request - The request {@link UpdateReverseRequest}\n   * @returns A Promise of IP\n   */\n  updateReverse = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateReverseRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'PATCH',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/reverses/${validatePathParam('ipId', request.ipId)}`\n  }, unmarshalIP$2);\n\n  /**\n   * Order failover IPs. Order X failover IPs.\n   *\n   * @param request - The request {@link CreateFailoverIPsRequest}\n   * @returns A Promise of CreateFailoverIPsResponse\n   */\n  createFailoverIPs = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateFailoverIPsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/failover-ips`\n  }, unmarshalCreateFailoverIPsResponse);\n\n  /**\n   * Attach failovers on baremetal server. Attach failovers on the server\n   * associated with the given ID.\n   *\n   * @param request - The request {@link AttachFailoverIPsRequest}\n   */\n  attachFailoverIPs = request => this.client.fetch({\n    body: JSON.stringify(marshalAttachFailoverIPsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/failover-ips/attach`\n  });\n\n  /**\n   * Detach failovers on baremetal server. Detach failovers on the server\n   * associated with the given ID.\n   *\n   * @param request - The request {@link DetachFailoverIPsRequest}\n   */\n  detachFailoverIPs = request => this.client.fetch({\n    body: JSON.stringify(marshalDetachFailoverIPsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/failover-ips/detach`\n  });\n\n  /**\n   * Attach a failover IP to a MAC address.\n   *\n   * @param request - The request {@link AttachFailoverIPToMacAddressRequest}\n   * @returns A Promise of IP\n   */\n  attachFailoverIPToMacAddress = request => this.client.fetch({\n    body: JSON.stringify(marshalAttachFailoverIPToMacAddressRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/failover-ips/${validatePathParam('ipId', request.ipId)}/attach-to-mac-address`\n  }, unmarshalIP$2);\n\n  /**\n   * Detach a failover IP from a MAC address.\n   *\n   * @param request - The request {@link DetachFailoverIPFromMacAddressRequest}\n   * @returns A Promise of IP\n   */\n  detachFailoverIPFromMacAddress = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/failover-ips/${validatePathParam('ipId', request.ipId)}/detach-from-mac-address`\n  }, unmarshalIP$2);\n\n  /**\n   * Delete a failover server. Delete the failover associated with the given ID.\n   *\n   * @param request - The request {@link DeleteFailoverIPRequest}\n   */\n  deleteFailoverIP = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/failover-ips/${validatePathParam('ipId', request.ipId)}`\n  });\n  pageOfListFailoverIPs = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/failover-ips`,\n    urlParams: urlParams(['only_available', request.onlyAvailable], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId ?? this.client.settings.defaultProjectId], ['search', request.search])\n  }, unmarshalListFailoverIPsResponse);\n\n  /**\n   * List failovers for project. List failovers servers for project.\n   *\n   * @param request - The request {@link ListFailoverIPsRequest}\n   * @returns A Promise of ListFailoverIPsResponse\n   */\n  listFailoverIPs = (request = {}) => enrichForPagination('failoverIps', this.pageOfListFailoverIPs, request);\n\n  /**\n   * Get a specific baremetal server. Get the server associated with the given\n   * ID.\n   *\n   * @param request - The request {@link GetFailoverIPRequest}\n   * @returns A Promise of FailoverIP\n   */\n  getFailoverIP = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/failover-ips/${validatePathParam('ipId', request.ipId)}`\n  }, unmarshalFailoverIP);\n\n  /**\n   * Get remaining quota.\n   *\n   * @param request - The request {@link GetRemainingQuotaRequest}\n   * @returns A Promise of GetRemainingQuotaResponse\n   */\n  getRemainingQuota = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/remaining-quota`,\n    urlParams: urlParams(['project_id', request.projectId])\n  }, unmarshalGetRemainingQuotaResponse);\n\n  /**\n   * Get raid. Return raid for the given server ID.\n   *\n   * @param request - The request {@link GetRaidRequest}\n   * @returns A Promise of Raid\n   */\n  getRaid = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/raid`\n  }, unmarshalRaid);\n\n  /**\n   * Update RAID. Update RAID associated with the given server ID.\n   *\n   * @param request - The request {@link UpdateRaidRequest}\n   */\n  updateRaid = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateRaidRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/update-raid`\n  });\n\n  /**\n   * Start in rescue baremetal server. Start in rescue the server associated\n   * with the given ID.\n   *\n   * @param request - The request {@link StartRescueRequest}\n   * @returns A Promise of Rescue\n   */\n  startRescue = request => this.client.fetch({\n    body: JSON.stringify(marshalStartRescueRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/rescue`\n  }, unmarshalRescue);\n\n  /**\n   * Get rescue information. Return rescue information for the given server ID.\n   *\n   * @param request - The request {@link GetRescueRequest}\n   * @returns A Promise of Rescue\n   */\n  getRescue = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/rescue`\n  }, unmarshalRescue);\n\n  /**\n   * Stop rescue on baremetal server. Stop rescue on the server associated with\n   * the given ID.\n   *\n   * @param request - The request {@link StopRescueRequest}\n   */\n  stopRescue = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/dedibox/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/rescue`\n  });\n};\n\n/** Dedibox Phoenix Billing API. */\nclass BillingAPI extends API$z {\n  pageOfListInvoices = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/invoices`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListInvoicesResponse);\n  listInvoices = (request = {}) => enrichForPagination('invoices', this.pageOfListInvoices, request);\n  getInvoice = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/invoices/${validatePathParam('invoiceId', request.invoiceId)}`\n  }, unmarshalInvoice);\n  downloadInvoice = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/invoices/${validatePathParam('invoiceId', request.invoiceId)}/download`,\n    urlParams: urlParams(['dl', 1]),\n    responseType: 'blob'\n  });\n  pageOfListRefunds = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/refunds`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListRefundsResponse);\n  listRefunds = (request = {}) => enrichForPagination('refunds', this.pageOfListRefunds, request);\n  getRefund = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/refunds/${validatePathParam('refundId', request.refundId)}`\n  }, unmarshalRefund);\n  downloadRefund = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/refunds/${validatePathParam('refundId', request.refundId)}/download`,\n    urlParams: urlParams(['dl', 1]),\n    responseType: 'blob'\n  });\n  canOrder = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/can-order`,\n    urlParams: urlParams(['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalCanOrderResponse);\n}\n\n/** Dedibox Phoenix IPv6 Block API. */\nclass IPv6BlockAPI extends API$z {\n  /**\n   * Get IPv6 block quota. Get IPv6 block quota with the given project ID. /48\n   * one per organization. /56 link to your number of server. /64 link to your\n   * number of failover IP.\n   *\n   * @param request - The request {@link IPv6BlockApiGetIPv6BlockQuotasRequest}\n   * @returns A Promise of GetIPv6BlockQuotasResponse\n   */\n  getIPv6BlockQuotas = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/ipv6-block-quotas`,\n    urlParams: urlParams(['project_id', request.projectId])\n  }, unmarshalGetIPv6BlockQuotasResponse);\n\n  /**\n   * Create IPv6 block for baremetal server. Create IPv6 block associated with\n   * the given project ID.\n   *\n   * @param request - The request {@link IPv6BlockApiCreateIPv6BlockRequest}\n   * @returns A Promise of IPv6Block\n   */\n  createIPv6Block = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalIPv6BlockApiCreateIPv6BlockRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/ipv6-block`\n  }, unmarshalIPv6Block);\n\n  /**\n   * Get a specific IPv6 block. Get the IPv6 block associated with the given ID.\n   *\n   * @param request - The request {@link IPv6BlockApiGetIPv6BlockRequest}\n   * @returns A Promise of IPv6Block\n   */\n  getIPv6Block = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/ipv6-block`,\n    urlParams: urlParams(['project_id', request.projectId])\n  }, unmarshalIPv6Block);\n\n  /**\n   * Update IPv6 block. Update DNS associated to IPv6 block. If DNS is used,\n   * minimum of 2 is necessary and maximum of 5 (no duplicate).\n   *\n   * @param request - The request {@link IPv6BlockApiUpdateIPv6BlockRequest}\n   * @returns A Promise of IPv6Block\n   */\n  updateIPv6Block = request => this.client.fetch({\n    body: JSON.stringify(marshalIPv6BlockApiUpdateIPv6BlockRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'PATCH',\n    path: `/dedibox/v1/ipv6-blocks/${validatePathParam('blockId', request.blockId)}`\n  }, unmarshalIPv6Block);\n\n  /**\n   * Delete IPv6 block. Delete IPv6 block subnet with the given ID.\n   *\n   * @param request - The request {@link IPv6BlockApiDeleteIPv6BlockRequest}\n   */\n  deleteIPv6Block = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/dedibox/v1/ipv6-blocks/${validatePathParam('blockId', request.blockId)}`\n  });\n\n  /**\n   * Create IPv6 block subnet. Create IPv6 block subnet for the given IP ID. /48\n   * could create subnet in /56 (quota link to your number of server). /56 could\n   * create subnet in /64 (quota link to your number of failover IP).\n   *\n   * @param request - The request\n   *   {@link IPv6BlockApiCreateIPv6BlockSubnetRequest}\n   * @returns A Promise of IPv6Block\n   */\n  createIPv6BlockSubnet = request => this.client.fetch({\n    body: JSON.stringify(marshalIPv6BlockApiCreateIPv6BlockSubnetRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/ipv6-blocks/${validatePathParam('blockId', request.blockId)}/subnets`\n  }, unmarshalIPv6Block);\n\n  /**\n   * List available IPv6 block subnets. List all available IPv6 block subnets\n   * for given IP ID.\n   *\n   * @param request - The request\n   *   {@link IPv6BlockApiListIPv6BlockSubnetsAvailableRequest}\n   * @returns A Promise of ListIPv6BlockSubnetsAvailableResponse\n   */\n  listIPv6BlockSubnetsAvailable = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/ipv6-blocks/${validatePathParam('blockId', request.blockId)}/subnets`\n  }, unmarshalListIPv6BlockSubnetsAvailableResponse);\n}\n\n/** Dedibox Phoenix RPN API. */\nclass RpnAPI extends API$z {\n  pageOfListRpnServerCapabilities = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpn/server-capabilities`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListRpnServerCapabilitiesResponse);\n  listRpnServerCapabilities = (request = {}) => enrichForPagination('servers', this.pageOfListRpnServerCapabilities, request);\n  getRpnStatus = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpn/status`,\n    urlParams: urlParams(['project_id', request.projectId], ['rpnv1_group_id', request.rpnv1GroupId], ['rpnv2_group_id', request.rpnv2GroupId])\n  }, unmarshalGetRpnStatusResponse);\n}\n\n/** Dedibox Phoenix RPN SAN API. */\nclass RpnSanAPI extends API$z {\n  pageOfListRpnSans = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpn-sans`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListRpnSansResponse);\n  listRpnSans = (request = {}) => enrichForPagination('rpnSans', this.pageOfListRpnSans, request);\n  getRpnSan = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpn-sans/${validatePathParam('rpnSanId', request.rpnSanId)}`\n  }, unmarshalRpnSan);\n\n  /**\n   * Waits for {@link RpnSan} to be in a final state.\n   *\n   * @param request - The request {@link RpnSanApiGetRpnSanRequest}\n   * @param options - The waiting options\n   * @returns A Promise of RpnSan\n   */\n  waitForRpnSan = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!RPN_SAN_TRANSIENT_STATUSES.includes(res.status))), this.getRpnSan, request, options);\n  deleteRpnSan = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/dedibox/v1/rpn-sans/${validatePathParam('rpnSanId', request.rpnSanId)}`\n  });\n  createRpnSan = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnSanApiCreateRpnSanRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/rpn-sans`\n  }, unmarshalService);\n  listIps = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpn-sans/${validatePathParam('rpnSanId', request.rpnSanId)}/ips`,\n    urlParams: urlParams(['type', request.type])\n  }, unmarshalListIpsResponse$2);\n  addIp = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnSanApiAddIpRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/rpn-sans/${validatePathParam('rpnSanId', request.rpnSanId)}/ips`\n  });\n  removeIp = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnSanApiRemoveIpRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'DELETE',\n    path: `/dedibox/v1/rpn-sans/${validatePathParam('rpnSanId', request.rpnSanId)}/ips`\n  });\n  listAvailableIps = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpn-sans/${validatePathParam('rpnSanId', request.rpnSanId)}/available-ips`,\n    urlParams: urlParams(['type', request.type])\n  }, unmarshalListIpsResponse$2);\n}\n\n/** Dedibox Phoenix RPN v1 API. */\nclass RpnV1API extends API$z {\n  pageOfListRpnGroups = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpnv1/groups`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListRpnGroupsResponse);\n  listRpnGroups = (request = {}) => enrichForPagination('rpnGroups', this.pageOfListRpnGroups, request);\n  getRpnGroup = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpnv1/groups/${validatePathParam('groupId', request.groupId)}`\n  }, unmarshalRpnGroup);\n  createRpnGroup = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnV1ApiCreateRpnGroupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/rpnv1/groups`\n  }, unmarshalRpnGroup);\n  deleteRpnGroup = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/dedibox/v1/rpnv1/groups/${validatePathParam('groupId', request.groupId)}`\n  });\n  updateRpnGroupName = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnV1ApiUpdateRpnGroupNameRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'PATCH',\n    path: `/dedibox/v1/rpnv1/groups/${validatePathParam('groupId', request.groupId)}`\n  }, unmarshalRpnGroup);\n  pageOfListRpnGroupMembers = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpnv1/groups/${validatePathParam('groupId', request.groupId)}/members`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListRpnGroupMembersResponse);\n  listRpnGroupMembers = request => enrichForPagination('members', this.pageOfListRpnGroupMembers, request);\n  rpnGroupInvite = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnV1ApiRpnGroupInviteRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/rpnv1/groups/${validatePathParam('groupId', request.groupId)}/invite`\n  });\n  leaveRpnGroup = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnV1ApiLeaveRpnGroupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/rpnv1/groups/${validatePathParam('groupId', request.groupId)}/leave`\n  });\n  addRpnGroupMembers = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnV1ApiAddRpnGroupMembersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/rpnv1/groups/${validatePathParam('groupId', request.groupId)}/members`\n  }, unmarshalRpnGroup);\n  deleteRpnGroupMembers = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnV1ApiDeleteRpnGroupMembersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'DELETE',\n    path: `/dedibox/v1/rpnv1/groups/${validatePathParam('groupId', request.groupId)}/members`\n  }, unmarshalRpnGroup);\n  pageOfListRpnCapableServers = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpnv1/capable-servers`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListRpnCapableServersResponse);\n  listRpnCapableServers = (request = {}) => enrichForPagination('servers', this.pageOfListRpnCapableServers, request);\n  pageOfListRpnCapableSanServers = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpnv1/capable-san-servers`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListRpnCapableSanServersResponse);\n  listRpnCapableSanServers = (request = {}) => enrichForPagination('sanServers', this.pageOfListRpnCapableSanServers, request);\n  pageOfListRpnInvites = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpnv1/invites`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalListRpnInvitesResponse);\n  listRpnInvites = (request = {}) => enrichForPagination('members', this.pageOfListRpnInvites, request);\n  acceptRpnInvite = request => this.client.fetch({\n    method: 'POST',\n    path: `/dedibox/v1/rpnv1/invites/${validatePathParam('memberId', request.memberId)}/accept`\n  });\n  refuseRpnInvite = request => this.client.fetch({\n    method: 'POST',\n    path: `/dedibox/v1/rpnv1/invites/${validatePathParam('memberId', request.memberId)}/refuse`\n  });\n}\n\n/** Dedibox Phoenix RPN v2 API. */\nclass RpnV2API extends API$z {\n  pageOfListRpnV2Groups = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpnv2/groups`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListRpnV2GroupsResponse);\n  listRpnV2Groups = (request = {}) => enrichForPagination('rpnGroups', this.pageOfListRpnV2Groups, request);\n  pageOfListRpnV2Members = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpnv2/groups/${validatePathParam('groupId', request.groupId)}/members`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['type', request.type])\n  }, unmarshalListRpnV2MembersResponse);\n  listRpnV2Members = request => enrichForPagination('members', this.pageOfListRpnV2Members, request);\n  getRpnV2Group = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpnv2/groups/${validatePathParam('groupId', request.groupId)}`\n  }, unmarshalRpnV2Group);\n\n  /**\n   * Waits for {@link RpnV2Group} to be in a final state.\n   *\n   * @param request - The request {@link RpnV2ApiGetRpnV2GroupRequest}\n   * @param options - The waiting options\n   * @returns A Promise of RpnV2Group\n   */\n  waitForRpnV2Group = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!RPN_V2_GROUP_TRANSIENT_STATUSES.includes(res.status))), this.getRpnV2Group, request, options);\n  createRpnV2Group = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnV2ApiCreateRpnV2GroupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/rpnv2/groups`\n  }, unmarshalRpnV2Group);\n  deleteRpnV2Group = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/dedibox/v1/rpnv2/groups/${validatePathParam('groupId', request.groupId)}`\n  });\n  updateRpnV2GroupName = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnV2ApiUpdateRpnV2GroupNameRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'PATCH',\n    path: `/dedibox/v1/rpnv2/groups/${validatePathParam('groupId', request.groupId)}`\n  }, unmarshalRpnV2Group);\n  addRpnV2Members = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnV2ApiAddRpnV2MembersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/rpnv2/groups/${validatePathParam('groupId', request.groupId)}/members`\n  });\n  deleteRpnV2Members = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnV2ApiDeleteRpnV2MembersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'DELETE',\n    path: `/dedibox/v1/rpnv2/groups/${validatePathParam('groupId', request.groupId)}/members`\n  });\n  pageOfListRpnV2CapableResources = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpnv2/groups/capable`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListRpnV2CapableResourcesResponse);\n  listRpnV2CapableResources = (request = {}) => enrichForPagination('servers', this.pageOfListRpnV2CapableResources, request);\n  pageOfListRpnV2GroupLogs = request => this.client.fetch({\n    method: 'GET',\n    path: `/dedibox/v1/rpnv2/groups/${validatePathParam('groupId', request.groupId)}/logs`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListRpnV2GroupLogsResponse);\n  listRpnV2GroupLogs = request => enrichForPagination('logs', this.pageOfListRpnV2GroupLogs, request);\n  updateRpnV2VlanForMembers = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnV2ApiUpdateRpnV2VlanForMembersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'PATCH',\n    path: `/dedibox/v1/rpnv2/groups/${validatePathParam('groupId', request.groupId)}/vlan`\n  });\n  enableRpnV2GroupCompatibility = request => this.client.fetch({\n    body: JSON.stringify(marshalRpnV2ApiEnableRpnV2GroupCompatibilityRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/rpnv2/groups/${validatePathParam('groupId', request.groupId)}/enable-compatibility`\n  });\n  disableRpnV2GroupCompatibility = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$q,\n    method: 'POST',\n    path: `/dedibox/v1/rpnv2/groups/${validatePathParam('groupId', request.groupId)}/disable-compatibility`\n  });\n}\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst AttachFailoverIPToMacAddressRequest = {\n  ipId: {\n    greaterThan: 0\n  }\n};\nconst AttachFailoverIPsRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst BillingApiDownloadInvoiceRequest = {\n  invoiceId: {\n    greaterThan: 0\n  }\n};\nconst BillingApiDownloadRefundRequest = {\n  refundId: {\n    greaterThan: 0\n  }\n};\nconst BillingApiGetInvoiceRequest = {\n  invoiceId: {\n    greaterThan: 0\n  }\n};\nconst BillingApiGetRefundRequest = {\n  refundId: {\n    greaterThan: 0\n  }\n};\nconst BillingApiListInvoicesRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst BillingApiListRefundsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst CancelServerInstallRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst DeleteFailoverIPRequest = {\n  ipId: {\n    greaterThan: 0\n  }\n};\nconst DeleteServerRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst DeleteServiceRequest = {\n  serviceId: {\n    greaterThan: 0\n  }\n};\nconst DetachFailoverIPFromMacAddressRequest = {\n  ipId: {\n    greaterThan: 0\n  }\n};\nconst GetBMCAccessRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst GetFailoverIPRequest = {\n  ipId: {\n    greaterThan: 0\n  }\n};\nconst GetOSRequest = {\n  osId: {\n    greaterThan: 0\n  },\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst GetOfferRequest = {\n  offerId: {\n    greaterThan: 0\n  }\n};\nconst GetOrderedServiceRequest = {\n  orderedServiceId: {\n    greaterThan: 0\n  }\n};\nconst GetRaidRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst GetRescueRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst GetServerBackupRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst GetServerInstallRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst GetServerRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst GetServiceRequest = {\n  serviceId: {\n    greaterThan: 0\n  }\n};\nconst IPv6Block = {\n  id: {\n    greaterThan: 0\n  }\n};\nconst IPv6BlockApiCreateIPv6BlockSubnetRequest = {\n  blockId: {\n    greaterThan: 0\n  }\n};\nconst IPv6BlockApiDeleteIPv6BlockRequest = {\n  blockId: {\n    greaterThan: 0\n  }\n};\nconst IPv6BlockApiListIPv6BlockSubnetsAvailableRequest = {\n  blockId: {\n    greaterThan: 0\n  }\n};\nconst IPv6BlockApiUpdateIPv6BlockRequest = {\n  blockId: {\n    greaterThan: 0\n  }\n};\nconst InstallServerRequest = {\n  osId: {\n    greaterThan: 0\n  },\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst ListFailoverIPsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListOSRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  },\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst ListOffersRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListServerDisksRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  },\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst ListServerEventsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  },\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst ListServersRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListServicesRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListSubscribableServerOptionsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  },\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst RebootServerRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst RpnApiListRpnServerCapabilitiesRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst RpnSanApiAddIpRequest = {\n  rpnSanId: {\n    greaterThan: 0\n  }\n};\nconst RpnSanApiDeleteRpnSanRequest = {\n  rpnSanId: {\n    greaterThan: 0\n  }\n};\nconst RpnSanApiGetRpnSanRequest = {\n  rpnSanId: {\n    greaterThan: 0\n  }\n};\nconst RpnSanApiListAvailableIpsRequest = {\n  rpnSanId: {\n    greaterThan: 0\n  }\n};\nconst RpnSanApiListIpsRequest = {\n  rpnSanId: {\n    greaterThan: 0\n  }\n};\nconst RpnSanApiListRpnSansRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst RpnSanApiRemoveIpRequest = {\n  rpnSanId: {\n    greaterThan: 0\n  }\n};\nconst RpnV1ApiAcceptRpnInviteRequest = {\n  memberId: {\n    greaterThan: 0\n  }\n};\nconst RpnV1ApiAddRpnGroupMembersRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV1ApiDeleteRpnGroupMembersRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV1ApiDeleteRpnGroupRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV1ApiGetRpnGroupRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV1ApiLeaveRpnGroupRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV1ApiListRpnCapableSanServersRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst RpnV1ApiListRpnCapableServersRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst RpnV1ApiListRpnGroupMembersRequest = {\n  groupId: {\n    greaterThan: 0\n  },\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst RpnV1ApiListRpnGroupsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst RpnV1ApiListRpnInvitesRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst RpnV1ApiRefuseRpnInviteRequest = {\n  memberId: {\n    greaterThan: 0\n  }\n};\nconst RpnV1ApiRpnGroupInviteRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV1ApiUpdateRpnGroupNameRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV2ApiAddRpnV2MembersRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV2ApiDeleteRpnV2GroupRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV2ApiDeleteRpnV2MembersRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV2ApiDisableRpnV2GroupCompatibilityRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV2ApiEnableRpnV2GroupCompatibilityRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV2ApiGetRpnV2GroupRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV2ApiListRpnV2CapableResourcesRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst RpnV2ApiListRpnV2GroupLogsRequest = {\n  groupId: {\n    greaterThan: 0\n  },\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst RpnV2ApiListRpnV2GroupsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst RpnV2ApiListRpnV2MembersRequest = {\n  groupId: {\n    greaterThan: 0\n  },\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst RpnV2ApiUpdateRpnV2GroupNameRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst RpnV2ApiUpdateRpnV2VlanForMembersRequest = {\n  groupId: {\n    greaterThan: 0\n  }\n};\nconst StartRescueRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst StartServerRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst StopBMCAccessRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst StopRescueRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst StopServerRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst SubscribeServerOptionRequest = {\n  optionId: {\n    greaterThan: 0\n  },\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst SubscribeStorageOptionsRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst UpdateRaidRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst UpdateReverseRequest = {\n  ipId: {\n    greaterThan: 0\n  }\n};\nconst UpdateServerBackupRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst UpdateServerRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\nconst UpdateServerTagsRequest = {\n  serverId: {\n    greaterThan: 0\n  }\n};\n\nvar validationRules_gen$c = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AttachFailoverIPToMacAddressRequest: AttachFailoverIPToMacAddressRequest,\n  AttachFailoverIPsRequest: AttachFailoverIPsRequest,\n  BillingApiDownloadInvoiceRequest: BillingApiDownloadInvoiceRequest,\n  BillingApiDownloadRefundRequest: BillingApiDownloadRefundRequest,\n  BillingApiGetInvoiceRequest: BillingApiGetInvoiceRequest,\n  BillingApiGetRefundRequest: BillingApiGetRefundRequest,\n  BillingApiListInvoicesRequest: BillingApiListInvoicesRequest,\n  BillingApiListRefundsRequest: BillingApiListRefundsRequest,\n  CancelServerInstallRequest: CancelServerInstallRequest,\n  DeleteFailoverIPRequest: DeleteFailoverIPRequest,\n  DeleteServerRequest: DeleteServerRequest,\n  DeleteServiceRequest: DeleteServiceRequest,\n  DetachFailoverIPFromMacAddressRequest: DetachFailoverIPFromMacAddressRequest,\n  GetBMCAccessRequest: GetBMCAccessRequest,\n  GetFailoverIPRequest: GetFailoverIPRequest,\n  GetOSRequest: GetOSRequest,\n  GetOfferRequest: GetOfferRequest,\n  GetOrderedServiceRequest: GetOrderedServiceRequest,\n  GetRaidRequest: GetRaidRequest,\n  GetRescueRequest: GetRescueRequest,\n  GetServerBackupRequest: GetServerBackupRequest,\n  GetServerInstallRequest: GetServerInstallRequest,\n  GetServerRequest: GetServerRequest,\n  GetServiceRequest: GetServiceRequest,\n  IPv6Block: IPv6Block,\n  IPv6BlockApiCreateIPv6BlockSubnetRequest: IPv6BlockApiCreateIPv6BlockSubnetRequest,\n  IPv6BlockApiDeleteIPv6BlockRequest: IPv6BlockApiDeleteIPv6BlockRequest,\n  IPv6BlockApiListIPv6BlockSubnetsAvailableRequest: IPv6BlockApiListIPv6BlockSubnetsAvailableRequest,\n  IPv6BlockApiUpdateIPv6BlockRequest: IPv6BlockApiUpdateIPv6BlockRequest,\n  InstallServerRequest: InstallServerRequest,\n  ListFailoverIPsRequest: ListFailoverIPsRequest,\n  ListOSRequest: ListOSRequest,\n  ListOffersRequest: ListOffersRequest,\n  ListServerDisksRequest: ListServerDisksRequest,\n  ListServerEventsRequest: ListServerEventsRequest,\n  ListServersRequest: ListServersRequest,\n  ListServicesRequest: ListServicesRequest,\n  ListSubscribableServerOptionsRequest: ListSubscribableServerOptionsRequest,\n  RebootServerRequest: RebootServerRequest,\n  RpnApiListRpnServerCapabilitiesRequest: RpnApiListRpnServerCapabilitiesRequest,\n  RpnSanApiAddIpRequest: RpnSanApiAddIpRequest,\n  RpnSanApiDeleteRpnSanRequest: RpnSanApiDeleteRpnSanRequest,\n  RpnSanApiGetRpnSanRequest: RpnSanApiGetRpnSanRequest,\n  RpnSanApiListAvailableIpsRequest: RpnSanApiListAvailableIpsRequest,\n  RpnSanApiListIpsRequest: RpnSanApiListIpsRequest,\n  RpnSanApiListRpnSansRequest: RpnSanApiListRpnSansRequest,\n  RpnSanApiRemoveIpRequest: RpnSanApiRemoveIpRequest,\n  RpnV1ApiAcceptRpnInviteRequest: RpnV1ApiAcceptRpnInviteRequest,\n  RpnV1ApiAddRpnGroupMembersRequest: RpnV1ApiAddRpnGroupMembersRequest,\n  RpnV1ApiDeleteRpnGroupMembersRequest: RpnV1ApiDeleteRpnGroupMembersRequest,\n  RpnV1ApiDeleteRpnGroupRequest: RpnV1ApiDeleteRpnGroupRequest,\n  RpnV1ApiGetRpnGroupRequest: RpnV1ApiGetRpnGroupRequest,\n  RpnV1ApiLeaveRpnGroupRequest: RpnV1ApiLeaveRpnGroupRequest,\n  RpnV1ApiListRpnCapableSanServersRequest: RpnV1ApiListRpnCapableSanServersRequest,\n  RpnV1ApiListRpnCapableServersRequest: RpnV1ApiListRpnCapableServersRequest,\n  RpnV1ApiListRpnGroupMembersRequest: RpnV1ApiListRpnGroupMembersRequest,\n  RpnV1ApiListRpnGroupsRequest: RpnV1ApiListRpnGroupsRequest,\n  RpnV1ApiListRpnInvitesRequest: RpnV1ApiListRpnInvitesRequest,\n  RpnV1ApiRefuseRpnInviteRequest: RpnV1ApiRefuseRpnInviteRequest,\n  RpnV1ApiRpnGroupInviteRequest: RpnV1ApiRpnGroupInviteRequest,\n  RpnV1ApiUpdateRpnGroupNameRequest: RpnV1ApiUpdateRpnGroupNameRequest,\n  RpnV2ApiAddRpnV2MembersRequest: RpnV2ApiAddRpnV2MembersRequest,\n  RpnV2ApiDeleteRpnV2GroupRequest: RpnV2ApiDeleteRpnV2GroupRequest,\n  RpnV2ApiDeleteRpnV2MembersRequest: RpnV2ApiDeleteRpnV2MembersRequest,\n  RpnV2ApiDisableRpnV2GroupCompatibilityRequest: RpnV2ApiDisableRpnV2GroupCompatibilityRequest,\n  RpnV2ApiEnableRpnV2GroupCompatibilityRequest: RpnV2ApiEnableRpnV2GroupCompatibilityRequest,\n  RpnV2ApiGetRpnV2GroupRequest: RpnV2ApiGetRpnV2GroupRequest,\n  RpnV2ApiListRpnV2CapableResourcesRequest: RpnV2ApiListRpnV2CapableResourcesRequest,\n  RpnV2ApiListRpnV2GroupLogsRequest: RpnV2ApiListRpnV2GroupLogsRequest,\n  RpnV2ApiListRpnV2GroupsRequest: RpnV2ApiListRpnV2GroupsRequest,\n  RpnV2ApiListRpnV2MembersRequest: RpnV2ApiListRpnV2MembersRequest,\n  RpnV2ApiUpdateRpnV2GroupNameRequest: RpnV2ApiUpdateRpnV2GroupNameRequest,\n  RpnV2ApiUpdateRpnV2VlanForMembersRequest: RpnV2ApiUpdateRpnV2VlanForMembersRequest,\n  StartRescueRequest: StartRescueRequest,\n  StartServerRequest: StartServerRequest,\n  StopBMCAccessRequest: StopBMCAccessRequest,\n  StopRescueRequest: StopRescueRequest,\n  StopServerRequest: StopServerRequest,\n  SubscribeServerOptionRequest: SubscribeServerOptionRequest,\n  SubscribeStorageOptionsRequest: SubscribeStorageOptionsRequest,\n  UpdateRaidRequest: UpdateRaidRequest,\n  UpdateReverseRequest: UpdateReverseRequest,\n  UpdateServerBackupRequest: UpdateServerBackupRequest,\n  UpdateServerRequest: UpdateServerRequest,\n  UpdateServerTagsRequest: UpdateServerTagsRequest\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$p = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$q,\n  BMC_ACCESS_TRANSIENT_STATUSES: BMC_ACCESS_TRANSIENT_STATUSES,\n  BillingAPI: BillingAPI,\n  IPv6BlockAPI: IPv6BlockAPI,\n  I_PV6_BLOCK_DELEGATION_TRANSIENT_STATUSES: I_PV6_BLOCK_DELEGATION_TRANSIENT_STATUSES,\n  RPN_GROUP_MEMBER_TRANSIENT_STATUSES: RPN_GROUP_MEMBER_TRANSIENT_STATUSES,\n  RPN_SAN_TRANSIENT_STATUSES: RPN_SAN_TRANSIENT_STATUSES,\n  RPN_V2_GROUP_TRANSIENT_STATUSES: RPN_V2_GROUP_TRANSIENT_STATUSES,\n  RPN_V2_MEMBER_TRANSIENT_STATUSES: RPN_V2_MEMBER_TRANSIENT_STATUSES,\n  RpnAPI: RpnAPI,\n  RpnSanAPI: RpnSanAPI,\n  RpnV1API: RpnV1API,\n  RpnV2API: RpnV2API,\n  SERVER_INSTALL_TRANSIENT_STATUSES: SERVER_INSTALL_TRANSIENT_STATUSES,\n  SERVER_TRANSIENT_STATUSES: SERVER_TRANSIENT_STATUSES$1,\n  SERVICE_PROVISIONING_TRANSIENT_STATUSES: SERVICE_PROVISIONING_TRANSIENT_STATUSES,\n  ValidationRules: validationRules_gen$c\n});\n\nvar index$s = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1: index_gen$p\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link InstanceLogStatus}. */\nconst INSTANCE_LOG_TRANSIENT_STATUSES$1 = ['creating'];\n\n/** Lists transient statutes of the enum {@link InstanceStatus}. */\nconst INSTANCE_TRANSIENT_STATUSES$2 = ['provisioning', 'configuring', 'deleting', 'autohealing', 'initializing', 'backuping', 'snapshotting', 'restarting'];\n\n/** Lists transient statutes of the enum {@link MaintenanceStatus}. */\nconst MAINTENANCE_TRANSIENT_STATUSES$1 = ['ongoing'];\n\n/** Lists transient statutes of the enum {@link ReadReplicaStatus}. */\nconst READ_REPLICA_TRANSIENT_STATUSES$1 = ['provisioning', 'initializing', 'deleting', 'configuring', 'promoting'];\n\n/** Lists transient statutes of the enum {@link SnapshotStatus}. */\nconst SNAPSHOT_TRANSIENT_STATUSES$2 = ['creating', 'restoring', 'deleting'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalEndpointDirectAccessDetails$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EndpointDirectAccessDetails' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalEndpointLoadBalancerDetails$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EndpointLoadBalancerDetails' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalEndpointPrivateNetworkDetails$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EndpointPrivateNetworkDetails' failed as data isn't a dictionary.`);\n  }\n  return {\n    privateNetworkId: data.private_network_id,\n    serviceIp: data.service_ip,\n    zone: data.zone\n  };\n};\nconst unmarshalEndpoint$3 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Endpoint' failed as data isn't a dictionary.`);\n  }\n  return {\n    directAccess: data.direct_access ? unmarshalEndpointDirectAccessDetails$1(data.direct_access) : undefined,\n    hostname: data.hostname,\n    id: data.id,\n    ip: data.ip,\n    loadBalancer: data.load_balancer ? unmarshalEndpointLoadBalancerDetails$1(data.load_balancer) : undefined,\n    name: data.name,\n    port: data.port,\n    privateNetwork: data.private_network ? unmarshalEndpointPrivateNetworkDetails$2(data.private_network) : undefined\n  };\n};\nconst unmarshalMaintenance$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Maintenance' failed as data isn't a dictionary.`);\n  }\n  return {\n    closedAt: unmarshalDate(data.closed_at),\n    forcedAt: unmarshalDate(data.forced_at),\n    reason: data.reason,\n    startsAt: unmarshalDate(data.starts_at),\n    status: data.status,\n    stopsAt: unmarshalDate(data.stops_at)\n  };\n};\nconst unmarshalReadReplica$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ReadReplica' failed as data isn't a dictionary.`);\n  }\n  return {\n    endpoints: unmarshalArrayOfObject(data.endpoints, unmarshalEndpoint$3),\n    id: data.id,\n    region: data.region,\n    sameZone: data.same_zone,\n    status: data.status\n  };\n};\nconst unmarshalDatabase$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Database' failed as data isn't a dictionary.`);\n  }\n  return {\n    managed: data.managed,\n    name: data.name,\n    owner: data.owner,\n    size: data.size\n  };\n};\nconst unmarshalInstanceLog$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'InstanceLog' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    downloadUrl: data.download_url,\n    expiresAt: unmarshalDate(data.expires_at),\n    id: data.id,\n    nodeName: data.node_name,\n    region: data.region,\n    status: data.status\n  };\n};\nconst unmarshalBackupSchedule$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'BackupSchedule' failed as data isn't a dictionary.`);\n  }\n  return {\n    disabled: data.disabled,\n    frequency: data.frequency,\n    nextRunAt: unmarshalDate(data.next_run_at),\n    retention: data.retention\n  };\n};\nconst unmarshalInstanceSetting$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'InstanceSetting' failed as data isn't a dictionary.`);\n  }\n  return {\n    name: data.name,\n    value: data.value\n  };\n};\nconst unmarshalLogsPolicy$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'LogsPolicy' failed as data isn't a dictionary.`);\n  }\n  return {\n    maxAgeRetention: data.max_age_retention,\n    totalDiskRetention: data.total_disk_retention\n  };\n};\nconst unmarshalUpgradableVersion$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UpgradableVersion' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    minorVersion: data.minor_version,\n    name: data.name,\n    version: data.version\n  };\n};\nconst unmarshalVolume$3 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Volume' failed as data isn't a dictionary.`);\n  }\n  return {\n    class: data.class,\n    size: data.size,\n    type: data.type\n  };\n};\nconst unmarshalInstance$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Instance' failed as data isn't a dictionary.`);\n  }\n  return {\n    backupSameRegion: data.backup_same_region,\n    backupSchedule: data.backup_schedule ? unmarshalBackupSchedule$1(data.backup_schedule) : undefined,\n    createdAt: unmarshalDate(data.created_at),\n    endpoint: data.endpoint ? unmarshalEndpoint$3(data.endpoint) : undefined,\n    endpoints: unmarshalArrayOfObject(data.endpoints, unmarshalEndpoint$3),\n    engine: data.engine,\n    id: data.id,\n    initSettings: unmarshalArrayOfObject(data.init_settings, unmarshalInstanceSetting$1),\n    isHaCluster: data.is_ha_cluster,\n    logsPolicy: data.logs_policy ? unmarshalLogsPolicy$1(data.logs_policy) : undefined,\n    maintenances: unmarshalArrayOfObject(data.maintenances, unmarshalMaintenance$1),\n    name: data.name,\n    nodeType: data.node_type,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    readReplicas: unmarshalArrayOfObject(data.read_replicas, unmarshalReadReplica$1),\n    region: data.region,\n    settings: unmarshalArrayOfObject(data.settings, unmarshalInstanceSetting$1),\n    status: data.status,\n    tags: data.tags,\n    upgradableVersion: unmarshalArrayOfObject(data.upgradable_version, unmarshalUpgradableVersion$1),\n    volume: data.volume ? unmarshalVolume$3(data.volume) : undefined\n  };\n};\nconst unmarshalPrivilege$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Privilege' failed as data isn't a dictionary.`);\n  }\n  return {\n    databaseName: data.database_name,\n    permission: data.permission,\n    userName: data.user_name\n  };\n};\nconst unmarshalSnapshotVolumeType$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SnapshotVolumeType' failed as data isn't a dictionary.`);\n  }\n  return {\n    class: data.class,\n    type: data.type\n  };\n};\nconst unmarshalSnapshot$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Snapshot' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    expiresAt: unmarshalDate(data.expires_at),\n    id: data.id,\n    instanceId: data.instance_id,\n    instanceName: data.instance_name,\n    name: data.name,\n    nodeType: data.node_type,\n    region: data.region,\n    size: data.size,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at),\n    volumeType: data.volume_type ? unmarshalSnapshotVolumeType$1(data.volume_type) : undefined\n  };\n};\nconst unmarshalUser$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'User' failed as data isn't a dictionary.`);\n  }\n  return {\n    isAdmin: data.is_admin,\n    name: data.name\n  };\n};\nconst unmarshalACLRule$3 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ACLRule' failed as data isn't a dictionary.`);\n  }\n  return {\n    action: data.action,\n    description: data.description,\n    direction: data.direction,\n    ip: data.ip,\n    port: data.port,\n    protocol: data.protocol\n  };\n};\nconst unmarshalAddInstanceACLRulesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AddInstanceACLRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalACLRule$3)\n  };\n};\nconst unmarshalAddInstanceSettingsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AddInstanceSettingsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    settings: unmarshalArrayOfObject(data.settings, unmarshalInstanceSetting$1)\n  };\n};\nconst unmarshalDeleteInstanceACLRulesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DeleteInstanceACLRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalACLRule$3)\n  };\n};\nconst unmarshalDeleteInstanceSettingsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DeleteInstanceSettingsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    settings: unmarshalArrayOfObject(data.settings, unmarshalInstanceSetting$1)\n  };\n};\nconst unmarshalInstanceMetrics$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'InstanceMetrics' failed as data isn't a dictionary.`);\n  }\n  return {\n    timeseries: unmarshalArrayOfObject(data.timeseries, unmarshalTimeSeries)\n  };\n};\nconst unmarshalEngineSetting$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EngineSetting' failed as data isn't a dictionary.`);\n  }\n  return {\n    defaultValue: data.default_value,\n    description: data.description,\n    floatMax: data.float_max,\n    floatMin: data.float_min,\n    hotConfigurable: data.hot_configurable,\n    intMax: data.int_max,\n    intMin: data.int_min,\n    name: data.name,\n    propertyType: data.property_type,\n    stringConstraint: data.string_constraint,\n    unit: data.unit\n  };\n};\nconst unmarshalEngineVersion$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EngineVersion' failed as data isn't a dictionary.`);\n  }\n  return {\n    availableInitSettings: unmarshalArrayOfObject(data.available_init_settings, unmarshalEngineSetting$1),\n    availableSettings: unmarshalArrayOfObject(data.available_settings, unmarshalEngineSetting$1),\n    beta: data.beta,\n    disabled: data.disabled,\n    endOfLife: unmarshalDate(data.end_of_life),\n    name: data.name,\n    version: data.version\n  };\n};\nconst unmarshalDatabaseEngine$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DatabaseEngine' failed as data isn't a dictionary.`);\n  }\n  return {\n    logoUrl: data.logo_url,\n    name: data.name,\n    region: data.region,\n    versions: unmarshalArrayOfObject(data.versions, unmarshalEngineVersion$1)\n  };\n};\nconst unmarshalListDatabaseEnginesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDatabaseEnginesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    engines: unmarshalArrayOfObject(data.engines, unmarshalDatabaseEngine$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListDatabasesResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDatabasesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    databases: unmarshalArrayOfObject(data.databases, unmarshalDatabase$2),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListInstanceACLRulesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListInstanceACLRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalACLRule$3),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListInstanceLogsDetailsResponseInstanceLogDetail$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListInstanceLogsDetailsResponseInstanceLogDetail' failed as data isn't a dictionary.`);\n  }\n  return {\n    logName: data.log_name,\n    size: data.size\n  };\n};\nconst unmarshalListInstanceLogsDetailsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListInstanceLogsDetailsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    details: unmarshalArrayOfObject(data.details, unmarshalListInstanceLogsDetailsResponseInstanceLogDetail$1)\n  };\n};\nconst unmarshalListInstanceLogsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListInstanceLogsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    instanceLogs: unmarshalArrayOfObject(data.instance_logs, unmarshalInstanceLog$1)\n  };\n};\nconst unmarshalListInstancesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListInstancesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    instances: unmarshalArrayOfObject(data.instances, unmarshalInstance$2),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalNodeTypeVolumeConstraintSizes$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'NodeTypeVolumeConstraintSizes' failed as data isn't a dictionary.`);\n  }\n  return {\n    maxSize: data.max_size,\n    minSize: data.min_size\n  };\n};\nconst unmarshalNodeTypeVolumeType$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'NodeTypeVolumeType' failed as data isn't a dictionary.`);\n  }\n  return {\n    chunkSize: data.chunk_size,\n    class: data.class,\n    description: data.description,\n    maxSize: data.max_size,\n    minSize: data.min_size,\n    type: data.type\n  };\n};\nconst unmarshalNodeType$3 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'NodeType' failed as data isn't a dictionary.`);\n  }\n  return {\n    availableVolumeTypes: unmarshalArrayOfObject(data.available_volume_types, unmarshalNodeTypeVolumeType$1),\n    beta: data.beta,\n    description: data.description,\n    disabled: data.disabled,\n    generation: data.generation,\n    instanceRange: data.instance_range,\n    isBssdCompatible: data.is_bssd_compatible,\n    isHaRequired: data.is_ha_required,\n    memory: data.memory,\n    name: data.name,\n    region: data.region,\n    stockStatus: data.stock_status,\n    vcpus: data.vcpus,\n    volumeConstraint: data.volume_constraint ? unmarshalNodeTypeVolumeConstraintSizes$1(data.volume_constraint) : undefined\n  };\n};\nconst unmarshalListNodeTypesResponse$3 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListNodeTypesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    nodeTypes: unmarshalArrayOfObject(data.node_types, unmarshalNodeType$3),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListPrivilegesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListPrivilegesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    privileges: unmarshalArrayOfObject(data.privileges, unmarshalPrivilege$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSnapshotsResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSnapshotsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    snapshots: unmarshalArrayOfObject(data.snapshots, unmarshalSnapshot$2),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListUsersResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListUsersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    users: unmarshalArrayOfObject(data.users, unmarshalUser$2)\n  };\n};\nconst unmarshalSetInstanceACLRulesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetInstanceACLRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalACLRule$3)\n  };\n};\nconst unmarshalSetInstanceSettingsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetInstanceSettingsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    settings: unmarshalArrayOfObject(data.settings, unmarshalInstanceSetting$1)\n  };\n};\nconst marshalACLRuleRequest$2 = (request, defaults) => ({\n  description: request.description,\n  ip: request.ip\n});\nconst marshalAddInstanceACLRulesRequest$1 = (request, defaults) => ({\n  rules: request.rules.map(elt => marshalACLRuleRequest$2(elt))\n});\nconst marshalInstanceSetting$1 = (request, defaults) => ({\n  name: request.name,\n  value: request.value\n});\nconst marshalAddInstanceSettingsRequest$1 = (request, defaults) => ({\n  settings: request.settings.map(elt => marshalInstanceSetting$1(elt))\n});\nconst marshalCloneInstanceRequest$1 = (request, defaults) => ({\n  name: request.name,\n  node_type: request.nodeType\n});\nconst marshalCreateDatabaseRequest$2 = (request, defaults) => ({\n  name: request.name\n});\nconst marshalEndpointSpecPrivateNetworkIpamConfig$1 = (request, defaults) => ({});\nconst marshalEndpointSpecLoadBalancer$1 = (request, defaults) => ({});\nconst marshalEndpointSpecPrivateNetwork$2 = (request, defaults) => ({\n  private_network_id: request.privateNetworkId,\n  ...resolveOneOf([{\n    param: 'service_ip',\n    value: request.serviceIp\n  }, {\n    param: 'ipam_config',\n    value: request.ipamConfig !== undefined ? marshalEndpointSpecPrivateNetworkIpamConfig$1(request.ipamConfig) : undefined\n  }])\n});\nconst marshalEndpointSpec$3 = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'load_balancer',\n    value: request.loadBalancer !== undefined ? marshalEndpointSpecLoadBalancer$1(request.loadBalancer) : undefined\n  }, {\n    param: 'private_network',\n    value: request.privateNetwork !== undefined ? marshalEndpointSpecPrivateNetwork$2(request.privateNetwork) : undefined\n  }])\n});\nconst marshalCreateEndpointRequest$2 = (request, defaults) => ({\n  endpoint_spec: request.endpointSpec !== undefined ? marshalEndpointSpec$3(request.endpointSpec) : undefined\n});\nconst marshalCreateInstanceFromSnapshotRequest$1 = (request, defaults) => ({\n  instance_name: request.instanceName,\n  is_ha_cluster: request.isHaCluster,\n  node_type: request.nodeType\n});\nconst marshalCreateInstanceRequest$1 = (request, defaults) => ({\n  backup_same_region: request.backupSameRegion,\n  disable_backup: request.disableBackup,\n  engine: request.engine,\n  init_endpoints: request.initEndpoints !== undefined ? request.initEndpoints.map(elt => marshalEndpointSpec$3(elt)) : undefined,\n  init_settings: request.initSettings !== undefined ? request.initSettings.map(elt => marshalInstanceSetting$1(elt)) : undefined,\n  is_ha_cluster: request.isHaCluster,\n  name: request.name || randomName('ins'),\n  node_type: request.nodeType,\n  password: request.password,\n  tags: request.tags,\n  user_name: request.userName,\n  volume_size: request.volumeSize,\n  volume_type: request.volumeType,\n  ...resolveOneOf([{\n    default: defaults.defaultOrganizationId,\n    param: 'organization_id',\n    value: request.organizationId\n  }, {\n    default: defaults.defaultProjectId,\n    param: 'project_id',\n    value: request.projectId\n  }])\n});\nconst marshalReadReplicaEndpointSpecPrivateNetworkIpamConfig$1 = (request, defaults) => ({});\nconst marshalReadReplicaEndpointSpecDirectAccess$1 = (request, defaults) => ({});\nconst marshalReadReplicaEndpointSpecPrivateNetwork$1 = (request, defaults) => ({\n  private_network_id: request.privateNetworkId,\n  ...resolveOneOf([{\n    param: 'service_ip',\n    value: request.serviceIp\n  }, {\n    param: 'ipam_config',\n    value: request.ipamConfig !== undefined ? marshalReadReplicaEndpointSpecPrivateNetworkIpamConfig$1(request.ipamConfig) : undefined\n  }])\n});\nconst marshalReadReplicaEndpointSpec$1 = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'direct_access',\n    value: request.directAccess !== undefined ? marshalReadReplicaEndpointSpecDirectAccess$1(request.directAccess) : undefined\n  }, {\n    param: 'private_network',\n    value: request.privateNetwork !== undefined ? marshalReadReplicaEndpointSpecPrivateNetwork$1(request.privateNetwork) : undefined\n  }])\n});\nconst marshalCreateReadReplicaEndpointRequest$1 = (request, defaults) => ({\n  endpoint_spec: request.endpointSpec.map(elt => marshalReadReplicaEndpointSpec$1(elt))\n});\nconst marshalCreateReadReplicaRequest$1 = (request, defaults) => ({\n  endpoint_spec: request.endpointSpec !== undefined ? request.endpointSpec.map(elt => marshalReadReplicaEndpointSpec$1(elt)) : undefined,\n  instance_id: request.instanceId,\n  same_zone: request.sameZone\n});\nconst marshalCreateSnapshotRequest$2 = (request, defaults) => ({\n  expires_at: request.expiresAt,\n  name: request.name || randomName('snp')\n});\nconst marshalCreateUserRequest$2 = (request, defaults) => ({\n  is_admin: request.isAdmin,\n  name: request.name,\n  password: request.password\n});\nconst marshalDeleteInstanceACLRulesRequest$1 = (request, defaults) => ({\n  acl_rule_ips: request.aclRuleIps\n});\nconst marshalDeleteInstanceSettingsRequest$1 = (request, defaults) => ({\n  setting_names: request.settingNames\n});\nconst marshalMigrateEndpointRequest$1 = (request, defaults) => ({\n  instance_id: request.instanceId\n});\nconst marshalPurgeInstanceLogsRequest$1 = (request, defaults) => ({\n  log_name: request.logName\n});\nconst marshalSetInstanceACLRulesRequest$1 = (request, defaults) => ({\n  rules: request.rules.map(elt => marshalACLRuleRequest$2(elt))\n});\nconst marshalSetInstanceSettingsRequest$1 = (request, defaults) => ({\n  settings: request.settings.map(elt => marshalInstanceSetting$1(elt))\n});\nconst marshalSetPrivilegeRequest$1 = (request, defaults) => ({\n  database_name: request.databaseName,\n  permission: request.permission,\n  user_name: request.userName\n});\nconst marshalLogsPolicy$1 = (request, defaults) => ({\n  max_age_retention: request.maxAgeRetention,\n  total_disk_retention: request.totalDiskRetention\n});\nconst marshalUpdateInstanceRequest$1 = (request, defaults) => ({\n  backup_same_region: request.backupSameRegion,\n  backup_schedule_frequency: request.backupScheduleFrequency,\n  backup_schedule_retention: request.backupScheduleRetention,\n  backup_schedule_start_hour: request.backupScheduleStartHour,\n  is_backup_schedule_disabled: request.isBackupScheduleDisabled,\n  logs_policy: request.logsPolicy !== undefined ? marshalLogsPolicy$1(request.logsPolicy) : undefined,\n  name: request.name,\n  tags: request.tags\n});\nconst marshalUpdateSnapshotRequest$2 = (request, defaults) => ({\n  expires_at: request.expiresAt,\n  name: request.name\n});\nconst marshalUpdateUserRequest$2 = (request, defaults) => ({\n  is_admin: request.isAdmin,\n  password: request.password\n});\nconst marshalUpgradeInstanceRequestMajorUpgradeWorkflow$1 = (request, defaults) => ({\n  upgradable_version_id: request.upgradableVersionId,\n  with_endpoints: request.withEndpoints\n});\nconst marshalUpgradeInstanceRequest$1 = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'node_type',\n    value: request.nodeType\n  }, {\n    param: 'enable_ha',\n    value: request.enableHa\n  }, {\n    param: 'volume_size',\n    value: request.volumeSize\n  }, {\n    param: 'volume_type',\n    value: request.volumeType\n  }, {\n    param: 'upgradable_version_id',\n    value: request.upgradableVersionId\n  }, {\n    param: 'major_upgrade_workflow',\n    value: request.majorUpgradeWorkflow !== undefined ? marshalUpgradeInstanceRequestMajorUpgradeWorkflow$1(request.majorUpgradeWorkflow) : undefined\n  }])\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$p = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Managed Document Databases API. */\nlet API$p = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n  pageOfListDatabaseEngines = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/database-engines`,\n    urlParams: urlParams(['name', request.name], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['version', request.version])\n  }, unmarshalListDatabaseEnginesResponse$1);\n\n  /**\n   * List available database engines. List the FerretDB database engines\n   * available at Scaleway.\n   *\n   * @param request - The request {@link ListDatabaseEnginesRequest}\n   * @returns A Promise of ListDatabaseEnginesResponse\n   */\n  listDatabaseEngines = (request = {}) => enrichForPagination('engines', this.pageOfListDatabaseEngines, request);\n  pageOfListNodeTypes = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/node-types`,\n    urlParams: urlParams(['include_disabled_types', request.includeDisabledTypes], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListNodeTypesResponse$3);\n\n  /**\n   * List available node types. List all available node types. By default, the\n   * node types returned in the list are ordered by creation date in ascending\n   * order, though this can be modified via the `order_by` field.\n   *\n   * @param request - The request {@link ListNodeTypesRequest}\n   * @returns A Promise of ListNodeTypesResponse\n   */\n  listNodeTypes = request => enrichForPagination('nodeTypes', this.pageOfListNodeTypes, request);\n\n  /**\n   * Upgrade a Database Instance. Upgrade your current Database Instance\n   * specifications like node type, high availability, volume, or the database\n   * engine version. Note that upon upgrade the `enable_ha` parameter can only\n   * be set to `true`.\n   *\n   * @param request - The request {@link UpgradeInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  upgradeInstance = request => this.client.fetch({\n    body: JSON.stringify(marshalUpgradeInstanceRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/upgrade`\n  }, unmarshalInstance$2);\n  pageOfListInstances = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['tags', request.tags])\n  }, unmarshalListInstancesResponse$1);\n\n  /**\n   * List Database Instances. List all Database Instances in the specified\n   * region, for a given Scaleway Organization or Scaleway Project. By default,\n   * the Database Instances returned in the list are ordered by creation date in\n   * ascending order, though this can be modified via the order_by field. You\n   * can define additional parameters for your query, such as `tags` and `name`.\n   * For the `name` parameter, the value you include will be checked against the\n   * whole name string to see if it includes the string you put in the\n   * parameter.\n   *\n   * @param request - The request {@link ListInstancesRequest}\n   * @returns A Promise of ListInstancesResponse\n   */\n  listInstances = (request = {}) => enrichForPagination('instances', this.pageOfListInstances, request);\n\n  /**\n   * Get a Database Instance. Retrieve information about a given Database\n   * Instance, specified by the `region` and `instance_id` parameters. Its full\n   * details, including name, status, IP address and port, are returned in the\n   * response object.\n   *\n   * @param request - The request {@link GetInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  getInstance = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}`\n  }, unmarshalInstance$2);\n\n  /**\n   * Waits for {@link Instance} to be in a final state.\n   *\n   * @param request - The request {@link GetInstanceRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Instance\n   */\n  waitForInstance = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!INSTANCE_TRANSIENT_STATUSES$2.includes(res.status))), this.getInstance, request, options);\n\n  /**\n   * Create a Database Instance. Create a new Database Instance. You must set\n   * the `engine`, `user_name`, `password` and `node_type` parameters.\n   * Optionally, you can specify the volume type and size.\n   *\n   * @param request - The request {@link CreateInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  createInstance = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateInstanceRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances`\n  }, unmarshalInstance$2);\n\n  /**\n   * Update a Database Instance. Update the parameters of a Database Instance,\n   * including name, tags and backup schedule details.\n   *\n   * @param request - The request {@link UpdateInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  updateInstance = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateInstanceRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'PATCH',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}`\n  }, unmarshalInstance$2);\n\n  /**\n   * Delete a Database Instance. Delete a given Database Instance, specified by\n   * the `region` and `instance_id` parameters. Deleting a Database Instance is\n   * permanent, and cannot be undone. Note that upon deletion all your data will\n   * be lost.\n   *\n   * @param request - The request {@link DeleteInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  deleteInstance = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}`\n  }, unmarshalInstance$2);\n\n  /**\n   * Clone a Database Instance. Clone a given Database Instance, specified by\n   * the `region` and `instance_id` parameters. The clone feature allows you to\n   * create a new Database Instance from an existing one. The clone includes all\n   * existing databases, users and permissions. You can create a clone on a\n   * Database Instance bigger than your current one.\n   *\n   * @param request - The request {@link CloneInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  cloneInstance = request => this.client.fetch({\n    body: JSON.stringify(marshalCloneInstanceRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/clone`\n  }, unmarshalInstance$2);\n\n  /**\n   * Restart Database Instance. Restart a given Database Instance, specified by\n   * the `region` and `instance_id` parameters. The status of the Database\n   * Instance returned in the response.\n   *\n   * @param request - The request {@link RestartInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  restartInstance = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/restart`\n  }, unmarshalInstance$2);\n\n  /**\n   * Get the TLS certificate of a Database Instance. Retrieve information about\n   * the TLS certificate of a given Database Instance. Details like name and\n   * content are returned in the response.\n   *\n   * @param request - The request {@link GetInstanceCertificateRequest}\n   * @returns A Promise of Blob\n   */\n  getInstanceCertificate = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/certificate`,\n    urlParams: urlParams(['dl', 1]),\n    responseType: 'blob'\n  });\n\n  /**\n   * Renew the TLS certificate of a Database Instance. Renew a TLS for a\n   * Database Instance. Renewing a certificate means that you will not be able\n   * to connect to your Database Instance using the previous certificate. You\n   * will also need to download and update the new certificate for all database\n   * clients.\n   *\n   * @param request - The request {@link RenewInstanceCertificateRequest}\n   */\n  renewInstanceCertificate = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/renew-certificate`\n  });\n\n  /**\n   * Get Database Instance metrics. Retrieve the time series metrics of a given\n   * Database Instance. You can define the period from which to retrieve metrics\n   * by specifying the `start_date` and `end_date`.\n   *\n   * @param request - The request {@link GetInstanceMetricsRequest}\n   * @returns A Promise of InstanceMetrics\n   */\n  getInstanceMetrics = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/metrics`,\n    urlParams: urlParams(['end_date', request.endDate], ['metric_name', request.metricName], ['start_date', request.startDate])\n  }, unmarshalInstanceMetrics$1);\n\n  /**\n   * Create a Read Replica. Create a new Read Replica of a Database Instance.\n   * You must specify the `region` and the `instance_id`. You can only create a\n   * maximum of 3 Read Replicas per Database Instance.\n   *\n   * @param request - The request {@link CreateReadReplicaRequest}\n   * @returns A Promise of ReadReplica\n   */\n  createReadReplica = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateReadReplicaRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/read-replicas`\n  }, unmarshalReadReplica$1);\n\n  /**\n   * Get a Read Replica. Retrieve information about a Database Instance Read\n   * Replica. Full details about the Read Replica, like `endpoints`, `status`\n   * and `region` are returned in the response.\n   *\n   * @param request - The request {@link GetReadReplicaRequest}\n   * @returns A Promise of ReadReplica\n   */\n  getReadReplica = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/read-replicas/${validatePathParam('readReplicaId', request.readReplicaId)}`\n  }, unmarshalReadReplica$1);\n\n  /**\n   * Waits for {@link ReadReplica} to be in a final state.\n   *\n   * @param request - The request {@link GetReadReplicaRequest}\n   * @param options - The waiting options\n   * @returns A Promise of ReadReplica\n   */\n  waitForReadReplica = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!READ_REPLICA_TRANSIENT_STATUSES$1.includes(res.status))), this.getReadReplica, request, options);\n\n  /**\n   * Delete a Read Replica. Delete a Read Replica of a Database Instance. You\n   * must specify the `region` and `read_replica_id` parameters of the Read\n   * Replica you want to delete.\n   *\n   * @param request - The request {@link DeleteReadReplicaRequest}\n   * @returns A Promise of ReadReplica\n   */\n  deleteReadReplica = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/read-replicas/${validatePathParam('readReplicaId', request.readReplicaId)}`\n  }, unmarshalReadReplica$1);\n\n  /**\n   * Resync a Read Replica. When you resync a Read Replica, first it is reset,\n   * then its data is resynchronized from the primary node. Your Read Replica\n   * remains unavailable during the resync process. The duration of this process\n   * is proportional to the size of your Database Instance. The configured\n   * endpoints do not change.\n   *\n   * @param request - The request {@link ResetReadReplicaRequest}\n   * @returns A Promise of ReadReplica\n   */\n  resetReadReplica = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/read-replicas/${validatePathParam('readReplicaId', request.readReplicaId)}/reset`\n  }, unmarshalReadReplica$1);\n\n  /**\n   * Promote a Read Replica. Promote a Read Replica to Database Instance\n   * automatically.\n   *\n   * @param request - The request {@link PromoteReadReplicaRequest}\n   * @returns A Promise of Instance\n   */\n  promoteReadReplica = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/read-replicas/${validatePathParam('readReplicaId', request.readReplicaId)}/promote`\n  }, unmarshalInstance$2);\n\n  /**\n   * Create an endpoint for a Read Replica. Create a new endpoint for a Read\n   * Replica. Read Replicas can have at most one direct access and one Private\n   * Network endpoint.\n   *\n   * @param request - The request {@link CreateReadReplicaEndpointRequest}\n   * @returns A Promise of ReadReplica\n   */\n  createReadReplicaEndpoint = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateReadReplicaEndpointRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/read-replicas/${validatePathParam('readReplicaId', request.readReplicaId)}/endpoints`\n  }, unmarshalReadReplica$1);\n\n  /**\n   * List available logs of a Database Instance. List the available logs of a\n   * Database Instance. By default, the logs returned in the list are ordered by\n   * creation date in ascending order, though this can be modified via the\n   * order_by field.\n   *\n   * @param request - The request {@link ListInstanceLogsRequest}\n   * @returns A Promise of ListInstanceLogsResponse\n   */\n  listInstanceLogs = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/logs`,\n    urlParams: urlParams(['order_by', request.orderBy])\n  }, unmarshalListInstanceLogsResponse$1);\n\n  /**\n   * Get given logs of a Database Instance. Retrieve information about the logs\n   * of a Database Instance. Specify the `instance_log_id` and `region` in your\n   * request to get information such as `download_url`, `status`, `expires_at`\n   * and `created_at` about your logs in the response.\n   *\n   * @param request - The request {@link GetInstanceLogRequest}\n   * @returns A Promise of InstanceLog\n   */\n  getInstanceLog = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/logs/${validatePathParam('instanceLogId', request.instanceLogId)}`\n  }, unmarshalInstanceLog$1);\n\n  /**\n   * Waits for {@link InstanceLog} to be in a final state.\n   *\n   * @param request - The request {@link GetInstanceLogRequest}\n   * @param options - The waiting options\n   * @returns A Promise of InstanceLog\n   */\n  waitForInstanceLog = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!INSTANCE_LOG_TRANSIENT_STATUSES$1.includes(res.status))), this.getInstanceLog, request, options);\n\n  /**\n   * Purge remote Database Instance logs. Purge a given remote log from a\n   * Database Instance. You can specify the `log_name` of the log you wish to\n   * clean from your Database Instance.\n   *\n   * @param request - The request {@link PurgeInstanceLogsRequest}\n   */\n  purgeInstanceLogs = request => this.client.fetch({\n    body: JSON.stringify(marshalPurgeInstanceLogsRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/purge-logs`\n  });\n\n  /**\n   * List remote Database Instance logs details. List remote log details. By\n   * default, the details returned in the list are ordered by creation date in\n   * ascending order, though this can be modified via the order_by field.\n   *\n   * @param request - The request {@link ListInstanceLogsDetailsRequest}\n   * @returns A Promise of ListInstanceLogsDetailsResponse\n   */\n  listInstanceLogsDetails = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/logs-details`\n  }, unmarshalListInstanceLogsDetailsResponse$1);\n\n  /**\n   * Add Database Instance advanced settings. Add an advanced setting to a\n   * Database Instance. You must set the `name` and the `value` of each\n   * setting.\n   *\n   * @param request - The request {@link AddInstanceSettingsRequest}\n   * @returns A Promise of AddInstanceSettingsResponse\n   */\n  addInstanceSettings = request => this.client.fetch({\n    body: JSON.stringify(marshalAddInstanceSettingsRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/settings`\n  }, unmarshalAddInstanceSettingsResponse$1);\n\n  /**\n   * Delete Database Instance advanced settings. Delete an advanced setting in a\n   * Database Instance. You must specify the names of the settings you want to\n   * delete in the request.\n   *\n   * @param request - The request {@link DeleteInstanceSettingsRequest}\n   * @returns A Promise of DeleteInstanceSettingsResponse\n   */\n  deleteInstanceSettings = request => this.client.fetch({\n    body: JSON.stringify(marshalDeleteInstanceSettingsRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'DELETE',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/settings`\n  }, unmarshalDeleteInstanceSettingsResponse$1);\n\n  /**\n   * Set Database Instance advanced settings. Update an advanced setting for a\n   * Database Instance. Settings added upon database engine initalization can\n   * only be defined once, and cannot, therefore, be updated.\n   *\n   * @param request - The request {@link SetInstanceSettingsRequest}\n   * @returns A Promise of SetInstanceSettingsResponse\n   */\n  setInstanceSettings = request => this.client.fetch({\n    body: JSON.stringify(marshalSetInstanceSettingsRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'PUT',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/settings`\n  }, unmarshalSetInstanceSettingsResponse$1);\n  pageOfListInstanceACLRules = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/acls`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListInstanceACLRulesResponse$1);\n\n  /**\n   * List ACL rules of a Database Instance. List the ACL rules for a given\n   * Database Instance. The response is an array of ACL objects, each one\n   * representing an ACL that denies, allows or redirects traffic based on\n   * certain conditions.\n   *\n   * @param request - The request {@link ListInstanceACLRulesRequest}\n   * @returns A Promise of ListInstanceACLRulesResponse\n   */\n  listInstanceACLRules = request => enrichForPagination('rules', this.pageOfListInstanceACLRules, request);\n\n  /**\n   * Add an ACL rule to a Database Instance. Add an additional ACL rule to a\n   * Database Instance.\n   *\n   * @param request - The request {@link AddInstanceACLRulesRequest}\n   * @returns A Promise of AddInstanceACLRulesResponse\n   */\n  addInstanceACLRules = request => this.client.fetch({\n    body: JSON.stringify(marshalAddInstanceACLRulesRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/acls`\n  }, unmarshalAddInstanceACLRulesResponse$1);\n\n  /**\n   * Set ACL rules for a Database Instance. Replace all the ACL rules of a\n   * Database Instance.\n   *\n   * @param request - The request {@link SetInstanceACLRulesRequest}\n   * @returns A Promise of SetInstanceACLRulesResponse\n   */\n  setInstanceACLRules = request => this.client.fetch({\n    body: JSON.stringify(marshalSetInstanceACLRulesRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'PUT',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/acls`\n  }, unmarshalSetInstanceACLRulesResponse$1);\n\n  /**\n   * Delete ACL rules of a Database Instance. Delete one or more ACL rules of a\n   * Database Instance.\n   *\n   * @param request - The request {@link DeleteInstanceACLRulesRequest}\n   * @returns A Promise of DeleteInstanceACLRulesResponse\n   */\n  deleteInstanceACLRules = request => this.client.fetch({\n    body: JSON.stringify(marshalDeleteInstanceACLRulesRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'DELETE',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/acls`\n  }, unmarshalDeleteInstanceACLRulesResponse$1);\n  pageOfListUsers = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/users`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListUsersResponse$2);\n\n  /**\n   * List users of a Database Instance. List all users of a given Database\n   * Instance. By default, the users returned in the list are ordered by\n   * creation date in ascending order, though this can be modified via the\n   * order_by field.\n   *\n   * @param request - The request {@link ListUsersRequest}\n   * @returns A Promise of ListUsersResponse\n   */\n  listUsers = request => enrichForPagination('users', this.pageOfListUsers, request);\n\n  /**\n   * Create a user for a Database Instance. Create a new user for a Database\n   * Instance. You must define the `name`, `password` and `is_admin`\n   * parameters.\n   *\n   * @param request - The request {@link CreateUserRequest}\n   * @returns A Promise of User\n   */\n  createUser = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateUserRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/users`\n  }, unmarshalUser$2);\n\n  /**\n   * Update a user on a Database Instance. Update the parameters of a user on a\n   * Database Instance. You can update the `password` and `is_admin` parameters,\n   * but you cannot change the name of the user.\n   *\n   * @param request - The request {@link UpdateUserRequest}\n   * @returns A Promise of User\n   */\n  updateUser = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateUserRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'PATCH',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/users/${validatePathParam('name', request.name)}`\n  }, unmarshalUser$2);\n\n  /**\n   * Delete a user on a Database Instance. Delete a given user on a Database\n   * Instance. You must specify, in the endpoint, the `region`, `instance_id`\n   * and `name` parameters of the user you want to delete.\n   *\n   * @param request - The request {@link DeleteUserRequest}\n   */\n  deleteUser = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/users/${validatePathParam('name', request.name)}`\n  });\n  pageOfListDatabases = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/databases`,\n    urlParams: urlParams(['managed', request.managed], ['name', request.name], ['order_by', request.orderBy], ['owner', request.owner], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListDatabasesResponse$2);\n\n  /**\n   * List databases in a Database Instance. List all databases of a given\n   * Database Instance. By default, the databases returned in the list are\n   * ordered by creation date in ascending order, though this can be modified\n   * via the order_by field. You can define additional parameters for your\n   * query, such as `name`, `managed` and `owner`.\n   *\n   * @param request - The request {@link ListDatabasesRequest}\n   * @returns A Promise of ListDatabasesResponse\n   */\n  listDatabases = request => enrichForPagination('databases', this.pageOfListDatabases, request);\n\n  /**\n   * Create a database in a Database Instance. Create a new database. You must\n   * define the `name` parameter in the request.\n   *\n   * @param request - The request {@link CreateDatabaseRequest}\n   * @returns A Promise of Database\n   */\n  createDatabase = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateDatabaseRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/databases`\n  }, unmarshalDatabase$2);\n\n  /**\n   * Delete a database in a Database Instance. Delete a given database on a\n   * Database Instance. You must specify, in the endpoint, the `region`,\n   * `instance_id` and `name` parameters of the database you want to delete.\n   *\n   * @param request - The request {@link DeleteDatabaseRequest}\n   */\n  deleteDatabase = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/databases/${validatePathParam('name', request.name)}`\n  });\n  pageOfListPrivileges = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/privileges`,\n    urlParams: urlParams(['database_name', request.databaseName], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['user_name', request.userName])\n  }, unmarshalListPrivilegesResponse$1);\n\n  /**\n   * List user privileges for a database. List privileges of a user on a\n   * database. By default, the details returned in the list are ordered by\n   * creation date in ascending order, though this can be modified via the\n   * order_by field. You can define additional parameters for your query, such\n   * as `database_name` and `user_name`.\n   *\n   * @param request - The request {@link ListPrivilegesRequest}\n   * @returns A Promise of ListPrivilegesResponse\n   */\n  listPrivileges = request => enrichForPagination('privileges', this.pageOfListPrivileges, request);\n\n  /**\n   * Set user privileges for a database. Set the privileges of a user on a\n   * database. You must define `database_name`, `user_name` and `permission` in\n   * the request body.\n   *\n   * @param request - The request {@link SetPrivilegeRequest}\n   * @returns A Promise of Privilege\n   */\n  setPrivilege = request => this.client.fetch({\n    body: JSON.stringify(marshalSetPrivilegeRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'PUT',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/privileges`\n  }, unmarshalPrivilege$1);\n  pageOfListSnapshots = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/snapshots`,\n    urlParams: urlParams(['instance_id', request.instanceId], ['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListSnapshotsResponse$2);\n\n  /**\n   * List snapshots. List snapshots. You can include the `instance_id` or\n   * `project_id` in your query to get the list of snapshots for specific\n   * Database Instances and/or Projects. By default, the details returned in the\n   * list are ordered by creation date in ascending order, though this can be\n   * modified via the `order_by` field.\n   *\n   * @param request - The request {@link ListSnapshotsRequest}\n   * @returns A Promise of ListSnapshotsResponse\n   */\n  listSnapshots = (request = {}) => enrichForPagination('snapshots', this.pageOfListSnapshots, request);\n\n  /**\n   * Get a Database Instance snapshot. Retrieve information about a given\n   * snapshot, specified by its `snapshot_id` and `region`. Full details about\n   * the snapshot, like size and expiration date, are returned in the response.\n   *\n   * @param request - The request {@link GetSnapshotRequest}\n   * @returns A Promise of Snapshot\n   */\n  getSnapshot = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}`\n  }, unmarshalSnapshot$2);\n\n  /**\n   * Waits for {@link Snapshot} to be in a final state.\n   *\n   * @param request - The request {@link GetSnapshotRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Snapshot\n   */\n  waitForSnapshot = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!SNAPSHOT_TRANSIENT_STATUSES$2.includes(res.status))), this.getSnapshot, request, options);\n\n  /**\n   * Create a Database Instance snapshot. Create a new snapshot of a Database\n   * Instance. You must define the `name` parameter in the request.\n   *\n   * @param request - The request {@link CreateSnapshotRequest}\n   * @returns A Promise of Snapshot\n   */\n  createSnapshot = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateSnapshotRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/snapshots`\n  }, unmarshalSnapshot$2);\n\n  /**\n   * Update a Database Instance snapshot. Update the parameters of a snapshot of\n   * a Database Instance. You can update the `name` and `expires_at`\n   * parameters.\n   *\n   * @param request - The request {@link UpdateSnapshotRequest}\n   * @returns A Promise of Snapshot\n   */\n  updateSnapshot = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateSnapshotRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'PATCH',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}`\n  }, unmarshalSnapshot$2);\n\n  /**\n   * Delete a Database Instance snapshot. Delete a given snapshot of a Database\n   * Instance. You must specify, in the endpoint, the `region` and `snapshot_id`\n   * parameters of the snapshot you want to delete.\n   *\n   * @param request - The request {@link DeleteSnapshotRequest}\n   * @returns A Promise of Snapshot\n   */\n  deleteSnapshot = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}`\n  }, unmarshalSnapshot$2);\n\n  /**\n   * Create a new Database Instance from a snapshot. Restore a snapshot. When\n   * you restore a snapshot, a new Instance is created and billed to your\n   * account. Note that is possible to select a larger node type for your new\n   * Database Instance. However, the Block volume size will be the same as the\n   * size of the restored snapshot. All Instance settings will be restored if\n   * you chose a node type with the same or more memory size than the initial\n   * Instance. Settings will be reset to the default if your node type has less\n   * memory.\n   *\n   * @param request - The request {@link CreateInstanceFromSnapshotRequest}\n   * @returns A Promise of Instance\n   */\n  createInstanceFromSnapshot = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateInstanceFromSnapshotRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}/create-instance`\n  }, unmarshalInstance$2);\n\n  /**\n   * Create a new Database Instance endpoint. Create a new endpoint for a\n   * Database Instance. You can add `load_balancer` and `private_network`\n   * specifications to the body of the request.\n   *\n   * @param request - The request {@link CreateEndpointRequest}\n   * @returns A Promise of Endpoint\n   */\n  createEndpoint = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateEndpointRequest$2(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/endpoints`\n  }, unmarshalEndpoint$3);\n\n  /**\n   * Delete a Database Instance endpoint. Delete the endpoint of a Database\n   * Instance. You must specify the `region` and `endpoint_id` parameters of the\n   * endpoint you want to delete. Note that might need to update any environment\n   * configurations that point to the deleted endpoint.\n   *\n   * @param request - The request {@link DeleteEndpointRequest}\n   */\n  deleteEndpoint = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/endpoints/${validatePathParam('endpointId', request.endpointId)}`\n  });\n\n  /**\n   * Get a Database Instance endpoint. Retrieve information about a Database\n   * Instance endpoint. Full details about the endpoint, like `ip`, `port`,\n   * `private_network` and `load_balancer` specifications are returned in the\n   * response.\n   *\n   * @param request - The request {@link GetEndpointRequest}\n   * @returns A Promise of Endpoint\n   */\n  getEndpoint = request => this.client.fetch({\n    method: 'GET',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/endpoints/${validatePathParam('endpointId', request.endpointId)}`\n  }, unmarshalEndpoint$3);\n\n  /**\n   * Migrate Database Instance endpoint. Migrate an existing Database Instance\n   * endpoint to another Database Instance.\n   *\n   * @param request - The request {@link MigrateEndpointRequest}\n   * @returns A Promise of Endpoint\n   */\n  migrateEndpoint = request => this.client.fetch({\n    body: JSON.stringify(marshalMigrateEndpointRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/endpoints/${validatePathParam('endpointId', request.endpointId)}/migrate`\n  }, unmarshalEndpoint$3);\n\n  /**\n   * Apply an instance maintenance. Apply a pending instance maintenance on your\n   * instance. This action can generate some service interruption.\n   *\n   * @param request - The request {@link ApplyInstanceMaintenanceRequest}\n   * @returns A Promise of Maintenance\n   */\n  applyInstanceMaintenance = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$p,\n    method: 'POST',\n    path: `/document-db/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/apply-maintenance`\n  }, unmarshalMaintenance$1);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst UpdateInstanceRequest$1 = {\n  backupScheduleStartHour: {\n    lessThanOrEqual: 23\n  }\n};\n\nvar validationRules_gen$b = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UpdateInstanceRequest: UpdateInstanceRequest$1\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$o = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$p,\n  INSTANCE_LOG_TRANSIENT_STATUSES: INSTANCE_LOG_TRANSIENT_STATUSES$1,\n  INSTANCE_TRANSIENT_STATUSES: INSTANCE_TRANSIENT_STATUSES$2,\n  MAINTENANCE_TRANSIENT_STATUSES: MAINTENANCE_TRANSIENT_STATUSES$1,\n  READ_REPLICA_TRANSIENT_STATUSES: READ_REPLICA_TRANSIENT_STATUSES$1,\n  SNAPSHOT_TRANSIENT_STATUSES: SNAPSHOT_TRANSIENT_STATUSES$2,\n  ValidationRules: validationRules_gen$b\n});\n\nvar index$r = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1beta1: index_gen$o\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link DNSZoneStatus}. */\nconst DNS_ZONE_TRANSIENT_STATUSES = ['pending'];\n\n/** Lists transient statutes of the enum {@link DomainFeatureStatus}. */\nconst DOMAIN_FEATURE_TRANSIENT_STATUSES = ['enabling', 'disabling'];\n\n/**\n * Lists transient statutes of the enum\n * {@link DomainRegistrationStatusTransferStatus}.\n */\nconst DOMAIN_REGISTRATION_STATUS_TRANSFER_TRANSIENT_STATUSES = ['pending', 'processing'];\n\n/** Lists transient statutes of the enum {@link DomainStatus}. */\nconst DOMAIN_TRANSIENT_STATUSES$2 = ['creating', 'renewing', 'xfering', 'expiring', 'updating', 'checking', 'deleting'];\n\n/** Lists transient statutes of the enum {@link HostStatus}. */\nconst HOST_TRANSIENT_STATUSES = ['updating', 'deleting'];\n\n/** Lists transient statutes of the enum {@link SSLCertificateStatus}. */\nconst SSL_CERTIFICATE_TRANSIENT_STATUSES = ['pending'];\n\n/** Lists transient statutes of the enum {@link TaskStatus}. */\nconst TASK_TRANSIENT_STATUSES$1 = ['pending'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalContactExtensionFRAssociationInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ContactExtensionFRAssociationInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    publicationJo: unmarshalDate(data.publication_jo),\n    publicationJoPage: data.publication_jo_page\n  };\n};\nconst unmarshalContactExtensionFRCodeAuthAfnicInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ContactExtensionFRCodeAuthAfnicInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    codeAuthAfnic: data.code_auth_afnic\n  };\n};\nconst unmarshalContactExtensionFRDunsInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ContactExtensionFRDunsInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    dunsId: data.duns_id,\n    localId: data.local_id\n  };\n};\nconst unmarshalContactExtensionFRIndividualInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ContactExtensionFRIndividualInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    whoisOptIn: data.whois_opt_in\n  };\n};\nconst unmarshalContactExtensionFRTrademarkInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ContactExtensionFRTrademarkInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    trademarkInpi: data.trademark_inpi\n  };\n};\nconst unmarshalContactExtensionEU = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ContactExtensionEU' failed as data isn't a dictionary.`);\n  }\n  return {\n    europeanCitizenship: data.european_citizenship\n  };\n};\nconst unmarshalContactExtensionFR = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ContactExtensionFR' failed as data isn't a dictionary.`);\n  }\n  return {\n    associationInfo: data.association_info ? unmarshalContactExtensionFRAssociationInfo(data.association_info) : undefined,\n    codeAuthAfnicInfo: data.code_auth_afnic_info ? unmarshalContactExtensionFRCodeAuthAfnicInfo(data.code_auth_afnic_info) : undefined,\n    dunsInfo: data.duns_info ? unmarshalContactExtensionFRDunsInfo(data.duns_info) : undefined,\n    individualInfo: data.individual_info ? unmarshalContactExtensionFRIndividualInfo(data.individual_info) : undefined,\n    mode: data.mode,\n    trademarkInfo: data.trademark_info ? unmarshalContactExtensionFRTrademarkInfo(data.trademark_info) : undefined\n  };\n};\nconst unmarshalContactExtensionNL = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ContactExtensionNL' failed as data isn't a dictionary.`);\n  }\n  return {\n    legalForm: data.legal_form,\n    legalFormRegistrationNumber: data.legal_form_registration_number\n  };\n};\nconst unmarshalContactQuestion = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ContactQuestion' failed as data isn't a dictionary.`);\n  }\n  return {\n    answer: data.answer,\n    question: data.question\n  };\n};\nconst unmarshalContact = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Contact' failed as data isn't a dictionary.`);\n  }\n  return {\n    addressLine1: data.address_line_1,\n    addressLine2: data.address_line_2,\n    city: data.city,\n    companyIdentificationCode: data.company_identification_code,\n    companyName: data.company_name,\n    country: data.country,\n    email: data.email,\n    emailAlt: data.email_alt,\n    emailStatus: data.email_status,\n    extensionEu: data.extension_eu ? unmarshalContactExtensionEU(data.extension_eu) : undefined,\n    extensionFr: data.extension_fr ? unmarshalContactExtensionFR(data.extension_fr) : undefined,\n    extensionNl: data.extension_nl ? unmarshalContactExtensionNL(data.extension_nl) : undefined,\n    faxNumber: data.fax_number,\n    firstname: data.firstname,\n    id: data.id,\n    lang: data.lang,\n    lastname: data.lastname,\n    legalForm: data.legal_form,\n    phoneNumber: data.phone_number,\n    questions: data.questions ? unmarshalArrayOfObject(data.questions, unmarshalContactQuestion) : undefined,\n    resale: data.resale,\n    state: data.state,\n    status: data.status,\n    vatIdentificationCode: data.vat_identification_code,\n    whoisOptIn: data.whois_opt_in,\n    zip: data.zip\n  };\n};\nconst unmarshalDNSZone = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DNSZone' failed as data isn't a dictionary.`);\n  }\n  return {\n    domain: data.domain,\n    linkedProducts: data.linked_products,\n    message: data.message,\n    ns: data.ns,\n    nsDefault: data.ns_default,\n    nsMaster: data.ns_master,\n    projectId: data.project_id,\n    status: data.status,\n    subdomain: data.subdomain,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalHost = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Host' failed as data isn't a dictionary.`);\n  }\n  return {\n    domain: data.domain,\n    ips: data.ips,\n    name: data.name,\n    status: data.status\n  };\n};\nconst unmarshalSSLCertificate = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SSLCertificate' failed as data isn't a dictionary.`);\n  }\n  return {\n    alternativeDnsZones: data.alternative_dns_zones,\n    certificateChain: data.certificate_chain,\n    createdAt: unmarshalDate(data.created_at),\n    dnsZone: data.dns_zone,\n    expiredAt: unmarshalDate(data.expired_at),\n    privateKey: data.private_key,\n    status: data.status\n  };\n};\nconst unmarshalCheckContactsCompatibilityResponseContactCheckResult = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CheckContactsCompatibilityResponseContactCheckResult' failed as data isn't a dictionary.`);\n  }\n  return {\n    compatible: data.compatible,\n    errorMessage: data.error_message\n  };\n};\nconst unmarshalCheckContactsCompatibilityResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CheckContactsCompatibilityResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    administrativeCheckResult: data.administrative_check_result ? unmarshalCheckContactsCompatibilityResponseContactCheckResult(data.administrative_check_result) : undefined,\n    compatible: data.compatible,\n    ownerCheckResult: data.owner_check_result ? unmarshalCheckContactsCompatibilityResponseContactCheckResult(data.owner_check_result) : undefined,\n    technicalCheckResult: data.technical_check_result ? unmarshalCheckContactsCompatibilityResponseContactCheckResult(data.technical_check_result) : undefined\n  };\n};\nconst unmarshalClearDNSZoneRecordsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ClearDNSZoneRecordsResponse' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalDeleteDNSZoneResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DeleteDNSZoneResponse' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalDeleteExternalDomainResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DeleteExternalDomainResponse' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalDeleteSSLCertificateResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DeleteSSLCertificateResponse' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalDSRecordPublicKey = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DSRecordPublicKey' failed as data isn't a dictionary.`);\n  }\n  return {\n    key: data.key\n  };\n};\nconst unmarshalDSRecordDigest = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DSRecordDigest' failed as data isn't a dictionary.`);\n  }\n  return {\n    digest: data.digest,\n    publicKey: data.public_key ? unmarshalDSRecordPublicKey(data.public_key) : undefined,\n    type: data.type\n  };\n};\nconst unmarshalDSRecord = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DSRecord' failed as data isn't a dictionary.`);\n  }\n  return {\n    algorithm: data.algorithm,\n    digest: data.digest ? unmarshalDSRecordDigest(data.digest) : undefined,\n    keyId: data.key_id,\n    publicKey: data.public_key ? unmarshalDSRecordPublicKey(data.public_key) : undefined\n  };\n};\nconst unmarshalTldOffer = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'TldOffer' failed as data isn't a dictionary.`);\n  }\n  return {\n    action: data.action,\n    operationPath: data.operation_path,\n    price: data.price ? unmarshalMoney(data.price) : undefined\n  };\n};\nconst unmarshalDomainDNSSEC = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainDNSSEC' failed as data isn't a dictionary.`);\n  }\n  return {\n    dsRecords: unmarshalArrayOfObject(data.ds_records, unmarshalDSRecord),\n    status: data.status\n  };\n};\nconst unmarshalDomainRegistrationStatusExternalDomain = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainRegistrationStatusExternalDomain' failed as data isn't a dictionary.`);\n  }\n  return {\n    validationToken: data.validation_token\n  };\n};\nconst unmarshalDomainRegistrationStatusTransfer = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainRegistrationStatusTransfer' failed as data isn't a dictionary.`);\n  }\n  return {\n    status: data.status,\n    voteCurrentOwner: data.vote_current_owner,\n    voteNewOwner: data.vote_new_owner\n  };\n};\nconst unmarshalTld = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Tld' failed as data isn't a dictionary.`);\n  }\n  return {\n    dnssecSupport: data.dnssec_support,\n    durationInYearsMax: data.duration_in_years_max,\n    durationInYearsMin: data.duration_in_years_min,\n    idnSupport: data.idn_support,\n    name: data.name,\n    offers: unmarshalMapOfObject(data.offers, unmarshalTldOffer),\n    specifications: data.specifications\n  };\n};\nconst unmarshalDomain$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Domain' failed as data isn't a dictionary.`);\n  }\n  return {\n    administrativeContact: data.administrative_contact ? unmarshalContact(data.administrative_contact) : undefined,\n    autoRenewStatus: data.auto_renew_status,\n    dnsZones: unmarshalArrayOfObject(data.dns_zones, unmarshalDNSZone),\n    dnssec: data.dnssec ? unmarshalDomainDNSSEC(data.dnssec) : undefined,\n    domain: data.domain,\n    eppCode: data.epp_code,\n    expiredAt: unmarshalDate(data.expired_at),\n    externalDomainRegistrationStatus: data.external_domain_registration_status ? unmarshalDomainRegistrationStatusExternalDomain(data.external_domain_registration_status) : undefined,\n    isExternal: data.is_external,\n    linkedProducts: data.linked_products,\n    organizationId: data.organization_id,\n    ownerContact: data.owner_contact ? unmarshalContact(data.owner_contact) : undefined,\n    pendingTrade: data.pending_trade,\n    projectId: data.project_id,\n    registrar: data.registrar,\n    status: data.status,\n    technicalContact: data.technical_contact ? unmarshalContact(data.technical_contact) : undefined,\n    tld: data.tld ? unmarshalTld(data.tld) : undefined,\n    transferRegistrationStatus: data.transfer_registration_status ? unmarshalDomainRegistrationStatusTransfer(data.transfer_registration_status) : undefined,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalGetDNSZoneTsigKeyResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetDNSZoneTsigKeyResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    algorithm: data.algorithm,\n    key: data.key,\n    name: data.name\n  };\n};\nconst unmarshalDomainRecordGeoIPConfigMatch = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainRecordGeoIPConfigMatch' failed as data isn't a dictionary.`);\n  }\n  return {\n    continents: data.continents,\n    countries: data.countries,\n    data: data.data\n  };\n};\nconst unmarshalDomainRecordViewConfigView = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainRecordViewConfigView' failed as data isn't a dictionary.`);\n  }\n  return {\n    data: data.data,\n    subnet: data.subnet\n  };\n};\nconst unmarshalDomainRecordWeightedConfigWeightedIP = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainRecordWeightedConfigWeightedIP' failed as data isn't a dictionary.`);\n  }\n  return {\n    ip: data.ip,\n    weight: data.weight\n  };\n};\nconst unmarshalDomainRecordGeoIPConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainRecordGeoIPConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    default: data.default,\n    matches: unmarshalArrayOfObject(data.matches, unmarshalDomainRecordGeoIPConfigMatch)\n  };\n};\nconst unmarshalDomainRecordHTTPServiceConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainRecordHTTPServiceConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    ips: data.ips,\n    mustContain: data.must_contain,\n    strategy: data.strategy,\n    url: data.url,\n    userAgent: data.user_agent\n  };\n};\nconst unmarshalDomainRecordViewConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainRecordViewConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    views: unmarshalArrayOfObject(data.views, unmarshalDomainRecordViewConfigView)\n  };\n};\nconst unmarshalDomainRecordWeightedConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainRecordWeightedConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    weightedIps: unmarshalArrayOfObject(data.weighted_ips, unmarshalDomainRecordWeightedConfigWeightedIP)\n  };\n};\nconst unmarshalDomainRecord = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainRecord' failed as data isn't a dictionary.`);\n  }\n  return {\n    comment: data.comment,\n    data: data.data,\n    geoIpConfig: data.geo_ip_config ? unmarshalDomainRecordGeoIPConfig(data.geo_ip_config) : undefined,\n    httpServiceConfig: data.http_service_config ? unmarshalDomainRecordHTTPServiceConfig(data.http_service_config) : undefined,\n    id: data.id,\n    name: data.name,\n    priority: data.priority,\n    ttl: data.ttl,\n    type: data.type,\n    viewConfig: data.view_config ? unmarshalDomainRecordViewConfig(data.view_config) : undefined,\n    weightedConfig: data.weighted_config ? unmarshalDomainRecordWeightedConfig(data.weighted_config) : undefined\n  };\n};\nconst unmarshalRecordIdentifier = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RecordIdentifier' failed as data isn't a dictionary.`);\n  }\n  return {\n    data: data.data,\n    name: data.name,\n    ttl: data.ttl,\n    type: data.type\n  };\n};\nconst unmarshalRecordChangeAdd = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RecordChangeAdd' failed as data isn't a dictionary.`);\n  }\n  return {\n    records: unmarshalArrayOfObject(data.records, unmarshalDomainRecord)\n  };\n};\nconst unmarshalRecordChangeClear = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RecordChangeClear' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalRecordChangeDelete = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RecordChangeDelete' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    idFields: data.id_fields ? unmarshalRecordIdentifier(data.id_fields) : undefined\n  };\n};\nconst unmarshalRecordChangeSet = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RecordChangeSet' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    idFields: data.id_fields ? unmarshalRecordIdentifier(data.id_fields) : undefined,\n    records: unmarshalArrayOfObject(data.records, unmarshalDomainRecord)\n  };\n};\nconst unmarshalRecordChange = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RecordChange' failed as data isn't a dictionary.`);\n  }\n  return {\n    add: data.add ? unmarshalRecordChangeAdd(data.add) : undefined,\n    clear: data.clear ? unmarshalRecordChangeClear(data.clear) : undefined,\n    delete: data.delete ? unmarshalRecordChangeDelete(data.delete) : undefined,\n    set: data.set ? unmarshalRecordChangeSet(data.set) : undefined\n  };\n};\nconst unmarshalGetDNSZoneVersionDiffResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetDNSZoneVersionDiffResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    changes: unmarshalArrayOfObject(data.changes, unmarshalRecordChange)\n  };\n};\nconst unmarshalGetDomainAuthCodeResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetDomainAuthCodeResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    authCode: data.auth_code\n  };\n};\nconst unmarshalImportProviderDNSZoneResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ImportProviderDNSZoneResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    records: unmarshalArrayOfObject(data.records, unmarshalDomainRecord)\n  };\n};\nconst unmarshalImportRawDNSZoneResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ImportRawDNSZoneResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    records: unmarshalArrayOfObject(data.records, unmarshalDomainRecord)\n  };\n};\nconst unmarshalContactRolesRoles = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ContactRolesRoles' failed as data isn't a dictionary.`);\n  }\n  return {\n    isAdministrative: data.is_administrative,\n    isOwner: data.is_owner,\n    isTechnical: data.is_technical\n  };\n};\nconst unmarshalContactRoles = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ContactRoles' failed as data isn't a dictionary.`);\n  }\n  return {\n    contact: data.contact ? unmarshalContact(data.contact) : undefined,\n    roles: unmarshalMapOfObject(data.roles, unmarshalContactRolesRoles)\n  };\n};\nconst unmarshalListContactsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListContactsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    contacts: unmarshalArrayOfObject(data.contacts, unmarshalContactRoles),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalNameserver$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Nameserver' failed as data isn't a dictionary.`);\n  }\n  return {\n    ip: data.ip,\n    name: data.name\n  };\n};\nconst unmarshalListDNSZoneNameserversResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDNSZoneNameserversResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    ns: unmarshalArrayOfObject(data.ns, unmarshalNameserver$1)\n  };\n};\nconst unmarshalListDNSZoneRecordsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDNSZoneRecordsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    records: unmarshalArrayOfObject(data.records, unmarshalDomainRecord),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListDNSZoneVersionRecordsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDNSZoneVersionRecordsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    records: unmarshalArrayOfObject(data.records, unmarshalDomainRecord),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalDNSZoneVersion = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DNSZoneVersion' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id\n  };\n};\nconst unmarshalListDNSZoneVersionsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDNSZoneVersionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    versions: unmarshalArrayOfObject(data.versions, unmarshalDNSZoneVersion)\n  };\n};\nconst unmarshalListDNSZonesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDNSZonesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    dnsZones: unmarshalArrayOfObject(data.dns_zones, unmarshalDNSZone),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListDomainHostsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDomainHostsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    hosts: unmarshalArrayOfObject(data.hosts, unmarshalHost),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalDomainSummary = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainSummary' failed as data isn't a dictionary.`);\n  }\n  return {\n    autoRenewStatus: data.auto_renew_status,\n    createdAt: unmarshalDate(data.created_at),\n    dnssecStatus: data.dnssec_status,\n    domain: data.domain,\n    eppCode: data.epp_code,\n    expiredAt: unmarshalDate(data.expired_at),\n    externalDomainRegistrationStatus: data.external_domain_registration_status ? unmarshalDomainRegistrationStatusExternalDomain(data.external_domain_registration_status) : undefined,\n    isExternal: data.is_external,\n    organizationId: data.organization_id,\n    pendingTrade: data.pending_trade,\n    projectId: data.project_id,\n    registrar: data.registrar,\n    status: data.status,\n    transferRegistrationStatus: data.transfer_registration_status ? unmarshalDomainRegistrationStatusTransfer(data.transfer_registration_status) : undefined,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalListDomainsResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDomainsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    domains: unmarshalArrayOfObject(data.domains, unmarshalDomainSummary),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalRenewableDomain = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RenewableDomain' failed as data isn't a dictionary.`);\n  }\n  return {\n    domain: data.domain,\n    estimatedDeleteAt: unmarshalDate(data.estimated_delete_at),\n    expiredAt: unmarshalDate(data.expired_at),\n    limitRedemptionAt: unmarshalDate(data.limit_redemption_at),\n    limitRenewAt: unmarshalDate(data.limit_renew_at),\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    renewableDurationInYears: data.renewable_duration_in_years,\n    status: data.status,\n    tld: data.tld ? unmarshalTld(data.tld) : undefined\n  };\n};\nconst unmarshalListRenewableDomainsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRenewableDomainsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    domains: unmarshalArrayOfObject(data.domains, unmarshalRenewableDomain),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSSLCertificatesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSSLCertificatesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    certificates: unmarshalArrayOfObject(data.certificates, unmarshalSSLCertificate),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalTask$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Task' failed as data isn't a dictionary.`);\n  }\n  return {\n    contactIdentifier: data.contact_identifier,\n    domain: data.domain,\n    id: data.id,\n    message: data.message,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    startedAt: unmarshalDate(data.started_at),\n    status: data.status,\n    type: data.type,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalListTasksResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTasksResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    tasks: unmarshalArrayOfObject(data.tasks, unmarshalTask$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListTldsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTldsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    tlds: unmarshalArrayOfObject(data.tlds, unmarshalTld),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalOrderResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OrderResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    domains: data.domains,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    taskId: data.task_id\n  };\n};\nconst unmarshalRefreshDNSZoneResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RefreshDNSZoneResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    dnsZones: unmarshalArrayOfObject(data.dns_zones, unmarshalDNSZone)\n  };\n};\nconst unmarshalRegisterExternalDomainResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RegisterExternalDomainResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    domain: data.domain,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    validationToken: data.validation_token\n  };\n};\nconst unmarshalRestoreDNSZoneVersionResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RestoreDNSZoneVersionResponse' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalAvailableDomain = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AvailableDomain' failed as data isn't a dictionary.`);\n  }\n  return {\n    available: data.available,\n    domain: data.domain,\n    tld: data.tld ? unmarshalTld(data.tld) : undefined\n  };\n};\nconst unmarshalSearchAvailableDomainsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SearchAvailableDomainsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    availableDomains: unmarshalArrayOfObject(data.available_domains, unmarshalAvailableDomain)\n  };\n};\nconst unmarshalUpdateDNSZoneNameserversResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UpdateDNSZoneNameserversResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    ns: unmarshalArrayOfObject(data.ns, unmarshalNameserver$1)\n  };\n};\nconst unmarshalUpdateDNSZoneRecordsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UpdateDNSZoneRecordsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    records: unmarshalArrayOfObject(data.records, unmarshalDomainRecord)\n  };\n};\nconst marshalCloneDNSZoneRequest = (request, defaults) => ({\n  dest_dns_zone: request.destDnsZone,\n  overwrite: request.overwrite,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalCreateDNSZoneRequest = (request, defaults) => ({\n  domain: request.domain,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  subdomain: request.subdomain\n});\nconst marshalCreateSSLCertificateRequest = (request, defaults) => ({\n  alternative_dns_zones: request.alternativeDnsZones,\n  dns_zone: request.dnsZone\n});\nconst marshalImportProviderDNSZoneRequestOnlineV1 = (request, defaults) => ({\n  token: request.token\n});\nconst marshalImportProviderDNSZoneRequest = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'online_v1',\n    value: request.onlineV1 !== undefined ? marshalImportProviderDNSZoneRequestOnlineV1(request.onlineV1) : undefined\n  }])\n});\nconst marshalImportRawDNSZoneRequestTsigKey = (request, defaults) => ({\n  algorithm: request.algorithm,\n  key: request.key,\n  name: request.name\n});\nconst marshalImportRawDNSZoneRequestAXFRSource = (request, defaults) => ({\n  name_server: request.nameServer,\n  tsig_key: request.tsigKey !== undefined ? marshalImportRawDNSZoneRequestTsigKey(request.tsigKey) : undefined\n});\nconst marshalImportRawDNSZoneRequestBindSource = (request, defaults) => ({\n  content: request.content\n});\nconst marshalImportRawDNSZoneRequest = (request, defaults) => ({\n  content: request.content,\n  format: request.format,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  ...resolveOneOf([{\n    param: 'bind_source',\n    value: request.bindSource !== undefined ? marshalImportRawDNSZoneRequestBindSource(request.bindSource) : undefined\n  }, {\n    param: 'axfr_source',\n    value: request.axfrSource !== undefined ? marshalImportRawDNSZoneRequestAXFRSource(request.axfrSource) : undefined\n  }])\n});\nconst marshalRefreshDNSZoneRequest = (request, defaults) => ({\n  recreate_dns_zone: request.recreateDnsZone,\n  recreate_sub_dns_zone: request.recreateSubDnsZone\n});\nconst marshalContactExtensionFRAssociationInfo = (request, defaults) => ({\n  publication_jo: request.publicationJo,\n  publication_jo_page: request.publicationJoPage\n});\nconst marshalContactExtensionFRCodeAuthAfnicInfo = (request, defaults) => ({\n  code_auth_afnic: request.codeAuthAfnic\n});\nconst marshalContactExtensionFRDunsInfo = (request, defaults) => ({\n  duns_id: request.dunsId,\n  local_id: request.localId\n});\nconst marshalContactExtensionFRIndividualInfo = (request, defaults) => ({\n  whois_opt_in: request.whoisOptIn\n});\nconst marshalContactExtensionFRTrademarkInfo = (request, defaults) => ({\n  trademark_inpi: request.trademarkInpi\n});\nconst marshalContactExtensionEU = (request, defaults) => ({\n  european_citizenship: request.europeanCitizenship\n});\nconst marshalContactExtensionFR = (request, defaults) => ({\n  mode: request.mode,\n  ...resolveOneOf([{\n    param: 'individual_info',\n    value: request.individualInfo !== undefined ? marshalContactExtensionFRIndividualInfo(request.individualInfo) : undefined\n  }, {\n    param: 'duns_info',\n    value: request.dunsInfo !== undefined ? marshalContactExtensionFRDunsInfo(request.dunsInfo) : undefined\n  }, {\n    param: 'association_info',\n    value: request.associationInfo !== undefined ? marshalContactExtensionFRAssociationInfo(request.associationInfo) : undefined\n  }, {\n    param: 'trademark_info',\n    value: request.trademarkInfo !== undefined ? marshalContactExtensionFRTrademarkInfo(request.trademarkInfo) : undefined\n  }, {\n    param: 'code_auth_afnic_info',\n    value: request.codeAuthAfnicInfo !== undefined ? marshalContactExtensionFRCodeAuthAfnicInfo(request.codeAuthAfnicInfo) : undefined\n  }])\n});\nconst marshalContactExtensionNL = (request, defaults) => ({\n  legal_form: request.legalForm,\n  legal_form_registration_number: request.legalFormRegistrationNumber\n});\nconst marshalContactQuestion = (request, defaults) => ({\n  answer: request.answer,\n  question: request.question\n});\nconst marshalNewContact = (request, defaults) => ({\n  address_line_1: request.addressLine1,\n  address_line_2: request.addressLine2,\n  city: request.city,\n  company_identification_code: request.companyIdentificationCode,\n  company_name: request.companyName,\n  country: request.country,\n  email: request.email,\n  email_alt: request.emailAlt,\n  extension_eu: request.extensionEu !== undefined ? marshalContactExtensionEU(request.extensionEu) : undefined,\n  extension_fr: request.extensionFr !== undefined ? marshalContactExtensionFR(request.extensionFr) : undefined,\n  extension_nl: request.extensionNl !== undefined ? marshalContactExtensionNL(request.extensionNl) : undefined,\n  fax_number: request.faxNumber,\n  firstname: request.firstname,\n  lang: request.lang,\n  lastname: request.lastname,\n  legal_form: request.legalForm,\n  phone_number: request.phoneNumber,\n  questions: request.questions !== undefined ? request.questions.map(elt => marshalContactQuestion(elt)) : undefined,\n  resale: request.resale,\n  state: request.state,\n  vat_identification_code: request.vatIdentificationCode,\n  whois_opt_in: request.whoisOptIn,\n  zip: request.zip\n});\nconst marshalRegistrarApiBuyDomainsRequest = (request, defaults) => ({\n  domains: request.domains,\n  duration_in_years: request.durationInYears,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  ...resolveOneOf([{\n    param: 'owner_contact_id',\n    value: request.ownerContactId\n  }, {\n    param: 'owner_contact',\n    value: request.ownerContact !== undefined ? marshalNewContact(request.ownerContact) : undefined\n  }]),\n  ...resolveOneOf([{\n    param: 'administrative_contact_id',\n    value: request.administrativeContactId\n  }, {\n    param: 'administrative_contact',\n    value: request.administrativeContact !== undefined ? marshalNewContact(request.administrativeContact) : undefined\n  }]),\n  ...resolveOneOf([{\n    param: 'technical_contact_id',\n    value: request.technicalContactId\n  }, {\n    param: 'technical_contact',\n    value: request.technicalContact !== undefined ? marshalNewContact(request.technicalContact) : undefined\n  }])\n});\nconst marshalRegistrarApiCheckContactsCompatibilityRequest = (request, defaults) => ({\n  domains: request.domains,\n  tlds: request.tlds,\n  ...resolveOneOf([{\n    param: 'owner_contact_id',\n    value: request.ownerContactId\n  }, {\n    param: 'owner_contact',\n    value: request.ownerContact !== undefined ? marshalNewContact(request.ownerContact) : undefined\n  }]),\n  ...resolveOneOf([{\n    param: 'administrative_contact_id',\n    value: request.administrativeContactId\n  }, {\n    param: 'administrative_contact',\n    value: request.administrativeContact !== undefined ? marshalNewContact(request.administrativeContact) : undefined\n  }]),\n  ...resolveOneOf([{\n    param: 'technical_contact_id',\n    value: request.technicalContactId\n  }, {\n    param: 'technical_contact',\n    value: request.technicalContact !== undefined ? marshalNewContact(request.technicalContact) : undefined\n  }])\n});\nconst marshalRegistrarApiCreateDomainHostRequest = (request, defaults) => ({\n  ips: request.ips,\n  name: request.name\n});\nconst marshalDSRecordPublicKey = (request, defaults) => ({\n  key: request.key\n});\nconst marshalDSRecordDigest = (request, defaults) => ({\n  digest: request.digest,\n  public_key: request.publicKey !== undefined ? marshalDSRecordPublicKey(request.publicKey) : undefined,\n  type: request.type\n});\nconst marshalDSRecord = (request, defaults) => ({\n  algorithm: request.algorithm,\n  key_id: request.keyId,\n  ...resolveOneOf([{\n    param: 'digest',\n    value: request.digest !== undefined ? marshalDSRecordDigest(request.digest) : undefined\n  }, {\n    param: 'public_key',\n    value: request.publicKey !== undefined ? marshalDSRecordPublicKey(request.publicKey) : undefined\n  }])\n});\nconst marshalRegistrarApiEnableDomainDNSSECRequest = (request, defaults) => ({\n  ds_record: request.dsRecord !== undefined ? marshalDSRecord(request.dsRecord) : undefined\n});\nconst marshalRegistrarApiRegisterExternalDomainRequest = (request, defaults) => ({\n  domain: request.domain,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalRegistrarApiRenewDomainsRequest = (request, defaults) => ({\n  domains: request.domains,\n  duration_in_years: request.durationInYears,\n  force_late_renewal: request.forceLateRenewal\n});\nconst marshalRegistrarApiTradeDomainRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  ...resolveOneOf([{\n    param: 'new_owner_contact_id',\n    value: request.newOwnerContactId\n  }, {\n    param: 'new_owner_contact',\n    value: request.newOwnerContact !== undefined ? marshalNewContact(request.newOwnerContact) : undefined\n  }])\n});\nconst marshalTransferInDomainRequestTransferRequest = (request, defaults) => ({\n  auth_code: request.authCode,\n  domain: request.domain\n});\nconst marshalRegistrarApiTransferInDomainRequest = (request, defaults) => ({\n  domains: request.domains.map(elt => marshalTransferInDomainRequestTransferRequest(elt)),\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  ...resolveOneOf([{\n    param: 'owner_contact_id',\n    value: request.ownerContactId\n  }, {\n    param: 'owner_contact',\n    value: request.ownerContact !== undefined ? marshalNewContact(request.ownerContact) : undefined\n  }]),\n  ...resolveOneOf([{\n    param: 'administrative_contact_id',\n    value: request.administrativeContactId\n  }, {\n    param: 'administrative_contact',\n    value: request.administrativeContact !== undefined ? marshalNewContact(request.administrativeContact) : undefined\n  }]),\n  ...resolveOneOf([{\n    param: 'technical_contact_id',\n    value: request.technicalContactId\n  }, {\n    param: 'technical_contact',\n    value: request.technicalContact !== undefined ? marshalNewContact(request.technicalContact) : undefined\n  }])\n});\nconst marshalUpdateContactRequestQuestion = (request, defaults) => ({\n  answer: request.answer,\n  question: request.question\n});\nconst marshalRegistrarApiUpdateContactRequest = (request, defaults) => ({\n  address_line_1: request.addressLine1,\n  address_line_2: request.addressLine2,\n  city: request.city,\n  company_identification_code: request.companyIdentificationCode,\n  country: request.country,\n  email: request.email,\n  email_alt: request.emailAlt,\n  extension_eu: request.extensionEu !== undefined ? marshalContactExtensionEU(request.extensionEu) : undefined,\n  extension_fr: request.extensionFr !== undefined ? marshalContactExtensionFR(request.extensionFr) : undefined,\n  extension_nl: request.extensionNl !== undefined ? marshalContactExtensionNL(request.extensionNl) : undefined,\n  fax_number: request.faxNumber,\n  lang: request.lang,\n  phone_number: request.phoneNumber,\n  questions: request.questions !== undefined ? request.questions.map(elt => marshalUpdateContactRequestQuestion(elt)) : undefined,\n  resale: request.resale,\n  state: request.state,\n  vat_identification_code: request.vatIdentificationCode,\n  whois_opt_in: request.whoisOptIn,\n  zip: request.zip\n});\nconst marshalRegistrarApiUpdateDomainHostRequest = (request, defaults) => ({\n  ips: request.ips\n});\nconst marshalRegistrarApiUpdateDomainRequest = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'technical_contact_id',\n    value: request.technicalContactId\n  }, {\n    param: 'technical_contact',\n    value: request.technicalContact !== undefined ? marshalNewContact(request.technicalContact) : undefined\n  }]),\n  ...resolveOneOf([{\n    param: 'owner_contact_id',\n    value: request.ownerContactId\n  }, {\n    param: 'owner_contact',\n    value: request.ownerContact !== undefined ? marshalNewContact(request.ownerContact) : undefined\n  }]),\n  ...resolveOneOf([{\n    param: 'administrative_contact_id',\n    value: request.administrativeContactId\n  }, {\n    param: 'administrative_contact',\n    value: request.administrativeContact !== undefined ? marshalNewContact(request.administrativeContact) : undefined\n  }])\n});\nconst marshalNameserver = (request, defaults) => ({\n  ip: request.ip,\n  name: request.name\n});\nconst marshalUpdateDNSZoneNameserversRequest = (request, defaults) => ({\n  ns: request.ns.map(elt => marshalNameserver(elt))\n});\nconst marshalDomainRecordGeoIPConfigMatch = (request, defaults) => ({\n  continents: request.continents,\n  countries: request.countries,\n  data: request.data\n});\nconst marshalDomainRecordViewConfigView = (request, defaults) => ({\n  data: request.data,\n  subnet: request.subnet\n});\nconst marshalDomainRecordWeightedConfigWeightedIP = (request, defaults) => ({\n  ip: request.ip,\n  weight: request.weight\n});\nconst marshalDomainRecordGeoIPConfig = (request, defaults) => ({\n  default: request.default,\n  matches: request.matches.map(elt => marshalDomainRecordGeoIPConfigMatch(elt))\n});\nconst marshalDomainRecordHTTPServiceConfig = (request, defaults) => ({\n  ips: request.ips,\n  must_contain: request.mustContain,\n  strategy: request.strategy,\n  url: request.url,\n  user_agent: request.userAgent\n});\nconst marshalDomainRecordViewConfig = (request, defaults) => ({\n  views: request.views.map(elt => marshalDomainRecordViewConfigView(elt))\n});\nconst marshalDomainRecordWeightedConfig = (request, defaults) => ({\n  weighted_ips: request.weightedIps.map(elt => marshalDomainRecordWeightedConfigWeightedIP(elt))\n});\nconst marshalDomainRecord = (request, defaults) => ({\n  comment: request.comment,\n  data: request.data,\n  id: request.id,\n  name: request.name,\n  priority: request.priority,\n  ttl: request.ttl,\n  type: request.type,\n  ...resolveOneOf([{\n    param: 'geo_ip_config',\n    value: request.geoIpConfig !== undefined ? marshalDomainRecordGeoIPConfig(request.geoIpConfig) : undefined\n  }, {\n    param: 'http_service_config',\n    value: request.httpServiceConfig !== undefined ? marshalDomainRecordHTTPServiceConfig(request.httpServiceConfig) : undefined\n  }, {\n    param: 'weighted_config',\n    value: request.weightedConfig !== undefined ? marshalDomainRecordWeightedConfig(request.weightedConfig) : undefined\n  }, {\n    param: 'view_config',\n    value: request.viewConfig !== undefined ? marshalDomainRecordViewConfig(request.viewConfig) : undefined\n  }])\n});\nconst marshalRecordIdentifier = (request, defaults) => ({\n  data: request.data,\n  name: request.name,\n  ttl: request.ttl,\n  type: request.type\n});\nconst marshalRecordChangeAdd = (request, defaults) => ({\n  records: request.records.map(elt => marshalDomainRecord(elt))\n});\nconst marshalRecordChangeClear = (request, defaults) => ({});\nconst marshalRecordChangeDelete = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'id',\n    value: request.id\n  }, {\n    param: 'id_fields',\n    value: request.idFields !== undefined ? marshalRecordIdentifier(request.idFields) : undefined\n  }])\n});\nconst marshalRecordChangeSet = (request, defaults) => ({\n  records: request.records.map(elt => marshalDomainRecord(elt)),\n  ...resolveOneOf([{\n    param: 'id',\n    value: request.id\n  }, {\n    param: 'id_fields',\n    value: request.idFields !== undefined ? marshalRecordIdentifier(request.idFields) : undefined\n  }])\n});\nconst marshalRecordChange = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'add',\n    value: request.add !== undefined ? marshalRecordChangeAdd(request.add) : undefined\n  }, {\n    param: 'set',\n    value: request.set !== undefined ? marshalRecordChangeSet(request.set) : undefined\n  }, {\n    param: 'delete',\n    value: request.delete !== undefined ? marshalRecordChangeDelete(request.delete) : undefined\n  }, {\n    param: 'clear',\n    value: request.clear !== undefined ? marshalRecordChangeClear(request.clear) : undefined\n  }])\n});\nconst marshalUpdateDNSZoneRecordsRequest = (request, defaults) => ({\n  changes: request.changes.map(elt => marshalRecordChange(elt)),\n  disallow_new_zone_creation: request.disallowNewZoneCreation,\n  return_all_records: request.returnAllRecords,\n  serial: request.serial\n});\nconst marshalUpdateDNSZoneRequest = (request, defaults) => ({\n  new_dns_zone: request.newDnsZone,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$o = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * Domains and DNS API.\n *\n * Manage your domains, DNS zones and records with the Domains and DNS API.\n */\nlet API$o = class API extends API$z {\n  pageOfListDNSZones = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/dns-zones`,\n    urlParams: urlParams(['created_after', request.createdAfter], ['created_before', request.createdBefore], ['dns_zone', request.dnsZone], ['dns_zones', request.dnsZones], ['domain', request.domain], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['updated_after', request.updatedAfter], ['updated_before', request.updatedBefore])\n  }, unmarshalListDNSZonesResponse);\n\n  /**\n   * List DNS zones. Retrieve the list of DNS zones you can manage and filter\n   * DNS zones associated with specific domain names.\n   *\n   * @param request - The request {@link ListDNSZonesRequest}\n   * @returns A Promise of ListDNSZonesResponse\n   */\n  listDNSZones = request => enrichForPagination('dnsZones', this.pageOfListDNSZones, request);\n\n  /**\n   * Create a DNS zone. Create a new DNS zone specified by the domain name, the\n   * subdomain and the Project ID.\n   *\n   * @param request - The request {@link CreateDNSZoneRequest}\n   * @returns A Promise of DNSZone\n   */\n  createDNSZone = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateDNSZoneRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/dns-zones`\n  }, unmarshalDNSZone);\n\n  /**\n   * Update a DNS zone. Update the name and/or the Organizations for a DNS zone.\n   *\n   * @param request - The request {@link UpdateDNSZoneRequest}\n   * @returns A Promise of DNSZone\n   */\n  updateDNSZone = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateDNSZoneRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'PATCH',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}`\n  }, unmarshalDNSZone);\n\n  /**\n   * Clone a DNS zone. Clone an existing DNS zone with all its records into a\n   * new DNS zone.\n   *\n   * @param request - The request {@link CloneDNSZoneRequest}\n   * @returns A Promise of DNSZone\n   */\n  cloneDNSZone = request => this.client.fetch({\n    body: JSON.stringify(marshalCloneDNSZoneRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}/clone`\n  }, unmarshalDNSZone);\n\n  /**\n   * Delete a DNS zone. Delete a DNS zone and all its records.\n   *\n   * @param request - The request {@link DeleteDNSZoneRequest}\n   * @returns A Promise of DeleteDNSZoneResponse\n   */\n  deleteDNSZone = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}`,\n    urlParams: urlParams(['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalDeleteDNSZoneResponse);\n  pageOfListDNSZoneRecords = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}/records`,\n    urlParams: urlParams(['id', request.id], ['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['type', request.type])\n  }, unmarshalListDNSZoneRecordsResponse);\n\n  /**\n   * List records within a DNS zone. Retrieve a list of DNS records within a DNS\n   * zone that has default name servers. You can filter records by type and\n   * name.\n   *\n   * @param request - The request {@link ListDNSZoneRecordsRequest}\n   * @returns A Promise of ListDNSZoneRecordsResponse\n   */\n  listDNSZoneRecords = request => enrichForPagination('records', this.pageOfListDNSZoneRecords, request);\n\n  /**\n   * Update records within a DNS zone. Update records within a DNS zone that has\n   * default name servers and perform several actions on your records.\n   *\n   * Actions include:\n   *\n   * - Add: allows you to add a new record or add a new IP to an existing A\n   *   record, for example\n   * - Set: allows you to edit a record or edit an IP from an existing A record,\n   *   for example\n   * - Delete: allows you to delete a record or delete an IP from an existing A\n   *   record, for example\n   * - Clear: allows you to delete all records from a DNS zone\n   *\n   * All edits will be versioned.\n   *\n   * @param request - The request {@link UpdateDNSZoneRecordsRequest}\n   * @returns A Promise of UpdateDNSZoneRecordsResponse\n   */\n  updateDNSZoneRecords = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateDNSZoneRecordsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'PATCH',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}/records`\n  }, unmarshalUpdateDNSZoneRecordsResponse);\n\n  /**\n   * List name servers within a DNS zone. Retrieve a list of name servers within\n   * a DNS zone and their optional glue records.\n   *\n   * @param request - The request {@link ListDNSZoneNameserversRequest}\n   * @returns A Promise of ListDNSZoneNameserversResponse\n   */\n  listDNSZoneNameservers = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}/nameservers`,\n    urlParams: urlParams(['project_id', request.projectId])\n  }, unmarshalListDNSZoneNameserversResponse);\n\n  /**\n   * Update name servers within a DNS zone. Update name servers within a DNS\n   * zone and set optional glue records.\n   *\n   * @param request - The request {@link UpdateDNSZoneNameserversRequest}\n   * @returns A Promise of UpdateDNSZoneNameserversResponse\n   */\n  updateDNSZoneNameservers = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateDNSZoneNameserversRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'PUT',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}/nameservers`\n  }, unmarshalUpdateDNSZoneNameserversResponse);\n\n  /**\n   * Clear records within a DNS zone. Delete all records within a DNS zone that\n   * has default name servers.<br/> All edits will be versioned.\n   *\n   * @param request - The request {@link ClearDNSZoneRecordsRequest}\n   * @returns A Promise of ClearDNSZoneRecordsResponse\n   */\n  clearDNSZoneRecords = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}/records`\n  }, unmarshalClearDNSZoneRecordsResponse);\n\n  /**\n   * Export a raw DNS zone. Export a DNS zone with default name servers, in a\n   * specific format.\n   *\n   * @param request - The request {@link ExportRawDNSZoneRequest}\n   * @returns A Promise of Blob\n   */\n  exportRawDNSZone = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}/raw`,\n    urlParams: urlParams(['dl', 1], ['format', request.format]),\n    responseType: 'blob'\n  });\n\n  /**\n   * Import a raw DNS zone. Import and replace the format of records from a\n   * given provider, with default name servers.\n   *\n   * @param request - The request {@link ImportRawDNSZoneRequest}\n   * @returns A Promise of ImportRawDNSZoneResponse\n   */\n  importRawDNSZone = request => this.client.fetch({\n    body: JSON.stringify(marshalImportRawDNSZoneRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}/raw`\n  }, unmarshalImportRawDNSZoneResponse);\n\n  /**\n   * Import a DNS zone from another provider. Import and replace the format of\n   * records from a given provider, with default name servers.\n   *\n   * @param request - The request {@link ImportProviderDNSZoneRequest}\n   * @returns A Promise of ImportProviderDNSZoneResponse\n   */\n  importProviderDNSZone = request => this.client.fetch({\n    body: JSON.stringify(marshalImportProviderDNSZoneRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}/import-provider`\n  }, unmarshalImportProviderDNSZoneResponse);\n\n  /**\n   * Refresh a DNS zone. Refresh an SOA DNS zone to reload the records in the\n   * DNS zone and update the SOA serial. You can recreate the given DNS zone and\n   * its sub DNS zone if needed.\n   *\n   * @param request - The request {@link RefreshDNSZoneRequest}\n   * @returns A Promise of RefreshDNSZoneResponse\n   */\n  refreshDNSZone = request => this.client.fetch({\n    body: JSON.stringify(marshalRefreshDNSZoneRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}/refresh`\n  }, unmarshalRefreshDNSZoneResponse);\n  pageOfListDNSZoneVersions = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}/versions`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListDNSZoneVersionsResponse);\n\n  /**\n   * List versions of a DNS zone. Retrieve a list of a DNS zone's versions.<br/>\n   * The maximum version count is 100. If the count reaches this limit, the\n   * oldest version will be deleted after each new modification.\n   *\n   * @param request - The request {@link ListDNSZoneVersionsRequest}\n   * @returns A Promise of ListDNSZoneVersionsResponse\n   */\n  listDNSZoneVersions = request => enrichForPagination('versions', this.pageOfListDNSZoneVersions, request);\n  pageOfListDNSZoneVersionRecords = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/dns-zones/version/${validatePathParam('dnsZoneVersionId', request.dnsZoneVersionId)}`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListDNSZoneVersionRecordsResponse);\n\n  /**\n   * List records from a given version of a specific DNS zone. Retrieve a list\n   * of records from a specific DNS zone version.\n   *\n   * @param request - The request {@link ListDNSZoneVersionRecordsRequest}\n   * @returns A Promise of ListDNSZoneVersionRecordsResponse\n   */\n  listDNSZoneVersionRecords = request => enrichForPagination('records', this.pageOfListDNSZoneVersionRecords, request);\n\n  /**\n   * Access differences from a specific DNS zone version. Access a previous DNS\n   * zone version to see the differences from another specific version.\n   *\n   * @param request - The request {@link GetDNSZoneVersionDiffRequest}\n   * @returns A Promise of GetDNSZoneVersionDiffResponse\n   */\n  getDNSZoneVersionDiff = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/dns-zones/version/${validatePathParam('dnsZoneVersionId', request.dnsZoneVersionId)}/diff`\n  }, unmarshalGetDNSZoneVersionDiffResponse);\n\n  /**\n   * Restore a DNS zone version. Restore and activate a version of a specific\n   * DNS zone.\n   *\n   * @param request - The request {@link RestoreDNSZoneVersionRequest}\n   * @returns A Promise of RestoreDNSZoneVersionResponse\n   */\n  restoreDNSZoneVersion = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/dns-zones/version/${validatePathParam('dnsZoneVersionId', request.dnsZoneVersionId)}/restore`\n  }, unmarshalRestoreDNSZoneVersionResponse);\n\n  /**\n   * Get a DNS zone's TLS certificate. Get the DNS zone's TLS certificate. If\n   * you do not have a certificate, the ouptut returns `no certificate found`.\n   *\n   * @param request - The request {@link GetSSLCertificateRequest}\n   * @returns A Promise of SSLCertificate\n   */\n  getSSLCertificate = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/ssl-certificates/${validatePathParam('dnsZone', request.dnsZone)}`\n  }, unmarshalSSLCertificate);\n\n  /**\n   * Waits for {@link SSLCertificate} to be in a final state.\n   *\n   * @param request - The request {@link GetSSLCertificateRequest}\n   * @param options - The waiting options\n   * @returns A Promise of SSLCertificate\n   */\n  waitForSSLCertificate = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!SSL_CERTIFICATE_TRANSIENT_STATUSES.includes(res.status))), this.getSSLCertificate, request, options);\n\n  /**\n   * Create or get the DNS zone's TLS certificate. Create a new TLS certificate\n   * or retrieve information about an existing TLS certificate.\n   *\n   * @param request - The request {@link CreateSSLCertificateRequest}\n   * @returns A Promise of SSLCertificate\n   */\n  createSSLCertificate = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateSSLCertificateRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/ssl-certificates`\n  }, unmarshalSSLCertificate);\n  pageOfListSSLCertificates = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/ssl-certificates`,\n    urlParams: urlParams(['dns_zone', request.dnsZone], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListSSLCertificatesResponse);\n\n  /**\n   * List a user's TLS certificates. List all the TLS certificates a user has\n   * created, specified by the user's Project ID and the DNS zone.\n   *\n   * @param request - The request {@link ListSSLCertificatesRequest}\n   * @returns A Promise of ListSSLCertificatesResponse\n   */\n  listSSLCertificates = request => enrichForPagination('certificates', this.pageOfListSSLCertificates, request);\n\n  /**\n   * Delete a TLS certificate. Delete an existing TLS certificate specified by\n   * its DNS zone. Deleting a TLS certificate is permanent and cannot be\n   * undone.\n   *\n   * @param request - The request {@link DeleteSSLCertificateRequest}\n   * @returns A Promise of DeleteSSLCertificateResponse\n   */\n  deleteSSLCertificate = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/domain/v2beta1/ssl-certificates/${validatePathParam('dnsZone', request.dnsZone)}`\n  }, unmarshalDeleteSSLCertificateResponse);\n\n  /**\n   * Get the DNS zone's TSIG key. Retrieve information about the TSIG key of a\n   * given DNS zone to allow AXFR requests.\n   *\n   * @param request - The request {@link GetDNSZoneTsigKeyRequest}\n   * @returns A Promise of GetDNSZoneTsigKeyResponse\n   */\n  getDNSZoneTsigKey = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}/tsig-key`\n  }, unmarshalGetDNSZoneTsigKeyResponse);\n\n  /**\n   * Delete the DNS zone's TSIG key. Delete an existing TSIG key specified by\n   * its DNS zone. Deleting a TSIG key is permanent and cannot be undone.\n   *\n   * @param request - The request {@link DeleteDNSZoneTsigKeyRequest}\n   */\n  deleteDNSZoneTsigKey = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/domain/v2beta1/dns-zones/${validatePathParam('dnsZone', request.dnsZone)}/tsig-key`\n  });\n};\n\n/**\n * Domains and DNS - Registrar API.\n *\n * Manage your domains and contacts.\n */\nclass RegistrarAPI extends API$z {\n  pageOfListTasks = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/tasks`,\n    urlParams: urlParams(['domain', request.domain], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['statuses', request.statuses], ['types', request.types])\n  }, unmarshalListTasksResponse);\n\n  /**\n   * List tasks. List all operations performed on the account. You can filter\n   * the list of tasks by domain name.\n   *\n   * @param request - The request {@link RegistrarApiListTasksRequest}\n   * @returns A Promise of ListTasksResponse\n   */\n  listTasks = (request = {}) => enrichForPagination('tasks', this.pageOfListTasks, request);\n\n  /**\n   * Purchase domains. Request the registration of domain names. You can provide\n   * a domain's already existing contact or a new contact.\n   *\n   * @param request - The request {@link RegistrarApiBuyDomainsRequest}\n   * @returns A Promise of OrderResponse\n   */\n  buyDomains = request => this.client.fetch({\n    body: JSON.stringify(marshalRegistrarApiBuyDomainsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/buy-domains`\n  }, unmarshalOrderResponse);\n\n  /**\n   * Renew domains. Request the renewal of one or more domain names.\n   *\n   * @param request - The request {@link RegistrarApiRenewDomainsRequest}\n   * @returns A Promise of OrderResponse\n   */\n  renewDomains = request => this.client.fetch({\n    body: JSON.stringify(marshalRegistrarApiRenewDomainsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/renew-domains`\n  }, unmarshalOrderResponse);\n\n  /**\n   * Transfer a domain. Request the transfer of a domain from another registrar\n   * to Scaleway Domains and DNS.\n   *\n   * @param request - The request {@link RegistrarApiTransferInDomainRequest}\n   * @returns A Promise of OrderResponse\n   */\n  transferInDomain = request => this.client.fetch({\n    body: JSON.stringify(marshalRegistrarApiTransferInDomainRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/domains/transfer-domains`\n  }, unmarshalOrderResponse);\n\n  /**\n   * Trade a domain's contact. Request to change a domain's contact owner.<br/>\n   * If you specify the `organization_id` of the domain's new owner, the contact\n   * will change from the current owner's Scaleway account to the new owner's\n   * Scaleway account.<br/> If the new owner's current contact information is\n   * not available, the first ever contact they have created for previous\n   * domains is taken into account to operate the change.<br/> If the new owner\n   * has never created a contact to register domains before, an error message\n   * displays.\n   *\n   * @param request - The request {@link RegistrarApiTradeDomainRequest}\n   * @returns A Promise of OrderResponse\n   */\n  tradeDomain = request => this.client.fetch({\n    body: JSON.stringify(marshalRegistrarApiTradeDomainRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}/trade`\n  }, unmarshalOrderResponse);\n\n  /**\n   * Register an external domain. Request the registration of an external domain\n   * name.\n   *\n   * @param request - The request\n   *   {@link RegistrarApiRegisterExternalDomainRequest}\n   * @returns A Promise of RegisterExternalDomainResponse\n   */\n  registerExternalDomain = request => this.client.fetch({\n    body: JSON.stringify(marshalRegistrarApiRegisterExternalDomainRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/external-domains`\n  }, unmarshalRegisterExternalDomainResponse);\n\n  /**\n   * Delete an external domain. Delete an external domain name.\n   *\n   * @param request - The request {@link RegistrarApiDeleteExternalDomainRequest}\n   * @returns A Promise of DeleteExternalDomainResponse\n   */\n  deleteExternalDomain = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/domain/v2beta1/external-domains/${validatePathParam('domain', request.domain)}`\n  }, unmarshalDeleteExternalDomainResponse);\n\n  /**\n   * Check if contacts are compatible with a domain or a TLD. Check whether\n   * contacts are compatible with a domain or a TLD. If contacts are not\n   * compatible with either the domain or the TLD, the information that needs to\n   * be corrected is returned.\n   *\n   * @param request - The request\n   *   {@link RegistrarApiCheckContactsCompatibilityRequest}\n   * @returns A Promise of CheckContactsCompatibilityResponse\n   */\n  checkContactsCompatibility = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalRegistrarApiCheckContactsCompatibilityRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/check-contacts-compatibility`\n  }, unmarshalCheckContactsCompatibilityResponse);\n  pageOfListContacts = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/contacts`,\n    urlParams: urlParams(['domain', request.domain], ['email_status', request.emailStatus], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['role', request.role])\n  }, unmarshalListContactsResponse);\n\n  /**\n   * List contacts. Retrieve the list of contacts and their associated domains\n   * and roles. You can filter the list by domain name.\n   *\n   * @param request - The request {@link RegistrarApiListContactsRequest}\n   * @returns A Promise of ListContactsResponse\n   */\n  listContacts = (request = {}) => enrichForPagination('contacts', this.pageOfListContacts, request);\n\n  /**\n   * Get a contact. Retrieve a contact's details from the registrar using the\n   * given contact's ID.\n   *\n   * @param request - The request {@link RegistrarApiGetContactRequest}\n   * @returns A Promise of Contact\n   */\n  getContact = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/contacts/${validatePathParam('contactId', request.contactId)}`\n  }, unmarshalContact);\n\n  /**\n   * Update contact. Edit the contact's information.\n   *\n   * @param request - The request {@link RegistrarApiUpdateContactRequest}\n   * @returns A Promise of Contact\n   */\n  updateContact = request => this.client.fetch({\n    body: JSON.stringify(marshalRegistrarApiUpdateContactRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'PATCH',\n    path: `/domain/v2beta1/contacts/${validatePathParam('contactId', request.contactId)}`\n  }, unmarshalContact);\n  pageOfListDomains = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/domains`,\n    urlParams: urlParams(['domain', request.domain], ['is_external', request.isExternal], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['registrar', request.registrar], ['status', request.status])\n  }, unmarshalListDomainsResponse$2);\n\n  /**\n   * List domains. Retrieve the list of domains you own.\n   *\n   * @param request - The request {@link RegistrarApiListDomainsRequest}\n   * @returns A Promise of ListDomainsResponse\n   */\n  listDomains = (request = {}) => enrichForPagination('domains', this.pageOfListDomains, request);\n  pageOfListRenewableDomains = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/renewable-domains`,\n    urlParams: urlParams(['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListRenewableDomainsResponse);\n\n  /**\n   * List domains that can be renewed. Retrieve the list of domains you own that\n   * can be renewed. You can also see the maximum renewal duration in years for\n   * your domains that are renewable.\n   *\n   * @param request - The request {@link RegistrarApiListRenewableDomainsRequest}\n   * @returns A Promise of ListRenewableDomainsResponse\n   */\n  listRenewableDomains = (request = {}) => enrichForPagination('domains', this.pageOfListRenewableDomains, request);\n\n  /**\n   * Get domain. Retrieve a specific domain and display the domain's\n   * information.\n   *\n   * @param request - The request {@link RegistrarApiGetDomainRequest}\n   * @returns A Promise of Domain\n   */\n  getDomain = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}`\n  }, unmarshalDomain$2);\n\n  /**\n   * Waits for {@link Domain} to be in a final state.\n   *\n   * @param request - The request {@link RegistrarApiGetDomainRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Domain\n   */\n  waitForDomain = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!DOMAIN_TRANSIENT_STATUSES$2.includes(res.status))), this.getDomain, request, options);\n\n  /**\n   * Update a domain's contacts. Update contacts for a specific domain or create\n   * a new contact.<br/> If you add the same contact for multiple roles (owner,\n   * administrative, technical), only one ID will be created and used for all of\n   * the roles.\n   *\n   * @param request - The request {@link RegistrarApiUpdateDomainRequest}\n   * @returns A Promise of Domain\n   */\n  updateDomain = request => this.client.fetch({\n    body: JSON.stringify(marshalRegistrarApiUpdateDomainRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'PATCH',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}`\n  }, unmarshalDomain$2);\n\n  /**\n   * Lock the transfer of a domain. Lock the transfer of a domain. This means\n   * that the domain cannot be transferred and the authorization code cannot be\n   * requested to your current registrar.\n   *\n   * @param request - The request {@link RegistrarApiLockDomainTransferRequest}\n   * @returns A Promise of Domain\n   */\n  lockDomainTransfer = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}/lock-transfer`\n  }, unmarshalDomain$2);\n\n  /**\n   * Unlock the transfer of a domain. Unlock the transfer of a domain. This\n   * means that the domain can be transferred and the authorization code can be\n   * requested to your current registrar.\n   *\n   * @param request - The request {@link RegistrarApiUnlockDomainTransferRequest}\n   * @returns A Promise of Domain\n   */\n  unlockDomainTransfer = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}/unlock-transfer`\n  }, unmarshalDomain$2);\n\n  /**\n   * Enable auto renew. Enable the `auto renew` feature for a domain. This means\n   * the domain will be automatically renewed before its expiry date.\n   *\n   * @param request - The request\n   *   {@link RegistrarApiEnableDomainAutoRenewRequest}\n   * @returns A Promise of Domain\n   */\n  enableDomainAutoRenew = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}/enable-auto-renew`\n  }, unmarshalDomain$2);\n\n  /**\n   * Disable auto renew. Disable the `auto renew` feature for a domain. This\n   * means the domain will not be renewed before its expiry date.\n   *\n   * @param request - The request\n   *   {@link RegistrarApiDisableDomainAutoRenewRequest}\n   * @returns A Promise of Domain\n   */\n  disableDomainAutoRenew = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}/disable-auto-renew`\n  }, unmarshalDomain$2);\n\n  /**\n   * Get a domain's authorization code. Retrieve the authorization code to\n   * tranfer an unlocked domain. The output returns an error if the domain is\n   * locked. Some TLDs may have a different procedure to retrieve the\n   * authorization code. In that case, the information displays in the message\n   * field.\n   *\n   * @param request - The request {@link RegistrarApiGetDomainAuthCodeRequest}\n   * @returns A Promise of GetDomainAuthCodeResponse\n   */\n  getDomainAuthCode = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}/auth-code`\n  }, unmarshalGetDomainAuthCodeResponse);\n\n  /**\n   * Update domain DNSSEC. If your domain has the default Scaleway NS and uses\n   * another registrar, you have to update the DS record manually.\n   *\n   * @param request - The request {@link RegistrarApiEnableDomainDNSSECRequest}\n   * @returns A Promise of Domain\n   */\n  enableDomainDNSSEC = request => this.client.fetch({\n    body: JSON.stringify(marshalRegistrarApiEnableDomainDNSSECRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}/enable-dnssec`\n  }, unmarshalDomain$2);\n\n  /**\n   * Disable a domain's DNSSEC. Disable DNSSEC for a domain.\n   *\n   * @param request - The request {@link RegistrarApiDisableDomainDNSSECRequest}\n   * @returns A Promise of Domain\n   */\n  disableDomainDNSSEC = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}/disable-dnssec`\n  }, unmarshalDomain$2);\n\n  /**\n   * Search available domains. Search a domain or a maximum of 10 domains that\n   * are available.\n   *\n   * If the TLD list is empty or not set, the search returns the results from\n   * the most popular TLDs.\n   *\n   * @param request - The request\n   *   {@link RegistrarApiSearchAvailableDomainsRequest}\n   * @returns A Promise of SearchAvailableDomainsResponse\n   */\n  searchAvailableDomains = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/search-domains`,\n    urlParams: urlParams(['domains', request.domains], ['strict_search', request.strictSearch], ['tlds', request.tlds])\n  }, unmarshalSearchAvailableDomainsResponse);\n  pageOfListTlds = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/tlds`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['tlds', request.tlds])\n  }, unmarshalListTldsResponse);\n\n  /**\n   * List TLD offers. Retrieve the list of TLDs and offers associated with them.\n   *\n   * @param request - The request {@link RegistrarApiListTldsRequest}\n   * @returns A Promise of ListTldsResponse\n   */\n  listTlds = (request = {}) => enrichForPagination('tlds', this.pageOfListTlds, request);\n\n  /**\n   * Create a hostname for a domain. Create a hostname for a domain with glue\n   * IPs.\n   *\n   * @param request - The request {@link RegistrarApiCreateDomainHostRequest}\n   * @returns A Promise of Host\n   */\n  createDomainHost = request => this.client.fetch({\n    body: JSON.stringify(marshalRegistrarApiCreateDomainHostRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'POST',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}/hosts`\n  }, unmarshalHost);\n  pageOfListDomainHosts = request => this.client.fetch({\n    method: 'GET',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}/hosts`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListDomainHostsResponse);\n\n  /**\n   * List a domain's hostnames. List a domain's hostnames using their glue IPs.\n   *\n   * @param request - The request {@link RegistrarApiListDomainHostsRequest}\n   * @returns A Promise of ListDomainHostsResponse\n   */\n  listDomainHosts = request => enrichForPagination('hosts', this.pageOfListDomainHosts, request);\n\n  /**\n   * Update a domain's hostname. Update a domain's hostname with glue IPs.\n   *\n   * @param request - The request {@link RegistrarApiUpdateDomainHostRequest}\n   * @returns A Promise of Host\n   */\n  updateDomainHost = request => this.client.fetch({\n    body: JSON.stringify(marshalRegistrarApiUpdateDomainHostRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$o,\n    method: 'PATCH',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}/hosts/${validatePathParam('name', request.name)}`\n  }, unmarshalHost);\n\n  /**\n   * Delete a domain's hostname.\n   *\n   * @param request - The request {@link RegistrarApiDeleteDomainHostRequest}\n   * @returns A Promise of Host\n   */\n  deleteDomainHost = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/domain/v2beta1/domains/${validatePathParam('domain', request.domain)}/hosts/${validatePathParam('name', request.name)}`\n  }, unmarshalHost);\n}\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$n = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$o,\n  DNS_ZONE_TRANSIENT_STATUSES: DNS_ZONE_TRANSIENT_STATUSES,\n  DOMAIN_FEATURE_TRANSIENT_STATUSES: DOMAIN_FEATURE_TRANSIENT_STATUSES,\n  DOMAIN_REGISTRATION_STATUS_TRANSFER_TRANSIENT_STATUSES: DOMAIN_REGISTRATION_STATUS_TRANSFER_TRANSIENT_STATUSES,\n  DOMAIN_TRANSIENT_STATUSES: DOMAIN_TRANSIENT_STATUSES$2,\n  HOST_TRANSIENT_STATUSES: HOST_TRANSIENT_STATUSES,\n  RegistrarAPI: RegistrarAPI,\n  SSL_CERTIFICATE_TRANSIENT_STATUSES: SSL_CERTIFICATE_TRANSIENT_STATUSES,\n  TASK_TRANSIENT_STATUSES: TASK_TRANSIENT_STATUSES$1\n});\n\nvar index$q = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v2beta1: index_gen$n\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link FlexibleIPStatus}. */\nconst FLEXIBLE_IP_TRANSIENT_STATUSES = ['updating', 'detaching'];\n\n/** Lists transient statutes of the enum {@link MACAddressStatus}. */\nconst MAC_ADDRESS_TRANSIENT_STATUSES = ['updating', 'deleting'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalMACAddress = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'MACAddress' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    macAddress: data.mac_address,\n    macType: data.mac_type,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalFlexibleIP = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'FlexibleIP' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    id: data.id,\n    ipAddress: data.ip_address,\n    macAddress: data.mac_address ? unmarshalMACAddress(data.mac_address) : undefined,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    reverse: data.reverse,\n    serverId: data.server_id,\n    status: data.status,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalAttachFlexibleIPsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AttachFlexibleIPsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    flexibleIps: unmarshalArrayOfObject(data.flexible_ips, unmarshalFlexibleIP),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalDetachFlexibleIPsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DetachFlexibleIPsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    flexibleIps: unmarshalArrayOfObject(data.flexible_ips, unmarshalFlexibleIP),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListFlexibleIPsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListFlexibleIPsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    flexibleIps: unmarshalArrayOfObject(data.flexible_ips, unmarshalFlexibleIP),\n    totalCount: data.total_count\n  };\n};\nconst marshalAttachFlexibleIPRequest = (request, defaults) => ({\n  fips_ids: request.fipsIds,\n  server_id: request.serverId\n});\nconst marshalCreateFlexibleIPRequest = (request, defaults) => ({\n  description: request.description,\n  is_ipv6: request.isIpv6,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  reverse: request.reverse,\n  server_id: request.serverId,\n  tags: request.tags\n});\nconst marshalDetachFlexibleIPRequest = (request, defaults) => ({\n  fips_ids: request.fipsIds\n});\nconst marshalDuplicateMACAddrRequest = (request, defaults) => ({\n  duplicate_from_fip_id: request.duplicateFromFipId\n});\nconst marshalGenerateMACAddrRequest = (request, defaults) => ({\n  mac_type: request.macType\n});\nconst marshalMoveMACAddrRequest = (request, defaults) => ({\n  dst_fip_id: request.dstFipId\n});\nconst marshalUpdateFlexibleIPRequest = (request, defaults) => ({\n  description: request.description,\n  reverse: request.reverse,\n  tags: request.tags\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$n = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Elastic Metal - Flexible IP API. */\nlet API$n = class API extends API$z {\n  /** Lists the available zones of the API. */\n  static LOCALITIES = ['fr-par-1', 'fr-par-2', 'nl-ams-1'];\n\n  /**\n   * Create a new flexible IP. Generate a new flexible IP within a given zone,\n   * specifying its configuration including Project ID and description.\n   *\n   * @param request - The request {@link CreateFlexibleIPRequest}\n   * @returns A Promise of FlexibleIP\n   */\n  createFlexibleIP = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateFlexibleIPRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$n,\n    method: 'POST',\n    path: `/flexible-ip/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/fips`\n  }, unmarshalFlexibleIP);\n\n  /**\n   * Get an existing flexible IP. Retrieve information about an existing\n   * flexible IP, specified by its ID and zone. Its full details, including\n   * Project ID, description and status, are returned in the response object.\n   *\n   * @param request - The request {@link GetFlexibleIPRequest}\n   * @returns A Promise of FlexibleIP\n   */\n  getFlexibleIP = request => this.client.fetch({\n    method: 'GET',\n    path: `/flexible-ip/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/fips/${validatePathParam('fipId', request.fipId)}`\n  }, unmarshalFlexibleIP);\n\n  /**\n   * Waits for {@link FlexibleIP} to be in a final state.\n   *\n   * @param request - The request {@link GetFlexibleIPRequest}\n   * @param options - The waiting options\n   * @returns A Promise of FlexibleIP\n   */\n  waitForFlexibleIP = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!FLEXIBLE_IP_TRANSIENT_STATUSES.includes(res.status))), this.getFlexibleIP, request, options);\n  pageOfListFlexibleIPs = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/flexible-ip/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/fips`,\n    urlParams: urlParams(['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['server_ids', request.serverIds], ['status', request.status], ['tags', request.tags])\n  }, unmarshalListFlexibleIPsResponse);\n\n  /**\n   * List flexible IPs. List all flexible IPs within a given zone.\n   *\n   * @param request - The request {@link ListFlexibleIPsRequest}\n   * @returns A Promise of ListFlexibleIPsResponse\n   */\n  listFlexibleIPs = (request = {}) => enrichForPagination('flexibleIps', this.pageOfListFlexibleIPs, request);\n\n  /**\n   * Update an existing flexible IP. Update the parameters of an existing\n   * flexible IP, specified by its ID and zone. These parameters include tags\n   * and description.\n   *\n   * @param request - The request {@link UpdateFlexibleIPRequest}\n   * @returns A Promise of FlexibleIP\n   */\n  updateFlexibleIP = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateFlexibleIPRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$n,\n    method: 'PATCH',\n    path: `/flexible-ip/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/fips/${validatePathParam('fipId', request.fipId)}`\n  }, unmarshalFlexibleIP);\n\n  /**\n   * Delete an existing flexible IP. Delete an existing flexible IP, specified\n   * by its ID and zone. Note that deleting a flexible IP is permanent and\n   * cannot be undone.\n   *\n   * @param request - The request {@link DeleteFlexibleIPRequest}\n   */\n  deleteFlexibleIP = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/flexible-ip/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/fips/${validatePathParam('fipId', request.fipId)}`\n  });\n\n  /**\n   * Attach an existing flexible IP to a server. Attach an existing flexible IP\n   * to a specified Elastic Metal server.\n   *\n   * @param request - The request {@link AttachFlexibleIPRequest}\n   * @returns A Promise of AttachFlexibleIPsResponse\n   */\n  attachFlexibleIP = request => this.client.fetch({\n    body: JSON.stringify(marshalAttachFlexibleIPRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$n,\n    method: 'POST',\n    path: `/flexible-ip/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/fips/attach`\n  }, unmarshalAttachFlexibleIPsResponse);\n\n  /**\n   * Detach an existing flexible IP from a server. Detach an existing flexible\n   * IP from a specified Elastic Metal server.\n   *\n   * @param request - The request {@link DetachFlexibleIPRequest}\n   * @returns A Promise of DetachFlexibleIPsResponse\n   */\n  detachFlexibleIP = request => this.client.fetch({\n    body: JSON.stringify(marshalDetachFlexibleIPRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$n,\n    method: 'POST',\n    path: `/flexible-ip/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/fips/detach`\n  }, unmarshalDetachFlexibleIPsResponse);\n\n  /**\n   * Generate a virtual MAC address on an existing flexible IP. Generate a\n   * virtual MAC (Media Access Control) address on an existing flexible IP.\n   *\n   * @param request - The request {@link GenerateMACAddrRequest}\n   * @returns A Promise of FlexibleIP\n   */\n  generateMACAddr = request => this.client.fetch({\n    body: JSON.stringify(marshalGenerateMACAddrRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$n,\n    method: 'POST',\n    path: `/flexible-ip/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/fips/${validatePathParam('fipId', request.fipId)}/mac`\n  }, unmarshalFlexibleIP);\n\n  /**\n   * Duplicate a virtual MAC address to another flexible IP. Duplicate a virtual\n   * MAC address from a given flexible IP to another flexible IP attached to the\n   * same server.\n   *\n   * @param request - The request {@link DuplicateMACAddrRequest}\n   * @returns A Promise of FlexibleIP\n   */\n  duplicateMACAddr = request => this.client.fetch({\n    body: JSON.stringify(marshalDuplicateMACAddrRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$n,\n    method: 'POST',\n    path: `/flexible-ip/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/fips/${validatePathParam('fipId', request.fipId)}/mac/duplicate`\n  }, unmarshalFlexibleIP);\n\n  /**\n   * Relocate an existing virtual MAC address to a different flexible IP.\n   * Relocate a virtual MAC (Media Access Control) address from an existing\n   * flexible IP to a different flexible IP.\n   *\n   * @param request - The request {@link MoveMACAddrRequest}\n   * @returns A Promise of FlexibleIP\n   */\n  moveMACAddr = request => this.client.fetch({\n    body: JSON.stringify(marshalMoveMACAddrRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$n,\n    method: 'POST',\n    path: `/flexible-ip/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/fips/${validatePathParam('fipId', request.fipId)}/mac/move`\n  }, unmarshalFlexibleIP);\n\n  /**\n   * Detach a given virtual MAC address from an existing flexible IP. Detach a\n   * given MAC (Media Access Control) address from an existing flexible IP.\n   *\n   * @param request - The request {@link DeleteMACAddrRequest}\n   */\n  deleteMACAddr = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/flexible-ip/v1alpha1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/fips/${validatePathParam('fipId', request.fipId)}/mac`\n  });\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst ListFlexibleIPsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\n\nvar validationRules_gen$a = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ListFlexibleIPsRequest: ListFlexibleIPsRequest\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$m = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$n,\n  FLEXIBLE_IP_TRANSIENT_STATUSES: FLEXIBLE_IP_TRANSIENT_STATUSES,\n  MAC_ADDRESS_TRANSIENT_STATUSES: MAC_ADDRESS_TRANSIENT_STATUSES,\n  ValidationRules: validationRules_gen$a\n});\n\nvar index$p = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1alpha1: index_gen$m\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link CronStatus}. */\nconst CRON_TRANSIENT_STATUSES = ['deleting', 'creating', 'pending'];\n\n/** Lists transient statutes of the enum {@link DomainStatus}. */\nconst DOMAIN_TRANSIENT_STATUSES$1 = ['deleting', 'creating', 'pending'];\n\n/** Lists transient statutes of the enum {@link FunctionStatus}. */\nconst FUNCTION_TRANSIENT_STATUSES = ['deleting', 'creating', 'pending'];\n\n/** Lists transient statutes of the enum {@link NamespaceStatus}. */\nconst NAMESPACE_TRANSIENT_STATUSES$1 = ['deleting', 'creating', 'pending'];\n\n/** Lists transient statutes of the enum {@link TokenStatus}. */\nconst TOKEN_TRANSIENT_STATUSES = ['deleting', 'creating'];\n\n/** Lists transient statutes of the enum {@link TriggerStatus}. */\nconst TRIGGER_TRANSIENT_STATUSES = ['deleting', 'creating', 'pending'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalCron = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Cron' failed as data isn't a dictionary.`);\n  }\n  return {\n    args: data.args,\n    functionId: data.function_id,\n    id: data.id,\n    name: data.name,\n    schedule: data.schedule,\n    status: data.status\n  };\n};\nconst unmarshalDomain$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Domain' failed as data isn't a dictionary.`);\n  }\n  return {\n    errorMessage: data.error_message,\n    functionId: data.function_id,\n    hostname: data.hostname,\n    id: data.id,\n    status: data.status,\n    url: data.url\n  };\n};\nconst unmarshalSecretHashedValue = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SecretHashedValue' failed as data isn't a dictionary.`);\n  }\n  return {\n    hashedValue: data.hashed_value,\n    key: data.key\n  };\n};\nconst unmarshalFunction = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Function' failed as data isn't a dictionary.`);\n  }\n  return {\n    buildMessage: data.build_message,\n    cpuLimit: data.cpu_limit,\n    description: data.description,\n    domainName: data.domain_name,\n    environmentVariables: data.environment_variables,\n    errorMessage: data.error_message,\n    handler: data.handler,\n    httpOption: data.http_option,\n    id: data.id,\n    maxScale: data.max_scale,\n    memoryLimit: data.memory_limit,\n    minScale: data.min_scale,\n    name: data.name,\n    namespaceId: data.namespace_id,\n    privacy: data.privacy,\n    region: data.region,\n    runtime: data.runtime,\n    runtimeMessage: data.runtime_message,\n    secretEnvironmentVariables: unmarshalArrayOfObject(data.secret_environment_variables, unmarshalSecretHashedValue),\n    status: data.status,\n    timeout: data.timeout\n  };\n};\nconst unmarshalNamespace$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Namespace' failed as data isn't a dictionary.`);\n  }\n  return {\n    description: data.description,\n    environmentVariables: data.environment_variables,\n    errorMessage: data.error_message,\n    id: data.id,\n    name: data.name,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    region: data.region,\n    registryEndpoint: data.registry_endpoint,\n    registryNamespaceId: data.registry_namespace_id,\n    secretEnvironmentVariables: unmarshalArrayOfObject(data.secret_environment_variables, unmarshalSecretHashedValue),\n    status: data.status\n  };\n};\nconst unmarshalToken = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Token' failed as data isn't a dictionary.`);\n  }\n  return {\n    description: data.description,\n    expiresAt: unmarshalDate(data.expires_at),\n    functionId: data.function_id,\n    id: data.id,\n    namespaceId: data.namespace_id,\n    publicKey: data.public_key,\n    status: data.status,\n    token: data.token\n  };\n};\nconst unmarshalTriggerMnqNatsClientConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'TriggerMnqNatsClientConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    mnqCredentialId: data.mnq_credential_id,\n    mnqNatsAccountId: data.mnq_nats_account_id,\n    mnqProjectId: data.mnq_project_id,\n    mnqRegion: data.mnq_region,\n    subject: data.subject\n  };\n};\nconst unmarshalTriggerMnqSqsClientConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'TriggerMnqSqsClientConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    mnqCredentialId: data.mnq_credential_id,\n    mnqProjectId: data.mnq_project_id,\n    mnqRegion: data.mnq_region,\n    queue: data.queue\n  };\n};\nconst unmarshalTriggerSqsClientConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'TriggerSqsClientConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    accessKey: data.access_key,\n    endpoint: data.endpoint,\n    queueUrl: data.queue_url,\n    secretKey: data.secret_key\n  };\n};\nconst unmarshalTrigger = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Trigger' failed as data isn't a dictionary.`);\n  }\n  return {\n    description: data.description,\n    errorMessage: data.error_message,\n    functionId: data.function_id,\n    id: data.id,\n    inputType: data.input_type,\n    name: data.name,\n    scwNatsConfig: data.scw_nats_config ? unmarshalTriggerMnqNatsClientConfig(data.scw_nats_config) : undefined,\n    scwSqsConfig: data.scw_sqs_config ? unmarshalTriggerMnqSqsClientConfig(data.scw_sqs_config) : undefined,\n    sqsConfig: data.sqs_config ? unmarshalTriggerSqsClientConfig(data.sqs_config) : undefined,\n    status: data.status\n  };\n};\nconst unmarshalDownloadURL = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DownloadURL' failed as data isn't a dictionary.`);\n  }\n  return {\n    headers: data.headers,\n    url: data.url\n  };\n};\nconst unmarshalListCronsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListCronsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    crons: unmarshalArrayOfObject(data.crons, unmarshalCron),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListDomainsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDomainsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    domains: unmarshalArrayOfObject(data.domains, unmarshalDomain$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalRuntime = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Runtime' failed as data isn't a dictionary.`);\n  }\n  return {\n    codeSample: data.code_sample,\n    defaultHandler: data.default_handler,\n    extension: data.extension,\n    implementation: data.implementation,\n    language: data.language,\n    logoUrl: data.logo_url,\n    name: data.name,\n    status: data.status,\n    statusMessage: data.status_message,\n    version: data.version\n  };\n};\nconst unmarshalListFunctionRuntimesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListFunctionRuntimesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    runtimes: unmarshalArrayOfObject(data.runtimes, unmarshalRuntime),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListFunctionsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListFunctionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    functions: unmarshalArrayOfObject(data.functions, unmarshalFunction),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListNamespacesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListNamespacesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    namespaces: unmarshalArrayOfObject(data.namespaces, unmarshalNamespace$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListTokensResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTokensResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    tokens: unmarshalArrayOfObject(data.tokens, unmarshalToken),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListTriggersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTriggersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    triggers: unmarshalArrayOfObject(data.triggers, unmarshalTrigger)\n  };\n};\nconst unmarshalUploadURL = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UploadURL' failed as data isn't a dictionary.`);\n  }\n  return {\n    headers: data.headers,\n    url: data.url\n  };\n};\nconst marshalCreateCronRequest = (request, defaults) => ({\n  args: request.args,\n  function_id: request.functionId,\n  name: request.name,\n  schedule: request.schedule\n});\nconst marshalCreateDomainRequest$1 = (request, defaults) => ({\n  function_id: request.functionId,\n  hostname: request.hostname\n});\nconst marshalSecret = (request, defaults) => ({\n  key: request.key,\n  value: request.value\n});\nconst marshalCreateFunctionRequest = (request, defaults) => ({\n  description: request.description,\n  environment_variables: request.environmentVariables,\n  handler: request.handler,\n  http_option: request.httpOption,\n  max_scale: request.maxScale,\n  memory_limit: request.memoryLimit,\n  min_scale: request.minScale,\n  name: request.name || randomName('fn'),\n  namespace_id: request.namespaceId,\n  privacy: request.privacy,\n  runtime: request.runtime,\n  secret_environment_variables: request.secretEnvironmentVariables !== undefined ? request.secretEnvironmentVariables.map(elt => marshalSecret(elt)) : undefined,\n  timeout: request.timeout\n});\nconst marshalCreateNamespaceRequest$1 = (request, defaults) => ({\n  description: request.description,\n  environment_variables: request.environmentVariables,\n  name: request.name || randomName('ns'),\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  secret_environment_variables: request.secretEnvironmentVariables !== undefined ? request.secretEnvironmentVariables.map(elt => marshalSecret(elt)) : undefined\n});\nconst marshalCreateTokenRequest = (request, defaults) => ({\n  description: request.description,\n  expires_at: request.expiresAt,\n  ...resolveOneOf([{\n    param: 'function_id',\n    value: request.functionId\n  }, {\n    param: 'namespace_id',\n    value: request.namespaceId\n  }])\n});\nconst marshalCreateTriggerRequestMnqNatsClientConfig = (request, defaults) => ({\n  mnq_nats_account_id: request.mnqNatsAccountId,\n  mnq_project_id: request.mnqProjectId,\n  mnq_region: request.mnqRegion,\n  subject: request.subject\n});\nconst marshalCreateTriggerRequestMnqSqsClientConfig = (request, defaults) => ({\n  mnq_project_id: request.mnqProjectId,\n  mnq_region: request.mnqRegion,\n  queue: request.queue\n});\nconst marshalCreateTriggerRequestSqsClientConfig = (request, defaults) => ({\n  access_key: request.accessKey,\n  endpoint: request.endpoint,\n  queue_url: request.queueUrl,\n  secret_key: request.secretKey\n});\nconst marshalCreateTriggerRequest = (request, defaults) => ({\n  description: request.description,\n  function_id: request.functionId,\n  name: request.name,\n  ...resolveOneOf([{\n    param: 'scw_sqs_config',\n    value: request.scwSqsConfig !== undefined ? marshalCreateTriggerRequestMnqSqsClientConfig(request.scwSqsConfig) : undefined\n  }, {\n    param: 'scw_nats_config',\n    value: request.scwNatsConfig !== undefined ? marshalCreateTriggerRequestMnqNatsClientConfig(request.scwNatsConfig) : undefined\n  }, {\n    param: 'sqs_config',\n    value: request.sqsConfig !== undefined ? marshalCreateTriggerRequestSqsClientConfig(request.sqsConfig) : undefined\n  }])\n});\nconst marshalUpdateCronRequest = (request, defaults) => ({\n  args: request.args,\n  function_id: request.functionId,\n  name: request.name,\n  schedule: request.schedule\n});\nconst marshalUpdateFunctionRequest = (request, defaults) => ({\n  description: request.description,\n  environment_variables: request.environmentVariables,\n  handler: request.handler,\n  http_option: request.httpOption,\n  max_scale: request.maxScale,\n  memory_limit: request.memoryLimit,\n  min_scale: request.minScale,\n  privacy: request.privacy,\n  redeploy: request.redeploy,\n  runtime: request.runtime,\n  secret_environment_variables: request.secretEnvironmentVariables !== undefined ? request.secretEnvironmentVariables.map(elt => marshalSecret(elt)) : undefined,\n  timeout: request.timeout\n});\nconst marshalUpdateNamespaceRequest$1 = (request, defaults) => ({\n  description: request.description,\n  environment_variables: request.environmentVariables,\n  secret_environment_variables: request.secretEnvironmentVariables !== undefined ? request.secretEnvironmentVariables.map(elt => marshalSecret(elt)) : undefined\n});\nconst marshalUpdateTriggerRequestSqsClientConfig = (request, defaults) => ({\n  access_key: request.accessKey,\n  secret_key: request.secretKey\n});\nconst marshalUpdateTriggerRequest = (request, defaults) => ({\n  description: request.description,\n  name: request.name,\n  ...resolveOneOf([{\n    param: 'sqs_config',\n    value: request.sqsConfig !== undefined ? marshalUpdateTriggerRequestSqsClientConfig(request.sqsConfig) : undefined\n  }])\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$m = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Serverless Functions API. */\nlet API$m = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n  pageOfListNamespaces = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListNamespacesResponse$1);\n\n  /**\n   * List all your namespaces. List all existing namespaces in the specified\n   * region.\n   *\n   * @param request - The request {@link ListNamespacesRequest}\n   * @returns A Promise of ListNamespacesResponse\n   */\n  listNamespaces = (request = {}) => enrichForPagination('namespaces', this.pageOfListNamespaces, request);\n\n  /**\n   * Get a namespace. Get the namespace associated with the specified ID.\n   *\n   * @param request - The request {@link GetNamespaceRequest}\n   * @returns A Promise of Namespace\n   */\n  getNamespace = request => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces/${validatePathParam('namespaceId', request.namespaceId)}`\n  }, unmarshalNamespace$1);\n\n  /**\n   * Waits for {@link Namespace} to be in a final state.\n   *\n   * @param request - The request {@link GetNamespaceRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Namespace\n   */\n  waitForNamespace = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!NAMESPACE_TRANSIENT_STATUSES$1.includes(res.status))), this.getNamespace, request, options);\n\n  /**\n   * Create a new namespace. Create a new namespace in a specified Organization\n   * or Project.\n   *\n   * @param request - The request {@link CreateNamespaceRequest}\n   * @returns A Promise of Namespace\n   */\n  createNamespace = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreateNamespaceRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$m,\n    method: 'POST',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces`\n  }, unmarshalNamespace$1);\n\n  /**\n   * Update an existing namespace. Update the namespace associated with the\n   * specified ID.\n   *\n   * @param request - The request {@link UpdateNamespaceRequest}\n   * @returns A Promise of Namespace\n   */\n  updateNamespace = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateNamespaceRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$m,\n    method: 'PATCH',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces/${validatePathParam('namespaceId', request.namespaceId)}`\n  }, unmarshalNamespace$1);\n\n  /**\n   * Delete an existing namespace. Delete the namespace associated with the\n   * specified ID.\n   *\n   * @param request - The request {@link DeleteNamespaceRequest}\n   * @returns A Promise of Namespace\n   */\n  deleteNamespace = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces/${validatePathParam('namespaceId', request.namespaceId)}`\n  }, unmarshalNamespace$1);\n  pageOfListFunctions = request => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/functions`,\n    urlParams: urlParams(['name', request.name], ['namespace_id', request.namespaceId], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListFunctionsResponse);\n\n  /**\n   * List all your functions.\n   *\n   * @param request - The request {@link ListFunctionsRequest}\n   * @returns A Promise of ListFunctionsResponse\n   */\n  listFunctions = request => enrichForPagination('functions', this.pageOfListFunctions, request);\n\n  /**\n   * Get a function. Get the function associated with the specified ID.\n   *\n   * @param request - The request {@link GetFunctionRequest}\n   * @returns A Promise of Function\n   */\n  getFunction = request => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/functions/${validatePathParam('functionId', request.functionId)}`\n  }, unmarshalFunction);\n\n  /**\n   * Waits for {@link Function} to be in a final state.\n   *\n   * @param request - The request {@link GetFunctionRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Function\n   */\n  waitForFunction = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!FUNCTION_TRANSIENT_STATUSES.includes(res.status))), this.getFunction, request, options);\n\n  /**\n   * Create a new function. Create a new function in the specified region for a\n   * specified Organization or Project.\n   *\n   * @param request - The request {@link CreateFunctionRequest}\n   * @returns A Promise of Function\n   */\n  createFunction = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateFunctionRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$m,\n    method: 'POST',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/functions`\n  }, unmarshalFunction);\n\n  /**\n   * Update an existing function. Update the function associated with the\n   * specified ID.\n   *\n   * @param request - The request {@link UpdateFunctionRequest}\n   * @returns A Promise of Function\n   */\n  updateFunction = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateFunctionRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$m,\n    method: 'PATCH',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/functions/${validatePathParam('functionId', request.functionId)}`\n  }, unmarshalFunction);\n\n  /**\n   * Delete a function. Delete the function associated with the specified ID.\n   *\n   * @param request - The request {@link DeleteFunctionRequest}\n   * @returns A Promise of Function\n   */\n  deleteFunction = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/functions/${validatePathParam('functionId', request.functionId)}`\n  }, unmarshalFunction);\n\n  /**\n   * Deploy a function. Deploy a function associated with the specified ID.\n   *\n   * @param request - The request {@link DeployFunctionRequest}\n   * @returns A Promise of Function\n   */\n  deployFunction = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$m,\n    method: 'POST',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/functions/${validatePathParam('functionId', request.functionId)}/deploy`\n  }, unmarshalFunction);\n\n  /**\n   * List function runtimes. List available function runtimes.\n   *\n   * @param request - The request {@link ListFunctionRuntimesRequest}\n   * @returns A Promise of ListFunctionRuntimesResponse\n   */\n  listFunctionRuntimes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/runtimes`\n  }, unmarshalListFunctionRuntimesResponse);\n\n  /**\n   * Get an upload URL of a function. Get an upload URL of a function associated\n   * with the specified ID.\n   *\n   * @param request - The request {@link GetFunctionUploadURLRequest}\n   * @returns A Promise of UploadURL\n   */\n  getFunctionUploadURL = request => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/functions/${validatePathParam('functionId', request.functionId)}/upload-url`,\n    urlParams: urlParams(['content_length', request.contentLength])\n  }, unmarshalUploadURL);\n\n  /**\n   * Get a download URL of a function. Get a download URL for a function\n   * associated with the specified ID.\n   *\n   * @param request - The request {@link GetFunctionDownloadURLRequest}\n   * @returns A Promise of DownloadURL\n   */\n  getFunctionDownloadURL = request => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/functions/${validatePathParam('functionId', request.functionId)}/download-url`\n  }, unmarshalDownloadURL);\n  pageOfListCrons = request => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/crons`,\n    urlParams: urlParams(['function_id', request.functionId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListCronsResponse);\n\n  /**\n   * List all crons. List all the cronjobs in a specified region.\n   *\n   * @param request - The request {@link ListCronsRequest}\n   * @returns A Promise of ListCronsResponse\n   */\n  listCrons = request => enrichForPagination('crons', this.pageOfListCrons, request);\n\n  /**\n   * Get a cron. Get the cron associated with the specified ID.\n   *\n   * @param request - The request {@link GetCronRequest}\n   * @returns A Promise of Cron\n   */\n  getCron = request => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/crons/${validatePathParam('cronId', request.cronId)}`\n  }, unmarshalCron);\n\n  /**\n   * Waits for {@link Cron} to be in a final state.\n   *\n   * @param request - The request {@link GetCronRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Cron\n   */\n  waitForCron = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!CRON_TRANSIENT_STATUSES.includes(res.status))), this.getCron, request, options);\n\n  /**\n   * Create a new cron. Create a new cronjob for a function with the specified\n   * ID.\n   *\n   * @param request - The request {@link CreateCronRequest}\n   * @returns A Promise of Cron\n   */\n  createCron = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateCronRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$m,\n    method: 'POST',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/crons`\n  }, unmarshalCron);\n\n  /**\n   * Update an existing cron. Update the cron associated with the specified ID.\n   *\n   * @param request - The request {@link UpdateCronRequest}\n   * @returns A Promise of Cron\n   */\n  updateCron = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateCronRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$m,\n    method: 'PATCH',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/crons/${validatePathParam('cronId', request.cronId)}`\n  }, unmarshalCron);\n\n  /**\n   * Delete an existing cron. Delete the cron associated with the specified ID.\n   *\n   * @param request - The request {@link DeleteCronRequest}\n   * @returns A Promise of Cron\n   */\n  deleteCron = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/crons/${validatePathParam('cronId', request.cronId)}`\n  }, unmarshalCron);\n  pageOfListDomains = request => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains`,\n    urlParams: urlParams(['function_id', request.functionId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListDomainsResponse$1);\n\n  /**\n   * List all domain name bindings. List all domain name bindings in a specified\n   * region.\n   *\n   * @param request - The request {@link ListDomainsRequest}\n   * @returns A Promise of ListDomainsResponse\n   */\n  listDomains = request => enrichForPagination('domains', this.pageOfListDomains, request);\n\n  /**\n   * Get a domain name binding. Get a domain name binding for the function with\n   * the specified ID.\n   *\n   * @param request - The request {@link GetDomainRequest}\n   * @returns A Promise of Domain\n   */\n  getDomain = request => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains/${validatePathParam('domainId', request.domainId)}`\n  }, unmarshalDomain$1);\n\n  /**\n   * Waits for {@link Domain} to be in a final state.\n   *\n   * @param request - The request {@link GetDomainRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Domain\n   */\n  waitForDomain = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!DOMAIN_TRANSIENT_STATUSES$1.includes(res.status))), this.getDomain, request, options);\n\n  /**\n   * Create a domain name binding. Create a domain name binding for the function\n   * with the specified ID.\n   *\n   * @param request - The request {@link CreateDomainRequest}\n   * @returns A Promise of Domain\n   */\n  createDomain = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateDomainRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$m,\n    method: 'POST',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains`\n  }, unmarshalDomain$1);\n\n  /**\n   * Delete a domain name binding. Delete a domain name binding for the function\n   * with the specified ID.\n   *\n   * @param request - The request {@link DeleteDomainRequest}\n   * @returns A Promise of Domain\n   */\n  deleteDomain = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains/${validatePathParam('domainId', request.domainId)}`\n  }, unmarshalDomain$1);\n\n  /**\n   * Create a JWT token. Deprecated in favor of CreateToken.\n   *\n   * @deprecated\n   * @param request - The request {@link IssueJWTRequest}\n   * @returns A Promise of Token\n   */\n  issueJWT = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/issue-jwt`,\n    urlParams: urlParams(['expires_at', request.expiresAt], ...Object.entries(resolveOneOf([{\n      param: 'function_id',\n      value: request.functionId\n    }, {\n      param: 'namespace_id',\n      value: request.namespaceId\n    }])))\n  }, unmarshalToken);\n\n  /**\n   * Create a new revocable token.\n   *\n   * @param request - The request {@link CreateTokenRequest}\n   * @returns A Promise of Token\n   */\n  createToken = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreateTokenRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$m,\n    method: 'POST',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/tokens`\n  }, unmarshalToken);\n\n  /**\n   * Get a token.\n   *\n   * @param request - The request {@link GetTokenRequest}\n   * @returns A Promise of Token\n   */\n  getToken = request => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/tokens/${validatePathParam('tokenId', request.tokenId)}`\n  }, unmarshalToken);\n\n  /**\n   * Waits for {@link Token} to be in a final state.\n   *\n   * @param request - The request {@link GetTokenRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Token\n   */\n  waitForToken = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!TOKEN_TRANSIENT_STATUSES.includes(res.status))), this.getToken, request, options);\n  pageOfListTokens = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/tokens`,\n    urlParams: urlParams(['function_id', request.functionId], ['namespace_id', request.namespaceId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListTokensResponse);\n\n  /**\n   * List all tokens.\n   *\n   * @param request - The request {@link ListTokensRequest}\n   * @returns A Promise of ListTokensResponse\n   */\n  listTokens = (request = {}) => enrichForPagination('tokens', this.pageOfListTokens, request);\n\n  /**\n   * Delete a token.\n   *\n   * @param request - The request {@link DeleteTokenRequest}\n   * @returns A Promise of Token\n   */\n  deleteToken = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/tokens/${validatePathParam('tokenId', request.tokenId)}`\n  }, unmarshalToken);\n\n  /**\n   * Create a trigger. Create a new trigger for a specified function.\n   *\n   * @param request - The request {@link CreateTriggerRequest}\n   * @returns A Promise of Trigger\n   */\n  createTrigger = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateTriggerRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$m,\n    method: 'POST',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/triggers`\n  }, unmarshalTrigger);\n\n  /**\n   * Get a trigger. Get a trigger with a specified ID.\n   *\n   * @param request - The request {@link GetTriggerRequest}\n   * @returns A Promise of Trigger\n   */\n  getTrigger = request => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/triggers/${validatePathParam('triggerId', request.triggerId)}`\n  }, unmarshalTrigger);\n\n  /**\n   * Waits for {@link Trigger} to be in a final state.\n   *\n   * @param request - The request {@link GetTriggerRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Trigger\n   */\n  waitForTrigger = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!TRIGGER_TRANSIENT_STATUSES.includes(res.status))), this.getTrigger, request, options);\n  pageOfListTriggers = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/triggers`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ...Object.entries(resolveOneOf([{\n      param: 'function_id',\n      value: request.functionId\n    }, {\n      param: 'namespace_id',\n      value: request.namespaceId\n    }, {\n      default: this.client.settings.defaultProjectId,\n      param: 'project_id',\n      value: request.projectId\n    }])))\n  }, unmarshalListTriggersResponse);\n\n  /**\n   * List all triggers. List all triggers belonging to a specified Organization\n   * or Project.\n   *\n   * @param request - The request {@link ListTriggersRequest}\n   * @returns A Promise of ListTriggersResponse\n   */\n  listTriggers = (request = {}) => enrichForPagination('triggers', this.pageOfListTriggers, request);\n\n  /**\n   * Update a trigger. Update a trigger with a specified ID.\n   *\n   * @param request - The request {@link UpdateTriggerRequest}\n   * @returns A Promise of Trigger\n   */\n  updateTrigger = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateTriggerRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$m,\n    method: 'PATCH',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/triggers/${validatePathParam('triggerId', request.triggerId)}`\n  }, unmarshalTrigger);\n\n  /**\n   * Delete a trigger. Delete a trigger with a specified ID.\n   *\n   * @param request - The request {@link DeleteTriggerRequest}\n   * @returns A Promise of Trigger\n   */\n  deleteTrigger = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/functions/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/triggers/${validatePathParam('triggerId', request.triggerId)}`\n  }, unmarshalTrigger);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst CreateTriggerRequest = {\n  description: {\n    maxLength: 255\n  },\n  name: {\n    maxLength: 50,\n    minLength: 1\n  }\n};\nconst CreateTriggerRequestMnqNatsClientConfig = {\n  mnqRegion: {\n    maxLength: 20,\n    minLength: 1\n  },\n  subject: {\n    maxLength: 100,\n    minLength: 1,\n    pattern: /^[^\\s]+$/\n  }\n};\nconst CreateTriggerRequestMnqSqsClientConfig = {\n  mnqRegion: {\n    maxLength: 20,\n    minLength: 1\n  },\n  queue: {\n    maxLength: 100,\n    minLength: 1\n  }\n};\nconst UpdateTriggerRequest = {\n  description: {\n    maxLength: 255\n  },\n  name: {\n    maxLength: 50,\n    minLength: 1\n  }\n};\n\nvar validationRules_gen$9 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CreateTriggerRequest: CreateTriggerRequest,\n  CreateTriggerRequestMnqNatsClientConfig: CreateTriggerRequestMnqNatsClientConfig,\n  CreateTriggerRequestMnqSqsClientConfig: CreateTriggerRequestMnqSqsClientConfig,\n  UpdateTriggerRequest: UpdateTriggerRequest\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$l = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$m,\n  CRON_TRANSIENT_STATUSES: CRON_TRANSIENT_STATUSES,\n  DOMAIN_TRANSIENT_STATUSES: DOMAIN_TRANSIENT_STATUSES$1,\n  FUNCTION_TRANSIENT_STATUSES: FUNCTION_TRANSIENT_STATUSES,\n  NAMESPACE_TRANSIENT_STATUSES: NAMESPACE_TRANSIENT_STATUSES$1,\n  TOKEN_TRANSIENT_STATUSES: TOKEN_TRANSIENT_STATUSES,\n  TRIGGER_TRANSIENT_STATUSES: TRIGGER_TRANSIENT_STATUSES,\n  ValidationRules: validationRules_gen$9\n});\n\nvar index$o = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1beta1: index_gen$l\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalJWT = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'JWT' failed as data isn't a dictionary.`);\n  }\n  return {\n    audienceId: data.audience_id,\n    createdAt: unmarshalDate(data.created_at),\n    expiresAt: unmarshalDate(data.expires_at),\n    ip: data.ip,\n    issuerId: data.issuer_id,\n    jti: data.jti,\n    updatedAt: unmarshalDate(data.updated_at),\n    userAgent: data.user_agent\n  };\n};\nconst unmarshalAPIKey = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'APIKey' failed as data isn't a dictionary.`);\n  }\n  return {\n    accessKey: data.access_key,\n    applicationId: data.application_id,\n    createdAt: unmarshalDate(data.created_at),\n    creationIp: data.creation_ip,\n    defaultProjectId: data.default_project_id,\n    description: data.description,\n    editable: data.editable,\n    expiresAt: unmarshalDate(data.expires_at),\n    secretKey: data.secret_key,\n    updatedAt: unmarshalDate(data.updated_at),\n    userId: data.user_id\n  };\n};\nconst unmarshalApplication = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Application' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    editable: data.editable,\n    id: data.id,\n    name: data.name,\n    nbApiKeys: data.nb_api_keys,\n    organizationId: data.organization_id,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalGroup = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Group' failed as data isn't a dictionary.`);\n  }\n  return {\n    applicationIds: data.application_ids,\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    id: data.id,\n    name: data.name,\n    organizationId: data.organization_id,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    userIds: data.user_ids\n  };\n};\nconst unmarshalLog = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Log' failed as data isn't a dictionary.`);\n  }\n  return {\n    action: data.action,\n    bearerId: data.bearer_id,\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    ip: data.ip,\n    organizationId: data.organization_id,\n    resourceId: data.resource_id,\n    resourceType: data.resource_type,\n    userAgent: data.user_agent\n  };\n};\nconst unmarshalPolicy = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Policy' failed as data isn't a dictionary.`);\n  }\n  return {\n    applicationId: data.application_id,\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    editable: data.editable,\n    groupId: data.group_id,\n    id: data.id,\n    name: data.name,\n    nbPermissionSets: data.nb_permission_sets,\n    nbRules: data.nb_rules,\n    nbScopes: data.nb_scopes,\n    noPrincipal: data.no_principal,\n    organizationId: data.organization_id,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    userId: data.user_id\n  };\n};\nconst unmarshalQuotum = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Quotum' failed as data isn't a dictionary.`);\n  }\n  return {\n    limit: data.limit,\n    name: data.name,\n    unlimited: data.unlimited\n  };\n};\nconst unmarshalSSHKey = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SSHKey' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    disabled: data.disabled,\n    fingerprint: data.fingerprint,\n    id: data.id,\n    name: data.name,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    publicKey: data.public_key,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalUser$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'User' failed as data isn't a dictionary.`);\n  }\n  return {\n    accountRootUserId: data.account_root_user_id,\n    createdAt: unmarshalDate(data.created_at),\n    deletable: data.deletable,\n    email: data.email,\n    id: data.id,\n    lastLoginAt: unmarshalDate(data.last_login_at),\n    mfa: data.mfa,\n    organizationId: data.organization_id,\n    status: data.status,\n    tags: data.tags,\n    twoFactorEnabled: data.two_factor_enabled,\n    type: data.type,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalEncodedJWT = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EncodedJWT' failed as data isn't a dictionary.`);\n  }\n  return {\n    jwt: data.jwt ? unmarshalJWT(data.jwt) : undefined,\n    renewToken: data.renew_token,\n    token: data.token\n  };\n};\nconst unmarshalListAPIKeysResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListAPIKeysResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    apiKeys: unmarshalArrayOfObject(data.api_keys, unmarshalAPIKey),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListApplicationsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListApplicationsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    applications: unmarshalArrayOfObject(data.applications, unmarshalApplication),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListGroupsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListGroupsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    groups: unmarshalArrayOfObject(data.groups, unmarshalGroup),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListJWTsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListJWTsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    jwts: unmarshalArrayOfObject(data.jwts, unmarshalJWT),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListLogsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListLogsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    logs: unmarshalArrayOfObject(data.logs, unmarshalLog),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalPermissionSet = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PermissionSet' failed as data isn't a dictionary.`);\n  }\n  return {\n    categories: data.categories,\n    description: data.description,\n    id: data.id,\n    name: data.name,\n    scopeType: data.scope_type\n  };\n};\nconst unmarshalListPermissionSetsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListPermissionSetsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    permissionSets: unmarshalArrayOfObject(data.permission_sets, unmarshalPermissionSet),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListPoliciesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListPoliciesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    policies: unmarshalArrayOfObject(data.policies, unmarshalPolicy),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListQuotaResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListQuotaResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    quota: unmarshalArrayOfObject(data.quota, unmarshalQuotum),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalRule = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Rule' failed as data isn't a dictionary.`);\n  }\n  return {\n    accountRootUserId: data.account_root_user_id,\n    id: data.id,\n    organizationId: data.organization_id,\n    permissionSetNames: data.permission_set_names,\n    permissionSetsScopeType: data.permission_sets_scope_type,\n    projectIds: data.project_ids\n  };\n};\nconst unmarshalListRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalRule),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSSHKeysResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSSHKeysResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    sshKeys: unmarshalArrayOfObject(data.ssh_keys, unmarshalSSHKey),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListUsersResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListUsersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    users: unmarshalArrayOfObject(data.users, unmarshalUser$1)\n  };\n};\nconst unmarshalSetRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalRule)\n  };\n};\nconst marshalAddGroupMemberRequest = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'user_id',\n    value: request.userId\n  }, {\n    param: 'application_id',\n    value: request.applicationId\n  }])\n});\nconst marshalAddGroupMembersRequest = (request, defaults) => ({\n  application_ids: request.applicationIds,\n  user_ids: request.userIds\n});\nconst marshalCreateAPIKeyRequest = (request, defaults) => ({\n  default_project_id: request.defaultProjectId,\n  description: request.description,\n  expires_at: request.expiresAt,\n  ...resolveOneOf([{\n    param: 'application_id',\n    value: request.applicationId\n  }, {\n    param: 'user_id',\n    value: request.userId\n  }])\n});\nconst marshalCreateApplicationRequest = (request, defaults) => ({\n  description: request.description,\n  name: request.name || randomName('app'),\n  organization_id: request.organizationId ?? defaults.defaultOrganizationId,\n  tags: request.tags\n});\nconst marshalCreateGroupRequest = (request, defaults) => ({\n  description: request.description,\n  name: request.name || randomName('grp'),\n  organization_id: request.organizationId ?? defaults.defaultOrganizationId,\n  tags: request.tags\n});\nconst marshalCreateJWTRequest = (request, defaults) => ({\n  referrer: request.referrer,\n  user_id: request.userId\n});\nconst marshalRuleSpecs = (request, defaults) => ({\n  permission_set_names: request.permissionSetNames,\n  ...resolveOneOf([{\n    param: 'project_ids',\n    value: request.projectIds\n  }, {\n    param: 'organization_id',\n    value: request.organizationId\n  }])\n});\nconst marshalCreatePolicyRequest = (request, defaults) => ({\n  description: request.description,\n  name: request.name || randomName('pol'),\n  organization_id: request.organizationId ?? defaults.defaultOrganizationId,\n  rules: request.rules !== undefined ? request.rules.map(elt => marshalRuleSpecs(elt)) : undefined,\n  tags: request.tags,\n  ...resolveOneOf([{\n    param: 'user_id',\n    value: request.userId\n  }, {\n    param: 'group_id',\n    value: request.groupId\n  }, {\n    param: 'application_id',\n    value: request.applicationId\n  }, {\n    param: 'no_principal',\n    value: request.noPrincipal\n  }])\n});\nconst marshalCreateSSHKeyRequest = (request, defaults) => ({\n  name: request.name || randomName('key'),\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  public_key: request.publicKey\n});\nconst marshalCreateUserRequest$1 = (request, defaults) => ({\n  email: request.email,\n  organization_id: request.organizationId ?? defaults.defaultOrganizationId,\n  tags: request.tags\n});\nconst marshalRemoveGroupMemberRequest = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'user_id',\n    value: request.userId\n  }, {\n    param: 'application_id',\n    value: request.applicationId\n  }])\n});\nconst marshalSetGroupMembersRequest = (request, defaults) => ({\n  application_ids: request.applicationIds,\n  user_ids: request.userIds\n});\nconst marshalSetRulesRequest = (request, defaults) => ({\n  policy_id: request.policyId,\n  rules: request.rules.map(elt => marshalRuleSpecs(elt))\n});\nconst marshalUpdateAPIKeyRequest = (request, defaults) => ({\n  default_project_id: request.defaultProjectId,\n  description: request.description\n});\nconst marshalUpdateApplicationRequest = (request, defaults) => ({\n  description: request.description,\n  name: request.name,\n  tags: request.tags\n});\nconst marshalUpdateGroupRequest = (request, defaults) => ({\n  description: request.description,\n  name: request.name,\n  tags: request.tags\n});\nconst marshalUpdatePolicyRequest = (request, defaults) => ({\n  description: request.description,\n  name: request.name,\n  tags: request.tags,\n  ...resolveOneOf([{\n    param: 'user_id',\n    value: request.userId\n  }, {\n    param: 'group_id',\n    value: request.groupId\n  }, {\n    param: 'application_id',\n    value: request.applicationId\n  }, {\n    param: 'no_principal',\n    value: request.noPrincipal\n  }])\n});\nconst marshalUpdateSSHKeyRequest = (request, defaults) => ({\n  disabled: request.disabled,\n  name: request.name\n});\nconst marshalUpdateUserRequest$1 = (request, defaults) => ({\n  tags: request.tags\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$l = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** IAM API. */\nlet API$l = class API extends API$z {\n  pageOfListSSHKeys = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/ssh-keys`,\n    urlParams: urlParams(['disabled', request.disabled], ['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListSSHKeysResponse);\n\n  /**\n   * List SSH keys. List SSH keys. By default, the SSH keys listed are ordered\n   * by creation date in ascending order. This can be modified via the\n   * `order_by` field. You can define additional parameters for your query such\n   * as `organization_id`, `name`, `project_id` and `disabled`.\n   *\n   * @param request - The request {@link ListSSHKeysRequest}\n   * @returns A Promise of ListSSHKeysResponse\n   */\n  listSSHKeys = (request = {}) => enrichForPagination('sshKeys', this.pageOfListSSHKeys, request);\n\n  /**\n   * Create an SSH key. Add a new SSH key to a Scaleway Project. You must\n   * specify the `name`, `public_key` and `project_id`.\n   *\n   * @param request - The request {@link CreateSSHKeyRequest}\n   * @returns A Promise of SSHKey\n   */\n  createSSHKey = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateSSHKeyRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'POST',\n    path: `/iam/v1alpha1/ssh-keys`\n  }, unmarshalSSHKey);\n\n  /**\n   * Get an SSH key. Retrieve information about a given SSH key, specified by\n   * the `ssh_key_id` parameter. The SSH key's full details, including `id`,\n   * `name`, `public_key`, and `project_id` are returned in the response.\n   *\n   * @param request - The request {@link GetSSHKeyRequest}\n   * @returns A Promise of SSHKey\n   */\n  getSSHKey = request => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/ssh-keys/${validatePathParam('sshKeyId', request.sshKeyId)}`\n  }, unmarshalSSHKey);\n\n  /**\n   * Update an SSH key. Update the parameters of an SSH key, including `name`\n   * and `disable`.\n   *\n   * @param request - The request {@link UpdateSSHKeyRequest}\n   * @returns A Promise of SSHKey\n   */\n  updateSSHKey = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateSSHKeyRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'PATCH',\n    path: `/iam/v1alpha1/ssh-keys/${validatePathParam('sshKeyId', request.sshKeyId)}`\n  }, unmarshalSSHKey);\n\n  /**\n   * Delete an SSH key. Delete a given SSH key, specified by the `ssh_key_id`.\n   * Deleting an SSH is permanent, and cannot be undone. Note that you might\n   * need to update any configurations that used the SSH key.\n   *\n   * @param request - The request {@link DeleteSSHKeyRequest}\n   */\n  deleteSSHKey = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/iam/v1alpha1/ssh-keys/${validatePathParam('sshKeyId', request.sshKeyId)}`\n  });\n  pageOfListUsers = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/users`,\n    urlParams: urlParams(['mfa', request.mfa], ['order_by', request.orderBy], ['organization_id', request.organizationId ?? this.client.settings.defaultOrganizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['tag', request.tag], ['user_ids', request.userIds])\n  }, unmarshalListUsersResponse$1);\n\n  /**\n   * List users of an Organization. List the users of an Organization. By\n   * default, the users listed are ordered by creation date in ascending order.\n   * This can be modified via the `order_by` field. You must define the\n   * `organization_id` in the query path of your request. You can also define\n   * additional parameters for your query such as `user_ids`.\n   *\n   * @param request - The request {@link ListUsersRequest}\n   * @returns A Promise of ListUsersResponse\n   */\n  listUsers = (request = {}) => enrichForPagination('users', this.pageOfListUsers, request);\n\n  /**\n   * Get a given user. Retrieve information about a user, specified by the\n   * `user_id` parameter. The user's full details, including `id`, `email`,\n   * `organization_id`, `status` and `mfa` are returned in the response.\n   *\n   * @param request - The request {@link GetUserRequest}\n   * @returns A Promise of User\n   */\n  getUser = request => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/users/${validatePathParam('userId', request.userId)}`\n  }, unmarshalUser$1);\n\n  /**\n   * Update a user. Update the parameters of a user, including `tags`.\n   *\n   * @param request - The request {@link UpdateUserRequest}\n   * @returns A Promise of User\n   */\n  updateUser = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateUserRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'PATCH',\n    path: `/iam/v1alpha1/users/${validatePathParam('userId', request.userId)}`\n  }, unmarshalUser$1);\n\n  /**\n   * Delete a guest user from an Organization. Remove a user from an\n   * Organization in which they are a guest. You must define the `user_id` in\n   * your request. Note that removing a user from an Organization automatically\n   * deletes their API keys, and any policies directly attached to them become\n   * orphaned.\n   *\n   * @param request - The request {@link DeleteUserRequest}\n   */\n  deleteUser = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/iam/v1alpha1/users/${validatePathParam('userId', request.userId)}`\n  });\n\n  /**\n   * Create a new user. Create a new user. You must define the `organization_id`\n   * and the `email` in your request.\n   *\n   * @param request - The request {@link CreateUserRequest}\n   * @returns A Promise of User\n   */\n  createUser = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateUserRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'POST',\n    path: `/iam/v1alpha1/users`\n  }, unmarshalUser$1);\n  pageOfListApplications = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/applications`,\n    urlParams: urlParams(['application_ids', request.applicationIds], ['editable', request.editable], ['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId ?? this.client.settings.defaultOrganizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['tag', request.tag])\n  }, unmarshalListApplicationsResponse);\n\n  /**\n   * List applications of an Organization. List the applications of an\n   * Organization. By default, the applications listed are ordered by creation\n   * date in ascending order. This can be modified via the `order_by` field. You\n   * must define the `organization_id` in the query path of your request. You\n   * can also define additional parameters for your query such as\n   * `application_ids`.\n   *\n   * @param request - The request {@link ListApplicationsRequest}\n   * @returns A Promise of ListApplicationsResponse\n   */\n  listApplications = (request = {}) => enrichForPagination('applications', this.pageOfListApplications, request);\n\n  /**\n   * Create a new application. Create a new application. You must define the\n   * `name` parameter in the request.\n   *\n   * @param request - The request {@link CreateApplicationRequest}\n   * @returns A Promise of Application\n   */\n  createApplication = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateApplicationRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'POST',\n    path: `/iam/v1alpha1/applications`\n  }, unmarshalApplication);\n\n  /**\n   * Get a given application. Retrieve information about an application,\n   * specified by the `application_id` parameter. The application's full\n   * details, including `id`, `email`, `organization_id`, `status` and\n   * `two_factor_enabled` are returned in the response.\n   *\n   * @param request - The request {@link GetApplicationRequest}\n   * @returns A Promise of Application\n   */\n  getApplication = request => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/applications/${validatePathParam('applicationId', request.applicationId)}`\n  }, unmarshalApplication);\n\n  /**\n   * Update an application. Update the parameters of an application, including\n   * `name` and `description`.\n   *\n   * @param request - The request {@link UpdateApplicationRequest}\n   * @returns A Promise of Application\n   */\n  updateApplication = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateApplicationRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'PATCH',\n    path: `/iam/v1alpha1/applications/${validatePathParam('applicationId', request.applicationId)}`\n  }, unmarshalApplication);\n\n  /**\n   * Delete an application. Delete an application. Note that this action is\n   * irreversible and will automatically delete the application's API keys.\n   * Policies attached to users and applications via this group will no longer\n   * apply.\n   *\n   * @param request - The request {@link DeleteApplicationRequest}\n   */\n  deleteApplication = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/iam/v1alpha1/applications/${validatePathParam('applicationId', request.applicationId)}`\n  });\n  pageOfListGroups = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/groups`,\n    urlParams: urlParams(['application_ids', request.applicationIds], ['group_ids', request.groupIds], ['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId ?? this.client.settings.defaultOrganizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['tag', request.tag], ['user_ids', request.userIds])\n  }, unmarshalListGroupsResponse);\n\n  /**\n   * List groups. List groups. By default, the groups listed are ordered by\n   * creation date in ascending order. This can be modified via the `order_by`\n   * field. You can define additional parameters to filter your query. Use\n   * `user_ids` or `application_ids` to list all groups certain users or\n   * applications belong to.\n   *\n   * @param request - The request {@link ListGroupsRequest}\n   * @returns A Promise of ListGroupsResponse\n   */\n  listGroups = (request = {}) => enrichForPagination('groups', this.pageOfListGroups, request);\n\n  /**\n   * Create a group. Create a new group. You must define the `name` and\n   * `organization_id` parameters in the request.\n   *\n   * @param request - The request {@link CreateGroupRequest}\n   * @returns A Promise of Group\n   */\n  createGroup = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateGroupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'POST',\n    path: `/iam/v1alpha1/groups`\n  }, unmarshalGroup);\n\n  /**\n   * Get a group. Retrive information about a given group, specified by the\n   * `group_id` parameter. The group's full details, including `user_ids` and\n   * `application_ids` are returned in the response.\n   *\n   * @param request - The request {@link GetGroupRequest}\n   * @returns A Promise of Group\n   */\n  getGroup = request => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/groups/${validatePathParam('groupId', request.groupId)}`\n  }, unmarshalGroup);\n\n  /**\n   * Update a group. Update the parameters of group, including `name` and\n   * `description`.\n   *\n   * @param request - The request {@link UpdateGroupRequest}\n   * @returns A Promise of Group\n   */\n  updateGroup = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateGroupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'PATCH',\n    path: `/iam/v1alpha1/groups/${validatePathParam('groupId', request.groupId)}`\n  }, unmarshalGroup);\n\n  /**\n   * Overwrite users and applications of a group. Overwrite users and\n   * applications configuration in a group. Any information that you add using\n   * this command will overwrite the previous configuration.\n   *\n   * @param request - The request {@link SetGroupMembersRequest}\n   * @returns A Promise of Group\n   */\n  setGroupMembers = request => this.client.fetch({\n    body: JSON.stringify(marshalSetGroupMembersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'PUT',\n    path: `/iam/v1alpha1/groups/${validatePathParam('groupId', request.groupId)}/members`\n  }, unmarshalGroup);\n\n  /**\n   * Add a user or an application to a group. Add a user or an application to a\n   * group. You can specify a `user_id` and and `application_id` in the body of\n   * your request. Note that you can only add one of each per request.\n   *\n   * @param request - The request {@link AddGroupMemberRequest}\n   * @returns A Promise of Group\n   */\n  addGroupMember = request => this.client.fetch({\n    body: JSON.stringify(marshalAddGroupMemberRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'POST',\n    path: `/iam/v1alpha1/groups/${validatePathParam('groupId', request.groupId)}/add-member`\n  }, unmarshalGroup);\n\n  /**\n   * Add multiple users and applications to a group. Add multiple users and\n   * applications to a group in a single call. You can specify an array of\n   * `user_id`s and `application_id`s. Note that any existing users and\n   * applications in the group will remain. To add new users/applications and\n   * delete pre-existing ones, use the [Overwrite users and applications of a\n   * group](#path-groups-overwrite-users-and-applications-of-a-group) method.\n   *\n   * @param request - The request {@link AddGroupMembersRequest}\n   * @returns A Promise of Group\n   */\n  addGroupMembers = request => this.client.fetch({\n    body: JSON.stringify(marshalAddGroupMembersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'POST',\n    path: `/iam/v1alpha1/groups/${validatePathParam('groupId', request.groupId)}/add-members`\n  }, unmarshalGroup);\n\n  /**\n   * Remove a user or an application from a group. Remove a user or an\n   * application from a group. You can specify a `user_id` and and\n   * `application_id` in the body of your request. Note that you can only remove\n   * one of each per request. Removing a user from a group means that any\n   * permissions given to them via the group (i.e. from an attached policy) will\n   * no longer apply. Be sure you want to remove these permissions from the user\n   * before proceeding.\n   *\n   * @param request - The request {@link RemoveGroupMemberRequest}\n   * @returns A Promise of Group\n   */\n  removeGroupMember = request => this.client.fetch({\n    body: JSON.stringify(marshalRemoveGroupMemberRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'POST',\n    path: `/iam/v1alpha1/groups/${validatePathParam('groupId', request.groupId)}/remove-member`\n  }, unmarshalGroup);\n\n  /**\n   * Delete a group. Delete a group. Note that this action is irreversible and\n   * could delete permissions for group members. Policies attached to users and\n   * applications via this group will no longer apply.\n   *\n   * @param request - The request {@link DeleteGroupRequest}\n   */\n  deleteGroup = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/iam/v1alpha1/groups/${validatePathParam('groupId', request.groupId)}`\n  });\n  pageOfListPolicies = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/policies`,\n    urlParams: urlParams(['application_ids', request.applicationIds], ['editable', request.editable], ['group_ids', request.groupIds], ['no_principal', request.noPrincipal], ['order_by', request.orderBy], ['organization_id', request.organizationId ?? this.client.settings.defaultOrganizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['policy_ids', request.policyIds], ['policy_name', request.policyName], ['tag', request.tag], ['user_ids', request.userIds])\n  }, unmarshalListPoliciesResponse);\n\n  /**\n   * List policies of an Organization. List the policies of an Organization. By\n   * default, the policies listed are ordered by creation date in ascending\n   * order. This can be modified via the `order_by` field. You must define the\n   * `organization_id` in the query path of your request. You can also define\n   * additional parameters to filter your query, such as `user_ids`,\n   * `groups_ids`, `application_ids`, and `policy_name`.\n   *\n   * @param request - The request {@link ListPoliciesRequest}\n   * @returns A Promise of ListPoliciesResponse\n   */\n  listPolicies = (request = {}) => enrichForPagination('policies', this.pageOfListPolicies, request);\n\n  /**\n   * Create a new policy. Create a new application. You must define the `name`\n   * parameter in the request. You can specify parameters such as `user_id`,\n   * `groups_id`, `application_id`, `no_principal`, `rules` and its child\n   * attributes.\n   *\n   * @param request - The request {@link CreatePolicyRequest}\n   * @returns A Promise of Policy\n   */\n  createPolicy = request => this.client.fetch({\n    body: JSON.stringify(marshalCreatePolicyRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'POST',\n    path: `/iam/v1alpha1/policies`\n  }, unmarshalPolicy);\n\n  /**\n   * Get an existing policy. Retrieve information about a policy, speficified by\n   * the `policy_id` parameter. The policy's full details, including `id`,\n   * `name`, `organization_id`, `nb_rules` and `nb_scopes`, `nb_permission_sets`\n   * are returned in the response.\n   *\n   * @param request - The request {@link GetPolicyRequest}\n   * @returns A Promise of Policy\n   */\n  getPolicy = request => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/policies/${validatePathParam('policyId', request.policyId)}`\n  }, unmarshalPolicy);\n\n  /**\n   * Update an existing policy. Update the parameters of a policy, including\n   * `name`, `description`, `user_id`, `group_id`, `application_id` and\n   * `no_principal`.\n   *\n   * @param request - The request {@link UpdatePolicyRequest}\n   * @returns A Promise of Policy\n   */\n  updatePolicy = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdatePolicyRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'PATCH',\n    path: `/iam/v1alpha1/policies/${validatePathParam('policyId', request.policyId)}`\n  }, unmarshalPolicy);\n\n  /**\n   * Delete a policy. Delete a policy. You must define specify the `policy_id`\n   * parameter in your request. Note that when deleting a policy, all\n   * permissions it gives to its principal (user, group or application) will be\n   * revoked.\n   *\n   * @param request - The request {@link DeletePolicyRequest}\n   */\n  deletePolicy = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/iam/v1alpha1/policies/${validatePathParam('policyId', request.policyId)}`\n  });\n\n  /**\n   * Clone a policy. Clone a policy. You must define specify the `policy_id`\n   * parameter in your request.\n   *\n   * @param request - The request {@link ClonePolicyRequest}\n   * @returns A Promise of Policy\n   */\n  clonePolicy = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$l,\n    method: 'POST',\n    path: `/iam/v1alpha1/policies/${validatePathParam('policyId', request.policyId)}/clone`\n  }, unmarshalPolicy);\n\n  /**\n   * Set rules of a given policy. Overwrite the rules of a given policy. Any\n   * information that you add using this command will overwrite the previous\n   * configuration. If you include some of the rules you already had in your\n   * previous configuration in your new one, but you change their order, the new\n   * order of display will apply. While policy rules are ordered, they have no\n   * impact on the access logic of IAM because rules are allow-only.\n   *\n   * @param request - The request {@link SetRulesRequest}\n   * @returns A Promise of SetRulesResponse\n   */\n  setRules = request => this.client.fetch({\n    body: JSON.stringify(marshalSetRulesRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'PUT',\n    path: `/iam/v1alpha1/rules`\n  }, unmarshalSetRulesResponse);\n  pageOfListRules = request => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/rules`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['policy_id', request.policyId])\n  }, unmarshalListRulesResponse);\n\n  /**\n   * List rules of a given policy. List the rules of a given policy. By default,\n   * the rules listed are ordered by creation date in ascending order. This can\n   * be modified via the `order_by` field. You must define the `policy_id` in\n   * the query path of your request.\n   *\n   * @param request - The request {@link ListRulesRequest}\n   * @returns A Promise of ListRulesResponse\n   */\n  listRules = request => enrichForPagination('rules', this.pageOfListRules, request);\n  pageOfListPermissionSets = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/permission-sets`,\n    urlParams: urlParams(['order_by', request.orderBy], ['organization_id', request.organizationId ?? this.client.settings.defaultOrganizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListPermissionSetsResponse);\n\n  /**\n   * List permission sets. List permission sets available for given\n   * Organization. You must define the `organization_id` in the query path of\n   * your request.\n   *\n   * @param request - The request {@link ListPermissionSetsRequest}\n   * @returns A Promise of ListPermissionSetsResponse\n   */\n  listPermissionSets = (request = {}) => enrichForPagination('permissionSets', this.pageOfListPermissionSets, request);\n  pageOfListAPIKeys = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/api-keys`,\n    urlParams: urlParams(['access_key', request.accessKey], ['access_keys', request.accessKeys], ['bearer_id', request.bearerId], ['bearer_type', request.bearerType], ['description', request.description], ['editable', request.editable], ['expired', request.expired], ['order_by', request.orderBy], ['organization_id', request.organizationId ?? this.client.settings.defaultOrganizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ...Object.entries(resolveOneOf([{\n      param: 'application_id',\n      value: request.applicationId\n    }, {\n      param: 'user_id',\n      value: request.userId\n    }])))\n  }, unmarshalListAPIKeysResponse);\n\n  /**\n   * List API keys. List API keys. By default, the API keys listed are ordered\n   * by creation date in ascending order. This can be modified via the\n   * `order_by` field. You can define additional parameters for your query such\n   * as `editable`, `expired`, `access_key` and `bearer_id`.\n   *\n   * @param request - The request {@link ListAPIKeysRequest}\n   * @returns A Promise of ListAPIKeysResponse\n   */\n  listAPIKeys = (request = {}) => enrichForPagination('apiKeys', this.pageOfListAPIKeys, request);\n\n  /**\n   * Create an API key. Create an API key. You must specify the `application_id`\n   * or the `user_id` and the description. You can also specify the\n   * `default_project_id` which is the Project ID of your preferred Project, to\n   * use with Object Storage. The `access_key` and `secret_key` values are\n   * returned in the response. Note that he secret key is only showed once. Make\n   * sure that you copy and store both keys somewhere safe.\n   *\n   * @param request - The request {@link CreateAPIKeyRequest}\n   * @returns A Promise of APIKey\n   */\n  createAPIKey = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateAPIKeyRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'POST',\n    path: `/iam/v1alpha1/api-keys`\n  }, unmarshalAPIKey);\n\n  /**\n   * Get an API key. Retrive information about an API key, specified by the\n   * `access_key` parameter. The API key's details, including either the\n   * `user_id` or `application_id` of its bearer are returned in the response.\n   * Note that the string value for the `secret_key` is nullable, and therefore\n   * is not displayed in the response. The `secret_key` value is only displayed\n   * upon API key creation.\n   *\n   * @param request - The request {@link GetAPIKeyRequest}\n   * @returns A Promise of APIKey\n   */\n  getAPIKey = request => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/api-keys/${validatePathParam('accessKey', request.accessKey)}`\n  }, unmarshalAPIKey);\n\n  /**\n   * Update an API key. Update the parameters of an API key, including\n   * `default_project_id` and `description`.\n   *\n   * @param request - The request {@link UpdateAPIKeyRequest}\n   * @returns A Promise of APIKey\n   */\n  updateAPIKey = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateAPIKeyRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'PATCH',\n    path: `/iam/v1alpha1/api-keys/${validatePathParam('accessKey', request.accessKey)}`\n  }, unmarshalAPIKey);\n\n  /**\n   * Delete an API key. Delete an API key. Note that this action is irreversible\n   * and cannot be undone. Make sure you update any configurations using the API\n   * keys you delete.\n   *\n   * @param request - The request {@link DeleteAPIKeyRequest}\n   */\n  deleteAPIKey = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/iam/v1alpha1/api-keys/${validatePathParam('accessKey', request.accessKey)}`\n  });\n  pageOfListQuota = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/quota`,\n    urlParams: urlParams(['order_by', request.orderBy], ['organization_id', request.organizationId ?? this.client.settings.defaultOrganizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['quotum_names', request.quotumNames])\n  }, unmarshalListQuotaResponse);\n\n  /**\n   * List all quotas in the Organization. List all product and features quota\n   * for an Organization, with their associated limits. By default, the quota\n   * listed are ordered by creation date in ascending order. This can be\n   * modified via the `order_by` field. You must define the `organization_id` in\n   * the query path of your request.\n   *\n   * @param request - The request {@link ListQuotaRequest}\n   * @returns A Promise of ListQuotaResponse\n   */\n  listQuota = (request = {}) => enrichForPagination('quota', this.pageOfListQuota, request);\n\n  /**\n   * Get a quota in the Organization. Retrieve information about a resource\n   * quota, specified by the `quotum_name` parameter. The quota's `limit`, or\n   * whether it is unlimited, is returned in the response.\n   *\n   * @param request - The request {@link GetQuotumRequest}\n   * @returns A Promise of Quotum\n   */\n  getQuotum = request => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/quota/${validatePathParam('quotumName', request.quotumName)}`,\n    urlParams: urlParams(['organization_id', request.organizationId ?? this.client.settings.defaultOrganizationId])\n  }, unmarshalQuotum);\n  pageOfListJWTs = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/jwts`,\n    urlParams: urlParams(['audience_id', request.audienceId], ['expired', request.expired], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListJWTsResponse);\n\n  /**\n   * List JWTs.\n   *\n   * @param request - The request {@link ListJWTsRequest}\n   * @returns A Promise of ListJWTsResponse\n   */\n  listJWTs = (request = {}) => enrichForPagination('jwts', this.pageOfListJWTs, request);\n\n  /**\n   * Create a JWT.\n   *\n   * @param request - The request {@link CreateJWTRequest}\n   * @returns A Promise of EncodedJWT\n   */\n  createJWT = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateJWTRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$l,\n    method: 'POST',\n    path: `/iam/v1alpha1/jwts`\n  }, unmarshalEncodedJWT);\n\n  /**\n   * Get a JWT.\n   *\n   * @param request - The request {@link GetJWTRequest}\n   * @returns A Promise of JWT\n   */\n  getJWT = request => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/jwts/${validatePathParam('jti', request.jti)}`\n  }, unmarshalJWT);\n\n  /**\n   * Delete a JWT.\n   *\n   * @param request - The request {@link DeleteJWTRequest}\n   */\n  deleteJWT = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/iam/v1alpha1/jwts/${validatePathParam('jti', request.jti)}`\n  });\n  pageOfListLogs = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/logs`,\n    urlParams: urlParams(['action', request.action], ['created_after', request.createdAfter], ['created_before', request.createdBefore], ['order_by', request.orderBy], ['organization_id', request.organizationId ?? this.client.settings.defaultOrganizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['resource_type', request.resourceType], ['search', request.search])\n  }, unmarshalListLogsResponse);\n\n  /**\n   * List logs. List logs available for given Organization. You must define the\n   * `organization_id` in the query path of your request.\n   *\n   * @param request - The request {@link ListLogsRequest}\n   * @returns A Promise of ListLogsResponse\n   */\n  listLogs = (request = {}) => enrichForPagination('logs', this.pageOfListLogs, request);\n\n  /**\n   * Get a log. Retrieve information about a log, specified by the `log_id`\n   * parameter. The log's full details, including `id`, `ip`, `user_agent`,\n   * `action`, `bearer_id`, `resource_type` and `resource_id` are returned in\n   * the response.\n   *\n   * @param request - The request {@link GetLogRequest}\n   * @returns A Promise of Log\n   */\n  getLog = request => this.client.fetch({\n    method: 'GET',\n    path: `/iam/v1alpha1/logs/${validatePathParam('logId', request.logId)}`\n  }, unmarshalLog);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst CreateAPIKeyRequest = {\n  description: {\n    ignoreEmpty: true,\n    maxLength: 200\n  }\n};\nconst CreateApplicationRequest = {\n  description: {\n    ignoreEmpty: true,\n    maxLength: 200\n  },\n  name: {\n    maxLength: 64,\n    minLength: 1,\n    pattern: /^[a-zA-Z0-9\\(\\)\\._\\- ]+$/\n  }\n};\nconst CreateGroupRequest = {\n  description: {\n    ignoreEmpty: true,\n    maxLength: 200\n  },\n  name: {\n    maxLength: 64,\n    minLength: 1,\n    pattern: /^[a-zA-Z0-9\\(\\)\\._\\- ]+$/\n  }\n};\nconst CreatePolicyRequest = {\n  description: {\n    ignoreEmpty: true,\n    maxLength: 200\n  },\n  name: {\n    maxLength: 64,\n    minLength: 1,\n    pattern: /^[a-zA-Z0-9\\(\\)\\._\\- ]+$/\n  }\n};\nconst CreateSSHKeyRequest = {\n  name: {\n    ignoreEmpty: true,\n    maxLength: 1000\n  },\n  publicKey: {\n    maxLength: 65000,\n    minLength: 1\n  }\n};\nconst GetQuotumRequest = {\n  quotumName: {\n    minLength: 1\n  }\n};\nconst ListAPIKeysRequest = {\n  description: {\n    maxLength: 200\n  },\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 100\n  }\n};\nconst ListApplicationsRequest = {\n  name: {\n    maxLength: 64,\n    minLength: 1,\n    pattern: /^[a-zA-Z0-9\\(\\)\\._\\- ]+$/\n  },\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 100\n  }\n};\nconst ListGroupsRequest = {\n  name: {\n    minLength: 1\n  },\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 100\n  }\n};\nconst ListJWTsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 100\n  }\n};\nconst ListLogsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 100\n  }\n};\nconst ListPermissionSetsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 100\n  }\n};\nconst ListPoliciesRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 100\n  },\n  policyName: {\n    minLength: 1\n  }\n};\nconst ListQuotaRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 100\n  }\n};\nconst ListRulesRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 100\n  }\n};\nconst ListSSHKeysRequest = {\n  name: {\n    maxLength: 1000,\n    minLength: 1\n  },\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 100\n  }\n};\nconst ListUsersRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 100\n  }\n};\nconst UpdateAPIKeyRequest = {\n  description: {\n    maxLength: 200\n  }\n};\nconst UpdateApplicationRequest = {\n  description: {\n    maxLength: 200\n  },\n  name: {\n    maxLength: 64,\n    minLength: 1,\n    pattern: /^[a-zA-Z0-9\\(\\)\\._\\- ]+$/\n  }\n};\nconst UpdateGroupRequest = {\n  description: {\n    maxLength: 200\n  },\n  name: {\n    maxLength: 64,\n    minLength: 1,\n    pattern: /^[a-zA-Z0-9\\(\\)\\._\\- ]+$/\n  }\n};\nconst UpdatePolicyRequest = {\n  description: {\n    maxLength: 200\n  },\n  name: {\n    maxLength: 64,\n    minLength: 1,\n    pattern: /^[a-zA-Z0-9\\(\\)\\._\\- ]+$/\n  }\n};\nconst UpdateSSHKeyRequest = {\n  name: {\n    maxLength: 1000\n  }\n};\n\nvar validationRules_gen$8 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CreateAPIKeyRequest: CreateAPIKeyRequest,\n  CreateApplicationRequest: CreateApplicationRequest,\n  CreateGroupRequest: CreateGroupRequest,\n  CreatePolicyRequest: CreatePolicyRequest,\n  CreateSSHKeyRequest: CreateSSHKeyRequest,\n  GetQuotumRequest: GetQuotumRequest,\n  ListAPIKeysRequest: ListAPIKeysRequest,\n  ListApplicationsRequest: ListApplicationsRequest,\n  ListGroupsRequest: ListGroupsRequest,\n  ListJWTsRequest: ListJWTsRequest,\n  ListLogsRequest: ListLogsRequest,\n  ListPermissionSetsRequest: ListPermissionSetsRequest,\n  ListPoliciesRequest: ListPoliciesRequest,\n  ListQuotaRequest: ListQuotaRequest,\n  ListRulesRequest: ListRulesRequest,\n  ListSSHKeysRequest: ListSSHKeysRequest,\n  ListUsersRequest: ListUsersRequest,\n  UpdateAPIKeyRequest: UpdateAPIKeyRequest,\n  UpdateApplicationRequest: UpdateApplicationRequest,\n  UpdateGroupRequest: UpdateGroupRequest,\n  UpdatePolicyRequest: UpdatePolicyRequest,\n  UpdateSSHKeyRequest: UpdateSSHKeyRequest\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$k = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$l,\n  ValidationRules: validationRules_gen$8\n});\n\nvar index$n = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1alpha1: index_gen$k\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalPrivateNIC = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PrivateNIC' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    macAddress: data.mac_address,\n    privateNetworkId: data.private_network_id,\n    serverId: data.server_id,\n    state: data.state,\n    tags: data.tags\n  };\n};\nconst unmarshalServerSummary = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerSummary' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    name: data.name\n  };\n};\nconst unmarshalBootscript = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Bootscript' failed as data isn't a dictionary.`);\n  }\n  return {\n    arch: data.arch,\n    bootcmdargs: data.bootcmdargs,\n    default: data.default,\n    dtb: data.dtb,\n    id: data.id,\n    initrd: data.initrd,\n    kernel: data.kernel,\n    organization: data.organization,\n    project: data.project,\n    public: data.public,\n    title: data.title,\n    zone: data.zone\n  };\n};\nconst unmarshalVolume$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Volume' failed as data isn't a dictionary.`);\n  }\n  return {\n    creationDate: unmarshalDate(data.creation_date),\n    exportUri: data.export_uri,\n    id: data.id,\n    modificationDate: unmarshalDate(data.modification_date),\n    name: data.name,\n    organization: data.organization,\n    project: data.project,\n    server: data.server ? unmarshalServerSummary(data.server) : undefined,\n    size: data.size,\n    state: data.state,\n    tags: data.tags,\n    volumeType: data.volume_type,\n    zone: data.zone\n  };\n};\nconst unmarshalVolumeSummary = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'VolumeSummary' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    name: data.name,\n    size: data.size,\n    volumeType: data.volume_type\n  };\n};\nconst unmarshalImage$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Image' failed as data isn't a dictionary.`);\n  }\n  return {\n    arch: data.arch,\n    creationDate: unmarshalDate(data.creation_date),\n    defaultBootscript: data.default_bootscript ? unmarshalBootscript(data.default_bootscript) : undefined,\n    extraVolumes: unmarshalMapOfObject(data.extra_volumes, unmarshalVolume$2),\n    fromServer: data.from_server,\n    id: data.id,\n    modificationDate: unmarshalDate(data.modification_date),\n    name: data.name,\n    organization: data.organization,\n    project: data.project,\n    public: data.public,\n    rootVolume: data.root_volume ? unmarshalVolumeSummary(data.root_volume) : undefined,\n    state: data.state,\n    tags: data.tags,\n    zone: data.zone\n  };\n};\nconst unmarshalPlacementGroup = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PlacementGroup' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    name: data.name,\n    organization: data.organization,\n    policyMode: data.policy_mode,\n    policyRespected: data.policy_respected,\n    policyType: data.policy_type,\n    project: data.project,\n    tags: data.tags,\n    zone: data.zone\n  };\n};\nconst unmarshalSecurityGroupSummary = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SecurityGroupSummary' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    name: data.name\n  };\n};\nconst unmarshalServerIp = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerIp' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    dynamic: data.dynamic,\n    family: data.family,\n    gateway: data.gateway,\n    id: data.id,\n    ipamId: data.ipam_id,\n    netmask: data.netmask,\n    provisioningMode: data.provisioning_mode,\n    state: data.state,\n    tags: data.tags\n  };\n};\nconst unmarshalServerIpv6 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerIpv6' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    gateway: data.gateway,\n    netmask: data.netmask\n  };\n};\nconst unmarshalServerLocation = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerLocation' failed as data isn't a dictionary.`);\n  }\n  return {\n    clusterId: data.cluster_id,\n    hypervisorId: data.hypervisor_id,\n    nodeId: data.node_id,\n    platformId: data.platform_id,\n    zoneId: data.zone_id\n  };\n};\nconst unmarshalServerMaintenance = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerMaintenance' failed as data isn't a dictionary.`);\n  }\n  return {\n    reason: data.reason,\n    startDate: unmarshalDate(data.start_date)\n  };\n};\nconst unmarshalVolumeServer = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'VolumeServer' failed as data isn't a dictionary.`);\n  }\n  return {\n    boot: data.boot,\n    creationDate: unmarshalDate(data.creation_date),\n    exportUri: data.export_uri,\n    id: data.id,\n    modificationDate: unmarshalDate(data.modification_date),\n    name: data.name,\n    organization: data.organization,\n    project: data.project,\n    server: data.server ? unmarshalServerSummary(data.server) : undefined,\n    size: data.size,\n    state: data.state,\n    volumeType: data.volume_type,\n    zone: data.zone\n  };\n};\nconst unmarshalServer = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Server' failed as data isn't a dictionary.`);\n  }\n  return {\n    allowedActions: data.allowed_actions,\n    arch: data.arch,\n    bootType: data.boot_type,\n    bootscript: data.bootscript ? unmarshalBootscript(data.bootscript) : undefined,\n    commercialType: data.commercial_type,\n    creationDate: unmarshalDate(data.creation_date),\n    dynamicIpRequired: data.dynamic_ip_required,\n    enableIpv6: data.enable_ipv6,\n    hostname: data.hostname,\n    id: data.id,\n    image: data.image ? unmarshalImage$2(data.image) : undefined,\n    ipv6: data.ipv6 ? unmarshalServerIpv6(data.ipv6) : undefined,\n    location: data.location ? unmarshalServerLocation(data.location) : undefined,\n    macAddress: data.mac_address,\n    maintenances: unmarshalArrayOfObject(data.maintenances, unmarshalServerMaintenance),\n    modificationDate: unmarshalDate(data.modification_date),\n    name: data.name,\n    organization: data.organization,\n    placementGroup: data.placement_group ? unmarshalPlacementGroup(data.placement_group) : undefined,\n    privateIp: data.private_ip,\n    privateNics: unmarshalArrayOfObject(data.private_nics, unmarshalPrivateNIC),\n    project: data.project,\n    protected: data.protected,\n    publicIp: data.public_ip ? unmarshalServerIp(data.public_ip) : undefined,\n    publicIps: unmarshalArrayOfObject(data.public_ips, unmarshalServerIp),\n    routedIpEnabled: data.routed_ip_enabled,\n    securityGroup: data.security_group ? unmarshalSecurityGroupSummary(data.security_group) : undefined,\n    state: data.state,\n    stateDetail: data.state_detail,\n    tags: data.tags,\n    volumes: unmarshalMapOfObject(data.volumes, unmarshalVolumeServer),\n    zone: data.zone\n  };\n};\nconst unmarshalAttachServerVolumeResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AttachServerVolumeResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    server: data.server ? unmarshalServer(data.server) : undefined\n  };\n};\nconst unmarshalCreateImageResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CreateImageResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    image: data.image ? unmarshalImage$2(data.image) : undefined\n  };\n};\nconst unmarshalIp$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Ip' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    id: data.id,\n    ipamId: data.ipam_id,\n    organization: data.organization,\n    prefix: data.prefix,\n    project: data.project,\n    reverse: data.reverse,\n    server: data.server ? unmarshalServerSummary(data.server) : undefined,\n    state: data.state,\n    tags: data.tags,\n    type: data.type,\n    zone: data.zone\n  };\n};\nconst unmarshalCreateIpResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CreateIpResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    ip: data.ip ? unmarshalIp$1(data.ip) : undefined\n  };\n};\nconst unmarshalCreatePlacementGroupResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CreatePlacementGroupResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    placementGroup: data.placement_group ? unmarshalPlacementGroup(data.placement_group) : undefined\n  };\n};\nconst unmarshalCreatePrivateNICResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CreatePrivateNICResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    privateNic: data.private_nic ? unmarshalPrivateNIC(data.private_nic) : undefined\n  };\n};\nconst unmarshalSecurityGroup = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SecurityGroup' failed as data isn't a dictionary.`);\n  }\n  return {\n    creationDate: unmarshalDate(data.creation_date),\n    description: data.description,\n    enableDefaultSecurity: data.enable_default_security,\n    id: data.id,\n    inboundDefaultPolicy: data.inbound_default_policy,\n    modificationDate: unmarshalDate(data.modification_date),\n    name: data.name,\n    organization: data.organization,\n    organizationDefault: data.organization_default,\n    outboundDefaultPolicy: data.outbound_default_policy,\n    project: data.project,\n    projectDefault: data.project_default,\n    servers: unmarshalArrayOfObject(data.servers, unmarshalServerSummary),\n    state: data.state,\n    stateful: data.stateful,\n    tags: data.tags,\n    zone: data.zone\n  };\n};\nconst unmarshalCreateSecurityGroupResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CreateSecurityGroupResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    securityGroup: data.security_group ? unmarshalSecurityGroup(data.security_group) : undefined\n  };\n};\nconst unmarshalSecurityGroupRule = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SecurityGroupRule' failed as data isn't a dictionary.`);\n  }\n  return {\n    action: data.action,\n    destPortFrom: data.dest_port_from,\n    destPortTo: data.dest_port_to,\n    direction: data.direction,\n    editable: data.editable,\n    id: data.id,\n    ipRange: data.ip_range,\n    position: data.position,\n    protocol: data.protocol,\n    zone: data.zone\n  };\n};\nconst unmarshalCreateSecurityGroupRuleResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CreateSecurityGroupRuleResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rule: data.rule ? unmarshalSecurityGroupRule(data.rule) : undefined\n  };\n};\nconst unmarshalCreateServerResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CreateServerResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    server: data.server ? unmarshalServer(data.server) : undefined\n  };\n};\nconst unmarshalSnapshotBaseVolume = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SnapshotBaseVolume' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    name: data.name\n  };\n};\nconst unmarshalSnapshot$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Snapshot' failed as data isn't a dictionary.`);\n  }\n  return {\n    baseVolume: data.base_volume ? unmarshalSnapshotBaseVolume(data.base_volume) : undefined,\n    creationDate: unmarshalDate(data.creation_date),\n    errorReason: data.error_reason,\n    id: data.id,\n    modificationDate: unmarshalDate(data.modification_date),\n    name: data.name,\n    organization: data.organization,\n    project: data.project,\n    size: data.size,\n    state: data.state,\n    tags: data.tags,\n    volumeType: data.volume_type,\n    zone: data.zone\n  };\n};\nconst unmarshalTask = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Task' failed as data isn't a dictionary.`);\n  }\n  return {\n    description: data.description,\n    hrefFrom: data.href_from,\n    hrefResult: data.href_result,\n    id: data.id,\n    progress: data.progress,\n    startedAt: unmarshalDate(data.started_at),\n    status: data.status,\n    terminatedAt: unmarshalDate(data.terminated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalCreateSnapshotResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CreateSnapshotResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    snapshot: data.snapshot ? unmarshalSnapshot$1(data.snapshot) : undefined,\n    task: data.task ? unmarshalTask(data.task) : undefined\n  };\n};\nconst unmarshalCreateVolumeResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CreateVolumeResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    volume: data.volume ? unmarshalVolume$2(data.volume) : undefined\n  };\n};\nconst unmarshalDetachServerVolumeResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DetachServerVolumeResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    server: data.server ? unmarshalServer(data.server) : undefined\n  };\n};\nconst unmarshalExportSnapshotResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ExportSnapshotResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    task: data.task ? unmarshalTask(data.task) : undefined\n  };\n};\nconst unmarshalGetBootscriptResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetBootscriptResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    bootscript: data.bootscript ? unmarshalBootscript(data.bootscript) : undefined\n  };\n};\nconst unmarshalDashboard = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Dashboard' failed as data isn't a dictionary.`);\n  }\n  return {\n    imagesCount: data.images_count,\n    ipsCount: data.ips_count,\n    ipsUnused: data.ips_unused,\n    placementGroupsCount: data.placement_groups_count,\n    privateNicsCount: data.private_nics_count,\n    runningServersCount: data.running_servers_count,\n    securityGroupsCount: data.security_groups_count,\n    serversByTypes: data.servers_by_types,\n    serversCount: data.servers_count,\n    snapshotsCount: data.snapshots_count,\n    volumesBSsdCount: data.volumes_b_ssd_count,\n    volumesBSsdTotalSize: data.volumes_b_ssd_total_size,\n    volumesCount: data.volumes_count,\n    volumesLSsdCount: data.volumes_l_ssd_count,\n    volumesLSsdTotalSize: data.volumes_l_ssd_total_size\n  };\n};\nconst unmarshalGetDashboardResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetDashboardResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    dashboard: data.dashboard ? unmarshalDashboard(data.dashboard) : undefined\n  };\n};\nconst unmarshalGetImageResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetImageResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    image: data.image ? unmarshalImage$2(data.image) : undefined\n  };\n};\nconst unmarshalGetIpResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetIpResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    ip: data.ip ? unmarshalIp$1(data.ip) : undefined\n  };\n};\nconst unmarshalGetPlacementGroupResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetPlacementGroupResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    placementGroup: data.placement_group ? unmarshalPlacementGroup(data.placement_group) : undefined\n  };\n};\nconst unmarshalPlacementGroupServer = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PlacementGroupServer' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    name: data.name,\n    policyRespected: data.policy_respected\n  };\n};\nconst unmarshalGetPlacementGroupServersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetPlacementGroupServersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    servers: unmarshalArrayOfObject(data.servers, unmarshalPlacementGroupServer)\n  };\n};\nconst unmarshalGetPrivateNICResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetPrivateNICResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    privateNic: data.private_nic ? unmarshalPrivateNIC(data.private_nic) : undefined\n  };\n};\nconst unmarshalGetSecurityGroupResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetSecurityGroupResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    securityGroup: data.security_group ? unmarshalSecurityGroup(data.security_group) : undefined\n  };\n};\nconst unmarshalGetSecurityGroupRuleResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetSecurityGroupRuleResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rule: data.rule ? unmarshalSecurityGroupRule(data.rule) : undefined\n  };\n};\nconst unmarshalGetServerResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetServerResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    server: data.server ? unmarshalServer(data.server) : undefined\n  };\n};\nconst unmarshalGetServerTypesAvailabilityResponseAvailability = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetServerTypesAvailabilityResponseAvailability' failed as data isn't a dictionary.`);\n  }\n  return {\n    availability: data.availability\n  };\n};\nconst unmarshalGetServerTypesAvailabilityResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetServerTypesAvailabilityResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    servers: unmarshalMapOfObject(data.servers, unmarshalGetServerTypesAvailabilityResponseAvailability),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalGetSnapshotResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetSnapshotResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    snapshot: data.snapshot ? unmarshalSnapshot$1(data.snapshot) : undefined\n  };\n};\nconst unmarshalGetVolumeResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetVolumeResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    volume: data.volume ? unmarshalVolume$2(data.volume) : undefined\n  };\n};\nconst unmarshalListBootscriptsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListBootscriptsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    bootscripts: unmarshalArrayOfObject(data.bootscripts, unmarshalBootscript),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListImagesResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListImagesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    images: unmarshalArrayOfObject(data.images, unmarshalImage$2),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListIpsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListIpsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    ips: unmarshalArrayOfObject(data.ips, unmarshalIp$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListPlacementGroupsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListPlacementGroupsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    placementGroups: unmarshalArrayOfObject(data.placement_groups, unmarshalPlacementGroup),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListPrivateNICsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListPrivateNICsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    privateNics: unmarshalArrayOfObject(data.private_nics, unmarshalPrivateNIC),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSecurityGroupRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSecurityGroupRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalSecurityGroupRule),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSecurityGroupsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSecurityGroupsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    securityGroups: unmarshalArrayOfObject(data.security_groups, unmarshalSecurityGroup),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListServerActionsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListServerActionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    actions: data.actions\n  };\n};\nconst unmarshalListServerUserDataResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListServerUserDataResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    userData: data.user_data\n  };\n};\nconst unmarshalListServersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListServersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    servers: unmarshalArrayOfObject(data.servers, unmarshalServer),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalServerTypeNetworkInterface = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerTypeNetworkInterface' failed as data isn't a dictionary.`);\n  }\n  return {\n    internalBandwidth: data.internal_bandwidth,\n    internetBandwidth: data.internet_bandwidth\n  };\n};\nconst unmarshalServerTypeVolumeConstraintSizes = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerTypeVolumeConstraintSizes' failed as data isn't a dictionary.`);\n  }\n  return {\n    maxSize: data.max_size,\n    minSize: data.min_size\n  };\n};\nconst unmarshalServerTypeCapabilities = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerTypeCapabilities' failed as data isn't a dictionary.`);\n  }\n  return {\n    blockStorage: data.block_storage,\n    bootTypes: data.boot_types\n  };\n};\nconst unmarshalServerTypeNetwork = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerTypeNetwork' failed as data isn't a dictionary.`);\n  }\n  return {\n    interfaces: unmarshalArrayOfObject(data.interfaces, unmarshalServerTypeNetworkInterface),\n    ipv6Support: data.ipv6_support,\n    sumInternalBandwidth: data.sum_internal_bandwidth,\n    sumInternetBandwidth: data.sum_internet_bandwidth\n  };\n};\nconst unmarshalServerTypeVolumeConstraintsByType = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerTypeVolumeConstraintsByType' failed as data isn't a dictionary.`);\n  }\n  return {\n    lSsd: data.l_ssd ? unmarshalServerTypeVolumeConstraintSizes(data.l_ssd) : undefined\n  };\n};\nconst unmarshalServerType = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerType' failed as data isn't a dictionary.`);\n  }\n  return {\n    altNames: data.alt_names,\n    arch: data.arch,\n    baremetal: data.baremetal,\n    capabilities: data.capabilities ? unmarshalServerTypeCapabilities(data.capabilities) : undefined,\n    gpu: data.gpu,\n    hourlyPrice: data.hourly_price,\n    monthlyPrice: data.monthly_price,\n    ncpus: data.ncpus,\n    network: data.network ? unmarshalServerTypeNetwork(data.network) : undefined,\n    perVolumeConstraint: data.per_volume_constraint ? unmarshalServerTypeVolumeConstraintsByType(data.per_volume_constraint) : undefined,\n    ram: data.ram,\n    scratchStorageMaxSize: data.scratch_storage_max_size,\n    volumesConstraint: data.volumes_constraint ? unmarshalServerTypeVolumeConstraintSizes(data.volumes_constraint) : undefined\n  };\n};\nconst unmarshalListServersTypesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListServersTypesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    servers: unmarshalMapOfObject(data.servers, unmarshalServerType),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSnapshotsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSnapshotsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    snapshots: unmarshalArrayOfObject(data.snapshots, unmarshalSnapshot$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListVolumesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListVolumesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    volumes: unmarshalArrayOfObject(data.volumes, unmarshalVolume$2)\n  };\n};\nconst unmarshalVolumeTypeCapabilities = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'VolumeTypeCapabilities' failed as data isn't a dictionary.`);\n  }\n  return {\n    snapshot: data.snapshot\n  };\n};\nconst unmarshalVolumeTypeConstraints = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'VolumeTypeConstraints' failed as data isn't a dictionary.`);\n  }\n  return {\n    max: data.max,\n    min: data.min\n  };\n};\nconst unmarshalVolumeType = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'VolumeType' failed as data isn't a dictionary.`);\n  }\n  return {\n    capabilities: data.capabilities ? unmarshalVolumeTypeCapabilities(data.capabilities) : undefined,\n    constraints: data.constraints ? unmarshalVolumeTypeConstraints(data.constraints) : undefined,\n    displayName: data.display_name\n  };\n};\nconst unmarshalListVolumesTypesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListVolumesTypesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    volumes: unmarshalMapOfObject(data.volumes, unmarshalVolumeType)\n  };\n};\nconst unmarshalMigrationPlan = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'MigrationPlan' failed as data isn't a dictionary.`);\n  }\n  return {\n    snapshots: unmarshalArrayOfObject(data.snapshots, unmarshalSnapshot$1),\n    validationKey: data.validation_key,\n    volume: data.volume ? unmarshalVolume$2(data.volume) : undefined\n  };\n};\nconst unmarshalServerActionResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ServerActionResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    task: data.task ? unmarshalTask(data.task) : undefined\n  };\n};\nconst unmarshalSetImageResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetImageResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    image: data.image ? unmarshalImage$2(data.image) : undefined\n  };\n};\nconst unmarshalSetPlacementGroupResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetPlacementGroupResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    placementGroup: data.placement_group ? unmarshalPlacementGroup(data.placement_group) : undefined\n  };\n};\nconst unmarshalSetPlacementGroupServersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetPlacementGroupServersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    servers: unmarshalArrayOfObject(data.servers, unmarshalPlacementGroupServer)\n  };\n};\nconst unmarshalSetSecurityGroupResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetSecurityGroupResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    securityGroup: data.security_group ? unmarshalSecurityGroup(data.security_group) : undefined\n  };\n};\nconst unmarshalSetSecurityGroupRuleResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetSecurityGroupRuleResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rule: data.rule ? unmarshalSecurityGroupRule(data.rule) : undefined\n  };\n};\nconst unmarshalSetSecurityGroupRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetSecurityGroupRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalSecurityGroupRule)\n  };\n};\nconst unmarshalSetServerResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetServerResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    server: data.server ? unmarshalServer(data.server) : undefined\n  };\n};\nconst unmarshalSetSnapshotResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetSnapshotResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    snapshot: data.snapshot ? unmarshalSnapshot$1(data.snapshot) : undefined\n  };\n};\nconst unmarshalUpdateImageResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UpdateImageResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    image: data.image ? unmarshalImage$2(data.image) : undefined\n  };\n};\nconst unmarshalUpdateIpResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UpdateIpResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    ip: data.ip ? unmarshalIp$1(data.ip) : undefined\n  };\n};\nconst unmarshalUpdatePlacementGroupResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UpdatePlacementGroupResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    placementGroup: data.placement_group ? unmarshalPlacementGroup(data.placement_group) : undefined\n  };\n};\nconst unmarshalUpdatePlacementGroupServersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UpdatePlacementGroupServersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    servers: unmarshalArrayOfObject(data.servers, unmarshalPlacementGroupServer)\n  };\n};\nconst unmarshalUpdateSecurityGroupResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UpdateSecurityGroupResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    securityGroup: data.security_group ? unmarshalSecurityGroup(data.security_group) : undefined\n  };\n};\nconst unmarshalUpdateSecurityGroupRuleResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UpdateSecurityGroupRuleResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rule: data.rule ? unmarshalSecurityGroupRule(data.rule) : undefined\n  };\n};\nconst unmarshalUpdateServerResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UpdateServerResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    server: data.server ? unmarshalServer(data.server) : undefined\n  };\n};\nconst unmarshalUpdateSnapshotResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UpdateSnapshotResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    snapshot: data.snapshot ? unmarshalSnapshot$1(data.snapshot) : undefined\n  };\n};\nconst unmarshalUpdateVolumeResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UpdateVolumeResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    volume: data.volume ? unmarshalVolume$2(data.volume) : undefined\n  };\n};\nconst marshalApplyBlockMigrationRequest = (request, defaults) => ({\n  validation_key: request.validationKey,\n  ...resolveOneOf([{\n    param: 'volume_id',\n    value: request.volumeId\n  }, {\n    param: 'snapshot_id',\n    value: request.snapshotId\n  }])\n});\nconst marshalAttachServerVolumeRequest = (request, defaults) => ({\n  boot: request.boot,\n  volume_id: request.volumeId,\n  volume_type: request.volumeType\n});\nconst marshalVolumeTemplate = (request, defaults) => ({\n  id: request.id,\n  name: request.name,\n  size: request.size,\n  volume_type: request.volumeType,\n  ...resolveOneOf([{\n    param: 'project',\n    value: request.project\n  }, {\n    param: 'organization',\n    value: request.organization\n  }])\n});\nconst marshalCreateImageRequest = (request, defaults) => ({\n  arch: request.arch,\n  default_bootscript: request.defaultBootscript,\n  extra_volumes: request.extraVolumes !== undefined ? Object.entries(request.extraVolumes).reduce((acc, [key, value]) => ({\n    ...acc,\n    [key]: marshalVolumeTemplate(value)\n  }), {}) : undefined,\n  name: request.name || randomName('img'),\n  public: request.public,\n  root_volume: request.rootVolume,\n  tags: request.tags,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project',\n    value: request.project\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization',\n    value: request.organization\n  }])\n});\nconst marshalCreateIpRequest$1 = (request, defaults) => ({\n  server: request.server,\n  tags: request.tags,\n  type: request.type,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project',\n    value: request.project\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization',\n    value: request.organization\n  }])\n});\nconst marshalCreatePlacementGroupRequest = (request, defaults) => ({\n  name: request.name || randomName('pg'),\n  policy_mode: request.policyMode,\n  policy_type: request.policyType,\n  tags: request.tags,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project',\n    value: request.project\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization',\n    value: request.organization\n  }])\n});\nconst marshalCreatePrivateNICRequest = (request, defaults) => ({\n  ip_ids: request.ipIds,\n  private_network_id: request.privateNetworkId,\n  tags: request.tags\n});\nconst marshalCreateSecurityGroupRequest = (request, defaults) => ({\n  description: request.description,\n  enable_default_security: request.enableDefaultSecurity,\n  inbound_default_policy: request.inboundDefaultPolicy,\n  name: request.name || randomName('sg'),\n  outbound_default_policy: request.outboundDefaultPolicy,\n  stateful: request.stateful,\n  tags: request.tags,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project',\n    value: request.project\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization',\n    value: request.organization\n  }]),\n  ...resolveOneOf([{\n    param: 'organization_default',\n    value: request.organizationDefault\n  }, {\n    param: 'project_default',\n    value: request.projectDefault\n  }])\n});\nconst marshalCreateSecurityGroupRuleRequest = (request, defaults) => ({\n  action: request.action,\n  dest_port_from: request.destPortFrom,\n  dest_port_to: request.destPortTo,\n  direction: request.direction,\n  editable: request.editable,\n  ip_range: request.ipRange,\n  position: request.position,\n  protocol: request.protocol\n});\nconst marshalVolumeServerTemplate = (request, defaults) => ({\n  base_snapshot: request.baseSnapshot,\n  boot: request.boot,\n  id: request.id,\n  name: request.name,\n  organization: request.organization,\n  project: request.project,\n  size: request.size,\n  volume_type: request.volumeType\n});\nconst marshalCreateServerRequest = (request, defaults) => ({\n  boot_type: request.bootType,\n  bootscript: request.bootscript,\n  commercial_type: request.commercialType,\n  dynamic_ip_required: request.dynamicIpRequired,\n  enable_ipv6: request.enableIpv6,\n  image: request.image,\n  name: request.name || randomName('srv'),\n  placement_group: request.placementGroup,\n  public_ip: request.publicIp,\n  public_ips: request.publicIps,\n  routed_ip_enabled: request.routedIpEnabled,\n  security_group: request.securityGroup,\n  tags: request.tags,\n  volumes: request.volumes !== undefined ? Object.entries(request.volumes).reduce((acc, [key, value]) => ({\n    ...acc,\n    [key]: marshalVolumeServerTemplate(value)\n  }), {}) : undefined,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project',\n    value: request.project\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization',\n    value: request.organization\n  }])\n});\nconst marshalCreateSnapshotRequest$1 = (request, defaults) => ({\n  bucket: request.bucket,\n  key: request.key,\n  name: request.name || randomName('snp'),\n  size: request.size,\n  tags: request.tags,\n  volume_id: request.volumeId,\n  volume_type: request.volumeType,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project',\n    value: request.project\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization',\n    value: request.organization\n  }])\n});\nconst marshalCreateVolumeRequest$1 = (request, defaults) => ({\n  name: request.name || randomName('vol'),\n  tags: request.tags,\n  volume_type: request.volumeType,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project',\n    value: request.project\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization',\n    value: request.organization\n  }]),\n  ...resolveOneOf([{\n    param: 'size',\n    value: request.size\n  }, {\n    param: 'base_snapshot',\n    value: request.baseSnapshot\n  }])\n});\nconst marshalDetachServerVolumeRequest = (request, defaults) => ({\n  volume_id: request.volumeId\n});\nconst marshalExportSnapshotRequest = (request, defaults) => ({\n  bucket: request.bucket,\n  key: request.key\n});\nconst marshalPlanBlockMigrationRequest = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'volume_id',\n    value: request.volumeId\n  }, {\n    param: 'snapshot_id',\n    value: request.snapshotId\n  }])\n});\nconst marshalServerActionRequestVolumeBackupTemplate = (request, defaults) => ({\n  volume_type: request.volumeType\n});\nconst marshalServerActionRequest = (request, defaults) => ({\n  action: request.action,\n  name: request.name,\n  volumes: request.volumes !== undefined ? Object.entries(request.volumes).reduce((acc, [key, value]) => ({\n    ...acc,\n    [key]: marshalServerActionRequestVolumeBackupTemplate(value)\n  }), {}) : undefined\n});\nconst marshalServerSummary = (request, defaults) => ({\n  id: request.id,\n  name: request.name\n});\nconst marshalBootscript = (request, defaults) => ({\n  arch: request.arch,\n  bootcmdargs: request.bootcmdargs,\n  default: request.default,\n  dtb: request.dtb,\n  id: request.id,\n  initrd: request.initrd,\n  kernel: request.kernel,\n  organization: request.organization,\n  project: request.project,\n  public: request.public,\n  title: request.title,\n  zone: request.zone\n});\nconst marshalVolume = (request, defaults) => ({\n  creation_date: request.creationDate,\n  export_uri: request.exportUri,\n  id: request.id,\n  modification_date: request.modificationDate,\n  name: request.name,\n  organization: request.organization,\n  project: request.project,\n  server: request.server !== undefined ? marshalServerSummary(request.server) : undefined,\n  size: request.size,\n  state: request.state,\n  tags: request.tags,\n  volume_type: request.volumeType,\n  zone: request.zone\n});\nconst marshalVolumeSummary = (request, defaults) => ({\n  id: request.id,\n  name: request.name,\n  size: request.size,\n  volume_type: request.volumeType\n});\nconst marshalSetImageRequest = (request, defaults) => ({\n  arch: request.arch,\n  creation_date: request.creationDate,\n  default_bootscript: request.defaultBootscript !== undefined ? marshalBootscript(request.defaultBootscript) : undefined,\n  extra_volumes: request.extraVolumes !== undefined ? Object.entries(request.extraVolumes).reduce((acc, [key, value]) => ({\n    ...acc,\n    [key]: marshalVolume(value)\n  }), {}) : undefined,\n  from_server: request.fromServer,\n  modification_date: request.modificationDate,\n  name: request.name,\n  organization: request.organization ?? defaults.defaultOrganizationId,\n  project: request.project ?? defaults.defaultProjectId,\n  public: request.public,\n  root_volume: request.rootVolume !== undefined ? marshalVolumeSummary(request.rootVolume) : undefined,\n  state: request.state,\n  tags: request.tags\n});\nconst marshalSetPlacementGroupRequest = (request, defaults) => ({\n  name: request.name,\n  organization: request.organization ?? defaults.defaultOrganizationId,\n  policy_mode: request.policyMode,\n  policy_type: request.policyType,\n  project: request.project ?? defaults.defaultProjectId,\n  tags: request.tags\n});\nconst marshalSetPlacementGroupServersRequest = (request, defaults) => ({\n  servers: request.servers\n});\nconst marshalSetSecurityGroupRequest = (request, defaults) => ({\n  creation_date: request.creationDate,\n  description: request.description,\n  enable_default_security: request.enableDefaultSecurity,\n  inbound_default_policy: request.inboundDefaultPolicy,\n  modification_date: request.modificationDate,\n  name: request.name,\n  organization: request.organization ?? defaults.defaultOrganizationId,\n  organization_default: request.organizationDefault,\n  outbound_default_policy: request.outboundDefaultPolicy,\n  project: request.project ?? defaults.defaultProjectId,\n  project_default: request.projectDefault,\n  servers: request.servers !== undefined ? request.servers.map(elt => marshalServerSummary(elt)) : undefined,\n  stateful: request.stateful,\n  tags: request.tags\n});\nconst marshalSetSecurityGroupRuleRequest = (request, defaults) => ({\n  action: request.action,\n  dest_port_from: request.destPortFrom,\n  dest_port_to: request.destPortTo,\n  direction: request.direction,\n  editable: request.editable,\n  id: request.id,\n  ip_range: request.ipRange,\n  position: request.position,\n  protocol: request.protocol\n});\nconst marshalSetSecurityGroupRulesRequestRule = (request, defaults) => ({\n  action: request.action,\n  dest_port_from: request.destPortFrom,\n  dest_port_to: request.destPortTo,\n  direction: request.direction,\n  editable: request.editable,\n  id: request.id,\n  ip_range: request.ipRange,\n  position: request.position,\n  protocol: request.protocol,\n  zone: request.zone\n});\nconst marshalSetSecurityGroupRulesRequest = (request, defaults) => ({\n  rules: request.rules !== undefined ? request.rules.map(elt => marshalSetSecurityGroupRulesRequestRule(elt)) : undefined\n});\nconst marshalImage = (request, defaults) => ({\n  arch: request.arch,\n  creation_date: request.creationDate,\n  default_bootscript: request.defaultBootscript !== undefined ? marshalBootscript(request.defaultBootscript) : undefined,\n  extra_volumes: Object.entries(request.extraVolumes).reduce((acc, [key, value]) => ({\n    ...acc,\n    [key]: marshalVolume(value)\n  }), {}),\n  from_server: request.fromServer,\n  id: request.id,\n  modification_date: request.modificationDate,\n  name: request.name,\n  organization: request.organization,\n  project: request.project,\n  public: request.public,\n  root_volume: request.rootVolume !== undefined ? marshalVolumeSummary(request.rootVolume) : undefined,\n  state: request.state,\n  tags: request.tags,\n  zone: request.zone\n});\nconst marshalPlacementGroup = (request, defaults) => ({\n  id: request.id,\n  name: request.name,\n  organization: request.organization,\n  policy_mode: request.policyMode,\n  policy_respected: request.policyRespected,\n  policy_type: request.policyType,\n  project: request.project,\n  tags: request.tags,\n  zone: request.zone\n});\nconst marshalPrivateNIC = (request, defaults) => ({\n  id: request.id,\n  mac_address: request.macAddress,\n  private_network_id: request.privateNetworkId,\n  server_id: request.serverId,\n  state: request.state,\n  tags: request.tags\n});\nconst marshalSecurityGroupSummary = (request, defaults) => ({\n  id: request.id,\n  name: request.name\n});\nconst marshalServerIp = (request, defaults) => ({\n  address: request.address,\n  dynamic: request.dynamic,\n  family: request.family,\n  gateway: request.gateway,\n  id: request.id,\n  ipam_id: request.ipamId,\n  netmask: request.netmask,\n  provisioning_mode: request.provisioningMode,\n  state: request.state,\n  tags: request.tags\n});\nconst marshalServerIpv6 = (request, defaults) => ({\n  address: request.address,\n  gateway: request.gateway,\n  netmask: request.netmask\n});\nconst marshalServerLocation = (request, defaults) => ({\n  cluster_id: request.clusterId,\n  hypervisor_id: request.hypervisorId,\n  node_id: request.nodeId,\n  platform_id: request.platformId,\n  zone_id: request.zoneId\n});\nconst marshalServerMaintenance = (request, defaults) => ({\n  reason: request.reason,\n  start_date: request.startDate\n});\nconst marshalSetServerRequest = (request, defaults) => ({\n  allowed_actions: request.allowedActions !== undefined ? request.allowedActions : undefined,\n  arch: request.arch,\n  boot_type: request.bootType,\n  bootscript: request.bootscript !== undefined ? marshalBootscript(request.bootscript) : undefined,\n  commercial_type: request.commercialType,\n  creation_date: request.creationDate,\n  dynamic_ip_required: request.dynamicIpRequired,\n  enable_ipv6: request.enableIpv6,\n  hostname: request.hostname,\n  image: request.image !== undefined ? marshalImage(request.image) : undefined,\n  ipv6: request.ipv6 !== undefined ? marshalServerIpv6(request.ipv6) : undefined,\n  location: request.location !== undefined ? marshalServerLocation(request.location) : undefined,\n  maintenances: request.maintenances !== undefined ? request.maintenances.map(elt => marshalServerMaintenance(elt)) : undefined,\n  modification_date: request.modificationDate,\n  name: request.name,\n  organization: request.organization ?? defaults.defaultOrganizationId,\n  placement_group: request.placementGroup !== undefined ? marshalPlacementGroup(request.placementGroup) : undefined,\n  private_ip: request.privateIp,\n  private_nics: request.privateNics !== undefined ? request.privateNics.map(elt => marshalPrivateNIC(elt)) : undefined,\n  project: request.project ?? defaults.defaultProjectId,\n  protected: request.protected,\n  public_ip: request.publicIp !== undefined ? marshalServerIp(request.publicIp) : undefined,\n  public_ips: request.publicIps !== undefined ? request.publicIps.map(elt => marshalServerIp(elt)) : undefined,\n  routed_ip_enabled: request.routedIpEnabled,\n  security_group: request.securityGroup !== undefined ? marshalSecurityGroupSummary(request.securityGroup) : undefined,\n  state: request.state,\n  state_detail: request.stateDetail,\n  tags: request.tags,\n  volumes: request.volumes !== undefined ? Object.entries(request.volumes).reduce((acc, [key, value]) => ({\n    ...acc,\n    [key]: marshalVolume(value)\n  }), {}) : undefined\n});\nconst marshalSnapshotBaseVolume = (request, defaults) => ({\n  id: request.id,\n  name: request.name\n});\nconst marshalSetSnapshotRequest = (request, defaults) => ({\n  base_volume: request.baseVolume !== undefined ? marshalSnapshotBaseVolume(request.baseVolume) : undefined,\n  creation_date: request.creationDate,\n  id: request.id,\n  modification_date: request.modificationDate,\n  name: request.name,\n  organization: request.organization ?? defaults.defaultOrganizationId,\n  project: request.project ?? defaults.defaultProjectId,\n  size: request.size,\n  state: request.state,\n  tags: request.tags,\n  volume_type: request.volumeType\n});\nconst marshalVolumeImageUpdateTemplate = (request, defaults) => ({\n  id: request.id\n});\nconst marshalUpdateImageRequest$1 = (request, defaults) => ({\n  arch: request.arch,\n  extra_volumes: request.extraVolumes !== undefined ? Object.entries(request.extraVolumes).reduce((acc, [key, value]) => ({\n    ...acc,\n    [key]: marshalVolumeImageUpdateTemplate(value)\n  }), {}) : undefined,\n  name: request.name,\n  public: request.public,\n  tags: request.tags\n});\nconst marshalUpdateIpRequest$1 = (request, defaults) => ({\n  reverse: request.reverse,\n  server: request.server,\n  tags: request.tags,\n  type: request.type\n});\nconst marshalUpdatePlacementGroupRequest = (request, defaults) => ({\n  name: request.name,\n  policy_mode: request.policyMode,\n  policy_type: request.policyType,\n  tags: request.tags\n});\nconst marshalUpdatePlacementGroupServersRequest = (request, defaults) => ({\n  servers: request.servers\n});\nconst marshalUpdatePrivateNICRequest = (request, defaults) => ({\n  tags: request.tags\n});\nconst marshalUpdateSecurityGroupRequest = (request, defaults) => ({\n  description: request.description,\n  enable_default_security: request.enableDefaultSecurity,\n  inbound_default_policy: request.inboundDefaultPolicy,\n  name: request.name,\n  organization_default: request.organizationDefault,\n  outbound_default_policy: request.outboundDefaultPolicy,\n  project_default: request.projectDefault,\n  stateful: request.stateful,\n  tags: request.tags\n});\nconst marshalUpdateSecurityGroupRuleRequest = (request, defaults) => ({\n  action: request.action,\n  dest_port_from: request.destPortFrom,\n  dest_port_to: request.destPortTo,\n  direction: request.direction,\n  ip_range: request.ipRange,\n  position: request.position,\n  protocol: request.protocol\n});\nconst marshalSecurityGroupTemplate = (request, defaults) => ({\n  id: request.id,\n  name: request.name\n});\nconst marshalUpdateServerRequest = (request, defaults) => ({\n  boot_type: request.bootType,\n  bootscript: request.bootscript,\n  commercial_type: request.commercialType,\n  dynamic_ip_required: request.dynamicIpRequired,\n  enable_ipv6: request.enableIpv6,\n  name: request.name,\n  placement_group: request.placementGroup,\n  private_nics: request.privateNics,\n  protected: request.protected,\n  public_ips: request.publicIps,\n  routed_ip_enabled: request.routedIpEnabled,\n  security_group: request.securityGroup !== undefined ? marshalSecurityGroupTemplate(request.securityGroup) : undefined,\n  tags: request.tags,\n  volumes: request.volumes !== undefined ? Object.entries(request.volumes).reduce((acc, [key, value]) => ({\n    ...acc,\n    [key]: marshalVolumeServerTemplate(value)\n  }), {}) : undefined\n});\nconst marshalUpdateSnapshotRequest$1 = (request, defaults) => ({\n  name: request.name,\n  tags: request.tags\n});\nconst marshalUpdateVolumeRequest$1 = (request, defaults) => ({\n  name: request.name,\n  size: request.size,\n  tags: request.tags\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$k = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Instance API. */\nlet API$k = class API extends API$z {\n  /** Lists the available zones of the API. */\n  static LOCALITIES = ['fr-par-1', 'fr-par-2', 'fr-par-3', 'nl-ams-1', 'nl-ams-2', 'nl-ams-3', 'pl-waw-1', 'pl-waw-2', 'pl-waw-3'];\n\n  /**\n   * Get availability. Get availability for all Instance types.\n   *\n   * @param request - The request {@link GetServerTypesAvailabilityRequest}\n   * @returns A Promise of GetServerTypesAvailabilityResponse\n   */\n  getServerTypesAvailability = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/products/servers/availability`,\n    urlParams: urlParams(['page', request.page], ['per_page', request.perPage ?? this.client.settings.defaultPageSize])\n  }, unmarshalGetServerTypesAvailabilityResponse);\n\n  /**\n   * List Instance types. List available Instance types and their technical\n   * details.\n   *\n   * @param request - The request {@link ListServersTypesRequest}\n   * @returns A Promise of ListServersTypesResponse\n   */\n  listServersTypes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/products/servers`,\n    urlParams: urlParams(['page', request.page], ['per_page', request.perPage ?? this.client.settings.defaultPageSize])\n  }, unmarshalListServersTypesResponse);\n\n  /**\n   * List volume types. List all volume types and their technical details.\n   *\n   * @param request - The request {@link ListVolumesTypesRequest}\n   * @returns A Promise of ListVolumesTypesResponse\n   */\n  listVolumesTypes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/products/volumes`,\n    urlParams: urlParams(['page', request.page], ['per_page', request.perPage ?? this.client.settings.defaultPageSize])\n  }, unmarshalListVolumesTypesResponse);\n  pageOfListServers = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers`,\n    urlParams: urlParams(['commercial_type', request.commercialType], ['name', request.name], ['order', request.order], ['organization', request.organization], ['page', request.page], ['per_page', request.perPage ?? this.client.settings.defaultPageSize], ['private_ip', request.privateIp], ['private_network', request.privateNetwork], ['private_networks', request.privateNetworks && request.privateNetworks.length > 0 ? request.privateNetworks.join(',') : undefined], ['private_nic_mac_address', request.privateNicMacAddress], ['project', request.project], ['servers', request.servers && request.servers.length > 0 ? request.servers.join(',') : undefined], ['state', request.state], ['tags', request.tags && request.tags.length > 0 ? request.tags.join(',') : undefined], ['without_ip', request.withoutIp])\n  }, unmarshalListServersResponse);\n\n  /**\n   * List all Instances. List all Instances in a specified Availability Zone,\n   * e.g. `fr-par-1`.\n   *\n   * @param request - The request {@link ListServersRequest}\n   * @returns A Promise of ListServersResponse\n   */\n  listServers = (request = {}) => enrichForPagination('servers', this.pageOfListServers, request);\n  _createServer = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateServerRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers`\n  }, unmarshalCreateServerResponse);\n\n  /**\n   * Delete an Instance. Delete the Instance with the specified ID.\n   *\n   * @param request - The request {@link DeleteServerRequest}\n   */\n  deleteServer = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}`\n  });\n\n  /**\n   * Get an Instance. Get the details of a specified Instance.\n   *\n   * @param request - The request {@link GetServerRequest}\n   * @returns A Promise of GetServerResponse\n   */\n  getServer = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}`\n  }, unmarshalGetServerResponse);\n  _setServer = request => this.client.fetch({\n    body: JSON.stringify(marshalSetServerRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PUT',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('id', request.id)}`\n  }, unmarshalSetServerResponse);\n  _updateServer = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateServerRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PATCH',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}`\n  }, unmarshalUpdateServerResponse);\n\n  /**\n   * List Instance actions. List all actions (e.g. power on, power off, reboot)\n   * that can currently be performed on an Instance.\n   *\n   * @param request - The request {@link ListServerActionsRequest}\n   * @returns A Promise of ListServerActionsResponse\n   */\n  listServerActions = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/action`\n  }, unmarshalListServerActionsResponse);\n\n  /**\n   * Perform action. Perform an action on an Instance. Available actions are:\n   * `poweron`: Start a stopped Instance. `poweroff`: Fully stop the Instance\n   * and release the hypervisor slot. `stop_in_place`: Stop the Instance, but\n   * keep the slot on the hypervisor. `reboot`: Stop the instance and restart\n   * it. `backup`: Create an image with all the volumes of an Instance.\n   * `terminate`: Delete the Instance along with all attached volumes.\n   * `enable_routed_ip`: Migrate the Instance to the new network stack.\n   *\n   * Keep in mind that terminating an Instance will result in the deletion of\n   * all attached volumes, including local and block storage. If you want to\n   * preserve your local volumes, you should use the `archive` action instead of\n   * `terminate`. Similarly, if you want to keep your block storage volumes, you\n   * must first detach them before issuing the `terminate` command. For more\n   * information, read the [Volumes](#path-volumes-list-volumes) documentation.\n   *\n   * @param request - The request {@link ServerActionRequest}\n   * @returns A Promise of ServerActionResponse\n   */\n  serverAction = request => this.client.fetch({\n    body: JSON.stringify(marshalServerActionRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/action`\n  }, unmarshalServerActionResponse);\n\n  /**\n   * List user data. List all user data keys registered on a specified Instance.\n   *\n   * @param request - The request {@link ListServerUserDataRequest}\n   * @returns A Promise of ListServerUserDataResponse\n   */\n  listServerUserData = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/user_data`\n  }, unmarshalListServerUserDataResponse);\n\n  /**\n   * Delete user data. Delete the specified key from an Instance's user data.\n   *\n   * @param request - The request {@link DeleteServerUserDataRequest}\n   */\n  deleteServerUserData = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/user_data/${validatePathParam('key', request.key)}`\n  });\n  attachServerVolume = request => this.client.fetch({\n    body: JSON.stringify(marshalAttachServerVolumeRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/attach-volume`\n  }, unmarshalAttachServerVolumeResponse);\n  detachServerVolume = request => this.client.fetch({\n    body: JSON.stringify(marshalDetachServerVolumeRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/detach-volume`\n  }, unmarshalDetachServerVolumeResponse);\n  pageOfListImages = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/images`,\n    urlParams: urlParams(['arch', request.arch], ['name', request.name], ['organization', request.organization], ['page', request.page], ['per_page', request.perPage ?? this.client.settings.defaultPageSize], ['project', request.project], ['public', request.public], ['tags', request.tags])\n  }, unmarshalListImagesResponse$2);\n\n  /**\n   * List Instance images. List all existing Instance images.\n   *\n   * @param request - The request {@link ListImagesRequest}\n   * @returns A Promise of ListImagesResponse\n   */\n  listImages = (request = {}) => enrichForPagination('images', this.pageOfListImages, request);\n\n  /**\n   * Get an Instance image. Get details of an image with the specified ID.\n   *\n   * @param request - The request {@link GetImageRequest}\n   * @returns A Promise of GetImageResponse\n   */\n  getImage = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/images/${validatePathParam('imageId', request.imageId)}`\n  }, unmarshalGetImageResponse);\n\n  /**\n   * Create an Instance image. Create an Instance image from the specified\n   * snapshot ID.\n   *\n   * @param request - The request {@link CreateImageRequest}\n   * @returns A Promise of CreateImageResponse\n   */\n  createImage = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateImageRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/images`\n  }, unmarshalCreateImageResponse);\n  _setImage = request => this.client.fetch({\n    body: JSON.stringify(marshalSetImageRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PUT',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/images/${validatePathParam('id', request.id)}`\n  }, unmarshalSetImageResponse);\n\n  /**\n   * Update image. Update the properties of an image.\n   *\n   * @param request - The request {@link UpdateImageRequest}\n   * @returns A Promise of UpdateImageResponse\n   */\n  updateImage = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateImageRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PATCH',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/images/${validatePathParam('imageId', request.imageId)}`\n  }, unmarshalUpdateImageResponse);\n\n  /**\n   * Delete an Instance image. Delete the image with the specified ID.\n   *\n   * @param request - The request {@link DeleteImageRequest}\n   */\n  deleteImage = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/images/${validatePathParam('imageId', request.imageId)}`\n  });\n  pageOfListSnapshots = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/snapshots`,\n    urlParams: urlParams(['base_volume_id', request.baseVolumeId], ['name', request.name], ['organization', request.organization], ['page', request.page], ['per_page', request.perPage ?? this.client.settings.defaultPageSize], ['project', request.project], ['tags', request.tags])\n  }, unmarshalListSnapshotsResponse$1);\n\n  /**\n   * List snapshots. List all snapshots of an Organization in a specified\n   * Availability Zone.\n   *\n   * @param request - The request {@link ListSnapshotsRequest}\n   * @returns A Promise of ListSnapshotsResponse\n   */\n  listSnapshots = (request = {}) => enrichForPagination('snapshots', this.pageOfListSnapshots, request);\n\n  /**\n   * Create a snapshot from a specified volume or from a QCOW2 file. Create a\n   * snapshot from a specified volume or from a QCOW2 file in a specified\n   * Availability Zone.\n   *\n   * @param request - The request {@link CreateSnapshotRequest}\n   * @returns A Promise of CreateSnapshotResponse\n   */\n  createSnapshot = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreateSnapshotRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/snapshots`\n  }, unmarshalCreateSnapshotResponse);\n\n  /**\n   * Get a snapshot. Get details of a snapshot with the specified ID.\n   *\n   * @param request - The request {@link GetSnapshotRequest}\n   * @returns A Promise of GetSnapshotResponse\n   */\n  getSnapshot = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}`\n  }, unmarshalGetSnapshotResponse);\n  _setSnapshot = request => this.client.fetch({\n    body: JSON.stringify(marshalSetSnapshotRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PUT',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}`\n  }, unmarshalSetSnapshotResponse);\n\n  /**\n   * Update a snapshot. Update the properties of a snapshot.\n   *\n   * @param request - The request {@link UpdateSnapshotRequest}\n   * @returns A Promise of UpdateSnapshotResponse\n   */\n  updateSnapshot = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateSnapshotRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PATCH',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}`\n  }, unmarshalUpdateSnapshotResponse);\n\n  /**\n   * Delete a snapshot. Delete the snapshot with the specified ID.\n   *\n   * @param request - The request {@link DeleteSnapshotRequest}\n   */\n  deleteSnapshot = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}`\n  });\n\n  /**\n   * Export a snapshot. Export a snapshot to a specified S3 bucket in the same\n   * region.\n   *\n   * @param request - The request {@link ExportSnapshotRequest}\n   * @returns A Promise of ExportSnapshotResponse\n   */\n  exportSnapshot = request => this.client.fetch({\n    body: JSON.stringify(marshalExportSnapshotRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}/export`\n  }, unmarshalExportSnapshotResponse);\n  pageOfListVolumes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/volumes`,\n    urlParams: urlParams(['name', request.name], ['organization', request.organization], ['page', request.page], ['per_page', request.perPage ?? this.client.settings.defaultPageSize], ['project', request.project], ['tags', request.tags && request.tags.length > 0 ? request.tags.join(',') : undefined], ['volume_type', request.volumeType])\n  }, unmarshalListVolumesResponse$1);\n\n  /**\n   * List volumes. List volumes in the specified Availability Zone. You can\n   * filter the output by volume type.\n   *\n   * @param request - The request {@link ListVolumesRequest}\n   * @returns A Promise of ListVolumesResponse\n   */\n  listVolumes = (request = {}) => enrichForPagination('volumes', this.pageOfListVolumes, request);\n\n  /**\n   * Create a volume. Create a volume of a specified type in an Availability\n   * Zone.\n   *\n   * @param request - The request {@link CreateVolumeRequest}\n   * @returns A Promise of CreateVolumeResponse\n   */\n  createVolume = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreateVolumeRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/volumes`\n  }, unmarshalCreateVolumeResponse);\n\n  /**\n   * Get a volume. Get details of a volume with the specified ID.\n   *\n   * @param request - The request {@link GetVolumeRequest}\n   * @returns A Promise of GetVolumeResponse\n   */\n  getVolume = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/volumes/${validatePathParam('volumeId', request.volumeId)}`\n  }, unmarshalGetVolumeResponse);\n\n  /**\n   * Update a volume. Replace the name and/or size properties of a volume\n   * specified by its ID, with the specified value(s). Any volume name can be\n   * changed, however only `b_ssd` volumes can currently be increased in size.\n   *\n   * @param request - The request {@link UpdateVolumeRequest}\n   * @returns A Promise of UpdateVolumeResponse\n   */\n  updateVolume = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateVolumeRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PATCH',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/volumes/${validatePathParam('volumeId', request.volumeId)}`\n  }, unmarshalUpdateVolumeResponse);\n\n  /**\n   * Delete a volume. Delete the volume with the specified ID.\n   *\n   * @param request - The request {@link DeleteVolumeRequest}\n   */\n  deleteVolume = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/volumes/${validatePathParam('volumeId', request.volumeId)}`\n  });\n  pageOfListSecurityGroups = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups`,\n    urlParams: urlParams(['name', request.name], ['organization', request.organization], ['page', request.page], ['per_page', request.perPage ?? this.client.settings.defaultPageSize], ['project', request.project], ['project_default', request.projectDefault], ['tags', request.tags && request.tags.length > 0 ? request.tags.join(',') : undefined])\n  }, unmarshalListSecurityGroupsResponse);\n\n  /**\n   * List security groups. List all existing security groups.\n   *\n   * @param request - The request {@link ListSecurityGroupsRequest}\n   * @returns A Promise of ListSecurityGroupsResponse\n   */\n  listSecurityGroups = (request = {}) => enrichForPagination('securityGroups', this.pageOfListSecurityGroups, request);\n\n  /**\n   * Create a security group. Create a security group with a specified name and\n   * description.\n   *\n   * @param request - The request {@link CreateSecurityGroupRequest}\n   * @returns A Promise of CreateSecurityGroupResponse\n   */\n  createSecurityGroup = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateSecurityGroupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups`\n  }, unmarshalCreateSecurityGroupResponse);\n\n  /**\n   * Get a security group. Get the details of a security group with the\n   * specified ID.\n   *\n   * @param request - The request {@link GetSecurityGroupRequest}\n   * @returns A Promise of GetSecurityGroupResponse\n   */\n  getSecurityGroup = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups/${validatePathParam('securityGroupId', request.securityGroupId)}`\n  }, unmarshalGetSecurityGroupResponse);\n\n  /**\n   * Delete a security group. Delete a security group with the specified ID.\n   *\n   * @param request - The request {@link DeleteSecurityGroupRequest}\n   */\n  deleteSecurityGroup = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups/${validatePathParam('securityGroupId', request.securityGroupId)}`\n  });\n  _setSecurityGroup = request => this.client.fetch({\n    body: JSON.stringify(marshalSetSecurityGroupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PUT',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups/${validatePathParam('id', request.id)}`\n  }, unmarshalSetSecurityGroupResponse);\n\n  /**\n   * Update a security group. Update the properties of security group.\n   *\n   * @param request - The request {@link UpdateSecurityGroupRequest}\n   * @returns A Promise of UpdateSecurityGroupResponse\n   */\n  updateSecurityGroup = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateSecurityGroupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PATCH',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups/${validatePathParam('securityGroupId', request.securityGroupId)}`\n  }, unmarshalUpdateSecurityGroupResponse);\n\n  /**\n   * Get default rules. Lists the default rules applied to all the security\n   * groups.\n   *\n   * @param request - The request {@link ListDefaultSecurityGroupRulesRequest}\n   * @returns A Promise of ListSecurityGroupRulesResponse\n   */\n  listDefaultSecurityGroupRules = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups/default/rules`\n  }, unmarshalListSecurityGroupRulesResponse);\n  pageOfListSecurityGroupRules = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups/${validatePathParam('securityGroupId', request.securityGroupId)}/rules`,\n    urlParams: urlParams(['page', request.page], ['per_page', request.perPage ?? this.client.settings.defaultPageSize])\n  }, unmarshalListSecurityGroupRulesResponse);\n\n  /**\n   * List rules. List the rules of the a specified security group ID.\n   *\n   * @param request - The request {@link ListSecurityGroupRulesRequest}\n   * @returns A Promise of ListSecurityGroupRulesResponse\n   */\n  listSecurityGroupRules = request => enrichForPagination('rules', this.pageOfListSecurityGroupRules, request);\n\n  /**\n   * Create rule. Create a rule in the specified security group ID.\n   *\n   * @param request - The request {@link CreateSecurityGroupRuleRequest}\n   * @returns A Promise of CreateSecurityGroupRuleResponse\n   */\n  createSecurityGroupRule = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateSecurityGroupRuleRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups/${validatePathParam('securityGroupId', request.securityGroupId)}/rules`\n  }, unmarshalCreateSecurityGroupRuleResponse);\n\n  /**\n   * Update all the rules of a security group. Replaces the existing rules of\n   * the security group with the rules provided. This endpoint supports the\n   * update of existing rules, creation of new rules and deletion of existing\n   * rules when they are not passed in the request.\n   *\n   * @param request - The request {@link SetSecurityGroupRulesRequest}\n   * @returns A Promise of SetSecurityGroupRulesResponse\n   */\n  setSecurityGroupRules = request => this.client.fetch({\n    body: JSON.stringify(marshalSetSecurityGroupRulesRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PUT',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups/${validatePathParam('securityGroupId', request.securityGroupId)}/rules`\n  }, unmarshalSetSecurityGroupRulesResponse);\n\n  /**\n   * Delete rule. Delete a security group rule with the specified ID.\n   *\n   * @param request - The request {@link DeleteSecurityGroupRuleRequest}\n   */\n  deleteSecurityGroupRule = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups/${validatePathParam('securityGroupId', request.securityGroupId)}/rules/${validatePathParam('securityGroupRuleId', request.securityGroupRuleId)}`\n  });\n\n  /**\n   * Get rule. Get details of a security group rule with the specified ID.\n   *\n   * @param request - The request {@link GetSecurityGroupRuleRequest}\n   * @returns A Promise of GetSecurityGroupRuleResponse\n   */\n  getSecurityGroupRule = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups/${validatePathParam('securityGroupId', request.securityGroupId)}/rules/${validatePathParam('securityGroupRuleId', request.securityGroupRuleId)}`\n  }, unmarshalGetSecurityGroupRuleResponse);\n  _setSecurityGroupRule = request => this.client.fetch({\n    body: JSON.stringify(marshalSetSecurityGroupRuleRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PUT',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups/${validatePathParam('securityGroupId', request.securityGroupId)}/rules/${validatePathParam('securityGroupRuleId', request.securityGroupRuleId)}`\n  }, unmarshalSetSecurityGroupRuleResponse);\n\n  /**\n   * Update security group rule. Update the properties of a rule from a\n   * specified security group.\n   *\n   * @param request - The request {@link UpdateSecurityGroupRuleRequest}\n   * @returns A Promise of UpdateSecurityGroupRuleResponse\n   */\n  updateSecurityGroupRule = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateSecurityGroupRuleRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PATCH',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/security_groups/${validatePathParam('securityGroupId', request.securityGroupId)}/rules/${validatePathParam('securityGroupRuleId', request.securityGroupRuleId)}`\n  }, unmarshalUpdateSecurityGroupRuleResponse);\n  pageOfListPlacementGroups = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/placement_groups`,\n    urlParams: urlParams(['name', request.name], ['organization', request.organization], ['page', request.page], ['per_page', request.perPage ?? this.client.settings.defaultPageSize], ['project', request.project], ['tags', request.tags && request.tags.length > 0 ? request.tags.join(',') : undefined])\n  }, unmarshalListPlacementGroupsResponse);\n\n  /**\n   * List placement groups. List all placement groups in a specified\n   * Availability Zone.\n   *\n   * @param request - The request {@link ListPlacementGroupsRequest}\n   * @returns A Promise of ListPlacementGroupsResponse\n   */\n  listPlacementGroups = (request = {}) => enrichForPagination('placementGroups', this.pageOfListPlacementGroups, request);\n\n  /**\n   * Create a placement group. Create a new placement group in a specified\n   * Availability Zone.\n   *\n   * @param request - The request {@link CreatePlacementGroupRequest}\n   * @returns A Promise of CreatePlacementGroupResponse\n   */\n  createPlacementGroup = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreatePlacementGroupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/placement_groups`\n  }, unmarshalCreatePlacementGroupResponse);\n\n  /**\n   * Get a placement group. Get the specified placement group.\n   *\n   * @param request - The request {@link GetPlacementGroupRequest}\n   * @returns A Promise of GetPlacementGroupResponse\n   */\n  getPlacementGroup = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/placement_groups/${validatePathParam('placementGroupId', request.placementGroupId)}`\n  }, unmarshalGetPlacementGroupResponse);\n\n  /**\n   * Set placement group. Set all parameters of the specified placement group.\n   *\n   * @param request - The request {@link SetPlacementGroupRequest}\n   * @returns A Promise of SetPlacementGroupResponse\n   */\n  setPlacementGroup = request => this.client.fetch({\n    body: JSON.stringify(marshalSetPlacementGroupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PUT',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/placement_groups/${validatePathParam('placementGroupId', request.placementGroupId)}`\n  }, unmarshalSetPlacementGroupResponse);\n\n  /**\n   * Update a placement group. Update one or more parameter of the specified\n   * placement group.\n   *\n   * @param request - The request {@link UpdatePlacementGroupRequest}\n   * @returns A Promise of UpdatePlacementGroupResponse\n   */\n  updatePlacementGroup = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdatePlacementGroupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PATCH',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/placement_groups/${validatePathParam('placementGroupId', request.placementGroupId)}`\n  }, unmarshalUpdatePlacementGroupResponse);\n\n  /**\n   * Delete the specified placement group.\n   *\n   * @param request - The request {@link DeletePlacementGroupRequest}\n   */\n  deletePlacementGroup = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/placement_groups/${validatePathParam('placementGroupId', request.placementGroupId)}`\n  });\n\n  /**\n   * Get placement group servers. Get all Instances belonging to the specified\n   * placement group.\n   *\n   * @param request - The request {@link GetPlacementGroupServersRequest}\n   * @returns A Promise of GetPlacementGroupServersResponse\n   */\n  getPlacementGroupServers = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/placement_groups/${validatePathParam('placementGroupId', request.placementGroupId)}/servers`\n  }, unmarshalGetPlacementGroupServersResponse);\n\n  /**\n   * Set placement group servers. Set all Instances belonging to the specified\n   * placement group.\n   *\n   * @param request - The request {@link SetPlacementGroupServersRequest}\n   * @returns A Promise of SetPlacementGroupServersResponse\n   */\n  setPlacementGroupServers = request => this.client.fetch({\n    body: JSON.stringify(marshalSetPlacementGroupServersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PUT',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/placement_groups/${validatePathParam('placementGroupId', request.placementGroupId)}/servers`\n  }, unmarshalSetPlacementGroupServersResponse);\n\n  /**\n   * Update placement group servers. Update all Instances belonging to the\n   * specified placement group.\n   *\n   * @param request - The request {@link UpdatePlacementGroupServersRequest}\n   * @returns A Promise of UpdatePlacementGroupServersResponse\n   */\n  updatePlacementGroupServers = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdatePlacementGroupServersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PATCH',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/placement_groups/${validatePathParam('placementGroupId', request.placementGroupId)}/servers`\n  }, unmarshalUpdatePlacementGroupServersResponse);\n  pageOfListIps = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips`,\n    urlParams: urlParams(['name', request.name], ['organization', request.organization], ['page', request.page], ['per_page', request.perPage ?? this.client.settings.defaultPageSize], ['project', request.project], ['tags', request.tags && request.tags.length > 0 ? request.tags.join(',') : undefined], ['type', request.type])\n  }, unmarshalListIpsResponse$1);\n\n  /**\n   * List all flexible IPs. List all flexible IPs in a specified zone.\n   *\n   * @param request - The request {@link ListIpsRequest}\n   * @returns A Promise of ListIpsResponse\n   */\n  listIps = (request = {}) => enrichForPagination('ips', this.pageOfListIps, request);\n\n  /**\n   * Reserve a flexible IP. Reserve a flexible IP and attach it to the specified\n   * Instance.\n   *\n   * @param request - The request {@link CreateIpRequest}\n   * @returns A Promise of CreateIpResponse\n   */\n  createIp = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreateIpRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips`\n  }, unmarshalCreateIpResponse);\n\n  /**\n   * Get a flexible IP. Get details of an IP with the specified ID or address.\n   *\n   * @param request - The request {@link GetIpRequest}\n   * @returns A Promise of GetIpResponse\n   */\n  getIp = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips/${validatePathParam('ip', request.ip)}`\n  }, unmarshalGetIpResponse);\n\n  /**\n   * Update a flexible IP. Update a flexible IP in the specified zone with the\n   * specified ID.\n   *\n   * @param request - The request {@link UpdateIpRequest}\n   * @returns A Promise of UpdateIpResponse\n   */\n  updateIp = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateIpRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PATCH',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips/${validatePathParam('ip', request.ip)}`\n  }, unmarshalUpdateIpResponse);\n\n  /**\n   * Delete a flexible IP. Delete the IP with the specified ID.\n   *\n   * @param request - The request {@link DeleteIpRequest}\n   */\n  deleteIp = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips/${validatePathParam('ip', request.ip)}`\n  });\n  pageOfListPrivateNICs = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/private_nics`,\n    urlParams: urlParams(['page', request.page], ['per_page', request.perPage ?? this.client.settings.defaultPageSize], ['tags', request.tags && request.tags.length > 0 ? request.tags.join(',') : undefined])\n  }, unmarshalListPrivateNICsResponse);\n\n  /**\n   * List all private NICs. List all private NICs of a specified Instance.\n   *\n   * @param request - The request {@link ListPrivateNICsRequest}\n   * @returns A Promise of ListPrivateNICsResponse\n   */\n  listPrivateNICs = request => enrichForPagination('privateNics', this.pageOfListPrivateNICs, request);\n\n  /**\n   * Create a private NIC connecting an Instance to a Private Network.\n   *\n   * @param request - The request {@link CreatePrivateNICRequest}\n   * @returns A Promise of CreatePrivateNICResponse\n   */\n  createPrivateNIC = request => this.client.fetch({\n    body: JSON.stringify(marshalCreatePrivateNICRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/private_nics`\n  }, unmarshalCreatePrivateNICResponse);\n\n  /**\n   * Get a private NIC. Get private NIC properties.\n   *\n   * @param request - The request {@link GetPrivateNICRequest}\n   * @returns A Promise of GetPrivateNICResponse\n   */\n  getPrivateNIC = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/private_nics/${validatePathParam('privateNicId', request.privateNicId)}`\n  }, unmarshalGetPrivateNICResponse);\n\n  /**\n   * Update a private NIC. Update one or more parameter(s) of a specified\n   * private NIC.\n   *\n   * @param request - The request {@link UpdatePrivateNICRequest}\n   * @returns A Promise of PrivateNIC\n   */\n  updatePrivateNIC = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdatePrivateNICRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'PATCH',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/private_nics/${validatePathParam('privateNicId', request.privateNicId)}`\n  }, unmarshalPrivateNIC);\n\n  /**\n   * Delete a private NIC.\n   *\n   * @param request - The request {@link DeletePrivateNICRequest}\n   */\n  deletePrivateNIC = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/private_nics/${validatePathParam('privateNicId', request.privateNicId)}`\n  });\n  pageOfListBootscripts = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/bootscripts`,\n    urlParams: urlParams(['arch', request.arch], ['default', request.default], ['page', request.page], ['per_page', request.perPage ?? this.client.settings.defaultPageSize], ['public', request.public], ['title', request.title])\n  }, unmarshalListBootscriptsResponse);\n\n  /**\n   * List bootscripts.\n   *\n   * @deprecated\n   * @param request - The request {@link ListBootscriptsRequest}\n   * @returns A Promise of ListBootscriptsResponse\n   */\n  listBootscripts = (request = {}) => enrichForPagination('bootscripts', this.pageOfListBootscripts, request);\n\n  /**\n   * Get bootscripts. Get details of a bootscript with the specified ID.\n   *\n   * @deprecated\n   * @param request - The request {@link GetBootscriptRequest}\n   * @returns A Promise of GetBootscriptResponse\n   */\n  getBootscript = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/bootscripts/${validatePathParam('bootscriptId', request.bootscriptId)}`\n  }, unmarshalGetBootscriptResponse);\n  getDashboard = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/dashboard`,\n    urlParams: urlParams(['organization', request.organization], ['project', request.project])\n  }, unmarshalGetDashboardResponse);\n\n  /**\n   * Get a volume or snapshot's migration plan. Given a volume or snapshot,\n   * returns the migration plan for a call to the RPC ApplyBlockMigration. This\n   * plan will include zero or one volume, and zero or more snapshots, which\n   * will need to be migrated together. This RPC does not perform the actual\n   * migration itself, ApplyBlockMigration must be used. The validation_key\n   * value returned by this call must be provided to the ApplyBlockMigration\n   * call to confirm that all resources listed in the plan should be migrated.\n   *\n   * @param request - The request {@link PlanBlockMigrationRequest}\n   * @returns A Promise of MigrationPlan\n   */\n  planBlockMigration = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalPlanBlockMigrationRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/block-migration/plan`\n  }, unmarshalMigrationPlan);\n\n  /**\n   * Migrate a volume and/or snapshots to SBS (Scaleway Block Storage). To be\n   * used, this RPC must be preceded by a call to PlanBlockMigration. To migrate\n   * all resources mentioned in the MigrationPlan, the validation_key returned\n   * in the MigrationPlan must be provided.\n   *\n   * @param request - The request {@link ApplyBlockMigrationRequest}\n   */\n  applyBlockMigration = request => this.client.fetch({\n    body: JSON.stringify(marshalApplyBlockMigrationRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$k,\n    method: 'POST',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/block-migration/apply`\n  });\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link ImageState}. */\nconst IMAGE_TRANSIENT_STATUSES$1 = ['creating'];\n\n/** Lists transient statutes of the enum {@link IpState}. */\nconst IP_TRANSIENT_STATUSES = ['pending'];\n\n/** Lists transient statutes of the enum {@link PrivateNICState}. */\nconst PRIVATE_NIC_TRANSIENT_STATUSES = ['syncing'];\n\n/** Lists transient statutes of the enum {@link SecurityGroupState}. */\nconst SECURITY_GROUP_TRANSIENT_STATUSES = ['syncing'];\n\n/** Lists transient statutes of the enum {@link ServerIpState}. */\nconst SERVER_IP_TRANSIENT_STATUSES = ['pending'];\n\n/** Lists transient statutes of the enum {@link ServerState}. */\nconst SERVER_TRANSIENT_STATUSES = ['starting', 'stopping'];\n\n/** Lists transient statutes of the enum {@link SnapshotState}. */\nconst SNAPSHOT_TRANSIENT_STATUSES$1 = ['snapshotting', 'importing', 'exporting'];\n\n/** Lists transient statutes of the enum {@link TaskStatus}. */\nconst TASK_TRANSIENT_STATUSES = ['pending', 'started', 'retry'];\n\n/** Lists transient statutes of the enum {@link VolumeServerState}. */\nconst VOLUME_SERVER_TRANSIENT_STATUSES = ['snapshotting', 'fetching', 'resizing', 'saving', 'hotsyncing'];\n\n/** Lists transient statutes of the enum {@link VolumeState}. */\nconst VOLUME_TRANSIENT_STATUSES = ['snapshotting', 'fetching', 'resizing', 'saving', 'hotsyncing'];\n\nconst validateNotUndefined = obj => {\n  if (obj === undefined) throw new TypeError(`object was found undefined`);\n  return obj;\n};\nclass InstanceV1UtilsAPI extends API$k {\n  /**\n   * Waits for {@link Image} to be in a final state.\n   *\n   * @param request - The request {@link GetImageRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Image\n   */\n  waitForImage = (request, options) => tryAtIntervals(async () => {\n    const value = await this.getImage(request).then(res => res.image);\n    return {\n      done: !IMAGE_TRANSIENT_STATUSES$1.includes(value.state),\n      value\n    };\n  }, createExponentialBackoffStrategy(options?.minDelay ?? 1, options?.maxDelay ?? 30), options?.timeout);\n\n  /**\n   * Waits for {@link PrivateNIC} to be in a final state.\n   *\n   * @param request - The request {@link GetPrivateNICRequest}\n   * @param options - The waiting options\n   * @returns A Promise of PrivateNIC\n   */\n  waitForPrivateNIC = (request, options) => tryAtIntervals(async () => {\n    const value = await this.getPrivateNIC(request).then(res => res.privateNic);\n    return {\n      done: !PRIVATE_NIC_TRANSIENT_STATUSES.includes(value.state),\n      value\n    };\n  }, createExponentialBackoffStrategy(options?.minDelay ?? 1, options?.maxDelay ?? 30), options?.timeout);\n\n  /**\n   * Waits for {@link Server} to be in a final state.\n   *\n   * @param request - The request {@link GetServerRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Server\n   */\n  waitForServer = (request, options) => tryAtIntervals(async () => {\n    const value = await this.getServer(request).then(res => res.server);\n    return {\n      done: !SERVER_TRANSIENT_STATUSES.includes(value.state),\n      value\n    };\n  }, createExponentialBackoffStrategy(options?.minDelay ?? 1, options?.maxDelay ?? 30), options?.timeout);\n\n  /**\n   * Waits for {@link Server} to be in a final state.\n   *\n   * @param request - The request {@link GetServerRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Server\n   */\n  waitForSnapshot = (request, options) => tryAtIntervals(async () => {\n    const value = await this.getSnapshot(request).then(res => res.snapshot);\n    return {\n      done: !SNAPSHOT_TRANSIENT_STATUSES$1.includes(value.state),\n      value\n    };\n  }, createExponentialBackoffStrategy(options?.minDelay ?? 1, options?.maxDelay ?? 30), options?.timeout);\n\n  /**\n   * Waits for {@link Volume} to be in a final state.\n   *\n   * @param request - The request {@link GetVolumeRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Volume\n   */\n  waitForVolume = (request, options) => tryAtIntervals(async () => {\n    const value = await this.getVolume(request).then(res => res.volume);\n    return {\n      done: !VOLUME_TRANSIENT_STATUSES.includes(value.state),\n      value\n    };\n  }, createExponentialBackoffStrategy(options?.minDelay ?? 1, options?.maxDelay ?? 30), options?.timeout);\n\n  /**\n   * Updates a server.\n   *\n   * @param request - The request {@link UpdateServerRequest}\n   * @returns A Promise of UpdateServerResponse\n   */\n  updateServer = request => this._updateServer(request);\n\n  /**\n   * Creates a server.\n   *\n   * @param request - The request {@link CreateServerRequest}\n   * @returns A Promise of CreateServerResponse\n   */\n  createServer = request => this._createServer(request);\n\n  /**\n   * Starts an action and wait for the server to be in the correct \"terminal\n   * state\" expected by this action.\n   *\n   * @param request - The request {@link ServerActionRequest}\n   * @returns A Promise of Server\n   */\n  serverActionAndWait = async (request, options) => {\n    const finalServer = await this.serverAction(request).then(() => this.waitForServer({\n      serverId: request.serverId,\n      zone: request.zone\n    }, options));\n\n    // Check the action was properly executed.\n    let expectedState;\n    switch (request.action) {\n      case 'poweron':\n      case 'reboot':\n        expectedState = 'running';\n        break;\n      case 'poweroff':\n        expectedState = 'stopped';\n        break;\n      case 'stop_in_place':\n        expectedState = 'stopped in place';\n        break;\n    }\n    if (expectedState && finalServer.state !== expectedState) {\n      throw new Error(`expected state ${expectedState} but found ${finalServer.state}: ${finalServer.stateDetail}`);\n    }\n    return finalServer;\n  };\n\n  /**\n   * Attaches a volume to a server.\n   *\n   * @param request - The request {@link AttachVolumeRequest}\n   * @returns A Promise of AttachVolumeResponse\n   */\n  attachVolume = async request => {\n    const volumes = await this.getServer({\n      serverId: request.serverId,\n      zone: request.zone\n    }).then(res => validateNotUndefined(res.server?.volumes));\n    const newVolumes = {};\n    for (const [key, server] of Object.entries(volumes)) {\n      newVolumes[key] = {\n        id: server.id,\n        name: server.name\n      };\n    }\n\n    // We loop through all the possible volume keys (0 to len(volumes))\n    // to find a non existing key and assign it to the requested volume.\n    // A key should always be found. However we return an error if no keys were found.\n    let found = false;\n    const volumesLength = Object.keys(volumes).length;\n    for (let index = 0; index <= volumesLength; index += 1) {\n      const key = index.toString();\n      if (!(key in newVolumes)) {\n        newVolumes[key] = {\n          id: request.volumeId,\n          name: request.volumeId // name is ignored on this PATCH\n        };\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      throw new Error(`could not find key to attach volume ${request.volumeId}`);\n    }\n\n    // Update server\n    return this.updateServer({\n      serverId: request.serverId,\n      volumes: newVolumes,\n      zone: request.zone\n    }).then(obj => obj);\n  };\n\n  /**\n   * Detaches a volume from a server.\n   *\n   * @param request - The request {@link DetachVolumeRequest}\n   * @returns A Promise of DetachVolumeResponse\n   */\n  detachVolume = async request => {\n    // Get server and related volumes.\n    const server = await this.getVolume({\n      volumeId: request.volumeId,\n      zone: request.zone\n    }).then(res => validateNotUndefined(res.volume?.server?.id)).then(serverId => this.getServer({\n      serverId,\n      zone: request.zone\n    })).then(res => validateNotUndefined(res.server));\n\n    // Remove volume.\n    const newVolumes = {};\n    for (const [key, volume] of Object.entries(server.volumes)) {\n      if (volume.id !== request.volumeId) {\n        newVolumes[key] = {\n          id: volume.id,\n          name: volume.name\n        };\n      }\n    }\n\n    // Update server.\n    return this.updateServer({\n      serverId: server.id,\n      volumes: newVolumes,\n      zone: request.zone\n    }).then(obj => obj);\n  };\n\n  /**\n   * Get the content of a user data on a server for the given key.\n   *\n   * @param request - The request {@link GetServerUserDataRequest}\n   * @returns The content of the key\n   */\n  getServerUserData = request => this.client.fetch({\n    method: 'GET',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/user_data/${validatePathParam('key', request.key)}`\n  });\n\n  /**\n   * Sets the content of a user data on a server for the given key.\n   *\n   * @param request - The request {@link SetServerUserDataRequest}\n   */\n  setServerUserData = request => this.client.fetch({\n    body: request.content,\n    headers: {\n      'Content-Type': 'text/plain'\n    },\n    method: 'PATCH',\n    path: `/instance/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/servers/${validatePathParam('serverId', request.serverId)}/user_data/${validatePathParam('key', request.key)}`\n  });\n}\n\nvar index$m = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: InstanceV1UtilsAPI,\n  IMAGE_TRANSIENT_STATUSES: IMAGE_TRANSIENT_STATUSES$1,\n  IP_TRANSIENT_STATUSES: IP_TRANSIENT_STATUSES,\n  PRIVATE_NIC_TRANSIENT_STATUSES: PRIVATE_NIC_TRANSIENT_STATUSES,\n  SECURITY_GROUP_TRANSIENT_STATUSES: SECURITY_GROUP_TRANSIENT_STATUSES,\n  SERVER_IP_TRANSIENT_STATUSES: SERVER_IP_TRANSIENT_STATUSES,\n  SERVER_TRANSIENT_STATUSES: SERVER_TRANSIENT_STATUSES,\n  SNAPSHOT_TRANSIENT_STATUSES: SNAPSHOT_TRANSIENT_STATUSES$1,\n  TASK_TRANSIENT_STATUSES: TASK_TRANSIENT_STATUSES,\n  VOLUME_SERVER_TRANSIENT_STATUSES: VOLUME_SERVER_TRANSIENT_STATUSES,\n  VOLUME_TRANSIENT_STATUSES: VOLUME_TRANSIENT_STATUSES\n});\n\nvar index$l = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1: index$m\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link HubStatus}. */\nconst HUB_TRANSIENT_STATUSES = ['enabling', 'disabling'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalDeviceMessageFiltersRule = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DeviceMessageFiltersRule' failed as data isn't a dictionary.`);\n  }\n  return {\n    policy: data.policy,\n    topics: data.topics\n  };\n};\nconst unmarshalDeviceMessageFilters = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DeviceMessageFilters' failed as data isn't a dictionary.`);\n  }\n  return {\n    publish: data.publish ? unmarshalDeviceMessageFiltersRule(data.publish) : undefined,\n    subscribe: data.subscribe ? unmarshalDeviceMessageFiltersRule(data.subscribe) : undefined\n  };\n};\nconst unmarshalDevice = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Device' failed as data isn't a dictionary.`);\n  }\n  return {\n    allowInsecure: data.allow_insecure,\n    allowMultipleConnections: data.allow_multiple_connections,\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    hasCustomCertificate: data.has_custom_certificate,\n    hubId: data.hub_id,\n    id: data.id,\n    isConnected: data.is_connected,\n    lastActivityAt: unmarshalDate(data.last_activity_at),\n    messageFilters: data.message_filters ? unmarshalDeviceMessageFilters(data.message_filters) : undefined,\n    name: data.name,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalNetwork = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Network' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    endpoint: data.endpoint,\n    hubId: data.hub_id,\n    id: data.id,\n    name: data.name,\n    topicPrefix: data.topic_prefix,\n    type: data.type\n  };\n};\nconst unmarshalHubTwinsGraphiteConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'HubTwinsGraphiteConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    pushUri: data.push_uri\n  };\n};\nconst unmarshalHub = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Hub' failed as data isn't a dictionary.`);\n  }\n  return {\n    connectedDeviceCount: data.connected_device_count,\n    createdAt: unmarshalDate(data.created_at),\n    deviceCount: data.device_count,\n    disableEvents: data.disable_events,\n    enableDeviceAutoProvisioning: data.enable_device_auto_provisioning,\n    enabled: data.enabled,\n    endpoint: data.endpoint,\n    eventsTopicPrefix: data.events_topic_prefix,\n    hasCustomCa: data.has_custom_ca,\n    id: data.id,\n    name: data.name,\n    organizationId: data.organization_id,\n    productPlan: data.product_plan,\n    projectId: data.project_id,\n    region: data.region,\n    status: data.status,\n    twinsGraphiteConfig: data.twins_graphite_config ? unmarshalHubTwinsGraphiteConfig(data.twins_graphite_config) : undefined,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalCertificate$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Certificate' failed as data isn't a dictionary.`);\n  }\n  return {\n    crt: data.crt,\n    key: data.key\n  };\n};\nconst unmarshalCreateDeviceResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CreateDeviceResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    certificate: data.certificate ? unmarshalCertificate$1(data.certificate) : undefined,\n    device: data.device ? unmarshalDevice(data.device) : undefined\n  };\n};\nconst unmarshalCreateNetworkResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CreateNetworkResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    network: data.network ? unmarshalNetwork(data.network) : undefined,\n    secret: data.secret\n  };\n};\nconst unmarshalGetDeviceCertificateResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetDeviceCertificateResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    certificatePem: data.certificate_pem,\n    device: data.device ? unmarshalDevice(data.device) : undefined\n  };\n};\nconst unmarshalGetDeviceMetricsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetDeviceMetricsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    metrics: unmarshalArrayOfObject(data.metrics, unmarshalTimeSeries)\n  };\n};\nconst unmarshalGetHubCAResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetHubCAResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    caCertPem: data.ca_cert_pem\n  };\n};\nconst unmarshalGetHubMetricsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GetHubMetricsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    metrics: unmarshalArrayOfObject(data.metrics, unmarshalTimeSeries)\n  };\n};\nconst unmarshalListDevicesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDevicesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    devices: unmarshalArrayOfObject(data.devices, unmarshalDevice),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListHubsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListHubsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    hubs: unmarshalArrayOfObject(data.hubs, unmarshalHub),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListNetworksResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListNetworksResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    networks: unmarshalArrayOfObject(data.networks, unmarshalNetwork),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalRouteSummary = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RouteSummary' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    hubId: data.hub_id,\n    id: data.id,\n    name: data.name,\n    topic: data.topic,\n    type: data.type,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalListRoutesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRoutesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    routes: unmarshalArrayOfObject(data.routes, unmarshalRouteSummary),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListTwinDocumentsResponseDocumentSummary = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTwinDocumentsResponseDocumentSummary' failed as data isn't a dictionary.`);\n  }\n  return {\n    documentName: data.document_name\n  };\n};\nconst unmarshalListTwinDocumentsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTwinDocumentsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    documents: unmarshalArrayOfObject(data.documents, unmarshalListTwinDocumentsResponseDocumentSummary)\n  };\n};\nconst unmarshalRenewDeviceCertificateResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RenewDeviceCertificateResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    certificate: data.certificate ? unmarshalCertificate$1(data.certificate) : undefined,\n    device: data.device ? unmarshalDevice(data.device) : undefined\n  };\n};\nconst unmarshalRouteDatabaseConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RouteDatabaseConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    dbname: data.dbname,\n    engine: data.engine,\n    host: data.host,\n    password: data.password,\n    port: data.port,\n    query: data.query,\n    username: data.username\n  };\n};\nconst unmarshalRouteRestConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RouteRestConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    headers: data.headers,\n    uri: data.uri,\n    verb: data.verb\n  };\n};\nconst unmarshalRouteS3Config = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RouteS3Config' failed as data isn't a dictionary.`);\n  }\n  return {\n    bucketName: data.bucket_name,\n    bucketRegion: data.bucket_region,\n    objectPrefix: data.object_prefix,\n    strategy: data.strategy\n  };\n};\nconst unmarshalRoute$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Route' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    dbConfig: data.db_config ? unmarshalRouteDatabaseConfig(data.db_config) : undefined,\n    hubId: data.hub_id,\n    id: data.id,\n    name: data.name,\n    restConfig: data.rest_config ? unmarshalRouteRestConfig(data.rest_config) : undefined,\n    s3Config: data.s3_config ? unmarshalRouteS3Config(data.s3_config) : undefined,\n    topic: data.topic,\n    type: data.type,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalSetDeviceCertificateResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetDeviceCertificateResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    certificatePem: data.certificate_pem,\n    device: data.device ? unmarshalDevice(data.device) : undefined\n  };\n};\nconst unmarshalTwinDocument = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'TwinDocument' failed as data isn't a dictionary.`);\n  }\n  return {\n    data: data.data,\n    documentName: data.document_name,\n    twinId: data.twin_id,\n    version: data.version\n  };\n};\nconst marshalDeviceMessageFiltersRule = (request, defaults) => ({\n  policy: request.policy,\n  topics: request.topics\n});\nconst marshalDeviceMessageFilters = (request, defaults) => ({\n  publish: request.publish !== undefined ? marshalDeviceMessageFiltersRule(request.publish) : undefined,\n  subscribe: request.subscribe !== undefined ? marshalDeviceMessageFiltersRule(request.subscribe) : undefined\n});\nconst marshalCreateDeviceRequest = (request, defaults) => ({\n  allow_insecure: request.allowInsecure,\n  allow_multiple_connections: request.allowMultipleConnections,\n  description: request.description,\n  hub_id: request.hubId,\n  message_filters: request.messageFilters !== undefined ? marshalDeviceMessageFilters(request.messageFilters) : undefined,\n  name: request.name || randomName('device')\n});\nconst marshalHubTwinsGraphiteConfig = (request, defaults) => ({\n  push_uri: request.pushUri\n});\nconst marshalCreateHubRequest = (request, defaults) => ({\n  disable_events: request.disableEvents,\n  events_topic_prefix: request.eventsTopicPrefix,\n  name: request.name || randomName('hub'),\n  product_plan: request.productPlan,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  ...resolveOneOf([{\n    param: 'twins_graphite_config',\n    value: request.twinsGraphiteConfig !== undefined ? marshalHubTwinsGraphiteConfig(request.twinsGraphiteConfig) : undefined\n  }])\n});\nconst marshalCreateNetworkRequest = (request, defaults) => ({\n  hub_id: request.hubId,\n  name: request.name || randomName('network'),\n  topic_prefix: request.topicPrefix,\n  type: request.type\n});\nconst marshalCreateRouteRequestDatabaseConfig = (request, defaults) => ({\n  dbname: request.dbname,\n  engine: request.engine,\n  host: request.host,\n  password: request.password,\n  port: request.port,\n  query: request.query,\n  username: request.username\n});\nconst marshalCreateRouteRequestRestConfig = (request, defaults) => ({\n  headers: request.headers,\n  uri: request.uri,\n  verb: request.verb\n});\nconst marshalCreateRouteRequestS3Config = (request, defaults) => ({\n  bucket_name: request.bucketName,\n  bucket_region: request.bucketRegion,\n  object_prefix: request.objectPrefix,\n  strategy: request.strategy\n});\nconst marshalCreateRouteRequest$1 = (request, defaults) => ({\n  hub_id: request.hubId,\n  name: request.name || randomName('route'),\n  topic: request.topic,\n  ...resolveOneOf([{\n    param: 's3_config',\n    value: request.s3Config !== undefined ? marshalCreateRouteRequestS3Config(request.s3Config) : undefined\n  }, {\n    param: 'db_config',\n    value: request.dbConfig !== undefined ? marshalCreateRouteRequestDatabaseConfig(request.dbConfig) : undefined\n  }, {\n    param: 'rest_config',\n    value: request.restConfig !== undefined ? marshalCreateRouteRequestRestConfig(request.restConfig) : undefined\n  }])\n});\nconst marshalPatchTwinDocumentRequest = (request, defaults) => ({\n  data: request.data,\n  version: request.version\n});\nconst marshalPutTwinDocumentRequest = (request, defaults) => ({\n  data: request.data,\n  version: request.version\n});\nconst marshalSetDeviceCertificateRequest = (request, defaults) => ({\n  certificate_pem: request.certificatePem\n});\nconst marshalSetHubCARequest = (request, defaults) => ({\n  ca_cert_pem: request.caCertPem,\n  challenge_cert_pem: request.challengeCertPem\n});\nconst marshalUpdateDeviceRequest = (request, defaults) => ({\n  allow_insecure: request.allowInsecure,\n  allow_multiple_connections: request.allowMultipleConnections,\n  description: request.description,\n  hub_id: request.hubId,\n  message_filters: request.messageFilters !== undefined ? marshalDeviceMessageFilters(request.messageFilters) : undefined\n});\nconst marshalUpdateHubRequest = (request, defaults) => ({\n  disable_events: request.disableEvents,\n  enable_device_auto_provisioning: request.enableDeviceAutoProvisioning,\n  events_topic_prefix: request.eventsTopicPrefix,\n  name: request.name,\n  product_plan: request.productPlan,\n  ...resolveOneOf([{\n    param: 'twins_graphite_config',\n    value: request.twinsGraphiteConfig !== undefined ? marshalHubTwinsGraphiteConfig(request.twinsGraphiteConfig) : undefined\n  }])\n});\nconst marshalUpdateRouteRequestDatabaseConfig = (request, defaults) => ({\n  dbname: request.dbname,\n  engine: request.engine,\n  host: request.host,\n  password: request.password,\n  port: request.port,\n  query: request.query,\n  username: request.username\n});\nconst marshalUpdateRouteRequestRestConfig = (request, defaults) => ({\n  headers: request.headers,\n  uri: request.uri,\n  verb: request.verb\n});\nconst marshalUpdateRouteRequestS3Config = (request, defaults) => ({\n  bucket_name: request.bucketName,\n  bucket_region: request.bucketRegion,\n  object_prefix: request.objectPrefix,\n  strategy: request.strategy\n});\nconst marshalUpdateRouteRequest$1 = (request, defaults) => ({\n  name: request.name,\n  topic: request.topic,\n  ...resolveOneOf([{\n    param: 's3_config',\n    value: request.s3Config !== undefined ? marshalUpdateRouteRequestS3Config(request.s3Config) : undefined\n  }, {\n    param: 'db_config',\n    value: request.dbConfig !== undefined ? marshalUpdateRouteRequestDatabaseConfig(request.dbConfig) : undefined\n  }, {\n    param: 'rest_config',\n    value: request.restConfig !== undefined ? marshalUpdateRouteRequestRestConfig(request.restConfig) : undefined\n  }])\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$j = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * IoT Hub API.\n *\n * This API allows you to manage IoT hubs and devices.\n */\nlet API$j = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par'];\n  pageOfListHubs = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hubs`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListHubsResponse);\n\n  /**\n   * List hubs. List all Hubs in the specified zone. By default, returned Hubs\n   * are ordered by creation date in ascending order, though this can be\n   * modified via the `order_by` field.\n   *\n   * @param request - The request {@link ListHubsRequest}\n   * @returns A Promise of ListHubsResponse\n   */\n  listHubs = (request = {}) => enrichForPagination('hubs', this.pageOfListHubs, request);\n\n  /**\n   * Create a hub. Create a new Hub in the targeted region, specifying its\n   * configuration including name and product plan.\n   *\n   * @param request - The request {@link CreateHubRequest}\n   * @returns A Promise of Hub\n   */\n  createHub = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateHubRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$j,\n    method: 'POST',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hubs`\n  }, unmarshalHub);\n\n  /**\n   * Get a hub. Retrieve information about an existing IoT Hub, specified by its\n   * Hub ID. Its full details, including name, status and endpoint, are returned\n   * in the response object.\n   *\n   * @param request - The request {@link GetHubRequest}\n   * @returns A Promise of Hub\n   */\n  getHub = request => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hubs/${validatePathParam('hubId', request.hubId)}`\n  }, unmarshalHub);\n\n  /**\n   * Waits for {@link Hub} to be in a final state.\n   *\n   * @param request - The request {@link GetHubRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Hub\n   */\n  waitForHub = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!HUB_TRANSIENT_STATUSES.includes(res.status))), this.getHub, request, options);\n\n  /**\n   * Update a hub. Update the parameters of an existing IoT Hub, specified by\n   * its Hub ID.\n   *\n   * @param request - The request {@link UpdateHubRequest}\n   * @returns A Promise of Hub\n   */\n  updateHub = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateHubRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$j,\n    method: 'PATCH',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hubs/${validatePathParam('hubId', request.hubId)}`\n  }, unmarshalHub);\n\n  /**\n   * Enable a hub. Enable an existing IoT Hub, specified by its Hub ID.\n   *\n   * @param request - The request {@link EnableHubRequest}\n   * @returns A Promise of Hub\n   */\n  enableHub = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$j,\n    method: 'POST',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hubs/${validatePathParam('hubId', request.hubId)}/enable`\n  }, unmarshalHub);\n\n  /**\n   * Disable a hub. Disable an existing IoT Hub, specified by its Hub ID.\n   *\n   * @param request - The request {@link DisableHubRequest}\n   * @returns A Promise of Hub\n   */\n  disableHub = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$j,\n    method: 'POST',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hubs/${validatePathParam('hubId', request.hubId)}/disable`\n  }, unmarshalHub);\n\n  /**\n   * Delete a hub. Delete an existing IoT Hub, specified by its Hub ID. Deleting\n   * a Hub is permanent, and cannot be undone.\n   *\n   * @param request - The request {@link DeleteHubRequest}\n   */\n  deleteHub = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hubs/${validatePathParam('hubId', request.hubId)}`,\n    urlParams: urlParams(['delete_devices', request.deleteDevices])\n  });\n\n  /**\n   * Get a hub's metrics. Get the metrics of an existing IoT Hub, specified by\n   * its Hub ID.\n   *\n   * @deprecated\n   * @param request - The request {@link GetHubMetricsRequest}\n   * @returns A Promise of GetHubMetricsResponse\n   */\n  getHubMetrics = request => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hubs/${validatePathParam('hubId', request.hubId)}/metrics`,\n    urlParams: urlParams(['start_date', request.startDate])\n  }, unmarshalGetHubMetricsResponse);\n\n  /**\n   * Set the certificate authority of a hub. Set a particular PEM-encoded\n   * certificate, specified by the Hub ID.\n   *\n   * @param request - The request {@link SetHubCARequest}\n   * @returns A Promise of Hub\n   */\n  setHubCA = request => this.client.fetch({\n    body: JSON.stringify(marshalSetHubCARequest(request, this.client.settings)),\n    headers: jsonContentHeaders$j,\n    method: 'POST',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hubs/${validatePathParam('hubId', request.hubId)}/ca`\n  }, unmarshalHub);\n\n  /**\n   * Get the certificate authority of a hub. Get information for a particular\n   * PEM-encoded certificate, specified by the Hub ID.\n   *\n   * @param request - The request {@link GetHubCARequest}\n   * @returns A Promise of GetHubCAResponse\n   */\n  getHubCA = request => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hubs/${validatePathParam('hubId', request.hubId)}/ca`\n  }, unmarshalGetHubCAResponse);\n  pageOfListDevices = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/devices`,\n    urlParams: urlParams(['allow_insecure', request.allowInsecure], ['hub_id', request.hubId], ['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['status', request.status])\n  }, unmarshalListDevicesResponse);\n\n  /**\n   * List devices. List all devices in the specified region. By default,\n   * returned devices are ordered by creation date in ascending order, though\n   * this can be modified via the `order_by` field.\n   *\n   * @param request - The request {@link ListDevicesRequest}\n   * @returns A Promise of ListDevicesResponse\n   */\n  listDevices = (request = {}) => enrichForPagination('devices', this.pageOfListDevices, request);\n\n  /**\n   * Add a device. Attach a device to a given Hub.\n   *\n   * @param request - The request {@link CreateDeviceRequest}\n   * @returns A Promise of CreateDeviceResponse\n   */\n  createDevice = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateDeviceRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$j,\n    method: 'POST',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/devices`\n  }, unmarshalCreateDeviceResponse);\n\n  /**\n   * Get a device. Retrieve information about an existing device, specified by\n   * its device ID. Its full details, including name, status and ID, are\n   * returned in the response object.\n   *\n   * @param request - The request {@link GetDeviceRequest}\n   * @returns A Promise of Device\n   */\n  getDevice = request => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/devices/${validatePathParam('deviceId', request.deviceId)}`\n  }, unmarshalDevice);\n\n  /**\n   * Update a device. Update the parameters of an existing device, specified by\n   * its device ID.\n   *\n   * @param request - The request {@link UpdateDeviceRequest}\n   * @returns A Promise of Device\n   */\n  updateDevice = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateDeviceRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$j,\n    method: 'PATCH',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/devices/${validatePathParam('deviceId', request.deviceId)}`\n  }, unmarshalDevice);\n\n  /**\n   * Enable a device. Enable a specific device, specified by its device ID.\n   *\n   * @param request - The request {@link EnableDeviceRequest}\n   * @returns A Promise of Device\n   */\n  enableDevice = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$j,\n    method: 'POST',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/devices/${validatePathParam('deviceId', request.deviceId)}/enable`\n  }, unmarshalDevice);\n\n  /**\n   * Disable a device. Disable an existing device, specified by its device ID.\n   *\n   * @param request - The request {@link DisableDeviceRequest}\n   * @returns A Promise of Device\n   */\n  disableDevice = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$j,\n    method: 'POST',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/devices/${validatePathParam('deviceId', request.deviceId)}/disable`\n  }, unmarshalDevice);\n\n  /**\n   * Renew a device certificate. Renew the certificate of an existing device,\n   * specified by its device ID.\n   *\n   * @param request - The request {@link RenewDeviceCertificateRequest}\n   * @returns A Promise of RenewDeviceCertificateResponse\n   */\n  renewDeviceCertificate = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$j,\n    method: 'POST',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/devices/${validatePathParam('deviceId', request.deviceId)}/renew-certificate`\n  }, unmarshalRenewDeviceCertificateResponse);\n\n  /**\n   * Set a custom certificate on a device. Switch the existing certificate of a\n   * given device with an EM-encoded custom certificate.\n   *\n   * @param request - The request {@link SetDeviceCertificateRequest}\n   * @returns A Promise of SetDeviceCertificateResponse\n   */\n  setDeviceCertificate = request => this.client.fetch({\n    body: JSON.stringify(marshalSetDeviceCertificateRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$j,\n    method: 'PUT',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/devices/${validatePathParam('deviceId', request.deviceId)}/certificate`\n  }, unmarshalSetDeviceCertificateResponse);\n\n  /**\n   * Get a device's certificate. Get information for a particular PEM-encoded\n   * certificate, specified by the device ID. The response returns full details\n   * of the device, including its type of certificate.\n   *\n   * @param request - The request {@link GetDeviceCertificateRequest}\n   * @returns A Promise of GetDeviceCertificateResponse\n   */\n  getDeviceCertificate = request => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/devices/${validatePathParam('deviceId', request.deviceId)}/certificate`\n  }, unmarshalGetDeviceCertificateResponse);\n\n  /**\n   * Remove a device. Remove a specific device from the specific Hub it is\n   * attached to.\n   *\n   * @param request - The request {@link DeleteDeviceRequest}\n   */\n  deleteDevice = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/devices/${validatePathParam('deviceId', request.deviceId)}`\n  });\n\n  /**\n   * Get a device's metrics. Get the metrics of an existing device, specified by\n   * its device ID.\n   *\n   * @deprecated\n   * @param request - The request {@link GetDeviceMetricsRequest}\n   * @returns A Promise of GetDeviceMetricsResponse\n   */\n  getDeviceMetrics = request => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/devices/${validatePathParam('deviceId', request.deviceId)}/metrics`,\n    urlParams: urlParams(['start_date', request.startDate])\n  }, unmarshalGetDeviceMetricsResponse);\n  pageOfListRoutes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/routes`,\n    urlParams: urlParams(['hub_id', request.hubId], ['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListRoutesResponse$1);\n\n  /**\n   * List routes. List all routes in the specified region. By default, returned\n   * routes are ordered by creation date in ascending order, though this can be\n   * modified via the `order_by` field.\n   *\n   * @param request - The request {@link ListRoutesRequest}\n   * @returns A Promise of ListRoutesResponse\n   */\n  listRoutes = (request = {}) => enrichForPagination('routes', this.pageOfListRoutes, request);\n\n  /**\n   * Create a route. Multiple kinds of routes can be created, such as:\n   *\n   * - Database Route Create a route that will record subscribed MQTT messages\n   *   into your database. <b>You need to manage the database by yourself</b>.\n   * - REST Route. Create a route that will call a REST API on received subscribed\n   *   MQTT messages.\n   * - S3 Routes. Create a route that will put subscribed MQTT messages into an S3\n   *   bucket. You need to create the bucket yourself and grant write access.\n   *   Granting can be done with s3cmd (`s3cmd setacl s3://<my-bucket>\n   *   --acl-grant=write:555c69c3-87d0-4bf8-80f1-99a2f757d031:555c69c3-87d0-4bf8-80f1-99a2f757d031`).\n   *\n   * @param request - The request {@link CreateRouteRequest}\n   * @returns A Promise of Route\n   */\n  createRoute = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateRouteRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$j,\n    method: 'POST',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/routes`\n  }, unmarshalRoute$1);\n\n  /**\n   * Update a route. Update the parameters of an existing route, specified by\n   * its route ID.\n   *\n   * @param request - The request {@link UpdateRouteRequest}\n   * @returns A Promise of Route\n   */\n  updateRoute = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateRouteRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$j,\n    method: 'PATCH',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/routes/${validatePathParam('routeId', request.routeId)}`\n  }, unmarshalRoute$1);\n\n  /**\n   * Get a route. Get information for a particular route, specified by the route\n   * ID. The response returns full details of the route, including its type, the\n   * topic it subscribes to and its configuration.\n   *\n   * @param request - The request {@link GetRouteRequest}\n   * @returns A Promise of Route\n   */\n  getRoute = request => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/routes/${validatePathParam('routeId', request.routeId)}`\n  }, unmarshalRoute$1);\n\n  /**\n   * Delete a route. Delete an existing route, specified by its route ID.\n   * Deleting a route is permanent, and cannot be undone.\n   *\n   * @param request - The request {@link DeleteRouteRequest}\n   */\n  deleteRoute = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/routes/${validatePathParam('routeId', request.routeId)}`\n  });\n  pageOfListNetworks = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/networks`,\n    urlParams: urlParams(['hub_id', request.hubId], ['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['topic_prefix', request.topicPrefix])\n  }, unmarshalListNetworksResponse);\n\n  /**\n   * List the networks.\n   *\n   * @param request - The request {@link ListNetworksRequest}\n   * @returns A Promise of ListNetworksResponse\n   */\n  listNetworks = (request = {}) => enrichForPagination('networks', this.pageOfListNetworks, request);\n\n  /**\n   * Create a new network. Create a new network for an existing hub. Beside the\n   * default network, you can add networks for different data providers.\n   * Possible network types are Sigfox and REST.\n   *\n   * @param request - The request {@link CreateNetworkRequest}\n   * @returns A Promise of CreateNetworkResponse\n   */\n  createNetwork = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateNetworkRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$j,\n    method: 'POST',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/networks`\n  }, unmarshalCreateNetworkResponse);\n\n  /**\n   * Retrieve a specific network. Retrieve an existing network, specified by its\n   * network ID. The response returns full details of the network, including its\n   * type, the topic prefix and its endpoint.\n   *\n   * @param request - The request {@link GetNetworkRequest}\n   * @returns A Promise of Network\n   */\n  getNetwork = request => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/networks/${validatePathParam('networkId', request.networkId)}`\n  }, unmarshalNetwork);\n\n  /**\n   * Delete a Network. Delete an existing network, specified by its network ID.\n   * Deleting a network is permanent, and cannot be undone.\n   *\n   * @param request - The request {@link DeleteNetworkRequest}\n   */\n  deleteNetwork = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/networks/${validatePathParam('networkId', request.networkId)}`\n  });\n\n  /**\n   * BETA - Get a Cloud Twin Document.\n   *\n   * @param request - The request {@link GetTwinDocumentRequest}\n   * @returns A Promise of TwinDocument\n   */\n  getTwinDocument = request => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/twins/${validatePathParam('twinId', request.twinId)}/documents/${validatePathParam('documentName', request.documentName)}`\n  }, unmarshalTwinDocument);\n\n  /**\n   * BETA - Update a Cloud Twin Document.\n   *\n   * @param request - The request {@link PutTwinDocumentRequest}\n   * @returns A Promise of TwinDocument\n   */\n  putTwinDocument = request => this.client.fetch({\n    body: JSON.stringify(marshalPutTwinDocumentRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$j,\n    method: 'PUT',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/twins/${validatePathParam('twinId', request.twinId)}/documents/${validatePathParam('documentName', request.documentName)}`\n  }, unmarshalTwinDocument);\n\n  /**\n   * BETA - Patch a Cloud Twin Document.\n   *\n   * @param request - The request {@link PatchTwinDocumentRequest}\n   * @returns A Promise of TwinDocument\n   */\n  patchTwinDocument = request => this.client.fetch({\n    body: JSON.stringify(marshalPatchTwinDocumentRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$j,\n    method: 'PATCH',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/twins/${validatePathParam('twinId', request.twinId)}/documents/${validatePathParam('documentName', request.documentName)}`\n  }, unmarshalTwinDocument);\n\n  /**\n   * BETA - Delete a Cloud Twin Document.\n   *\n   * @param request - The request {@link DeleteTwinDocumentRequest}\n   */\n  deleteTwinDocument = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/twins/${validatePathParam('twinId', request.twinId)}/documents/${validatePathParam('documentName', request.documentName)}`\n  });\n\n  /**\n   * BETA - List the documents of a Cloud Twin.\n   *\n   * @param request - The request {@link ListTwinDocumentsRequest}\n   * @returns A Promise of ListTwinDocumentsResponse\n   */\n  listTwinDocuments = request => this.client.fetch({\n    method: 'GET',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/twins/${validatePathParam('twinId', request.twinId)}`\n  }, unmarshalListTwinDocumentsResponse);\n\n  /**\n   * BETA - Delete all the documents of a Cloud Twin.\n   *\n   * @param request - The request {@link DeleteTwinDocumentsRequest}\n   */\n  deleteTwinDocuments = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/iot/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/twins/${validatePathParam('twinId', request.twinId)}`\n  });\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$j = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$j,\n  HUB_TRANSIENT_STATUSES: HUB_TRANSIENT_STATUSES\n});\n\nvar index$k = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1: index_gen$j\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalResource = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Resource' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    macAddress: data.mac_address,\n    name: data.name,\n    type: data.type\n  };\n};\nconst unmarshalReverse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Reverse' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    hostname: data.hostname\n  };\n};\nconst unmarshalSource = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Source' failed as data isn't a dictionary.`);\n  }\n  return {\n    privateNetworkId: data.private_network_id,\n    subnetId: data.subnet_id,\n    zonal: data.zonal\n  };\n};\nconst unmarshalIP$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'IP' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    isIpv6: data.is_ipv6,\n    projectId: data.project_id,\n    region: data.region,\n    resource: data.resource ? unmarshalResource(data.resource) : undefined,\n    reverses: unmarshalArrayOfObject(data.reverses, unmarshalReverse),\n    source: unmarshalSource(data.source),\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalListIPsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListIPsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    ips: unmarshalArrayOfObject(data.ips, unmarshalIP$1),\n    totalCount: data.total_count\n  };\n};\nconst marshalSource = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'zonal',\n    value: request.zonal\n  }, {\n    param: 'private_network_id',\n    value: request.privateNetworkId\n  }, {\n    param: 'subnet_id',\n    value: request.subnetId\n  }])\n});\nconst marshalBookIPRequest = (request, defaults) => ({\n  address: request.address,\n  is_ipv6: request.isIpv6,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  source: marshalSource(request.source),\n  tags: request.tags\n});\nconst marshalReverse = (request, defaults) => ({\n  address: request.address,\n  hostname: request.hostname\n});\nconst marshalUpdateIPRequest$1 = (request, defaults) => ({\n  reverses: request.reverses !== undefined ? request.reverses.map(elt => marshalReverse(elt)) : undefined,\n  tags: request.tags\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$i = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * IPAM API.\n *\n * This API allows you to manage IP addresses with Scaleway's IP Address\n * Management tool.\n */\nlet API$i = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n\n  /**\n   * Book a new IP. Book a new IP from the specified source. Currently IPs can\n   * only be booked from a Private Network.\n   *\n   * @param request - The request {@link BookIPRequest}\n   * @returns A Promise of IP\n   */\n  bookIP = request => this.client.fetch({\n    body: JSON.stringify(marshalBookIPRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$i,\n    method: 'POST',\n    path: `/ipam/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/ips`\n  }, unmarshalIP$1);\n\n  /**\n   * Release an IP. Release an IP not currently attached to a resource, and\n   * returns it to the available IP pool.\n   *\n   * @param request - The request {@link ReleaseIPRequest}\n   */\n  releaseIP = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$i,\n    method: 'DELETE',\n    path: `/ipam/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/ips/${validatePathParam('ipId', request.ipId)}`\n  });\n\n  /**\n   * Get an IP. Retrieve details of an existing IP, specified by its IP ID.\n   *\n   * @param request - The request {@link GetIPRequest}\n   * @returns A Promise of IP\n   */\n  getIP = request => this.client.fetch({\n    method: 'GET',\n    path: `/ipam/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/ips/${validatePathParam('ipId', request.ipId)}`\n  }, unmarshalIP$1);\n\n  /**\n   * Update an IP. Update parameters including tags of the specified IP.\n   *\n   * @param request - The request {@link UpdateIPRequest}\n   * @returns A Promise of IP\n   */\n  updateIP = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateIPRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$i,\n    method: 'PATCH',\n    path: `/ipam/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/ips/${validatePathParam('ipId', request.ipId)}`\n  }, unmarshalIP$1);\n  pageOfListIPs = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/ipam/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/ips`,\n    urlParams: urlParams(['attached', request.attached], ['is_ipv6', request.isIpv6], ['mac_address', request.macAddress], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['resource_id', request.resourceId], ['resource_name', request.resourceName], ['resource_type', request.resourceType], ['tags', request.tags], ...Object.entries(resolveOneOf([{\n      param: 'zonal',\n      value: request.zonal\n    }, {\n      param: 'private_network_id',\n      value: request.privateNetworkId\n    }])))\n  }, unmarshalListIPsResponse$1);\n\n  /**\n   * List existing IPs. List existing IPs in the specified region using various\n   * filters. For example, you can filter for IPs within a specified Private\n   * Network, or for public IPs within a specified Project. By default, the IPs\n   * returned in the list are ordered by creation date in ascending order,\n   * though this can be modified via the order_by field.\n   *\n   * @param request - The request {@link ListIPsRequest}\n   * @returns A Promise of ListIPsResponse\n   */\n  listIPs = (request = {}) => enrichForPagination('ips', this.pageOfListIPs, request);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst ListIPsRequest = {\n  resourceName: {\n    maxLength: 63,\n    minLength: 2\n  }\n};\n\nvar validationRules_gen$7 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ListIPsRequest: ListIPsRequest\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$i = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$i,\n  ValidationRules: validationRules_gen$7\n});\n\nvar index$j = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1: index_gen$i\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link NameStatus}. */\nconst NAME_TRANSIENT_STATUSES = ['queued', 'publishing'];\n\n/** Lists transient statutes of the enum {@link PinStatus}. */\nconst PIN_TRANSIENT_STATUSES = ['queued', 'pinning'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalName = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Name' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    key: data.key,\n    name: data.name,\n    nameId: data.name_id,\n    projectId: data.project_id,\n    region: data.region,\n    status: data.status,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    value: data.value\n  };\n};\nconst unmarshalPinCIDMeta = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PinCIDMeta' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id\n  };\n};\nconst unmarshalPinCID = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PinCID' failed as data isn't a dictionary.`);\n  }\n  return {\n    cid: data.cid,\n    meta: data.meta ? unmarshalPinCIDMeta(data.meta) : undefined,\n    name: data.name,\n    origins: data.origins\n  };\n};\nconst unmarshalPinInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PinInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    progress: data.progress,\n    size: data.size,\n    statusDetails: data.status_details,\n    url: data.url\n  };\n};\nconst unmarshalPin = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Pin' failed as data isn't a dictionary.`);\n  }\n  return {\n    cid: data.cid ? unmarshalPinCID(data.cid) : undefined,\n    createdAt: unmarshalDate(data.created_at),\n    delegates: data.delegates,\n    info: data.info ? unmarshalPinInfo(data.info) : undefined,\n    pinId: data.pin_id,\n    status: data.status\n  };\n};\nconst unmarshalVolume$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Volume' failed as data isn't a dictionary.`);\n  }\n  return {\n    countPin: data.count_pin,\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    name: data.name,\n    projectId: data.project_id,\n    region: data.region,\n    size: data.size,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalExportKeyNameResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ExportKeyNameResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    nameId: data.name_id,\n    privateKey: data.private_key,\n    projectId: data.project_id,\n    publicKey: data.public_key,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalListNamesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListNamesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    names: unmarshalArrayOfObject(data.names, unmarshalName),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListPinsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListPinsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    pins: unmarshalArrayOfObject(data.pins, unmarshalPin),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListVolumesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListVolumesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    volumes: unmarshalArrayOfObject(data.volumes, unmarshalVolume$1)\n  };\n};\nconst unmarshalReplacePinResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ReplacePinResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    pin: data.pin ? unmarshalPin(data.pin) : undefined\n  };\n};\nconst marshalCreatePinByCIDRequest = (request, defaults) => ({\n  cid: request.cid,\n  name: request.name,\n  origins: request.origins,\n  volume_id: request.volumeId\n});\nconst marshalCreatePinByURLRequest = (request, defaults) => ({\n  name: request.name,\n  url: request.url,\n  volume_id: request.volumeId\n});\nconst marshalCreateVolumeRequest = (request, defaults) => ({\n  name: request.name,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalIpnsApiCreateNameRequest = (request, defaults) => ({\n  name: request.name,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  value: request.value\n});\nconst marshalIpnsApiImportKeyNameRequest = (request, defaults) => ({\n  name: request.name,\n  private_key: request.privateKey,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  value: request.value\n});\nconst marshalIpnsApiUpdateNameRequest = (request, defaults) => ({\n  name: request.name,\n  tags: request.tags,\n  value: request.value\n});\nconst marshalReplacePinRequest = (request, defaults) => ({\n  cid: request.cid,\n  name: request.name,\n  origins: request.origins,\n  volume_id: request.volumeId\n});\nconst marshalUpdateVolumeRequest = (request, defaults) => ({\n  name: request.name,\n  tags: request.tags\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$h = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** IPFS Pinning service API. */\nlet API$h = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n\n  /**\n   * Create a new volume. Create a new volume from a Project ID. Volume is\n   * identified by an ID and used to host pin references. Volume is personal (at\n   * least to your organization) even if IPFS blocks and CID are available to\n   * anyone. Should be the first command you made because every pin must be\n   * attached to a volume.\n   *\n   * @param request - The request {@link CreateVolumeRequest}\n   * @returns A Promise of Volume\n   */\n  createVolume = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateVolumeRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$h,\n    method: 'POST',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/volumes`\n  }, unmarshalVolume$1);\n\n  /**\n   * Get information about a volume. Retrieve information about a specific\n   * volume.\n   *\n   * @param request - The request {@link GetVolumeRequest}\n   * @returns A Promise of Volume\n   */\n  getVolume = request => this.client.fetch({\n    method: 'GET',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/volumes/${validatePathParam('volumeId', request.volumeId)}`\n  }, unmarshalVolume$1);\n  pageOfListVolumes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/volumes`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalListVolumesResponse);\n\n  /**\n   * List all volumes by a Project ID. Retrieve information about all volumes\n   * from a Project ID.\n   *\n   * @param request - The request {@link ListVolumesRequest}\n   * @returns A Promise of ListVolumesResponse\n   */\n  listVolumes = (request = {}) => enrichForPagination('volumes', this.pageOfListVolumes, request);\n\n  /**\n   * Update volume information. Update volume information (tag, name...).\n   *\n   * @param request - The request {@link UpdateVolumeRequest}\n   * @returns A Promise of Volume\n   */\n  updateVolume = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateVolumeRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$h,\n    method: 'PATCH',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/volumes/${validatePathParam('volumeId', request.volumeId)}`\n  }, unmarshalVolume$1);\n\n  /**\n   * Delete an existing volume. Delete a volume by its ID and every pin attached\n   * to this volume. This process can take a while to conclude, depending on the\n   * size of your pinned content.\n   *\n   * @param request - The request {@link DeleteVolumeRequest}\n   */\n  deleteVolume = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/volumes/${validatePathParam('volumeId', request.volumeId)}`\n  });\n\n  /**\n   * Create a pin by URL. Will fetch and store the content pointed by the\n   * provided URL. The content must be available on the public IPFS network. The\n   * content (IPFS blocks) will be host by the pinning service until pin\n   * deletion. From that point, any other IPFS peer can fetch and host your\n   * content: Make sure to pin public or encrypted content. Many pin requests\n   * (from different users) can target the same CID. A pin is defined by its ID\n   * (UUID), its status (queued, pinning, pinned or failed) and target CID.\n   *\n   * @param request - The request {@link CreatePinByURLRequest}\n   * @returns A Promise of Pin\n   */\n  createPinByURL = request => this.client.fetch({\n    body: JSON.stringify(marshalCreatePinByURLRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$h,\n    method: 'POST',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/pins/create-by-url`\n  }, unmarshalPin);\n\n  /**\n   * Create a pin by CID. Will fetch and store the content pointed by the\n   * provided CID. The content must be available on the public IPFS network. The\n   * content (IPFS blocks) will be host by the pinning service until pin\n   * deletion. From that point, any other IPFS peer can fetch and host your\n   * content: Make sure to pin public or encrypted content. Many pin requests\n   * (from different users) can target the same CID. A pin is defined by its ID\n   * (UUID), its status (queued, pinning, pinned or failed) and target CID.\n   *\n   * @param request - The request {@link CreatePinByCIDRequest}\n   * @returns A Promise of Pin\n   */\n  createPinByCID = request => this.client.fetch({\n    body: JSON.stringify(marshalCreatePinByCIDRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$h,\n    method: 'POST',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/pins/create-by-cid`\n  }, unmarshalPin);\n\n  /**\n   * Replace pin by CID. Deletes the given resource ID and pins the new CID in\n   * its place. Will fetch and store the content pointed by the provided CID.\n   * The content must be available on the public IPFS network. The content (IPFS\n   * blocks) is hosted by the pinning service until the pin is deleted. While\n   * the content is available any other IPFS peer can fetch and host your\n   * content. For this reason, we recommend that you pin either public or\n   * encrypted content. Several different pin requests can target the same CID.\n   * A pin is defined by its ID (UUID), its status (queued, pinning, pinned or\n   * failed) and target CID.\n   *\n   * @param request - The request {@link ReplacePinRequest}\n   * @returns A Promise of ReplacePinResponse\n   */\n  replacePin = request => this.client.fetch({\n    body: JSON.stringify(marshalReplacePinRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$h,\n    method: 'POST',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/pins/${validatePathParam('pinId', request.pinId)}/replace`\n  }, unmarshalReplacePinResponse);\n\n  /**\n   * Get pin information. Retrieve information about the provided **pin ID**,\n   * such as status, last modification, and CID.\n   *\n   * @param request - The request {@link GetPinRequest}\n   * @returns A Promise of Pin\n   */\n  getPin = request => this.client.fetch({\n    method: 'GET',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/pins/${validatePathParam('pinId', request.pinId)}`,\n    urlParams: urlParams(['volume_id', request.volumeId])\n  }, unmarshalPin);\n\n  /**\n   * Waits for {@link Pin} to be in a final state.\n   *\n   * @param request - The request {@link GetPinRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Pin\n   */\n  waitForPin = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!PIN_TRANSIENT_STATUSES.includes(res.status))), this.getPin, request, options);\n  pageOfListPins = request => this.client.fetch({\n    method: 'GET',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/pins`,\n    urlParams: urlParams(['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['status', request.status], ['volume_id', request.volumeId])\n  }, unmarshalListPinsResponse);\n\n  /**\n   * List all pins within a volume. Retrieve information about all pins within a\n   * volume.\n   *\n   * @param request - The request {@link ListPinsRequest}\n   * @returns A Promise of ListPinsResponse\n   */\n  listPins = request => enrichForPagination('pins', this.pageOfListPins, request);\n\n  /**\n   * Create an unpin request. An unpin request means that you no longer own the\n   * content. This content can therefore be removed and no longer provided on\n   * the IPFS network.\n   *\n   * @param request - The request {@link DeletePinRequest}\n   */\n  deletePin = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/pins/${validatePathParam('pinId', request.pinId)}`,\n    urlParams: urlParams(['volume_id', request.volumeId])\n  });\n};\n\n/** IPFS Naming service API. */\nclass IpnsAPI extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n\n  /**\n   * Create a new name. You can use the `ipns key` command to list and generate\n   * more names and their respective keys.\n   *\n   * @param request - The request {@link IpnsApiCreateNameRequest}\n   * @returns A Promise of Name\n   */\n  createName = request => this.client.fetch({\n    body: JSON.stringify(marshalIpnsApiCreateNameRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$h,\n    method: 'POST',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/names`\n  }, unmarshalName);\n\n  /**\n   * Get information about a name. Retrieve information about a specific name.\n   *\n   * @param request - The request {@link IpnsApiGetNameRequest}\n   * @returns A Promise of Name\n   */\n  getName = request => this.client.fetch({\n    method: 'GET',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/names/${validatePathParam('nameId', request.nameId)}`\n  }, unmarshalName);\n\n  /**\n   * Waits for {@link Name} to be in a final state.\n   *\n   * @param request - The request {@link IpnsApiGetNameRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Name\n   */\n  waitForName = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!NAME_TRANSIENT_STATUSES.includes(res.status))), this.getName, request, options);\n\n  /**\n   * Delete an existing name. Delete a name by its ID.\n   *\n   * @param request - The request {@link IpnsApiDeleteNameRequest}\n   */\n  deleteName = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/names/${validatePathParam('nameId', request.nameId)}`\n  });\n  pageOfListNames = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/names`,\n    urlParams: urlParams(['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListNamesResponse);\n\n  /**\n   * List all names by a Project ID. Retrieve information about all names from a\n   * Project ID.\n   *\n   * @param request - The request {@link IpnsApiListNamesRequest}\n   * @returns A Promise of ListNamesResponse\n   */\n  listNames = (request = {}) => enrichForPagination('names', this.pageOfListNames, request);\n\n  /**\n   * Update name information. Update name information (CID, tag, name...).\n   *\n   * @param request - The request {@link IpnsApiUpdateNameRequest}\n   * @returns A Promise of Name\n   */\n  updateName = request => this.client.fetch({\n    body: JSON.stringify(marshalIpnsApiUpdateNameRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$h,\n    method: 'PATCH',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/names/${validatePathParam('nameId', request.nameId)}`\n  }, unmarshalName);\n\n  /**\n   * Export your private key. Export a private key by its ID.\n   *\n   * @param request - The request {@link IpnsApiExportKeyNameRequest}\n   * @returns A Promise of ExportKeyNameResponse\n   */\n  exportKeyName = request => this.client.fetch({\n    method: 'GET',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/names/${validatePathParam('nameId', request.nameId)}/export-key`\n  }, unmarshalExportKeyNameResponse);\n\n  /**\n   * Import your private key. Import a private key.\n   *\n   * @param request - The request {@link IpnsApiImportKeyNameRequest}\n   * @returns A Promise of Name\n   */\n  importKeyName = request => this.client.fetch({\n    body: JSON.stringify(marshalIpnsApiImportKeyNameRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$h,\n    method: 'POST',\n    path: `/ipfs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/names/import-key`\n  }, unmarshalName);\n}\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$h = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$h,\n  IpnsAPI: IpnsAPI,\n  NAME_TRANSIENT_STATUSES: NAME_TRANSIENT_STATUSES,\n  PIN_TRANSIENT_STATUSES: PIN_TRANSIENT_STATUSES\n});\n\nvar index$i = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1alpha1: index_gen$h\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalCronSchedule = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CronSchedule' failed as data isn't a dictionary.`);\n  }\n  return {\n    schedule: data.schedule,\n    timezone: data.timezone\n  };\n};\nconst unmarshalJobDefinition = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'JobDefinition' failed as data isn't a dictionary.`);\n  }\n  return {\n    command: data.command,\n    cpuLimit: data.cpu_limit,\n    createdAt: unmarshalDate(data.created_at),\n    cronSchedule: data.cron_schedule ? unmarshalCronSchedule(data.cron_schedule) : undefined,\n    description: data.description,\n    environmentVariables: data.environment_variables,\n    id: data.id,\n    imageUri: data.image_uri,\n    jobTimeout: data.job_timeout,\n    localStorageCapacity: data.local_storage_capacity,\n    memoryLimit: data.memory_limit,\n    name: data.name,\n    projectId: data.project_id,\n    region: data.region,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalJobRun = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'JobRun' failed as data isn't a dictionary.`);\n  }\n  return {\n    command: data.command,\n    cpuLimit: data.cpu_limit,\n    createdAt: unmarshalDate(data.created_at),\n    environmentVariables: data.environment_variables,\n    errorMessage: data.error_message,\n    exitCode: data.exit_code,\n    id: data.id,\n    jobDefinitionId: data.job_definition_id,\n    localStorageCapacity: data.local_storage_capacity,\n    memoryLimit: data.memory_limit,\n    region: data.region,\n    runDuration: data.run_duration,\n    startedAt: unmarshalDate(data.started_at),\n    state: data.state,\n    terminatedAt: unmarshalDate(data.terminated_at),\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalListJobDefinitionsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListJobDefinitionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    jobDefinitions: unmarshalArrayOfObject(data.job_definitions, unmarshalJobDefinition),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListJobRunsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListJobRunsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    jobRuns: unmarshalArrayOfObject(data.job_runs, unmarshalJobRun),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalStartJobDefinitionResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'StartJobDefinitionResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    jobRuns: unmarshalArrayOfObject(data.job_runs, unmarshalJobRun)\n  };\n};\nconst marshalCreateJobDefinitionRequestCronScheduleConfig = (request, defaults) => ({\n  schedule: request.schedule,\n  timezone: request.timezone\n});\nconst marshalCreateJobDefinitionRequest = (request, defaults) => ({\n  command: request.command,\n  cpu_limit: request.cpuLimit,\n  cron_schedule: request.cronSchedule !== undefined ? marshalCreateJobDefinitionRequestCronScheduleConfig(request.cronSchedule) : undefined,\n  description: request.description,\n  environment_variables: request.environmentVariables !== undefined ? request.environmentVariables : undefined,\n  image_uri: request.imageUri,\n  job_timeout: request.jobTimeout,\n  local_storage_capacity: request.localStorageCapacity,\n  memory_limit: request.memoryLimit,\n  name: request.name || randomName('job'),\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalStartJobDefinitionRequest = (request, defaults) => ({\n  command: request.command,\n  environment_variables: request.environmentVariables,\n  replicas: request.replicas\n});\nconst marshalUpdateJobDefinitionRequestCronScheduleConfig = (request, defaults) => ({\n  schedule: request.schedule,\n  timezone: request.timezone\n});\nconst marshalUpdateJobDefinitionRequest = (request, defaults) => ({\n  command: request.command,\n  cpu_limit: request.cpuLimit,\n  cron_schedule: request.cronSchedule !== undefined ? marshalUpdateJobDefinitionRequestCronScheduleConfig(request.cronSchedule) : undefined,\n  description: request.description,\n  environment_variables: request.environmentVariables,\n  image_uri: request.imageUri,\n  job_timeout: request.jobTimeout,\n  local_storage_capacity: request.localStorageCapacity,\n  memory_limit: request.memoryLimit,\n  name: request.name\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$g = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Serverless Jobs API. */\nlet API$g = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n\n  /**\n   * Create a new job definition in a specified Project.\n   *\n   * @param request - The request {@link CreateJobDefinitionRequest}\n   * @returns A Promise of JobDefinition\n   */\n  createJobDefinition = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateJobDefinitionRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$g,\n    method: 'POST',\n    path: `/serverless-jobs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/job-definitions`\n  }, unmarshalJobDefinition);\n\n  /**\n   * Get a job definition by its unique identifier.\n   *\n   * @param request - The request {@link GetJobDefinitionRequest}\n   * @returns A Promise of JobDefinition\n   */\n  getJobDefinition = request => this.client.fetch({\n    method: 'GET',\n    path: `/serverless-jobs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/job-definitions/${validatePathParam('jobDefinitionId', request.jobDefinitionId)}`\n  }, unmarshalJobDefinition);\n  pageOfListJobDefinitions = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/serverless-jobs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/job-definitions`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListJobDefinitionsResponse);\n\n  /**\n   * List all your job definitions with filters.\n   *\n   * @param request - The request {@link ListJobDefinitionsRequest}\n   * @returns A Promise of ListJobDefinitionsResponse\n   */\n  listJobDefinitions = (request = {}) => enrichForPagination('jobDefinitions', this.pageOfListJobDefinitions, request);\n\n  /**\n   * Update an existing job definition associated with the specified unique\n   * identifier.\n   *\n   * @param request - The request {@link UpdateJobDefinitionRequest}\n   * @returns A Promise of JobDefinition\n   */\n  updateJobDefinition = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateJobDefinitionRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$g,\n    method: 'PATCH',\n    path: `/serverless-jobs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/job-definitions/${validatePathParam('jobDefinitionId', request.jobDefinitionId)}`\n  }, unmarshalJobDefinition);\n\n  /**\n   * Delete an exsisting job definition by its unique identifier.\n   *\n   * @param request - The request {@link DeleteJobDefinitionRequest}\n   */\n  deleteJobDefinition = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/serverless-jobs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/job-definitions/${validatePathParam('jobDefinitionId', request.jobDefinitionId)}`\n  });\n\n  /**\n   * Run an existing job definition by its unique identifier. This will create a\n   * new job run.\n   *\n   * @param request - The request {@link StartJobDefinitionRequest}\n   * @returns A Promise of StartJobDefinitionResponse\n   */\n  startJobDefinition = request => this.client.fetch({\n    body: JSON.stringify(marshalStartJobDefinitionRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$g,\n    method: 'POST',\n    path: `/serverless-jobs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/job-definitions/${validatePathParam('jobDefinitionId', request.jobDefinitionId)}/start`\n  }, unmarshalStartJobDefinitionResponse);\n\n  /**\n   * Get a job run by its unique identifier.\n   *\n   * @param request - The request {@link GetJobRunRequest}\n   * @returns A Promise of JobRun\n   */\n  getJobRun = request => this.client.fetch({\n    method: 'GET',\n    path: `/serverless-jobs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/job-runs/${validatePathParam('jobRunId', request.jobRunId)}`\n  }, unmarshalJobRun);\n\n  /**\n   * Stop a job run by its unique identifier.\n   *\n   * @param request - The request {@link StopJobRunRequest}\n   * @returns A Promise of JobRun\n   */\n  stopJobRun = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$g,\n    method: 'POST',\n    path: `/serverless-jobs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/job-runs/${validatePathParam('jobRunId', request.jobRunId)}/stop`\n  }, unmarshalJobRun);\n  pageOfListJobRuns = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/serverless-jobs/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/job-runs`,\n    urlParams: urlParams(['job_definition_id', request.jobDefinitionId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListJobRunsResponse);\n\n  /**\n   * List all job runs with filters.\n   *\n   * @param request - The request {@link ListJobRunsRequest}\n   * @returns A Promise of ListJobRunsResponse\n   */\n  listJobRuns = (request = {}) => enrichForPagination('jobRuns', this.pageOfListJobRuns, request);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link JobRunState}. */\nconst JOB_RUN_TRANSIENT_STATUSES = ['queued', 'scheduled', 'running'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst CreateJobDefinitionRequest = {\n  cpuLimit: {\n    greaterThan: 0\n  },\n  imageUri: {\n    pattern: /^((?:(?:(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))*|\\[(?:[a-fA-F0-9:]+)\\])(?::[0-9]+)?\\/)?[a-z0-9]+(?:(?:[._]|__|[-]+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:[._]|__|[-]+)[a-z0-9]+)*)*)(?::([\\w][\\w.-]{0,127}))?(?:@([A-Za-z][A-Za-z0-9]*(?:[-_+.][A-Za-z][A-Za-z0-9]*)*[:][[:xdigit:]]{32,}))?$/\n  },\n  localStorageCapacity: {\n    greaterThan: 0\n  },\n  memoryLimit: {\n    greaterThan: 0\n  },\n  name: {\n    pattern: /^[A-Za-z0-9-_]{3,50}$/\n  }\n};\nconst CreateJobDefinitionRequestCronScheduleConfig = {\n  schedule: {\n    maxLength: 255,\n    minLength: 1\n  },\n  timezone: {\n    maxLength: 255,\n    minLength: 1\n  }\n};\nconst CronSchedule = {\n  schedule: {\n    maxLength: 255,\n    minLength: 1\n  },\n  timezone: {\n    maxLength: 255,\n    minLength: 1\n  }\n};\nconst ListJobDefinitionsRequest = {\n  page: {\n    greaterThanOrEqual: 1\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 1000\n  }\n};\nconst ListJobRunsRequest = {\n  page: {\n    greaterThanOrEqual: 1\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 1000\n  }\n};\nconst StartJobDefinitionRequest = {\n  replicas: {\n    greaterThan: 0\n  }\n};\nconst UpdateJobDefinitionRequest = {\n  cpuLimit: {\n    greaterThan: 0\n  },\n  imageUri: {\n    pattern: /^((?:(?:(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))*|\\[(?:[a-fA-F0-9:]+)\\])(?::[0-9]+)?\\/)?[a-z0-9]+(?:(?:[._]|__|[-]+)[a-z0-9]+)*(?:\\/[a-z0-9]+(?:(?:[._]|__|[-]+)[a-z0-9]+)*)*)(?::([\\w][\\w.-]{0,127}))?(?:@([A-Za-z][A-Za-z0-9]*(?:[-_+.][A-Za-z][A-Za-z0-9]*)*[:][[:xdigit:]]{32,}))?$/\n  },\n  localStorageCapacity: {\n    greaterThan: 0\n  },\n  memoryLimit: {\n    greaterThan: 0\n  },\n  name: {\n    pattern: /^[A-Za-z0-9-_]{3,50}$/\n  }\n};\nconst UpdateJobDefinitionRequestCronScheduleConfig = {\n  schedule: {\n    maxLength: 255,\n    minLength: 1\n  },\n  timezone: {\n    maxLength: 255,\n    minLength: 1\n  }\n};\n\nvar validationRules_gen$6 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CreateJobDefinitionRequest: CreateJobDefinitionRequest,\n  CreateJobDefinitionRequestCronScheduleConfig: CreateJobDefinitionRequestCronScheduleConfig,\n  CronSchedule: CronSchedule,\n  ListJobDefinitionsRequest: ListJobDefinitionsRequest,\n  ListJobRunsRequest: ListJobRunsRequest,\n  StartJobDefinitionRequest: StartJobDefinitionRequest,\n  UpdateJobDefinitionRequest: UpdateJobDefinitionRequest,\n  UpdateJobDefinitionRequestCronScheduleConfig: UpdateJobDefinitionRequestCronScheduleConfig\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$g = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$g,\n  JOB_RUN_TRANSIENT_STATUSES: JOB_RUN_TRANSIENT_STATUSES,\n  ValidationRules: validationRules_gen$6\n});\n\nvar index$h = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1alpha1: index_gen$g\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link ClusterStatus}. */\nconst CLUSTER_TRANSIENT_STATUSES$1 = ['creating', 'deleting', 'updating'];\n\n/** Lists transient statutes of the enum {@link NodeStatus}. */\nconst NODE_TRANSIENT_STATUSES = ['creating', 'deleting', 'rebooting', 'upgrading', 'starting', 'registering'];\n\n/** Lists transient statutes of the enum {@link PoolStatus}. */\nconst POOL_TRANSIENT_STATUSES = ['deleting', 'scaling', 'upgrading'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalPoolUpgradePolicy = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PoolUpgradePolicy' failed as data isn't a dictionary.`);\n  }\n  return {\n    maxSurge: data.max_surge,\n    maxUnavailable: data.max_unavailable\n  };\n};\nconst unmarshalPool = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Pool' failed as data isn't a dictionary.`);\n  }\n  return {\n    autohealing: data.autohealing,\n    autoscaling: data.autoscaling,\n    clusterId: data.cluster_id,\n    containerRuntime: data.container_runtime,\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    kubeletArgs: data.kubelet_args,\n    maxSize: data.max_size,\n    minSize: data.min_size,\n    name: data.name,\n    nodeType: data.node_type,\n    placementGroupId: data.placement_group_id,\n    publicIpDisabled: data.public_ip_disabled,\n    region: data.region,\n    rootVolumeSize: data.root_volume_size,\n    rootVolumeType: data.root_volume_type,\n    size: data.size,\n    status: data.status,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    upgradePolicy: data.upgrade_policy ? unmarshalPoolUpgradePolicy(data.upgrade_policy) : undefined,\n    version: data.version,\n    zone: data.zone\n  };\n};\nconst unmarshalVersion$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Version' failed as data isn't a dictionary.`);\n  }\n  return {\n    availableAdmissionPlugins: data.available_admission_plugins,\n    availableCnis: data.available_cnis,\n    availableContainerRuntimes: data.available_container_runtimes,\n    availableFeatureGates: data.available_feature_gates,\n    availableKubeletArgs: data.available_kubelet_args,\n    label: data.label,\n    name: data.name,\n    region: data.region\n  };\n};\nconst unmarshalMaintenanceWindow = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'MaintenanceWindow' failed as data isn't a dictionary.`);\n  }\n  return {\n    day: data.day,\n    startHour: data.start_hour\n  };\n};\nconst unmarshalClusterAutoUpgrade = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ClusterAutoUpgrade' failed as data isn't a dictionary.`);\n  }\n  return {\n    enabled: data.enabled,\n    maintenanceWindow: data.maintenance_window ? unmarshalMaintenanceWindow(data.maintenance_window) : undefined\n  };\n};\nconst unmarshalClusterAutoscalerConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ClusterAutoscalerConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    balanceSimilarNodeGroups: data.balance_similar_node_groups,\n    estimator: data.estimator,\n    expander: data.expander,\n    expendablePodsPriorityCutoff: data.expendable_pods_priority_cutoff,\n    ignoreDaemonsetsUtilization: data.ignore_daemonsets_utilization,\n    maxGracefulTerminationSec: data.max_graceful_termination_sec,\n    scaleDownDelayAfterAdd: data.scale_down_delay_after_add,\n    scaleDownDisabled: data.scale_down_disabled,\n    scaleDownUnneededTime: data.scale_down_unneeded_time,\n    scaleDownUtilizationThreshold: data.scale_down_utilization_threshold\n  };\n};\nconst unmarshalClusterOpenIDConnectConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ClusterOpenIDConnectConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    clientId: data.client_id,\n    groupsClaim: data.groups_claim,\n    groupsPrefix: data.groups_prefix,\n    issuerUrl: data.issuer_url,\n    requiredClaim: data.required_claim,\n    usernameClaim: data.username_claim,\n    usernamePrefix: data.username_prefix\n  };\n};\nconst unmarshalCluster$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Cluster' failed as data isn't a dictionary.`);\n  }\n  return {\n    admissionPlugins: data.admission_plugins,\n    apiserverCertSans: data.apiserver_cert_sans,\n    autoUpgrade: data.auto_upgrade ? unmarshalClusterAutoUpgrade(data.auto_upgrade) : undefined,\n    autoscalerConfig: data.autoscaler_config ? unmarshalClusterAutoscalerConfig(data.autoscaler_config) : undefined,\n    clusterUrl: data.cluster_url,\n    cni: data.cni,\n    commitmentEndsAt: unmarshalDate(data.commitment_ends_at),\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    dnsWildcard: data.dns_wildcard,\n    featureGates: data.feature_gates,\n    id: data.id,\n    name: data.name,\n    openIdConnectConfig: data.open_id_connect_config ? unmarshalClusterOpenIDConnectConfig(data.open_id_connect_config) : undefined,\n    organizationId: data.organization_id,\n    privateNetworkId: data.private_network_id,\n    projectId: data.project_id,\n    region: data.region,\n    status: data.status,\n    tags: data.tags,\n    type: data.type,\n    updatedAt: unmarshalDate(data.updated_at),\n    upgradeAvailable: data.upgrade_available,\n    version: data.version\n  };\n};\nconst unmarshalNode = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Node' failed as data isn't a dictionary.`);\n  }\n  return {\n    clusterId: data.cluster_id,\n    conditions: data.conditions ? data.conditions : undefined,\n    createdAt: unmarshalDate(data.created_at),\n    errorMessage: data.error_message,\n    id: data.id,\n    name: data.name,\n    poolId: data.pool_id,\n    providerId: data.provider_id,\n    publicIpV4: data.public_ip_v4,\n    publicIpV6: data.public_ip_v6,\n    region: data.region,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalExternalNodeCoreV1Taint = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ExternalNodeCoreV1Taint' failed as data isn't a dictionary.`);\n  }\n  return {\n    effect: data.effect,\n    key: data.key,\n    value: data.value\n  };\n};\nconst unmarshalExternalNode = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ExternalNode' failed as data isn't a dictionary.`);\n  }\n  return {\n    clusterCa: data.cluster_ca,\n    clusterUrl: data.cluster_url,\n    cniPluginsVersion: data.cni_plugins_version,\n    containerdVersion: data.containerd_version,\n    externalIp: data.external_ip,\n    id: data.id,\n    kubeToken: data.kube_token,\n    kubeletConfig: data.kubelet_config,\n    name: data.name,\n    nodeLabels: data.node_labels,\n    nodeTaints: unmarshalArrayOfObject(data.node_taints, unmarshalExternalNodeCoreV1Taint),\n    poolVersion: data.pool_version,\n    runcVersion: data.runc_version\n  };\n};\nconst unmarshalClusterType = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ClusterType' failed as data isn't a dictionary.`);\n  }\n  return {\n    auditLogsSupported: data.audit_logs_supported,\n    availability: data.availability,\n    commitmentDelay: data.commitment_delay,\n    dedicated: data.dedicated,\n    maxNodes: data.max_nodes,\n    memory: data.memory,\n    name: data.name,\n    resiliency: data.resiliency,\n    sla: data.sla\n  };\n};\nconst unmarshalListClusterAvailableTypesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListClusterAvailableTypesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    clusterTypes: unmarshalArrayOfObject(data.cluster_types, unmarshalClusterType),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListClusterAvailableVersionsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListClusterAvailableVersionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    versions: unmarshalArrayOfObject(data.versions, unmarshalVersion$1)\n  };\n};\nconst unmarshalListClusterTypesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListClusterTypesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    clusterTypes: unmarshalArrayOfObject(data.cluster_types, unmarshalClusterType),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListClustersResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListClustersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    clusters: unmarshalArrayOfObject(data.clusters, unmarshalCluster$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListNodesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListNodesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    nodes: unmarshalArrayOfObject(data.nodes, unmarshalNode),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListPoolsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListPoolsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    pools: unmarshalArrayOfObject(data.pools, unmarshalPool),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListVersionsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListVersionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    versions: unmarshalArrayOfObject(data.versions, unmarshalVersion$1)\n  };\n};\nconst marshalMaintenanceWindow = (request, defaults) => ({\n  day: request.day,\n  start_hour: request.startHour\n});\nconst marshalCreateClusterRequestPoolConfigUpgradePolicy = (request, defaults) => ({\n  max_surge: request.maxSurge,\n  max_unavailable: request.maxUnavailable\n});\nconst marshalCreateClusterRequestAutoUpgrade = (request, defaults) => ({\n  enable: request.enable,\n  maintenance_window: request.maintenanceWindow !== undefined ? marshalMaintenanceWindow(request.maintenanceWindow) : undefined\n});\nconst marshalCreateClusterRequestAutoscalerConfig = (request, defaults) => ({\n  balance_similar_node_groups: request.balanceSimilarNodeGroups,\n  estimator: request.estimator,\n  expander: request.expander,\n  expendable_pods_priority_cutoff: request.expendablePodsPriorityCutoff,\n  ignore_daemonsets_utilization: request.ignoreDaemonsetsUtilization,\n  max_graceful_termination_sec: request.maxGracefulTerminationSec,\n  scale_down_delay_after_add: request.scaleDownDelayAfterAdd,\n  scale_down_disabled: request.scaleDownDisabled,\n  scale_down_unneeded_time: request.scaleDownUnneededTime,\n  scale_down_utilization_threshold: request.scaleDownUtilizationThreshold\n});\nconst marshalCreateClusterRequestOpenIDConnectConfig = (request, defaults) => ({\n  client_id: request.clientId,\n  groups_claim: request.groupsClaim,\n  groups_prefix: request.groupsPrefix,\n  issuer_url: request.issuerUrl,\n  required_claim: request.requiredClaim,\n  username_claim: request.usernameClaim,\n  username_prefix: request.usernamePrefix\n});\nconst marshalCreateClusterRequestPoolConfig = (request, defaults) => ({\n  autohealing: request.autohealing,\n  autoscaling: request.autoscaling,\n  container_runtime: request.containerRuntime,\n  kubelet_args: request.kubeletArgs,\n  max_size: request.maxSize,\n  min_size: request.minSize,\n  name: request.name,\n  node_type: request.nodeType,\n  placement_group_id: request.placementGroupId,\n  public_ip_disabled: request.publicIpDisabled,\n  root_volume_size: request.rootVolumeSize,\n  root_volume_type: request.rootVolumeType,\n  size: request.size,\n  tags: request.tags,\n  upgrade_policy: request.upgradePolicy !== undefined ? marshalCreateClusterRequestPoolConfigUpgradePolicy(request.upgradePolicy) : undefined,\n  zone: request.zone\n});\nconst marshalCreateClusterRequest$1 = (request, defaults) => ({\n  admission_plugins: request.admissionPlugins,\n  apiserver_cert_sans: request.apiserverCertSans,\n  auto_upgrade: request.autoUpgrade !== undefined ? marshalCreateClusterRequestAutoUpgrade(request.autoUpgrade) : undefined,\n  autoscaler_config: request.autoscalerConfig !== undefined ? marshalCreateClusterRequestAutoscalerConfig(request.autoscalerConfig) : undefined,\n  cni: request.cni,\n  description: request.description,\n  feature_gates: request.featureGates,\n  name: request.name || randomName('k8s'),\n  open_id_connect_config: request.openIdConnectConfig !== undefined ? marshalCreateClusterRequestOpenIDConnectConfig(request.openIdConnectConfig) : undefined,\n  pools: request.pools !== undefined ? request.pools.map(elt => marshalCreateClusterRequestPoolConfig(elt)) : undefined,\n  private_network_id: request.privateNetworkId,\n  tags: request.tags,\n  type: request.type,\n  version: request.version,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project_id',\n    value: request.projectId\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization_id',\n    value: request.organizationId\n  }])\n});\nconst marshalCreatePoolRequestUpgradePolicy = (request, defaults) => ({\n  max_surge: request.maxSurge,\n  max_unavailable: request.maxUnavailable\n});\nconst marshalCreatePoolRequest = (request, defaults) => ({\n  autohealing: request.autohealing,\n  autoscaling: request.autoscaling,\n  container_runtime: request.containerRuntime,\n  kubelet_args: request.kubeletArgs !== undefined ? request.kubeletArgs : undefined,\n  max_size: request.maxSize,\n  min_size: request.minSize,\n  name: request.name || randomName('pool'),\n  node_type: request.nodeType,\n  placement_group_id: request.placementGroupId,\n  public_ip_disabled: request.publicIpDisabled,\n  root_volume_size: request.rootVolumeSize,\n  root_volume_type: request.rootVolumeType,\n  size: request.size,\n  tags: request.tags,\n  upgrade_policy: request.upgradePolicy !== undefined ? marshalCreatePoolRequestUpgradePolicy(request.upgradePolicy) : undefined,\n  zone: request.zone ?? defaults.defaultZone\n});\nconst marshalMigrateToPrivateNetworkClusterRequest = (request, defaults) => ({\n  private_network_id: request.privateNetworkId\n});\nconst marshalSetClusterTypeRequest = (request, defaults) => ({\n  type: request.type\n});\nconst marshalUpdateClusterRequestAutoUpgrade = (request, defaults) => ({\n  enable: request.enable,\n  maintenance_window: request.maintenanceWindow !== undefined ? marshalMaintenanceWindow(request.maintenanceWindow) : undefined\n});\nconst marshalUpdateClusterRequestAutoscalerConfig = (request, defaults) => ({\n  balance_similar_node_groups: request.balanceSimilarNodeGroups,\n  estimator: request.estimator,\n  expander: request.expander,\n  expendable_pods_priority_cutoff: request.expendablePodsPriorityCutoff,\n  ignore_daemonsets_utilization: request.ignoreDaemonsetsUtilization,\n  max_graceful_termination_sec: request.maxGracefulTerminationSec,\n  scale_down_delay_after_add: request.scaleDownDelayAfterAdd,\n  scale_down_disabled: request.scaleDownDisabled,\n  scale_down_unneeded_time: request.scaleDownUnneededTime,\n  scale_down_utilization_threshold: request.scaleDownUtilizationThreshold\n});\nconst marshalUpdateClusterRequestOpenIDConnectConfig = (request, defaults) => ({\n  client_id: request.clientId,\n  groups_claim: request.groupsClaim,\n  groups_prefix: request.groupsPrefix,\n  issuer_url: request.issuerUrl,\n  required_claim: request.requiredClaim,\n  username_claim: request.usernameClaim,\n  username_prefix: request.usernamePrefix\n});\nconst marshalUpdateClusterRequest$1 = (request, defaults) => ({\n  admission_plugins: request.admissionPlugins,\n  apiserver_cert_sans: request.apiserverCertSans,\n  auto_upgrade: request.autoUpgrade !== undefined ? marshalUpdateClusterRequestAutoUpgrade(request.autoUpgrade) : undefined,\n  autoscaler_config: request.autoscalerConfig !== undefined ? marshalUpdateClusterRequestAutoscalerConfig(request.autoscalerConfig) : undefined,\n  description: request.description,\n  feature_gates: request.featureGates,\n  name: request.name,\n  open_id_connect_config: request.openIdConnectConfig !== undefined ? marshalUpdateClusterRequestOpenIDConnectConfig(request.openIdConnectConfig) : undefined,\n  tags: request.tags\n});\nconst marshalUpdatePoolRequestUpgradePolicy = (request, defaults) => ({\n  max_surge: request.maxSurge,\n  max_unavailable: request.maxUnavailable\n});\nconst marshalUpdatePoolRequest = (request, defaults) => ({\n  autohealing: request.autohealing,\n  autoscaling: request.autoscaling,\n  kubelet_args: request.kubeletArgs,\n  max_size: request.maxSize,\n  min_size: request.minSize,\n  size: request.size,\n  tags: request.tags,\n  upgrade_policy: request.upgradePolicy !== undefined ? marshalUpdatePoolRequestUpgradePolicy(request.upgradePolicy) : undefined\n});\nconst marshalUpgradeClusterRequest = (request, defaults) => ({\n  upgrade_pools: request.upgradePools,\n  version: request.version\n});\nconst marshalUpgradePoolRequest = (request, defaults) => ({\n  version: request.version\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$f = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Kubernetes API. */\nlet API$f = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n  pageOfListClusters = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['private_network_id', request.privateNetworkId], ['project_id', request.projectId], ['status', request.status], ['type', request.type])\n  }, unmarshalListClustersResponse$1);\n\n  /**\n   * List Clusters. List all existing Kubernetes clusters in a specific region.\n   *\n   * @param request - The request {@link ListClustersRequest}\n   * @returns A Promise of ListClustersResponse\n   */\n  listClusters = (request = {}) => enrichForPagination('clusters', this.pageOfListClusters, request);\n\n  /**\n   * Create a new Cluster. Create a new Kubernetes cluster in a Scaleway region.\n   *\n   * @param request - The request {@link CreateClusterRequest}\n   * @returns A Promise of Cluster\n   */\n  createCluster = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateClusterRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$f,\n    method: 'POST',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters`\n  }, unmarshalCluster$1);\n\n  /**\n   * Get a Cluster. Retrieve information about a specific Kubernetes cluster.\n   *\n   * @param request - The request {@link GetClusterRequest}\n   * @returns A Promise of Cluster\n   */\n  getCluster = request => this.client.fetch({\n    method: 'GET',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters/${validatePathParam('clusterId', request.clusterId)}`\n  }, unmarshalCluster$1);\n\n  /**\n   * Waits for {@link Cluster} to be in a final state.\n   *\n   * @param request - The request {@link GetClusterRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Cluster\n   */\n  waitForCluster = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!CLUSTER_TRANSIENT_STATUSES$1.includes(res.status))), this.getCluster, request, options);\n\n  /**\n   * Update a Cluster. Update information on a specific Kubernetes cluster. You\n   * can update details such as its name, description, tags and configuration.\n   * To upgrade a cluster, you will need to use the dedicated endpoint.\n   *\n   * @param request - The request {@link UpdateClusterRequest}\n   * @returns A Promise of Cluster\n   */\n  updateCluster = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateClusterRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$f,\n    method: 'PATCH',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters/${validatePathParam('clusterId', request.clusterId)}`\n  }, unmarshalCluster$1);\n\n  /**\n   * Delete a Cluster. Delete a specific Kubernetes cluster and all its\n   * associated pools and nodes. Note that this method will not delete any Load\n   * Balancer or Block Volume that are associated with the cluster.\n   *\n   * @param request - The request {@link DeleteClusterRequest}\n   * @returns A Promise of Cluster\n   */\n  deleteCluster = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters/${validatePathParam('clusterId', request.clusterId)}`,\n    urlParams: urlParams(['with_additional_resources', request.withAdditionalResources])\n  }, unmarshalCluster$1);\n\n  /**\n   * Upgrade a Cluster. Upgrade a specific Kubernetes cluster and possibly its\n   * associated pools to a specific and supported Kubernetes version.\n   *\n   * @param request - The request {@link UpgradeClusterRequest}\n   * @returns A Promise of Cluster\n   */\n  upgradeCluster = request => this.client.fetch({\n    body: JSON.stringify(marshalUpgradeClusterRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$f,\n    method: 'POST',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters/${validatePathParam('clusterId', request.clusterId)}/upgrade`\n  }, unmarshalCluster$1);\n\n  /**\n   * Change the Cluster type. Change the type of a specific Kubernetes cluster.\n   * To see the possible values you can enter for the `type` field, [list\n   * available cluster\n   * types](#path-clusters-list-available-cluster-types-for-a-cluster).\n   *\n   * @param request - The request {@link SetClusterTypeRequest}\n   * @returns A Promise of Cluster\n   */\n  setClusterType = request => this.client.fetch({\n    body: JSON.stringify(marshalSetClusterTypeRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$f,\n    method: 'POST',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters/${validatePathParam('clusterId', request.clusterId)}/set-type`\n  }, unmarshalCluster$1);\n\n  /**\n   * List available versions for a Cluster. List the versions that a specific\n   * Kubernetes cluster is allowed to upgrade to. Results will include every\n   * patch version greater than the current patch, as well as one minor version\n   * ahead of the current version. Any upgrade skipping a minor version will not\n   * work.\n   *\n   * @param request - The request {@link ListClusterAvailableVersionsRequest}\n   * @returns A Promise of ListClusterAvailableVersionsResponse\n   */\n  listClusterAvailableVersions = request => this.client.fetch({\n    method: 'GET',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters/${validatePathParam('clusterId', request.clusterId)}/available-versions`\n  }, unmarshalListClusterAvailableVersionsResponse);\n\n  /**\n   * List available cluster types for a cluster. List the cluster types that a\n   * specific Kubernetes cluster is allowed to switch to.\n   *\n   * @param request - The request {@link ListClusterAvailableTypesRequest}\n   * @returns A Promise of ListClusterAvailableTypesResponse\n   */\n  listClusterAvailableTypes = request => this.client.fetch({\n    method: 'GET',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters/${validatePathParam('clusterId', request.clusterId)}/available-types`\n  }, unmarshalListClusterAvailableTypesResponse);\n  _getClusterKubeConfig = request => this.client.fetch({\n    method: 'GET',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters/${validatePathParam('clusterId', request.clusterId)}/kubeconfig`,\n    urlParams: urlParams(['dl', 1], ['redacted', request.redacted]),\n    responseType: 'blob'\n  });\n\n  /**\n   * Reset the admin token of a Cluster. Reset the admin token for a specific\n   * Kubernetes cluster. This will revoke the old admin token (which will not be\n   * usable afterwards) and create a new one. Note that you will need to\n   * download kubeconfig again to keep interacting with the cluster.\n   *\n   * @param request - The request {@link ResetClusterAdminTokenRequest}\n   */\n  resetClusterAdminToken = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$f,\n    method: 'POST',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters/${validatePathParam('clusterId', request.clusterId)}/reset-admin-token`\n  });\n\n  /**\n   * Migrate an existing cluster to a Private Network cluster. Migrate a cluster\n   * that was created before the release of Private Network clusters to a new\n   * one with a Private Network.\n   *\n   * @param request - The request {@link MigrateToPrivateNetworkClusterRequest}\n   * @returns A Promise of Cluster\n   */\n  migrateToPrivateNetworkCluster = request => this.client.fetch({\n    body: JSON.stringify(marshalMigrateToPrivateNetworkClusterRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$f,\n    method: 'POST',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters/${validatePathParam('clusterId', request.clusterId)}/migrate-to-private-network`\n  }, unmarshalCluster$1);\n  pageOfListPools = request => this.client.fetch({\n    method: 'GET',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters/${validatePathParam('clusterId', request.clusterId)}/pools`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['status', request.status])\n  }, unmarshalListPoolsResponse);\n\n  /**\n   * List Pools in a Cluster. List all the existing pools for a specific\n   * Kubernetes cluster.\n   *\n   * @param request - The request {@link ListPoolsRequest}\n   * @returns A Promise of ListPoolsResponse\n   */\n  listPools = request => enrichForPagination('pools', this.pageOfListPools, request);\n\n  /**\n   * Create a new Pool in a Cluster. Create a new pool in a specific Kubernetes\n   * cluster.\n   *\n   * @param request - The request {@link CreatePoolRequest}\n   * @returns A Promise of Pool\n   */\n  createPool = request => this.client.fetch({\n    body: JSON.stringify(marshalCreatePoolRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$f,\n    method: 'POST',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters/${validatePathParam('clusterId', request.clusterId)}/pools`\n  }, unmarshalPool);\n\n  /**\n   * Get a Pool in a Cluster. Retrieve details about a specific pool in a\n   * Kubernetes cluster.\n   *\n   * @param request - The request {@link GetPoolRequest}\n   * @returns A Promise of Pool\n   */\n  getPool = request => this.client.fetch({\n    method: 'GET',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/pools/${validatePathParam('poolId', request.poolId)}`\n  }, unmarshalPool);\n\n  /**\n   * Waits for {@link Pool} to be in a final state.\n   *\n   * @param request - The request {@link GetPoolRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Pool\n   */\n  waitForPool = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!POOL_TRANSIENT_STATUSES.includes(res.status))), this.getPool, request, options);\n\n  /**\n   * Upgrade a Pool in a Cluster. Upgrade the Kubernetes version of a specific\n   * pool. Note that it only works if the targeted version matches the cluster's\n   * version.\n   *\n   * @param request - The request {@link UpgradePoolRequest}\n   * @returns A Promise of Pool\n   */\n  upgradePool = request => this.client.fetch({\n    body: JSON.stringify(marshalUpgradePoolRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$f,\n    method: 'POST',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/pools/${validatePathParam('poolId', request.poolId)}/upgrade`\n  }, unmarshalPool);\n\n  /**\n   * Update a Pool in a Cluster. Update the attributes of a specific pool, such\n   * as its desired size, autoscaling settings, and tags.\n   *\n   * @param request - The request {@link UpdatePoolRequest}\n   * @returns A Promise of Pool\n   */\n  updatePool = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdatePoolRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$f,\n    method: 'PATCH',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/pools/${validatePathParam('poolId', request.poolId)}`\n  }, unmarshalPool);\n\n  /**\n   * Delete a Pool in a Cluster. Delete a specific pool from a cluster. Note\n   * that all the pool's nodes will also be deleted.\n   *\n   * @param request - The request {@link DeletePoolRequest}\n   * @returns A Promise of Pool\n   */\n  deletePool = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/pools/${validatePathParam('poolId', request.poolId)}`\n  }, unmarshalPool);\n\n  /**\n   * Create a Kosmos node. Retrieve metadata for a Kosmos node. This method is\n   * not intended to be called by end users but rather programmatically by the\n   * kapsule-node-agent.\n   *\n   * @param request - The request {@link CreateExternalNodeRequest}\n   * @returns A Promise of ExternalNode\n   */\n  createExternalNode = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$f,\n    method: 'POST',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/pools/${validatePathParam('poolId', request.poolId)}/external-nodes`\n  }, unmarshalExternalNode);\n  pageOfListNodes = request => this.client.fetch({\n    method: 'GET',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/clusters/${validatePathParam('clusterId', request.clusterId)}/nodes`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['pool_id', request.poolId], ['status', request.status])\n  }, unmarshalListNodesResponse);\n\n  /**\n   * List Nodes in a Cluster. List all the existing nodes for a specific\n   * Kubernetes cluster.\n   *\n   * @param request - The request {@link ListNodesRequest}\n   * @returns A Promise of ListNodesResponse\n   */\n  listNodes = request => enrichForPagination('nodes', this.pageOfListNodes, request);\n\n  /**\n   * Get a Node in a Cluster. Retrieve details about a specific Kubernetes Node.\n   *\n   * @param request - The request {@link GetNodeRequest}\n   * @returns A Promise of Node\n   */\n  getNode = request => this.client.fetch({\n    method: 'GET',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/nodes/${validatePathParam('nodeId', request.nodeId)}`\n  }, unmarshalNode);\n\n  /**\n   * Waits for {@link Node} to be in a final state.\n   *\n   * @param request - The request {@link GetNodeRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Node\n   */\n  waitForNode = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!NODE_TRANSIENT_STATUSES.includes(res.status))), this.getNode, request, options);\n\n  /**\n   * Replace a Node in a Cluster. Replace a specific Node. The node will first\n   * be cordoned (scheduling will be disabled on it). The existing pods on the\n   * node will then be drained and rescheduled onto another schedulable node.\n   * Note that when there is not enough space to reschedule all the pods (such\n   * as in a one-node cluster), disruption of your applications can be\n   * expected.\n   *\n   * @deprecated\n   * @param request - The request {@link ReplaceNodeRequest}\n   * @returns A Promise of Node\n   */\n  replaceNode = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$f,\n    method: 'POST',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/nodes/${validatePathParam('nodeId', request.nodeId)}/replace`\n  }, unmarshalNode);\n\n  /**\n   * Reboot a Node in a Cluster. Reboot a specific Node. The node will first be\n   * cordoned (scheduling will be disabled on it). The existing pods on the node\n   * will then be drained and rescheduled onto another schedulable node. Note\n   * that when there is not enough space to reschedule all the pods (such as in\n   * a one-node cluster), disruption of your applications can be expected.\n   *\n   * @param request - The request {@link RebootNodeRequest}\n   * @returns A Promise of Node\n   */\n  rebootNode = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$f,\n    method: 'POST',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/nodes/${validatePathParam('nodeId', request.nodeId)}/reboot`\n  }, unmarshalNode);\n\n  /**\n   * Delete a Node in a Cluster. Delete a specific Node. Note that when there is\n   * not enough space to reschedule all the pods (such as in a one-node\n   * cluster), disruption of your applications can be expected.\n   *\n   * @param request - The request {@link DeleteNodeRequest}\n   * @returns A Promise of Node\n   */\n  deleteNode = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/nodes/${validatePathParam('nodeId', request.nodeId)}`,\n    urlParams: urlParams(['replace', request.replace], ['skip_drain', request.skipDrain])\n  }, unmarshalNode);\n\n  /**\n   * List all available Versions. List all available versions for the creation\n   * of a new Kubernetes cluster.\n   *\n   * @param request - The request {@link ListVersionsRequest}\n   * @returns A Promise of ListVersionsResponse\n   */\n  listVersions = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/versions`\n  }, unmarshalListVersionsResponse$1);\n\n  /**\n   * Get a Version. Retrieve a specific Kubernetes version and its details.\n   *\n   * @param request - The request {@link GetVersionRequest}\n   * @returns A Promise of Version\n   */\n  getVersion = request => this.client.fetch({\n    method: 'GET',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/versions/${validatePathParam('versionName', request.versionName)}`\n  }, unmarshalVersion$1);\n  pageOfListClusterTypes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/k8s/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/cluster-types`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListClusterTypesResponse);\n\n  /**\n   * List cluster types. List available cluster types and their technical\n   * details.\n   *\n   * @param request - The request {@link ListClusterTypesRequest}\n   * @returns A Promise of ListClusterTypesResponse\n   */\n  listClusterTypes = (request = {}) => enrichForPagination('clusterTypes', this.pageOfListClusterTypes, request);\n};\n\nclass K8SUtilsAPI extends API$f {\n  /**\n   * Get configuration of a kube cluster.\n   *\n   * @param request - The request {@link GetClusterKubeConfigRequest}\n   * @returns A Promise of Blob\n   */\n  getClusterKubeConfig = request => this._getClusterKubeConfig(request);\n}\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst CreateClusterRequest = {\n  name: {\n    minLength: 1\n  }\n};\nconst CreateClusterRequestAutoscalerConfig = {\n  scaleDownUtilizationThreshold: {\n    greaterThan: 0,\n    lessThan: 1\n  }\n};\nconst CreateClusterRequestOpenIDConnectConfig = {\n  clientId: {\n    minLength: 1\n  },\n  groupsPrefix: {\n    minLength: 1\n  },\n  usernameClaim: {\n    minLength: 1\n  },\n  usernamePrefix: {\n    minLength: 1\n  }\n};\nconst CreateClusterRequestPoolConfig = {\n  name: {\n    minLength: 1\n  }\n};\nconst CreatePoolRequest = {\n  name: {\n    minLength: 1\n  }\n};\nconst ListClusterTypesRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListClustersRequest = {\n  name: {\n    minLength: 1\n  },\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListNodesRequest = {\n  name: {\n    minLength: 1\n  },\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListPoolsRequest = {\n  name: {\n    minLength: 1\n  },\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst MaintenanceWindow = {\n  startHour: {\n    lessThanOrEqual: 23\n  }\n};\nconst UpdateClusterRequest = {\n  name: {\n    minLength: 1\n  }\n};\nconst UpdateClusterRequestAutoscalerConfig = {\n  scaleDownUtilizationThreshold: {\n    greaterThan: 0,\n    lessThan: 1\n  }\n};\n\nvar validationRules_gen$5 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CreateClusterRequest: CreateClusterRequest,\n  CreateClusterRequestAutoscalerConfig: CreateClusterRequestAutoscalerConfig,\n  CreateClusterRequestOpenIDConnectConfig: CreateClusterRequestOpenIDConnectConfig,\n  CreateClusterRequestPoolConfig: CreateClusterRequestPoolConfig,\n  CreatePoolRequest: CreatePoolRequest,\n  ListClusterTypesRequest: ListClusterTypesRequest,\n  ListClustersRequest: ListClustersRequest,\n  ListNodesRequest: ListNodesRequest,\n  ListPoolsRequest: ListPoolsRequest,\n  MaintenanceWindow: MaintenanceWindow,\n  UpdateClusterRequest: UpdateClusterRequest,\n  UpdateClusterRequestAutoscalerConfig: UpdateClusterRequestAutoscalerConfig\n});\n\nvar index$g = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: K8SUtilsAPI,\n  CLUSTER_TRANSIENT_STATUSES: CLUSTER_TRANSIENT_STATUSES$1,\n  NODE_TRANSIENT_STATUSES: NODE_TRANSIENT_STATUSES,\n  POOL_TRANSIENT_STATUSES: POOL_TRANSIENT_STATUSES,\n  ValidationRules: validationRules_gen$5\n});\n\nvar index$f = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1: index$g\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link CertificateStatus}. */\nconst CERTIFICATE_TRANSIENT_STATUSES = ['pending'];\n\n/** Lists transient statutes of the enum {@link InstanceStatus}. */\nconst INSTANCE_TRANSIENT_STATUSES$1 = ['pending', 'migrating'];\n\n/** Lists transient statutes of the enum {@link LbStatus}. */\nconst LB_TRANSIENT_STATUSES = ['pending', 'migrating', 'to_create', 'creating', 'to_delete', 'deleting'];\n\n/** Lists transient statutes of the enum {@link PrivateNetworkStatus}. */\nconst PRIVATE_NETWORK_TRANSIENT_STATUSES = ['pending'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalIp = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Ip' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    ipAddress: data.ip_address,\n    lbId: data.lb_id,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    region: data.region,\n    reverse: data.reverse,\n    zone: data.zone\n  };\n};\nconst unmarshalSubscriberEmailConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SubscriberEmailConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    email: data.email\n  };\n};\nconst unmarshalSubscriberWebhookConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SubscriberWebhookConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    uri: data.uri\n  };\n};\nconst unmarshalSubscriber = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Subscriber' failed as data isn't a dictionary.`);\n  }\n  return {\n    emailConfig: data.email_config ? unmarshalSubscriberEmailConfig(data.email_config) : undefined,\n    id: data.id,\n    name: data.name,\n    webhookConfig: data.webhook_config ? unmarshalSubscriberWebhookConfig(data.webhook_config) : undefined\n  };\n};\nconst unmarshalHealthCheckHttpConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'HealthCheckHttpConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    code: data.code,\n    hostHeader: data.host_header,\n    method: data.method,\n    uri: data.uri\n  };\n};\nconst unmarshalHealthCheckHttpsConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'HealthCheckHttpsConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    code: data.code,\n    hostHeader: data.host_header,\n    method: data.method,\n    sni: data.sni,\n    uri: data.uri\n  };\n};\nconst unmarshalHealthCheckLdapConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'HealthCheckLdapConfig' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalHealthCheckMysqlConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'HealthCheckMysqlConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    user: data.user\n  };\n};\nconst unmarshalHealthCheckPgsqlConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'HealthCheckPgsqlConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    user: data.user\n  };\n};\nconst unmarshalHealthCheckRedisConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'HealthCheckRedisConfig' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalHealthCheckTcpConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'HealthCheckTcpConfig' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalHealthCheck = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'HealthCheck' failed as data isn't a dictionary.`);\n  }\n  return {\n    checkDelay: data.check_delay,\n    checkMaxRetries: data.check_max_retries,\n    checkSendProxy: data.check_send_proxy,\n    checkTimeout: data.check_timeout,\n    httpConfig: data.http_config ? unmarshalHealthCheckHttpConfig(data.http_config) : undefined,\n    httpsConfig: data.https_config ? unmarshalHealthCheckHttpsConfig(data.https_config) : undefined,\n    ldapConfig: data.ldap_config ? unmarshalHealthCheckLdapConfig(data.ldap_config) : undefined,\n    mysqlConfig: data.mysql_config ? unmarshalHealthCheckMysqlConfig(data.mysql_config) : undefined,\n    pgsqlConfig: data.pgsql_config ? unmarshalHealthCheckPgsqlConfig(data.pgsql_config) : undefined,\n    port: data.port,\n    redisConfig: data.redis_config ? unmarshalHealthCheckRedisConfig(data.redis_config) : undefined,\n    tcpConfig: data.tcp_config ? unmarshalHealthCheckTcpConfig(data.tcp_config) : undefined,\n    transientCheckDelay: data.transient_check_delay\n  };\n};\nconst unmarshalInstance$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Instance' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    ipAddress: data.ip_address,\n    region: data.region,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalLb = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Lb' failed as data isn't a dictionary.`);\n  }\n  return {\n    backendCount: data.backend_count,\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    frontendCount: data.frontend_count,\n    id: data.id,\n    instances: unmarshalArrayOfObject(data.instances, unmarshalInstance$1),\n    ip: unmarshalArrayOfObject(data.ip, unmarshalIp),\n    name: data.name,\n    organizationId: data.organization_id,\n    privateNetworkCount: data.private_network_count,\n    projectId: data.project_id,\n    region: data.region,\n    routeCount: data.route_count,\n    sslCompatibilityLevel: data.ssl_compatibility_level,\n    status: data.status,\n    subscriber: data.subscriber ? unmarshalSubscriber(data.subscriber) : undefined,\n    tags: data.tags,\n    type: data.type,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalBackend = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Backend' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    failoverHost: data.failover_host,\n    forwardPort: data.forward_port,\n    forwardPortAlgorithm: data.forward_port_algorithm,\n    forwardProtocol: data.forward_protocol,\n    healthCheck: data.health_check ? unmarshalHealthCheck(data.health_check) : undefined,\n    id: data.id,\n    ignoreSslServerVerify: data.ignore_ssl_server_verify,\n    lb: data.lb ? unmarshalLb(data.lb) : undefined,\n    maxConnections: data.max_connections,\n    maxRetries: data.max_retries,\n    name: data.name,\n    onMarkedDownAction: data.on_marked_down_action,\n    pool: data.pool,\n    proxyProtocol: data.proxy_protocol,\n    redispatchAttemptCount: data.redispatch_attempt_count,\n    sendProxyV2: data.send_proxy_v2,\n    sslBridging: data.ssl_bridging,\n    stickySessions: data.sticky_sessions,\n    stickySessionsCookieName: data.sticky_sessions_cookie_name,\n    timeoutConnect: data.timeout_connect,\n    timeoutQueue: data.timeout_queue,\n    timeoutServer: data.timeout_server,\n    timeoutTunnel: data.timeout_tunnel,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalCertificate = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Certificate' failed as data isn't a dictionary.`);\n  }\n  return {\n    commonName: data.common_name,\n    createdAt: unmarshalDate(data.created_at),\n    fingerprint: data.fingerprint,\n    id: data.id,\n    lb: data.lb ? unmarshalLb(data.lb) : undefined,\n    name: data.name,\n    notValidAfter: unmarshalDate(data.not_valid_after),\n    notValidBefore: unmarshalDate(data.not_valid_before),\n    status: data.status,\n    statusDetails: data.status_details,\n    subjectAlternativeName: data.subject_alternative_name,\n    type: data.type,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalFrontend = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Frontend' failed as data isn't a dictionary.`);\n  }\n  return {\n    backend: data.backend ? unmarshalBackend(data.backend) : undefined,\n    certificate: data.certificate ? unmarshalCertificate(data.certificate) : undefined,\n    certificateIds: data.certificate_ids,\n    createdAt: unmarshalDate(data.created_at),\n    enableHttp3: data.enable_http3,\n    id: data.id,\n    inboundPort: data.inbound_port,\n    lb: data.lb ? unmarshalLb(data.lb) : undefined,\n    name: data.name,\n    timeoutClient: data.timeout_client,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalAclActionRedirect = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AclActionRedirect' failed as data isn't a dictionary.`);\n  }\n  return {\n    code: data.code,\n    target: data.target,\n    type: data.type\n  };\n};\nconst unmarshalAclAction = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AclAction' failed as data isn't a dictionary.`);\n  }\n  return {\n    redirect: data.redirect ? unmarshalAclActionRedirect(data.redirect) : undefined,\n    type: data.type\n  };\n};\nconst unmarshalAclMatch = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AclMatch' failed as data isn't a dictionary.`);\n  }\n  return {\n    httpFilter: data.http_filter,\n    httpFilterOption: data.http_filter_option,\n    httpFilterValue: data.http_filter_value,\n    invert: data.invert,\n    ipSubnet: data.ip_subnet\n  };\n};\nconst unmarshalAcl = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Acl' failed as data isn't a dictionary.`);\n  }\n  return {\n    action: data.action ? unmarshalAclAction(data.action) : undefined,\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    frontend: data.frontend ? unmarshalFrontend(data.frontend) : undefined,\n    id: data.id,\n    index: data.index,\n    match: data.match ? unmarshalAclMatch(data.match) : undefined,\n    name: data.name,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalPrivateNetworkDHCPConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PrivateNetworkDHCPConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    ipId: data.ip_id\n  };\n};\nconst unmarshalPrivateNetworkIpamConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PrivateNetworkIpamConfig' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalPrivateNetworkStaticConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PrivateNetworkStaticConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    ipAddress: data.ip_address ? data.ip_address : undefined\n  };\n};\nconst unmarshalPrivateNetwork$3 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PrivateNetwork' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    dhcpConfig: data.dhcp_config ? unmarshalPrivateNetworkDHCPConfig(data.dhcp_config) : undefined,\n    ipamConfig: data.ipam_config ? unmarshalPrivateNetworkIpamConfig(data.ipam_config) : undefined,\n    ipamIds: data.ipam_ids,\n    lb: data.lb ? unmarshalLb(data.lb) : undefined,\n    privateNetworkId: data.private_network_id,\n    staticConfig: data.static_config ? unmarshalPrivateNetworkStaticConfig(data.static_config) : undefined,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalRouteMatch = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RouteMatch' failed as data isn't a dictionary.`);\n  }\n  return {\n    hostHeader: data.host_header,\n    sni: data.sni\n  };\n};\nconst unmarshalRoute = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Route' failed as data isn't a dictionary.`);\n  }\n  return {\n    backendId: data.backend_id,\n    createdAt: unmarshalDate(data.created_at),\n    frontendId: data.frontend_id,\n    id: data.id,\n    match: data.match ? unmarshalRouteMatch(data.match) : undefined,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalBackendServerStats = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'BackendServerStats' failed as data isn't a dictionary.`);\n  }\n  return {\n    backendId: data.backend_id,\n    instanceId: data.instance_id,\n    ip: data.ip,\n    lastHealthCheckStatus: data.last_health_check_status,\n    serverState: data.server_state,\n    serverStateChangedAt: unmarshalDate(data.server_state_changed_at)\n  };\n};\nconst unmarshalLbStats = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'LbStats' failed as data isn't a dictionary.`);\n  }\n  return {\n    backendServersStats: unmarshalArrayOfObject(data.backend_servers_stats, unmarshalBackendServerStats)\n  };\n};\nconst unmarshalListAclResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListAclResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    acls: unmarshalArrayOfObject(data.acls, unmarshalAcl),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListBackendStatsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListBackendStatsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    backendServersStats: unmarshalArrayOfObject(data.backend_servers_stats, unmarshalBackendServerStats),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListBackendsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListBackendsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    backends: unmarshalArrayOfObject(data.backends, unmarshalBackend),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListCertificatesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListCertificatesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    certificates: unmarshalArrayOfObject(data.certificates, unmarshalCertificate),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListFrontendsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListFrontendsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    frontends: unmarshalArrayOfObject(data.frontends, unmarshalFrontend),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListIpsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListIpsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    ips: unmarshalArrayOfObject(data.ips, unmarshalIp),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListLbPrivateNetworksResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListLbPrivateNetworksResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    privateNetwork: unmarshalArrayOfObject(data.private_network, unmarshalPrivateNetwork$3),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalLbType = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'LbType' failed as data isn't a dictionary.`);\n  }\n  return {\n    description: data.description,\n    name: data.name,\n    region: data.region,\n    stockStatus: data.stock_status,\n    zone: data.zone\n  };\n};\nconst unmarshalListLbTypesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListLbTypesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    lbTypes: unmarshalArrayOfObject(data.lb_types, unmarshalLbType),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListLbsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListLbsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    lbs: unmarshalArrayOfObject(data.lbs, unmarshalLb),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListRoutesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListRoutesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    routes: unmarshalArrayOfObject(data.routes, unmarshalRoute),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSubscriberResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSubscriberResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    subscribers: unmarshalArrayOfObject(data.subscribers, unmarshalSubscriber),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalSetAclsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetAclsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    acls: unmarshalArrayOfObject(data.acls, unmarshalAcl),\n    totalCount: data.total_count\n  };\n};\nconst marshalAddBackendServersRequest = (request, defaults) => ({\n  server_ip: request.serverIp\n});\nconst marshalPrivateNetworkDHCPConfig = (request, defaults) => ({\n  ip_id: request.ipId\n});\nconst marshalPrivateNetworkIpamConfig = (request, defaults) => ({});\nconst marshalPrivateNetworkStaticConfig = (request, defaults) => ({\n  ip_address: request.ipAddress\n});\nconst marshalAttachPrivateNetworkRequest = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'static_config',\n    value: request.staticConfig !== undefined ? marshalPrivateNetworkStaticConfig(request.staticConfig) : undefined\n  }, {\n    param: 'dhcp_config',\n    value: request.dhcpConfig !== undefined ? marshalPrivateNetworkDHCPConfig(request.dhcpConfig) : undefined\n  }, {\n    param: 'ipam_config',\n    value: request.ipamConfig !== undefined ? marshalPrivateNetworkIpamConfig(request.ipamConfig) : undefined\n  }])\n});\nconst marshalAclActionRedirect = (request, defaults) => ({\n  code: request.code,\n  target: request.target,\n  type: request.type\n});\nconst marshalAclAction = (request, defaults) => ({\n  redirect: request.redirect !== undefined ? marshalAclActionRedirect(request.redirect) : undefined,\n  type: request.type\n});\nconst marshalAclMatch = (request, defaults) => ({\n  http_filter: request.httpFilter,\n  http_filter_option: request.httpFilterOption,\n  http_filter_value: request.httpFilterValue,\n  invert: request.invert,\n  ip_subnet: request.ipSubnet\n});\nconst marshalCreateAclRequest = (request, defaults) => ({\n  action: marshalAclAction(request.action),\n  description: request.description,\n  index: request.index,\n  match: request.match !== undefined ? marshalAclMatch(request.match) : undefined,\n  name: request.name || randomName('acl')\n});\nconst marshalHealthCheckHttpConfig = (request, defaults) => ({\n  code: request.code,\n  host_header: request.hostHeader,\n  method: request.method,\n  uri: request.uri\n});\nconst marshalHealthCheckHttpsConfig = (request, defaults) => ({\n  code: request.code,\n  host_header: request.hostHeader,\n  method: request.method,\n  sni: request.sni,\n  uri: request.uri\n});\nconst marshalHealthCheckLdapConfig = (request, defaults) => ({});\nconst marshalHealthCheckMysqlConfig = (request, defaults) => ({\n  user: request.user\n});\nconst marshalHealthCheckPgsqlConfig = (request, defaults) => ({\n  user: request.user\n});\nconst marshalHealthCheckRedisConfig = (request, defaults) => ({});\nconst marshalHealthCheckTcpConfig = (request, defaults) => ({});\nconst marshalHealthCheck = (request, defaults) => ({\n  check_delay: request.checkDelay,\n  check_max_retries: request.checkMaxRetries,\n  check_send_proxy: request.checkSendProxy,\n  check_timeout: request.checkTimeout,\n  port: request.port,\n  transient_check_delay: request.transientCheckDelay,\n  ...resolveOneOf([{\n    param: 'tcp_config',\n    value: request.tcpConfig !== undefined ? marshalHealthCheckTcpConfig(request.tcpConfig) : undefined\n  }, {\n    param: 'mysql_config',\n    value: request.mysqlConfig !== undefined ? marshalHealthCheckMysqlConfig(request.mysqlConfig) : undefined\n  }, {\n    param: 'pgsql_config',\n    value: request.pgsqlConfig !== undefined ? marshalHealthCheckPgsqlConfig(request.pgsqlConfig) : undefined\n  }, {\n    param: 'ldap_config',\n    value: request.ldapConfig !== undefined ? marshalHealthCheckLdapConfig(request.ldapConfig) : undefined\n  }, {\n    param: 'redis_config',\n    value: request.redisConfig !== undefined ? marshalHealthCheckRedisConfig(request.redisConfig) : undefined\n  }, {\n    param: 'http_config',\n    value: request.httpConfig !== undefined ? marshalHealthCheckHttpConfig(request.httpConfig) : undefined\n  }, {\n    param: 'https_config',\n    value: request.httpsConfig !== undefined ? marshalHealthCheckHttpsConfig(request.httpsConfig) : undefined\n  }])\n});\nconst marshalCreateBackendRequest = (request, defaults) => ({\n  failover_host: request.failoverHost,\n  forward_port: request.forwardPort,\n  forward_port_algorithm: request.forwardPortAlgorithm,\n  forward_protocol: request.forwardProtocol,\n  health_check: marshalHealthCheck(request.healthCheck),\n  ignore_ssl_server_verify: request.ignoreSslServerVerify,\n  max_connections: request.maxConnections,\n  max_retries: request.maxRetries,\n  name: request.name || randomName('lbb'),\n  on_marked_down_action: request.onMarkedDownAction,\n  proxy_protocol: request.proxyProtocol,\n  redispatch_attempt_count: request.redispatchAttemptCount,\n  send_proxy_v2: request.sendProxyV2,\n  server_ip: request.serverIp,\n  ssl_bridging: request.sslBridging,\n  sticky_sessions: request.stickySessions,\n  sticky_sessions_cookie_name: request.stickySessionsCookieName,\n  timeout_connect: request.timeoutConnect,\n  timeout_queue: request.timeoutQueue,\n  timeout_server: request.timeoutServer,\n  timeout_tunnel: request.timeoutTunnel\n});\nconst marshalCreateCertificateRequestCustomCertificate = (request, defaults) => ({\n  certificate_chain: request.certificateChain\n});\nconst marshalCreateCertificateRequestLetsencryptConfig = (request, defaults) => ({\n  common_name: request.commonName,\n  subject_alternative_name: request.subjectAlternativeName\n});\nconst marshalCreateCertificateRequest = (request, defaults) => ({\n  name: request.name || randomName('certificate'),\n  ...resolveOneOf([{\n    param: 'letsencrypt',\n    value: request.letsencrypt !== undefined ? marshalCreateCertificateRequestLetsencryptConfig(request.letsencrypt) : undefined\n  }, {\n    param: 'custom_certificate',\n    value: request.customCertificate !== undefined ? marshalCreateCertificateRequestCustomCertificate(request.customCertificate) : undefined\n  }])\n});\nconst marshalCreateFrontendRequest = (request, defaults) => ({\n  backend_id: request.backendId,\n  certificate_id: request.certificateId,\n  certificate_ids: request.certificateIds,\n  enable_http3: request.enableHttp3,\n  inbound_port: request.inboundPort,\n  name: request.name || randomName('lbf'),\n  timeout_client: request.timeoutClient\n});\nconst marshalCreateIpRequest = (request, defaults) => ({\n  is_ipv6: request.isIpv6,\n  reverse: request.reverse,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project_id',\n    value: request.projectId\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization_id',\n    value: request.organizationId\n  }])\n});\nconst marshalCreateLbRequest = (request, defaults) => ({\n  assign_flexible_ip: request.assignFlexibleIp,\n  assign_flexible_ipv6: request.assignFlexibleIpv6,\n  description: request.description,\n  ip_id: request.ipId,\n  ip_ids: request.ipIds,\n  name: request.name || randomName('lb'),\n  ssl_compatibility_level: request.sslCompatibilityLevel,\n  tags: request.tags,\n  type: request.type,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project_id',\n    value: request.projectId\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization_id',\n    value: request.organizationId\n  }])\n});\nconst marshalRouteMatch = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'sni',\n    value: request.sni\n  }, {\n    param: 'host_header',\n    value: request.hostHeader\n  }])\n});\nconst marshalCreateRouteRequest = (request, defaults) => ({\n  backend_id: request.backendId,\n  frontend_id: request.frontendId,\n  match: request.match !== undefined ? marshalRouteMatch(request.match) : undefined\n});\nconst marshalSubscriberEmailConfig = (request, defaults) => ({\n  email: request.email\n});\nconst marshalSubscriberWebhookConfig = (request, defaults) => ({\n  uri: request.uri\n});\nconst marshalCreateSubscriberRequest = (request, defaults) => ({\n  name: request.name,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project_id',\n    value: request.projectId\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization_id',\n    value: request.organizationId\n  }]),\n  ...resolveOneOf([{\n    param: 'email_config',\n    value: request.emailConfig !== undefined ? marshalSubscriberEmailConfig(request.emailConfig) : undefined\n  }, {\n    param: 'webhook_config',\n    value: request.webhookConfig !== undefined ? marshalSubscriberWebhookConfig(request.webhookConfig) : undefined\n  }])\n});\nconst marshalMigrateLbRequest = (request, defaults) => ({\n  type: request.type\n});\nconst marshalRemoveBackendServersRequest = (request, defaults) => ({\n  server_ip: request.serverIp\n});\nconst marshalSetBackendServersRequest = (request, defaults) => ({\n  server_ip: request.serverIp\n});\nconst marshalSubscribeToLbRequest = (request, defaults) => ({\n  subscriber_id: request.subscriberId\n});\nconst marshalUpdateAclRequest = (request, defaults) => ({\n  action: marshalAclAction(request.action),\n  description: request.description,\n  index: request.index,\n  match: request.match !== undefined ? marshalAclMatch(request.match) : undefined,\n  name: request.name\n});\nconst marshalUpdateBackendRequest = (request, defaults) => ({\n  failover_host: request.failoverHost,\n  forward_port: request.forwardPort,\n  forward_port_algorithm: request.forwardPortAlgorithm,\n  forward_protocol: request.forwardProtocol,\n  ignore_ssl_server_verify: request.ignoreSslServerVerify,\n  max_connections: request.maxConnections,\n  max_retries: request.maxRetries,\n  name: request.name,\n  on_marked_down_action: request.onMarkedDownAction,\n  proxy_protocol: request.proxyProtocol,\n  redispatch_attempt_count: request.redispatchAttemptCount,\n  send_proxy_v2: request.sendProxyV2,\n  ssl_bridging: request.sslBridging,\n  sticky_sessions: request.stickySessions,\n  sticky_sessions_cookie_name: request.stickySessionsCookieName,\n  timeout_connect: request.timeoutConnect,\n  timeout_queue: request.timeoutQueue,\n  timeout_server: request.timeoutServer,\n  timeout_tunnel: request.timeoutTunnel\n});\nconst marshalUpdateCertificateRequest = (request, defaults) => ({\n  name: request.name\n});\nconst marshalUpdateFrontendRequest = (request, defaults) => ({\n  backend_id: request.backendId,\n  certificate_id: request.certificateId,\n  certificate_ids: request.certificateIds,\n  enable_http3: request.enableHttp3,\n  inbound_port: request.inboundPort,\n  name: request.name,\n  timeout_client: request.timeoutClient\n});\nconst marshalUpdateHealthCheckRequest = (request, defaults) => ({\n  check_delay: request.checkDelay,\n  check_max_retries: request.checkMaxRetries,\n  check_send_proxy: request.checkSendProxy,\n  check_timeout: request.checkTimeout,\n  port: request.port,\n  transient_check_delay: request.transientCheckDelay,\n  ...resolveOneOf([{\n    param: 'tcp_config',\n    value: request.tcpConfig !== undefined ? marshalHealthCheckTcpConfig(request.tcpConfig) : undefined\n  }, {\n    param: 'mysql_config',\n    value: request.mysqlConfig !== undefined ? marshalHealthCheckMysqlConfig(request.mysqlConfig) : undefined\n  }, {\n    param: 'pgsql_config',\n    value: request.pgsqlConfig !== undefined ? marshalHealthCheckPgsqlConfig(request.pgsqlConfig) : undefined\n  }, {\n    param: 'ldap_config',\n    value: request.ldapConfig !== undefined ? marshalHealthCheckLdapConfig(request.ldapConfig) : undefined\n  }, {\n    param: 'redis_config',\n    value: request.redisConfig !== undefined ? marshalHealthCheckRedisConfig(request.redisConfig) : undefined\n  }, {\n    param: 'http_config',\n    value: request.httpConfig !== undefined ? marshalHealthCheckHttpConfig(request.httpConfig) : undefined\n  }, {\n    param: 'https_config',\n    value: request.httpsConfig !== undefined ? marshalHealthCheckHttpsConfig(request.httpsConfig) : undefined\n  }])\n});\nconst marshalUpdateIpRequest = (request, defaults) => ({\n  lb_id: request.lbId,\n  reverse: request.reverse\n});\nconst marshalUpdateLbRequest = (request, defaults) => ({\n  description: request.description,\n  name: request.name,\n  ssl_compatibility_level: request.sslCompatibilityLevel,\n  tags: request.tags\n});\nconst marshalUpdateRouteRequest = (request, defaults) => ({\n  backend_id: request.backendId,\n  match: request.match !== undefined ? marshalRouteMatch(request.match) : undefined\n});\nconst marshalUpdateSubscriberRequest = (request, defaults) => ({\n  name: request.name,\n  ...resolveOneOf([{\n    param: 'email_config',\n    value: request.emailConfig !== undefined ? marshalSubscriberEmailConfig(request.emailConfig) : undefined\n  }, {\n    param: 'webhook_config',\n    value: request.webhookConfig !== undefined ? marshalSubscriberWebhookConfig(request.webhookConfig) : undefined\n  }])\n});\nconst marshalZonedApiAddBackendServersRequest = (request, defaults) => ({\n  server_ip: request.serverIp\n});\nconst marshalZonedApiAttachPrivateNetworkRequest = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'static_config',\n    value: request.staticConfig !== undefined ? marshalPrivateNetworkStaticConfig(request.staticConfig) : undefined\n  }, {\n    param: 'dhcp_config',\n    value: request.dhcpConfig !== undefined ? marshalPrivateNetworkDHCPConfig(request.dhcpConfig) : undefined\n  }, {\n    param: 'ipam_config',\n    value: request.ipamConfig !== undefined ? marshalPrivateNetworkIpamConfig(request.ipamConfig) : undefined\n  }])\n});\nconst marshalZonedApiCreateAclRequest = (request, defaults) => ({\n  action: marshalAclAction(request.action),\n  description: request.description,\n  index: request.index,\n  match: request.match !== undefined ? marshalAclMatch(request.match) : undefined,\n  name: request.name || randomName('acl')\n});\nconst marshalZonedApiCreateBackendRequest = (request, defaults) => ({\n  failover_host: request.failoverHost,\n  forward_port: request.forwardPort,\n  forward_port_algorithm: request.forwardPortAlgorithm,\n  forward_protocol: request.forwardProtocol,\n  health_check: marshalHealthCheck(request.healthCheck),\n  ignore_ssl_server_verify: request.ignoreSslServerVerify,\n  max_connections: request.maxConnections,\n  max_retries: request.maxRetries,\n  name: request.name || randomName('lbb'),\n  on_marked_down_action: request.onMarkedDownAction,\n  proxy_protocol: request.proxyProtocol,\n  redispatch_attempt_count: request.redispatchAttemptCount,\n  send_proxy_v2: request.sendProxyV2,\n  server_ip: request.serverIp,\n  ssl_bridging: request.sslBridging,\n  sticky_sessions: request.stickySessions,\n  sticky_sessions_cookie_name: request.stickySessionsCookieName,\n  timeout_connect: request.timeoutConnect,\n  timeout_queue: request.timeoutQueue,\n  timeout_server: request.timeoutServer,\n  timeout_tunnel: request.timeoutTunnel\n});\nconst marshalZonedApiCreateCertificateRequest = (request, defaults) => ({\n  name: request.name || randomName('certificate'),\n  ...resolveOneOf([{\n    param: 'letsencrypt',\n    value: request.letsencrypt !== undefined ? marshalCreateCertificateRequestLetsencryptConfig(request.letsencrypt) : undefined\n  }, {\n    param: 'custom_certificate',\n    value: request.customCertificate !== undefined ? marshalCreateCertificateRequestCustomCertificate(request.customCertificate) : undefined\n  }])\n});\nconst marshalZonedApiCreateFrontendRequest = (request, defaults) => ({\n  backend_id: request.backendId,\n  certificate_id: request.certificateId,\n  certificate_ids: request.certificateIds,\n  enable_http3: request.enableHttp3,\n  inbound_port: request.inboundPort,\n  name: request.name || randomName('lbf'),\n  timeout_client: request.timeoutClient\n});\nconst marshalZonedApiCreateIpRequest = (request, defaults) => ({\n  is_ipv6: request.isIpv6,\n  reverse: request.reverse,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project_id',\n    value: request.projectId\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization_id',\n    value: request.organizationId\n  }])\n});\nconst marshalZonedApiCreateLbRequest = (request, defaults) => ({\n  assign_flexible_ip: request.assignFlexibleIp,\n  assign_flexible_ipv6: request.assignFlexibleIpv6,\n  description: request.description,\n  ip_id: request.ipId,\n  ip_ids: request.ipIds,\n  name: request.name || randomName('lb'),\n  ssl_compatibility_level: request.sslCompatibilityLevel,\n  tags: request.tags,\n  type: request.type,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project_id',\n    value: request.projectId\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization_id',\n    value: request.organizationId\n  }])\n});\nconst marshalZonedApiCreateRouteRequest = (request, defaults) => ({\n  backend_id: request.backendId,\n  frontend_id: request.frontendId,\n  match: request.match !== undefined ? marshalRouteMatch(request.match) : undefined\n});\nconst marshalZonedApiCreateSubscriberRequest = (request, defaults) => ({\n  name: request.name,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project_id',\n    value: request.projectId\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization_id',\n    value: request.organizationId\n  }]),\n  ...resolveOneOf([{\n    param: 'email_config',\n    value: request.emailConfig !== undefined ? marshalSubscriberEmailConfig(request.emailConfig) : undefined\n  }, {\n    param: 'webhook_config',\n    value: request.webhookConfig !== undefined ? marshalSubscriberWebhookConfig(request.webhookConfig) : undefined\n  }])\n});\nconst marshalZonedApiMigrateLbRequest = (request, defaults) => ({\n  type: request.type\n});\nconst marshalZonedApiRemoveBackendServersRequest = (request, defaults) => ({\n  server_ip: request.serverIp\n});\nconst marshalAclSpec = (request, defaults) => ({\n  action: marshalAclAction(request.action),\n  description: request.description,\n  index: request.index,\n  match: request.match !== undefined ? marshalAclMatch(request.match) : undefined,\n  name: request.name\n});\nconst marshalZonedApiSetAclsRequest = (request, defaults) => ({\n  acls: request.acls.map(elt => marshalAclSpec(elt))\n});\nconst marshalZonedApiSetBackendServersRequest = (request, defaults) => ({\n  server_ip: request.serverIp\n});\nconst marshalZonedApiSubscribeToLbRequest = (request, defaults) => ({\n  subscriber_id: request.subscriberId\n});\nconst marshalZonedApiUpdateAclRequest = (request, defaults) => ({\n  action: marshalAclAction(request.action),\n  description: request.description,\n  index: request.index,\n  match: request.match !== undefined ? marshalAclMatch(request.match) : undefined,\n  name: request.name\n});\nconst marshalZonedApiUpdateBackendRequest = (request, defaults) => ({\n  failover_host: request.failoverHost,\n  forward_port: request.forwardPort,\n  forward_port_algorithm: request.forwardPortAlgorithm,\n  forward_protocol: request.forwardProtocol,\n  ignore_ssl_server_verify: request.ignoreSslServerVerify,\n  max_connections: request.maxConnections,\n  max_retries: request.maxRetries,\n  name: request.name,\n  on_marked_down_action: request.onMarkedDownAction,\n  proxy_protocol: request.proxyProtocol,\n  redispatch_attempt_count: request.redispatchAttemptCount,\n  send_proxy_v2: request.sendProxyV2,\n  ssl_bridging: request.sslBridging,\n  sticky_sessions: request.stickySessions,\n  sticky_sessions_cookie_name: request.stickySessionsCookieName,\n  timeout_connect: request.timeoutConnect,\n  timeout_queue: request.timeoutQueue,\n  timeout_server: request.timeoutServer,\n  timeout_tunnel: request.timeoutTunnel\n});\nconst marshalZonedApiUpdateCertificateRequest = (request, defaults) => ({\n  name: request.name\n});\nconst marshalZonedApiUpdateFrontendRequest = (request, defaults) => ({\n  backend_id: request.backendId,\n  certificate_id: request.certificateId,\n  certificate_ids: request.certificateIds,\n  enable_http3: request.enableHttp3,\n  inbound_port: request.inboundPort,\n  name: request.name,\n  timeout_client: request.timeoutClient\n});\nconst marshalZonedApiUpdateHealthCheckRequest = (request, defaults) => ({\n  check_delay: request.checkDelay,\n  check_max_retries: request.checkMaxRetries,\n  check_send_proxy: request.checkSendProxy,\n  check_timeout: request.checkTimeout,\n  port: request.port,\n  transient_check_delay: request.transientCheckDelay,\n  ...resolveOneOf([{\n    param: 'tcp_config',\n    value: request.tcpConfig !== undefined ? marshalHealthCheckTcpConfig(request.tcpConfig) : undefined\n  }, {\n    param: 'mysql_config',\n    value: request.mysqlConfig !== undefined ? marshalHealthCheckMysqlConfig(request.mysqlConfig) : undefined\n  }, {\n    param: 'pgsql_config',\n    value: request.pgsqlConfig !== undefined ? marshalHealthCheckPgsqlConfig(request.pgsqlConfig) : undefined\n  }, {\n    param: 'ldap_config',\n    value: request.ldapConfig !== undefined ? marshalHealthCheckLdapConfig(request.ldapConfig) : undefined\n  }, {\n    param: 'redis_config',\n    value: request.redisConfig !== undefined ? marshalHealthCheckRedisConfig(request.redisConfig) : undefined\n  }, {\n    param: 'http_config',\n    value: request.httpConfig !== undefined ? marshalHealthCheckHttpConfig(request.httpConfig) : undefined\n  }, {\n    param: 'https_config',\n    value: request.httpsConfig !== undefined ? marshalHealthCheckHttpsConfig(request.httpsConfig) : undefined\n  }])\n});\nconst marshalZonedApiUpdateIpRequest = (request, defaults) => ({\n  lb_id: request.lbId,\n  reverse: request.reverse\n});\nconst marshalZonedApiUpdateLbRequest = (request, defaults) => ({\n  description: request.description,\n  name: request.name,\n  ssl_compatibility_level: request.sslCompatibilityLevel,\n  tags: request.tags\n});\nconst marshalZonedApiUpdateRouteRequest = (request, defaults) => ({\n  backend_id: request.backendId,\n  match: request.match !== undefined ? marshalRouteMatch(request.match) : undefined\n});\nconst marshalZonedApiUpdateSubscriberRequest = (request, defaults) => ({\n  name: request.name,\n  ...resolveOneOf([{\n    param: 'email_config',\n    value: request.emailConfig !== undefined ? marshalSubscriberEmailConfig(request.emailConfig) : undefined\n  }, {\n    param: 'webhook_config',\n    value: request.webhookConfig !== undefined ? marshalSubscriberWebhookConfig(request.webhookConfig) : undefined\n  }])\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$e = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * Load Balancer API.\n *\n * This API allows you to manage your Scaleway Load Balancer services.\n */\nclass ZonedAPI extends API$z {\n  /** Lists the available zones of the API. */\n  static LOCALITIES = ['fr-par-1', 'fr-par-2', 'nl-ams-1', 'nl-ams-2', 'nl-ams-3', 'pl-waw-1', 'pl-waw-2', 'pl-waw-3'];\n  pageOfListLbs = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['tags', request.tags])\n  }, unmarshalListLbsResponse);\n\n  /**\n   * List Load Balancers. List all Load Balancers in the specified zone, for a\n   * Scaleway Organization or Scaleway Project. By default, the Load Balancers\n   * returned in the list are ordered by creation date in ascending order,\n   * though this can be modified via the `order_by` field.\n   *\n   * @param request - The request {@link ZonedApiListLbsRequest}\n   * @returns A Promise of ListLbsResponse\n   */\n  listLbs = (request = {}) => enrichForPagination('lbs', this.pageOfListLbs, request);\n\n  /**\n   * Create a Load Balancer. Create a new Load Balancer. Note that the Load\n   * Balancer will be created without frontends or backends; these must be\n   * created separately via the dedicated endpoints.\n   *\n   * @param request - The request {@link ZonedApiCreateLbRequest}\n   * @returns A Promise of Lb\n   */\n  createLb = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiCreateLbRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs`\n  }, unmarshalLb);\n\n  /**\n   * Get a Load Balancer. Retrieve information about an existing Load Balancer,\n   * specified by its Load Balancer ID. Its full details, including name, status\n   * and IP address, are returned in the response object.\n   *\n   * @param request - The request {@link ZonedApiGetLbRequest}\n   * @returns A Promise of Lb\n   */\n  getLb = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}`\n  }, unmarshalLb);\n\n  /**\n   * Waits for {@link Lb} to be in a final state.\n   *\n   * @param request - The request {@link ZonedApiGetLbRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Lb\n   */\n  waitForLb = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!LB_TRANSIENT_STATUSES.includes(res.status))), this.getLb, request, options);\n\n  /**\n   * Update a Load Balancer. Update the parameters of an existing Load Balancer,\n   * specified by its Load Balancer ID. Note that the request type is PUT and\n   * not PATCH. You must set all parameters.\n   *\n   * @param request - The request {@link ZonedApiUpdateLbRequest}\n   * @returns A Promise of Lb\n   */\n  updateLb = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiUpdateLbRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}`\n  }, unmarshalLb);\n\n  /**\n   * Delete a Load Balancer. Delete an existing Load Balancer, specified by its\n   * Load Balancer ID. Deleting a Load Balancer is permanent, and cannot be\n   * undone. The Load Balancer's flexible IP address can either be deleted with\n   * the Load Balancer, or kept in your account for future use.\n   *\n   * @param request - The request {@link ZonedApiDeleteLbRequest}\n   */\n  deleteLb = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}`,\n    urlParams: urlParams(['release_ip', request.releaseIp])\n  });\n\n  /**\n   * Migrate a Load Balancer. Migrate an existing Load Balancer from one\n   * commercial type to another. Allows you to scale your Load Balancer up or\n   * down in terms of bandwidth or multi-cloud provision.\n   *\n   * @param request - The request {@link ZonedApiMigrateLbRequest}\n   * @returns A Promise of Lb\n   */\n  migrateLb = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiMigrateLbRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}/migrate`\n  }, unmarshalLb);\n  pageOfListIPs = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips`,\n    urlParams: urlParams(['ip_address', request.ipAddress], ['ip_type', request.ipType], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListIpsResponse);\n\n  /**\n   * List IP addresses. List the Load Balancer flexible IP addresses held in the\n   * account (filtered by Organization ID or Project ID). It is also possible to\n   * search for a specific IP address.\n   *\n   * @param request - The request {@link ZonedApiListIPsRequest}\n   * @returns A Promise of ListIpsResponse\n   */\n  listIPs = (request = {}) => enrichForPagination('ips', this.pageOfListIPs, request);\n\n  /**\n   * Create an IP address. Create a new Load Balancer flexible IP address, in\n   * the specified Scaleway Project. This can be attached to new Load Balancers\n   * created in the future.\n   *\n   * @param request - The request {@link ZonedApiCreateIpRequest}\n   * @returns A Promise of Ip\n   */\n  createIp = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiCreateIpRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips`\n  }, unmarshalIp);\n\n  /**\n   * Get an IP address. Retrieve the full details of a Load Balancer flexible IP\n   * address.\n   *\n   * @param request - The request {@link ZonedApiGetIpRequest}\n   * @returns A Promise of Ip\n   */\n  getIp = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips/${validatePathParam('ipId', request.ipId)}`\n  }, unmarshalIp);\n\n  /**\n   * Delete an IP address. Delete a Load Balancer flexible IP address. This\n   * action is irreversible, and cannot be undone.\n   *\n   * @param request - The request {@link ZonedApiReleaseIpRequest}\n   */\n  releaseIp = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips/${validatePathParam('ipId', request.ipId)}`\n  });\n\n  /**\n   * Update an IP address. Update the reverse DNS of a Load Balancer flexible IP\n   * address.\n   *\n   * @param request - The request {@link ZonedApiUpdateIpRequest}\n   * @returns A Promise of Ip\n   */\n  updateIp = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiUpdateIpRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PATCH',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips/${validatePathParam('ipId', request.ipId)}`\n  }, unmarshalIp);\n  pageOfListBackends = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}/backends`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListBackendsResponse);\n\n  /**\n   * List the backends of a given Load Balancer. List all the backends of a Load\n   * Balancer, specified by its Load Balancer ID. By default, results are\n   * returned in ascending order by the creation date of each backend. The\n   * response is an array of backend objects, containing full details of each\n   * one including their configuration parameters such as protocol, port and\n   * forwarding algorithm.\n   *\n   * @param request - The request {@link ZonedApiListBackendsRequest}\n   * @returns A Promise of ListBackendsResponse\n   */\n  listBackends = request => enrichForPagination('backends', this.pageOfListBackends, request);\n\n  /**\n   * Create a backend for a given Load Balancer. Create a new backend for a\n   * given Load Balancer, specifying its full configuration including protocol,\n   * port and forwarding algorithm.\n   *\n   * @param request - The request {@link ZonedApiCreateBackendRequest}\n   * @returns A Promise of Backend\n   */\n  createBackend = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiCreateBackendRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}/backends`\n  }, unmarshalBackend);\n\n  /**\n   * Get a backend of a given Load Balancer. Get the full details of a given\n   * backend, specified by its backend ID. The response contains the backend's\n   * full configuration parameters including protocol, port and forwarding\n   * algorithm.\n   *\n   * @param request - The request {@link ZonedApiGetBackendRequest}\n   * @returns A Promise of Backend\n   */\n  getBackend = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/backends/${validatePathParam('backendId', request.backendId)}`\n  }, unmarshalBackend);\n\n  /**\n   * Update a backend of a given Load Balancer. Update a backend of a given Load\n   * Balancer, specified by its backend ID. Note that the request type is PUT\n   * and not PATCH. You must set all parameters.\n   *\n   * @param request - The request {@link ZonedApiUpdateBackendRequest}\n   * @returns A Promise of Backend\n   */\n  updateBackend = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiUpdateBackendRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/backends/${validatePathParam('backendId', request.backendId)}`\n  }, unmarshalBackend);\n\n  /**\n   * Delete a backend of a given Load Balancer. Delete a backend of a given Load\n   * Balancer, specified by its backend ID. This action is irreversible and\n   * cannot be undone.\n   *\n   * @param request - The request {@link ZonedApiDeleteBackendRequest}\n   */\n  deleteBackend = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/backends/${validatePathParam('backendId', request.backendId)}`\n  });\n\n  /**\n   * Add a set of backend servers to a given backend. For a given backend\n   * specified by its backend ID, add a set of backend servers (identified by\n   * their IP addresses) it should forward traffic to. These will be appended to\n   * any existing set of backend servers for this backend.\n   *\n   * @param request - The request {@link ZonedApiAddBackendServersRequest}\n   * @returns A Promise of Backend\n   */\n  addBackendServers = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiAddBackendServersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/backends/${validatePathParam('backendId', request.backendId)}/servers`\n  }, unmarshalBackend);\n\n  /**\n   * Remove a set of servers for a given backend. For a given backend specified\n   * by its backend ID, remove the specified backend servers (identified by\n   * their IP addresses) so that it no longer forwards traffic to them.\n   *\n   * @param request - The request {@link ZonedApiRemoveBackendServersRequest}\n   * @returns A Promise of Backend\n   */\n  removeBackendServers = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiRemoveBackendServersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'DELETE',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/backends/${validatePathParam('backendId', request.backendId)}/servers`\n  }, unmarshalBackend);\n\n  /**\n   * Define all backend servers for a given backend. For a given backend\n   * specified by its backend ID, define the set of backend servers (identified\n   * by their IP addresses) that it should forward traffic to. Any existing\n   * backend servers configured for this backend will be removed.\n   *\n   * @param request - The request {@link ZonedApiSetBackendServersRequest}\n   * @returns A Promise of Backend\n   */\n  setBackendServers = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiSetBackendServersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/backends/${validatePathParam('backendId', request.backendId)}/servers`\n  }, unmarshalBackend);\n\n  /**\n   * Update a health check for a given backend. Update the configuration of the\n   * health check performed by a given backend to verify the health of its\n   * backend servers, identified by its backend ID. Note that the request type\n   * is PUT and not PATCH. You must set all parameters.\n   *\n   * @param request - The request {@link ZonedApiUpdateHealthCheckRequest}\n   * @returns A Promise of HealthCheck\n   */\n  updateHealthCheck = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiUpdateHealthCheckRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/backends/${validatePathParam('backendId', request.backendId)}/healthcheck`\n  }, unmarshalHealthCheck);\n  pageOfListFrontends = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}/frontends`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListFrontendsResponse);\n\n  /**\n   * List frontends of a given Load Balancer. List all the frontends of a Load\n   * Balancer, specified by its Load Balancer ID. By default, results are\n   * returned in ascending order by the creation date of each frontend. The\n   * response is an array of frontend objects, containing full details of each\n   * one including the port they listen on and the backend they are attached\n   * to.\n   *\n   * @param request - The request {@link ZonedApiListFrontendsRequest}\n   * @returns A Promise of ListFrontendsResponse\n   */\n  listFrontends = request => enrichForPagination('frontends', this.pageOfListFrontends, request);\n\n  /**\n   * Create a frontend in a given Load Balancer. Create a new frontend for a\n   * given Load Balancer, specifying its configuration including the port it\n   * should listen on and the backend to attach it to.\n   *\n   * @param request - The request {@link ZonedApiCreateFrontendRequest}\n   * @returns A Promise of Frontend\n   */\n  createFrontend = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiCreateFrontendRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}/frontends`\n  }, unmarshalFrontend);\n\n  /**\n   * Get a frontend. Get the full details of a given frontend, specified by its\n   * frontend ID. The response contains the frontend's full configuration\n   * parameters including the backend it is attached to, the port it listens on,\n   * and any certificates it has.\n   *\n   * @param request - The request {@link ZonedApiGetFrontendRequest}\n   * @returns A Promise of Frontend\n   */\n  getFrontend = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/frontends/${validatePathParam('frontendId', request.frontendId)}`\n  }, unmarshalFrontend);\n\n  /**\n   * Update a frontend. Update a given frontend, specified by its frontend ID.\n   * You can update configuration parameters including its name and the port it\n   * listens on. Note that the request type is PUT and not PATCH. You must set\n   * all parameters.\n   *\n   * @param request - The request {@link ZonedApiUpdateFrontendRequest}\n   * @returns A Promise of Frontend\n   */\n  updateFrontend = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiUpdateFrontendRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/frontends/${validatePathParam('frontendId', request.frontendId)}`\n  }, unmarshalFrontend);\n\n  /**\n   * Delete a frontend. Delete a given frontend, specified by its frontend ID.\n   * This action is irreversible and cannot be undone.\n   *\n   * @param request - The request {@link ZonedApiDeleteFrontendRequest}\n   */\n  deleteFrontend = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/frontends/${validatePathParam('frontendId', request.frontendId)}`\n  });\n  pageOfListRoutes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/routes`,\n    urlParams: urlParams(['frontend_id', request.frontendId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListRoutesResponse);\n\n  /**\n   * List all routes. List all routes for a given frontend. The response is an\n   * array of routes, each one with a specified backend to direct to if a\n   * certain condition is matched (based on the value of the SNI field or HTTP\n   * Host header).\n   *\n   * @param request - The request {@link ZonedApiListRoutesRequest}\n   * @returns A Promise of ListRoutesResponse\n   */\n  listRoutes = (request = {}) => enrichForPagination('routes', this.pageOfListRoutes, request);\n\n  /**\n   * Create a route. Create a new route on a given frontend. To configure a\n   * route, specify the backend to direct to if a certain condition is matched\n   * (based on the value of the SNI field or HTTP Host header).\n   *\n   * @param request - The request {@link ZonedApiCreateRouteRequest}\n   * @returns A Promise of Route\n   */\n  createRoute = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiCreateRouteRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/routes`\n  }, unmarshalRoute);\n\n  /**\n   * Get a route. Retrieve information about an existing route, specified by its\n   * route ID. Its full details, origin frontend, target backend and match\n   * condition, are returned in the response object.\n   *\n   * @param request - The request {@link ZonedApiGetRouteRequest}\n   * @returns A Promise of Route\n   */\n  getRoute = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/routes/${validatePathParam('routeId', request.routeId)}`\n  }, unmarshalRoute);\n\n  /**\n   * Update a route. Update the configuration of an existing route, specified by\n   * its route ID.\n   *\n   * @param request - The request {@link ZonedApiUpdateRouteRequest}\n   * @returns A Promise of Route\n   */\n  updateRoute = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiUpdateRouteRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/routes/${validatePathParam('routeId', request.routeId)}`\n  }, unmarshalRoute);\n\n  /**\n   * Delete a route. Delete an existing route, specified by its route ID.\n   * Deleting a route is permanent, and cannot be undone.\n   *\n   * @param request - The request {@link ZonedApiDeleteRouteRequest}\n   */\n  deleteRoute = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/routes/${validatePathParam('routeId', request.routeId)}`\n  });\n\n  /**\n   * Get usage statistics of a given Load Balancer.\n   *\n   * @deprecated\n   * @param request - The request {@link ZonedApiGetLbStatsRequest}\n   * @returns A Promise of LbStats\n   */\n  getLbStats = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}/stats`,\n    urlParams: urlParams(['backend_id', request.backendId])\n  }, unmarshalLbStats);\n  pageOfListBackendStats = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}/backend-stats`,\n    urlParams: urlParams(['backend_id', request.backendId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListBackendStatsResponse);\n\n  /**\n   * List backend server statistics. List information about your backend\n   * servers, including their state and the result of their last health check.\n   *\n   * @param request - The request {@link ZonedApiListBackendStatsRequest}\n   * @returns A Promise of ListBackendStatsResponse\n   */\n  listBackendStats = request => enrichForPagination('backendServersStats', this.pageOfListBackendStats, request);\n  pageOfListAcls = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/frontends/${validatePathParam('frontendId', request.frontendId)}/acls`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListAclResponse);\n\n  /**\n   * List ACLs for a given frontend. List the ACLs for a given frontend,\n   * specified by its frontend ID. The response is an array of ACL objects, each\n   * one representing an ACL that denies or allows traffic based on certain\n   * conditions.\n   *\n   * @param request - The request {@link ZonedApiListAclsRequest}\n   * @returns A Promise of ListAclResponse\n   */\n  listAcls = request => enrichForPagination('acls', this.pageOfListAcls, request);\n\n  /**\n   * Create an ACL for a given frontend. Create a new ACL for a given frontend.\n   * Each ACL must have a name, an action to perform (allow or deny), and a\n   * match rule (the action is carried out when the incoming traffic matches the\n   * rule).\n   *\n   * @param request - The request {@link ZonedApiCreateAclRequest}\n   * @returns A Promise of Acl\n   */\n  createAcl = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiCreateAclRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/frontends/${validatePathParam('frontendId', request.frontendId)}/acls`\n  }, unmarshalAcl);\n\n  /**\n   * Get an ACL. Get information for a particular ACL, specified by its ACL ID.\n   * The response returns full details of the ACL, including its name, action,\n   * match rule and frontend.\n   *\n   * @param request - The request {@link ZonedApiGetAclRequest}\n   * @returns A Promise of Acl\n   */\n  getAcl = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/acls/${validatePathParam('aclId', request.aclId)}`\n  }, unmarshalAcl);\n\n  /**\n   * Update an ACL. Update a particular ACL, specified by its ACL ID. You can\n   * update details including its name, action and match rule.\n   *\n   * @param request - The request {@link ZonedApiUpdateAclRequest}\n   * @returns A Promise of Acl\n   */\n  updateAcl = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiUpdateAclRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/acls/${validatePathParam('aclId', request.aclId)}`\n  }, unmarshalAcl);\n\n  /**\n   * Delete an ACL. Delete an ACL, specified by its ACL ID. Deleting an ACL is\n   * irreversible and cannot be undone.\n   *\n   * @param request - The request {@link ZonedApiDeleteAclRequest}\n   */\n  deleteAcl = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/acls/${validatePathParam('aclId', request.aclId)}`\n  });\n\n  /**\n   * Define all ACLs for a given frontend. For a given frontend specified by its\n   * frontend ID, define and add the complete set of ACLS for that frontend. Any\n   * existing ACLs on this frontend will be removed.\n   *\n   * @param request - The request {@link ZonedApiSetAclsRequest}\n   * @returns A Promise of SetAclsResponse\n   */\n  setAcls = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiSetAclsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/frontends/${validatePathParam('frontendId', request.frontendId)}/acls`\n  }, unmarshalSetAclsResponse);\n\n  /**\n   * Create an SSL/TLS certificate. Generate a new SSL/TLS certificate for a\n   * given Load Balancer. You can choose to create a Let's Encrypt certificate,\n   * or import a custom certificate.\n   *\n   * @param request - The request {@link ZonedApiCreateCertificateRequest}\n   * @returns A Promise of Certificate\n   */\n  createCertificate = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiCreateCertificateRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}/certificates`\n  }, unmarshalCertificate);\n  pageOfListCertificates = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}/certificates`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListCertificatesResponse);\n\n  /**\n   * List all SSL/TLS certificates on a given Load Balancer. List all the\n   * SSL/TLS certificates on a given Load Balancer. The response is an array of\n   * certificate objects, which are by default listed in ascending order of\n   * creation date.\n   *\n   * @param request - The request {@link ZonedApiListCertificatesRequest}\n   * @returns A Promise of ListCertificatesResponse\n   */\n  listCertificates = request => enrichForPagination('certificates', this.pageOfListCertificates, request);\n\n  /**\n   * Get an SSL/TLS certificate. Get information for a particular SSL/TLS\n   * certificate, specified by its certificate ID. The response returns full\n   * details of the certificate, including its type, main domain name, and\n   * alternative domain names.\n   *\n   * @param request - The request {@link ZonedApiGetCertificateRequest}\n   * @returns A Promise of Certificate\n   */\n  getCertificate = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/certificates/${validatePathParam('certificateId', request.certificateId)}`\n  }, unmarshalCertificate);\n\n  /**\n   * Waits for {@link Certificate} to be in a final state.\n   *\n   * @param request - The request {@link ZonedApiGetCertificateRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Certificate\n   */\n  waitForCertificate = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!CERTIFICATE_TRANSIENT_STATUSES.includes(res.status))), this.getCertificate, request, options);\n\n  /**\n   * Update an SSL/TLS certificate. Update the name of a particular SSL/TLS\n   * certificate, specified by its certificate ID.\n   *\n   * @param request - The request {@link ZonedApiUpdateCertificateRequest}\n   * @returns A Promise of Certificate\n   */\n  updateCertificate = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiUpdateCertificateRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/certificates/${validatePathParam('certificateId', request.certificateId)}`\n  }, unmarshalCertificate);\n\n  /**\n   * Delete an SSL/TLS certificate. Delete an SSL/TLS certificate, specified by\n   * its certificate ID. Deleting a certificate is irreversible and cannot be\n   * undone.\n   *\n   * @param request - The request {@link ZonedApiDeleteCertificateRequest}\n   */\n  deleteCertificate = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/certificates/${validatePathParam('certificateId', request.certificateId)}`\n  });\n  pageOfListLbTypes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lb-types`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListLbTypesResponse);\n\n  /**\n   * List all Load Balancer offer types. List all the different commercial Load\n   * Balancer types. The response includes an array of offer types, each with a\n   * name, description, and information about its stock availability.\n   *\n   * @param request - The request {@link ZonedApiListLbTypesRequest}\n   * @returns A Promise of ListLbTypesResponse\n   */\n  listLbTypes = (request = {}) => enrichForPagination('lbTypes', this.pageOfListLbTypes, request);\n\n  /**\n   * Create a subscriber. Create a new subscriber, either with an email\n   * configuration or a webhook configuration, for a specified Scaleway\n   * Project.\n   *\n   * @param request - The request {@link ZonedApiCreateSubscriberRequest}\n   * @returns A Promise of Subscriber\n   */\n  createSubscriber = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiCreateSubscriberRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/subscribers`\n  }, unmarshalSubscriber);\n\n  /**\n   * Get a subscriber. Retrieve information about an existing subscriber,\n   * specified by its subscriber ID. Its full details, including name and\n   * email/webhook configuration, are returned in the response object.\n   *\n   * @param request - The request {@link ZonedApiGetSubscriberRequest}\n   * @returns A Promise of Subscriber\n   */\n  getSubscriber = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/subscribers/${validatePathParam('subscriberId', request.subscriberId)}`\n  }, unmarshalSubscriber);\n  pageOfListSubscriber = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/subscribers`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListSubscriberResponse);\n\n  /**\n   * List all subscribers. List all subscribers to Load Balancer alerts. By\n   * default, returns all subscribers to Load Balancer alerts for the\n   * Organization associated with the authentication token used for the\n   * request.\n   *\n   * @param request - The request {@link ZonedApiListSubscriberRequest}\n   * @returns A Promise of ListSubscriberResponse\n   */\n  listSubscriber = (request = {}) => enrichForPagination('subscribers', this.pageOfListSubscriber, request);\n\n  /**\n   * Update a subscriber. Update the parameters of a given subscriber (e.g.\n   * name, webhook configuration, email configuration), specified by its\n   * subscriber ID.\n   *\n   * @param request - The request {@link ZonedApiUpdateSubscriberRequest}\n   * @returns A Promise of Subscriber\n   */\n  updateSubscriber = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiUpdateSubscriberRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/subscribers/${validatePathParam('subscriberId', request.subscriberId)}`\n  }, unmarshalSubscriber);\n\n  /**\n   * Delete a subscriber. Delete an existing subscriber, specified by its\n   * subscriber ID. Deleting a subscriber is permanent, and cannot be undone.\n   *\n   * @param request - The request {@link ZonedApiDeleteSubscriberRequest}\n   */\n  deleteSubscriber = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lb/subscription/${validatePathParam('subscriberId', request.subscriberId)}`\n  });\n\n  /**\n   * Subscribe a subscriber to alerts for a given Load Balancer. Subscribe an\n   * existing subscriber to alerts for a given Load Balancer.\n   *\n   * @param request - The request {@link ZonedApiSubscribeToLbRequest}\n   * @returns A Promise of Lb\n   */\n  subscribeToLb = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiSubscribeToLbRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lb/${validatePathParam('lbId', request.lbId)}/subscribe`\n  }, unmarshalLb);\n\n  /**\n   * Unsubscribe a subscriber from alerts for a given Load Balancer. Unsubscribe\n   * a subscriber from alerts for a given Load Balancer. The subscriber is not\n   * deleted, and can be resubscribed in the future if necessary.\n   *\n   * @param request - The request {@link ZonedApiUnsubscribeFromLbRequest}\n   * @returns A Promise of Lb\n   */\n  unsubscribeFromLb = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lb/${validatePathParam('lbId', request.lbId)}/unsubscribe`\n  }, unmarshalLb);\n  pageOfListLbPrivateNetworks = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}/private-networks`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListLbPrivateNetworksResponse);\n\n  /**\n   * List Private Networks attached to a Load Balancer. List the Private\n   * Networks attached to a given Load Balancer, specified by its Load Balancer\n   * ID. The response is an array of Private Network objects, giving information\n   * including the status, configuration, name and creation date of each Private\n   * Network.\n   *\n   * @param request - The request {@link ZonedApiListLbPrivateNetworksRequest}\n   * @returns A Promise of ListLbPrivateNetworksResponse\n   */\n  listLbPrivateNetworks = request => enrichForPagination('privateNetwork', this.pageOfListLbPrivateNetworks, request);\n\n  /**\n   * Attach a Load Balancer to a Private Network. Attach a specified Load\n   * Balancer to a specified Private Network, defining a static or DHCP\n   * configuration for the Load Balancer on the network.\n   *\n   * @param request - The request {@link ZonedApiAttachPrivateNetworkRequest}\n   * @returns A Promise of PrivateNetwork\n   */\n  attachPrivateNetwork = request => this.client.fetch({\n    body: JSON.stringify(marshalZonedApiAttachPrivateNetworkRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}/attach`\n  }, unmarshalPrivateNetwork$3);\n\n  /**\n   * Detach Load Balancer from Private Network. Detach a specified Load Balancer\n   * from a specified Private Network.\n   *\n   * @param request - The request {@link ZonedApiDetachPrivateNetworkRequest}\n   */\n  detachPrivateNetwork = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/lbs/${validatePathParam('lbId', request.lbId)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}/detach`\n  });\n}\n\n/**\n * Load balancer API.\n *\n * This API allows you to manage your load balancer service.\n */\nlet API$e = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n  pageOfListLbs = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['tags', request.tags])\n  }, unmarshalListLbsResponse);\n\n  /**\n   * List load balancers.\n   *\n   * @param request - The request {@link ListLbsRequest}\n   * @returns A Promise of ListLbsResponse\n   */\n  listLbs = (request = {}) => enrichForPagination('lbs', this.pageOfListLbs, request);\n\n  /**\n   * Create a load balancer.\n   *\n   * @param request - The request {@link CreateLbRequest}\n   * @returns A Promise of Lb\n   */\n  createLb = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateLbRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs`\n  }, unmarshalLb);\n\n  /**\n   * Get a load balancer.\n   *\n   * @param request - The request {@link GetLbRequest}\n   * @returns A Promise of Lb\n   */\n  getLb = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}`\n  }, unmarshalLb);\n\n  /**\n   * Waits for {@link Lb} to be in a final state.\n   *\n   * @param request - The request {@link GetLbRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Lb\n   */\n  waitForLb = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!LB_TRANSIENT_STATUSES.includes(res.status))), this.getLb, request, options);\n\n  /**\n   * Update a load balancer.\n   *\n   * @param request - The request {@link UpdateLbRequest}\n   * @returns A Promise of Lb\n   */\n  updateLb = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateLbRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}`\n  }, unmarshalLb);\n\n  /**\n   * Delete a load balancer.\n   *\n   * @param request - The request {@link DeleteLbRequest}\n   */\n  deleteLb = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}`,\n    urlParams: urlParams(['release_ip', request.releaseIp])\n  });\n\n  /**\n   * Migrate a load balancer.\n   *\n   * @param request - The request {@link MigrateLbRequest}\n   * @returns A Promise of Lb\n   */\n  migrateLb = request => this.client.fetch({\n    body: JSON.stringify(marshalMigrateLbRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}/migrate`\n  }, unmarshalLb);\n  pageOfListIPs = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/ips`,\n    urlParams: urlParams(['ip_address', request.ipAddress], ['ip_type', request.ipType], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListIpsResponse);\n\n  /**\n   * List IPs.\n   *\n   * @param request - The request {@link ListIPsRequest}\n   * @returns A Promise of ListIpsResponse\n   */\n  listIPs = (request = {}) => enrichForPagination('ips', this.pageOfListIPs, request);\n\n  /**\n   * Create an IP.\n   *\n   * @param request - The request {@link CreateIpRequest}\n   * @returns A Promise of Ip\n   */\n  createIp = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateIpRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/ips`\n  }, unmarshalIp);\n\n  /**\n   * Get an IP.\n   *\n   * @param request - The request {@link GetIpRequest}\n   * @returns A Promise of Ip\n   */\n  getIp = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/ips/${validatePathParam('ipId', request.ipId)}`\n  }, unmarshalIp);\n\n  /**\n   * Delete an IP.\n   *\n   * @param request - The request {@link ReleaseIpRequest}\n   */\n  releaseIp = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/ips/${validatePathParam('ipId', request.ipId)}`\n  });\n\n  /**\n   * Update an IP.\n   *\n   * @param request - The request {@link UpdateIpRequest}\n   * @returns A Promise of Ip\n   */\n  updateIp = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateIpRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PATCH',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/ips/${validatePathParam('ipId', request.ipId)}`\n  }, unmarshalIp);\n  pageOfListBackends = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}/backends`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListBackendsResponse);\n\n  /**\n   * List backends in a given load balancer.\n   *\n   * @param request - The request {@link ListBackendsRequest}\n   * @returns A Promise of ListBackendsResponse\n   */\n  listBackends = request => enrichForPagination('backends', this.pageOfListBackends, request);\n\n  /**\n   * Create a backend in a given load balancer.\n   *\n   * @param request - The request {@link CreateBackendRequest}\n   * @returns A Promise of Backend\n   */\n  createBackend = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateBackendRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}/backends`\n  }, unmarshalBackend);\n\n  /**\n   * Get a backend in a given load balancer.\n   *\n   * @param request - The request {@link GetBackendRequest}\n   * @returns A Promise of Backend\n   */\n  getBackend = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backends/${validatePathParam('backendId', request.backendId)}`\n  }, unmarshalBackend);\n\n  /**\n   * Update a backend in a given load balancer.\n   *\n   * @param request - The request {@link UpdateBackendRequest}\n   * @returns A Promise of Backend\n   */\n  updateBackend = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateBackendRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backends/${validatePathParam('backendId', request.backendId)}`\n  }, unmarshalBackend);\n\n  /**\n   * Delete a backend in a given load balancer.\n   *\n   * @param request - The request {@link DeleteBackendRequest}\n   */\n  deleteBackend = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backends/${validatePathParam('backendId', request.backendId)}`\n  });\n\n  /**\n   * Add a set of servers in a given backend.\n   *\n   * @param request - The request {@link AddBackendServersRequest}\n   * @returns A Promise of Backend\n   */\n  addBackendServers = request => this.client.fetch({\n    body: JSON.stringify(marshalAddBackendServersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backends/${validatePathParam('backendId', request.backendId)}/servers`\n  }, unmarshalBackend);\n\n  /**\n   * Remove a set of servers for a given backend.\n   *\n   * @param request - The request {@link RemoveBackendServersRequest}\n   * @returns A Promise of Backend\n   */\n  removeBackendServers = request => this.client.fetch({\n    body: JSON.stringify(marshalRemoveBackendServersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'DELETE',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backends/${validatePathParam('backendId', request.backendId)}/servers`\n  }, unmarshalBackend);\n\n  /**\n   * Define all servers in a given backend.\n   *\n   * @param request - The request {@link SetBackendServersRequest}\n   * @returns A Promise of Backend\n   */\n  setBackendServers = request => this.client.fetch({\n    body: JSON.stringify(marshalSetBackendServersRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backends/${validatePathParam('backendId', request.backendId)}/servers`\n  }, unmarshalBackend);\n\n  /**\n   * Update an health check for a given backend.\n   *\n   * @param request - The request {@link UpdateHealthCheckRequest}\n   * @returns A Promise of HealthCheck\n   */\n  updateHealthCheck = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateHealthCheckRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backends/${validatePathParam('backendId', request.backendId)}/healthcheck`\n  }, unmarshalHealthCheck);\n  pageOfListFrontends = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}/frontends`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListFrontendsResponse);\n\n  /**\n   * List frontends in a given load balancer.\n   *\n   * @param request - The request {@link ListFrontendsRequest}\n   * @returns A Promise of ListFrontendsResponse\n   */\n  listFrontends = request => enrichForPagination('frontends', this.pageOfListFrontends, request);\n\n  /**\n   * Create a frontend in a given load balancer.\n   *\n   * @param request - The request {@link CreateFrontendRequest}\n   * @returns A Promise of Frontend\n   */\n  createFrontend = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateFrontendRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}/frontends`\n  }, unmarshalFrontend);\n\n  /**\n   * Get a frontend.\n   *\n   * @param request - The request {@link GetFrontendRequest}\n   * @returns A Promise of Frontend\n   */\n  getFrontend = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/frontends/${validatePathParam('frontendId', request.frontendId)}`\n  }, unmarshalFrontend);\n\n  /**\n   * Update a frontend.\n   *\n   * @param request - The request {@link UpdateFrontendRequest}\n   * @returns A Promise of Frontend\n   */\n  updateFrontend = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateFrontendRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/frontends/${validatePathParam('frontendId', request.frontendId)}`\n  }, unmarshalFrontend);\n\n  /**\n   * Delete a frontend.\n   *\n   * @param request - The request {@link DeleteFrontendRequest}\n   */\n  deleteFrontend = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/frontends/${validatePathParam('frontendId', request.frontendId)}`\n  });\n  pageOfListRoutes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/routes`,\n    urlParams: urlParams(['frontend_id', request.frontendId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListRoutesResponse);\n\n  /**\n   * List all backend redirections.\n   *\n   * @param request - The request {@link ListRoutesRequest}\n   * @returns A Promise of ListRoutesResponse\n   */\n  listRoutes = (request = {}) => enrichForPagination('routes', this.pageOfListRoutes, request);\n\n  /**\n   * Create a backend redirection.\n   *\n   * @param request - The request {@link CreateRouteRequest}\n   * @returns A Promise of Route\n   */\n  createRoute = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateRouteRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/routes`\n  }, unmarshalRoute);\n\n  /**\n   * Get single backend redirection.\n   *\n   * @param request - The request {@link GetRouteRequest}\n   * @returns A Promise of Route\n   */\n  getRoute = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/routes/${validatePathParam('routeId', request.routeId)}`\n  }, unmarshalRoute);\n\n  /**\n   * Edit a backend redirection.\n   *\n   * @param request - The request {@link UpdateRouteRequest}\n   * @returns A Promise of Route\n   */\n  updateRoute = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateRouteRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/routes/${validatePathParam('routeId', request.routeId)}`\n  }, unmarshalRoute);\n\n  /**\n   * Delete a backend redirection.\n   *\n   * @param request - The request {@link DeleteRouteRequest}\n   */\n  deleteRoute = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/routes/${validatePathParam('routeId', request.routeId)}`\n  });\n\n  /**\n   * Get usage statistics of a given load balancer.\n   *\n   * @deprecated\n   * @param request - The request {@link GetLbStatsRequest}\n   * @returns A Promise of LbStats\n   */\n  getLbStats = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}/stats`,\n    urlParams: urlParams(['backend_id', request.backendId])\n  }, unmarshalLbStats);\n  pageOfListBackendStats = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}/backend-stats`,\n    urlParams: urlParams(['backend_id', request.backendId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListBackendStatsResponse);\n\n  /**\n   * List backend server statistics.\n   *\n   * @param request - The request {@link ListBackendStatsRequest}\n   * @returns A Promise of ListBackendStatsResponse\n   */\n  listBackendStats = request => enrichForPagination('backendServersStats', this.pageOfListBackendStats, request);\n  pageOfListAcls = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/frontends/${validatePathParam('frontendId', request.frontendId)}/acls`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListAclResponse);\n\n  /**\n   * List ACL for a given frontend.\n   *\n   * @param request - The request {@link ListAclsRequest}\n   * @returns A Promise of ListAclResponse\n   */\n  listAcls = request => enrichForPagination('acls', this.pageOfListAcls, request);\n\n  /**\n   * Create an ACL for a given frontend.\n   *\n   * @param request - The request {@link CreateAclRequest}\n   * @returns A Promise of Acl\n   */\n  createAcl = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateAclRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/frontends/${validatePathParam('frontendId', request.frontendId)}/acls`\n  }, unmarshalAcl);\n\n  /**\n   * Get an ACL.\n   *\n   * @param request - The request {@link GetAclRequest}\n   * @returns A Promise of Acl\n   */\n  getAcl = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/acls/${validatePathParam('aclId', request.aclId)}`\n  }, unmarshalAcl);\n\n  /**\n   * Update an ACL.\n   *\n   * @param request - The request {@link UpdateAclRequest}\n   * @returns A Promise of Acl\n   */\n  updateAcl = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateAclRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/acls/${validatePathParam('aclId', request.aclId)}`\n  }, unmarshalAcl);\n\n  /**\n   * Delete an ACL.\n   *\n   * @param request - The request {@link DeleteAclRequest}\n   */\n  deleteAcl = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/acls/${validatePathParam('aclId', request.aclId)}`\n  });\n\n  /**\n   * Create a TLS certificate. Generate a new TLS certificate using Let's\n   * Encrypt or import your certificate.\n   *\n   * @param request - The request {@link CreateCertificateRequest}\n   * @returns A Promise of Certificate\n   */\n  createCertificate = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateCertificateRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}/certificates`\n  }, unmarshalCertificate);\n  pageOfListCertificates = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}/certificates`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListCertificatesResponse);\n\n  /**\n   * List all TLS certificates on a given load balancer.\n   *\n   * @param request - The request {@link ListCertificatesRequest}\n   * @returns A Promise of ListCertificatesResponse\n   */\n  listCertificates = request => enrichForPagination('certificates', this.pageOfListCertificates, request);\n\n  /**\n   * Get a TLS certificate.\n   *\n   * @param request - The request {@link GetCertificateRequest}\n   * @returns A Promise of Certificate\n   */\n  getCertificate = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/certificates/${validatePathParam('certificateId', request.certificateId)}`\n  }, unmarshalCertificate);\n\n  /**\n   * Waits for {@link Certificate} to be in a final state.\n   *\n   * @param request - The request {@link GetCertificateRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Certificate\n   */\n  waitForCertificate = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!CERTIFICATE_TRANSIENT_STATUSES.includes(res.status))), this.getCertificate, request, options);\n\n  /**\n   * Update a TLS certificate.\n   *\n   * @param request - The request {@link UpdateCertificateRequest}\n   * @returns A Promise of Certificate\n   */\n  updateCertificate = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateCertificateRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/certificates/${validatePathParam('certificateId', request.certificateId)}`\n  }, unmarshalCertificate);\n\n  /**\n   * Delete a TLS certificate.\n   *\n   * @param request - The request {@link DeleteCertificateRequest}\n   */\n  deleteCertificate = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/certificates/${validatePathParam('certificateId', request.certificateId)}`\n  });\n  pageOfListLbTypes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lb-types`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListLbTypesResponse);\n\n  /**\n   * List all load balancer offer type.\n   *\n   * @param request - The request {@link ListLbTypesRequest}\n   * @returns A Promise of ListLbTypesResponse\n   */\n  listLbTypes = (request = {}) => enrichForPagination('lbTypes', this.pageOfListLbTypes, request);\n\n  /**\n   * Create a subscriber, webhook or email.\n   *\n   * @param request - The request {@link CreateSubscriberRequest}\n   * @returns A Promise of Subscriber\n   */\n  createSubscriber = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateSubscriberRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/subscribers`\n  }, unmarshalSubscriber);\n\n  /**\n   * Get a subscriber.\n   *\n   * @param request - The request {@link GetSubscriberRequest}\n   * @returns A Promise of Subscriber\n   */\n  getSubscriber = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/subscribers/${validatePathParam('subscriberId', request.subscriberId)}`\n  }, unmarshalSubscriber);\n  pageOfListSubscriber = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/subscribers`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListSubscriberResponse);\n\n  /**\n   * List all subscriber.\n   *\n   * @param request - The request {@link ListSubscriberRequest}\n   * @returns A Promise of ListSubscriberResponse\n   */\n  listSubscriber = (request = {}) => enrichForPagination('subscribers', this.pageOfListSubscriber, request);\n\n  /**\n   * Update a subscriber.\n   *\n   * @param request - The request {@link UpdateSubscriberRequest}\n   * @returns A Promise of Subscriber\n   */\n  updateSubscriber = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateSubscriberRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'PUT',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/subscribers/${validatePathParam('subscriberId', request.subscriberId)}`\n  }, unmarshalSubscriber);\n\n  /**\n   * Delete a subscriber.\n   *\n   * @param request - The request {@link DeleteSubscriberRequest}\n   */\n  deleteSubscriber = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lb/subscriber/${validatePathParam('subscriberId', request.subscriberId)}`\n  });\n\n  /**\n   * Subscribe a subscriber to a given load balancer.\n   *\n   * @param request - The request {@link SubscribeToLbRequest}\n   * @returns A Promise of Lb\n   */\n  subscribeToLb = request => this.client.fetch({\n    body: JSON.stringify(marshalSubscribeToLbRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lb/${validatePathParam('lbId', request.lbId)}/subscribe`\n  }, unmarshalLb);\n\n  /**\n   * Unsubscribe a subscriber from a given load balancer.\n   *\n   * @param request - The request {@link UnsubscribeFromLbRequest}\n   * @returns A Promise of Lb\n   */\n  unsubscribeFromLb = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lb/${validatePathParam('lbId', request.lbId)}/unsubscribe`\n  }, unmarshalLb);\n  pageOfListLbPrivateNetworks = request => this.client.fetch({\n    method: 'GET',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}/private-networks`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListLbPrivateNetworksResponse);\n\n  /**\n   * List attached private network of load balancer.\n   *\n   * @param request - The request {@link ListLbPrivateNetworksRequest}\n   * @returns A Promise of ListLbPrivateNetworksResponse\n   */\n  listLbPrivateNetworks = request => enrichForPagination('privateNetwork', this.pageOfListLbPrivateNetworks, request);\n\n  /**\n   * Add load balancer on instance private network.\n   *\n   * @param request - The request {@link AttachPrivateNetworkRequest}\n   * @returns A Promise of PrivateNetwork\n   */\n  attachPrivateNetwork = request => this.client.fetch({\n    body: JSON.stringify(marshalAttachPrivateNetworkRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}/attach`\n  }, unmarshalPrivateNetwork$3);\n\n  /**\n   * Remove load balancer of private network.\n   *\n   * @param request - The request {@link DetachPrivateNetworkRequest}\n   */\n  detachPrivateNetwork = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$e,\n    method: 'POST',\n    path: `/lb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/lbs/${validatePathParam('lbId', request.lbId)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}/detach`\n  });\n};\n\nclass LbV1UtilsAPI extends API$e {\n  /**\n   * Waits for all private networks of a load balancer to be in a final state.\n   *\n   * @param request - The request {@link WaitForLbPrivateNetworksRequest}\n   * @param options - The waiting options\n   * @returns A Promise of ListLbPrivateNetworksResponse\n   */\n  waitForLbPrivateNetworks = (request, options) => tryAtIntervals(async () => {\n    const value = await this.listLbPrivateNetworks({\n      lbId: request.lbId,\n      region: request.region\n    }).all().then(list => ({\n      privateNetwork: list,\n      totalCount: list.length\n    }));\n    return {\n      done: value.privateNetwork.find(elt => PRIVATE_NETWORK_TRANSIENT_STATUSES.includes(elt.status)) === undefined,\n      value\n    };\n  }, createExponentialBackoffStrategy(options?.minDelay ?? 1, options?.maxDelay ?? 30), options?.timeout);\n\n  /**\n   * Waits for all instances of a load balancer to be in a final state.\n   *\n   * @param request - The request {@link GetLbRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Lb\n   */\n  waitForLbInstances = (request, options) => tryAtIntervals(async () => {\n    const value = await this.getLb(request);\n    return {\n      done: !LB_TRANSIENT_STATUSES.includes(value.status) && value.instances.find(elt => INSTANCE_TRANSIENT_STATUSES$1.includes(elt.status)) === undefined,\n      value\n    };\n  }, createExponentialBackoffStrategy(options?.minDelay ?? 1, options?.maxDelay ?? 30), options?.timeout);\n}\nclass LbZonedV1UtilsAPI extends ZonedAPI {\n  /**\n   * Waits for all private networks of a (zoned) load balancer to be in a final\n   * state.\n   *\n   * @param request - The request {@link ZonedWaitForLbPrivateNetworksRequest}\n   * @param options - The waiting options\n   * @returns A Promise of ListLbPrivateNetworksResponse\n   */\n  waitForLbPrivateNetworks = (request, options) => tryAtIntervals(async () => {\n    const value = await this.listLbPrivateNetworks({\n      lbId: request.lbId,\n      zone: request.zone\n    }).all().then(list => ({\n      privateNetwork: list,\n      totalCount: list.length\n    }));\n    return {\n      done: value.privateNetwork.find(elt => PRIVATE_NETWORK_TRANSIENT_STATUSES.includes(elt.status)) === undefined,\n      value\n    };\n  }, createExponentialBackoffStrategy(options?.minDelay ?? 1, options?.maxDelay ?? 30), options?.timeout);\n\n  /**\n   * Waits for all instances of a (zoned) load balancer to be in a final state.\n   *\n   * @param request - The request {@link GetLbRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Lb\n   */\n  waitForLbInstances = (request, options) => tryAtIntervals(async () => {\n    const value = await this.getLb(request);\n    return {\n      done: !LB_TRANSIENT_STATUSES.includes(value.status) && value.instances.find(elt => INSTANCE_TRANSIENT_STATUSES$1.includes(elt.status)) === undefined,\n      value\n    };\n  }, createExponentialBackoffStrategy(options?.minDelay ?? 1, options?.maxDelay ?? 30), options?.timeout);\n}\n\nvar index$e = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: LbV1UtilsAPI,\n  CERTIFICATE_TRANSIENT_STATUSES: CERTIFICATE_TRANSIENT_STATUSES,\n  INSTANCE_TRANSIENT_STATUSES: INSTANCE_TRANSIENT_STATUSES$1,\n  LB_TRANSIENT_STATUSES: LB_TRANSIENT_STATUSES,\n  PRIVATE_NETWORK_TRANSIENT_STATUSES: PRIVATE_NETWORK_TRANSIENT_STATUSES,\n  ZonedAPI: LbZonedV1UtilsAPI\n});\n\nvar index$d = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1: index$e\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link DeploymentStatus}. */\nconst DEPLOYMENT_TRANSIENT_STATUSES = ['creating', 'deploying', 'deleting'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalEndpointPrivateNetworkDetails$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EndpointPrivateNetworkDetails' failed as data isn't a dictionary.`);\n  }\n  return {\n    privateNetworkId: data.private_network_id\n  };\n};\nconst unmarshalEndpointPublicAccessDetails = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EndpointPublicAccessDetails' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalEndpoint$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Endpoint' failed as data isn't a dictionary.`);\n  }\n  return {\n    disableAuth: data.disable_auth,\n    id: data.id,\n    privateNetwork: data.private_network ? unmarshalEndpointPrivateNetworkDetails$1(data.private_network) : undefined,\n    publicAccess: data.public_access ? unmarshalEndpointPublicAccessDetails(data.public_access) : undefined,\n    url: data.url\n  };\n};\nconst unmarshalDeployment = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Deployment' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    endpoints: unmarshalArrayOfObject(data.endpoints, unmarshalEndpoint$2),\n    errorMessage: data.error_message,\n    id: data.id,\n    maxSize: data.max_size,\n    minSize: data.min_size,\n    modelName: data.model_name,\n    name: data.name,\n    nodeType: data.node_type,\n    projectId: data.project_id,\n    region: data.region,\n    size: data.size,\n    status: data.status,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalModelS3Model = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ModelS3Model' failed as data isn't a dictionary.`);\n  }\n  return {\n    nodeType: data.node_type,\n    pythonDependencies: data.python_dependencies,\n    s3Url: data.s3_url,\n    tritonServerVersion: data.triton_server_version\n  };\n};\nconst unmarshalModel = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Model' failed as data isn't a dictionary.`);\n  }\n  return {\n    compatibleNodeTypes: data.compatible_node_types,\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    hasEula: data.has_eula,\n    id: data.id,\n    isPublic: data.is_public,\n    name: data.name,\n    projectId: data.project_id,\n    provider: data.provider,\n    quantizationLevel: data.quantization_level,\n    region: data.region,\n    s3Model: data.s3_model ? unmarshalModelS3Model(data.s3_model) : undefined,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalACLRule$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ACLRule' failed as data isn't a dictionary.`);\n  }\n  return {\n    description: data.description,\n    id: data.id,\n    ip: data.ip\n  };\n};\nconst unmarshalAddDeploymentACLRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AddDeploymentACLRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalACLRule$2)\n  };\n};\nconst unmarshalEula = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Eula' failed as data isn't a dictionary.`);\n  }\n  return {\n    content: data.content\n  };\n};\nconst unmarshalListDeploymentACLRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDeploymentACLRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalACLRule$2),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListDeploymentsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDeploymentsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    deployments: unmarshalArrayOfObject(data.deployments, unmarshalDeployment),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListModelsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListModelsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    models: unmarshalArrayOfObject(data.models, unmarshalModel),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalNodeType$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'NodeType' failed as data isn't a dictionary.`);\n  }\n  return {\n    beta: data.beta,\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    disabled: data.disabled,\n    gpus: data.gpus,\n    memory: data.memory,\n    name: data.name,\n    region: data.region,\n    stockStatus: data.stock_status,\n    updatedAt: unmarshalDate(data.updated_at),\n    vcpus: data.vcpus,\n    vram: data.vram\n  };\n};\nconst unmarshalListNodeTypesResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListNodeTypesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    nodeTypes: unmarshalArrayOfObject(data.node_types, unmarshalNodeType$2),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalSetDeploymentACLRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetDeploymentACLRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalACLRule$2)\n  };\n};\nconst marshalACLRuleRequest$1 = (request, defaults) => ({\n  description: request.description,\n  ip: request.ip\n});\nconst marshalAddDeploymentACLRulesRequest = (request, defaults) => ({\n  acls: request.acls !== undefined ? request.acls.map(elt => marshalACLRuleRequest$1(elt)) : undefined\n});\nconst marshalEndpointSpecPrivateNetwork$1 = (request, defaults) => ({\n  private_network_id: request.privateNetworkId\n});\nconst marshalEndpointSpecPublic = (request, defaults) => ({});\nconst marshalEndpointSpec$2 = (request, defaults) => ({\n  disable_auth: request.disableAuth,\n  ...resolveOneOf([{\n    param: 'public',\n    value: request.public !== undefined ? marshalEndpointSpecPublic(request.public) : undefined\n  }, {\n    param: 'private_network',\n    value: request.privateNetwork !== undefined ? marshalEndpointSpecPrivateNetwork$1(request.privateNetwork) : undefined\n  }])\n});\nconst marshalCreateDeploymentRequest = (request, defaults) => ({\n  accept_eula: request.acceptEula,\n  endpoints: request.endpoints.map(elt => marshalEndpointSpec$2(elt)),\n  max_size: request.maxSize,\n  min_size: request.minSize,\n  model_name: request.modelName,\n  name: request.name || randomName('llm'),\n  node_type: request.nodeType,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  tags: request.tags\n});\nconst marshalCreateEndpointRequest$1 = (request, defaults) => ({\n  deployment_id: request.deploymentId,\n  endpoint: marshalEndpointSpec$2(request.endpoint)\n});\nconst marshalSetDeploymentACLRulesRequest = (request, defaults) => ({\n  acls: request.acls !== undefined ? request.acls.map(elt => marshalACLRuleRequest$1(elt)) : undefined\n});\nconst marshalUpdateDeploymentRequest = (request, defaults) => ({\n  max_size: request.maxSize,\n  min_size: request.minSize,\n  name: request.name,\n  tags: request.tags\n});\nconst marshalUpdateEndpointRequest$1 = (request, defaults) => ({\n  disable_auth: request.disableAuth\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$d = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** LLM Inference API. */\nlet API$d = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par'];\n  pageOfListDeployments = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/deployments`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['tags', request.tags])\n  }, unmarshalListDeploymentsResponse);\n\n  /**\n   * List inference deployments. List all your inference deployments.\n   *\n   * @param request - The request {@link ListDeploymentsRequest}\n   * @returns A Promise of ListDeploymentsResponse\n   */\n  listDeployments = (request = {}) => enrichForPagination('deployments', this.pageOfListDeployments, request);\n\n  /**\n   * Get a deployment. Get the deployment for the given ID.\n   *\n   * @param request - The request {@link GetDeploymentRequest}\n   * @returns A Promise of Deployment\n   */\n  getDeployment = request => this.client.fetch({\n    method: 'GET',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/deployments/${validatePathParam('deploymentId', request.deploymentId)}`\n  }, unmarshalDeployment);\n\n  /**\n   * Waits for {@link Deployment} to be in a final state.\n   *\n   * @param request - The request {@link GetDeploymentRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Deployment\n   */\n  waitForDeployment = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!DEPLOYMENT_TRANSIENT_STATUSES.includes(res.status))), this.getDeployment, request, options);\n\n  /**\n   * Create a deployment. Create a new inference deployment related to a\n   * specific model.\n   *\n   * @param request - The request {@link CreateDeploymentRequest}\n   * @returns A Promise of Deployment\n   */\n  createDeployment = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateDeploymentRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$d,\n    method: 'POST',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/deployments`\n  }, unmarshalDeployment);\n\n  /**\n   * Update a deployment. Update an existing inference deployment.\n   *\n   * @param request - The request {@link UpdateDeploymentRequest}\n   * @returns A Promise of Deployment\n   */\n  updateDeployment = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateDeploymentRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$d,\n    method: 'PATCH',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/deployments/${validatePathParam('deploymentId', request.deploymentId)}`\n  }, unmarshalDeployment);\n\n  /**\n   * Delete a deployment. Delete an existing inference deployment.\n   *\n   * @param request - The request {@link DeleteDeploymentRequest}\n   * @returns A Promise of Deployment\n   */\n  deleteDeployment = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/deployments/${validatePathParam('deploymentId', request.deploymentId)}`\n  }, unmarshalDeployment);\n\n  /**\n   * Get the CA certificate. Get the CA certificate used for the deployment of\n   * private endpoints. The CA certificate will be returned as a PEM file.\n   *\n   * @param request - The request {@link GetDeploymentCertificateRequest}\n   * @returns A Promise of Blob\n   */\n  getDeploymentCertificate = request => this.client.fetch({\n    method: 'GET',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/deployments/${validatePathParam('deploymentId', request.deploymentId)}/certificate`,\n    urlParams: urlParams(['dl', 1]),\n    responseType: 'blob'\n  });\n\n  /**\n   * Create an endpoint. Create a new Endpoint related to a specific deployment.\n   *\n   * @param request - The request {@link CreateEndpointRequest}\n   * @returns A Promise of Endpoint\n   */\n  createEndpoint = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateEndpointRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$d,\n    method: 'POST',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/endpoints`\n  }, unmarshalEndpoint$2);\n\n  /**\n   * Update an endpoint. Update an existing Endpoint.\n   *\n   * @param request - The request {@link UpdateEndpointRequest}\n   * @returns A Promise of Endpoint\n   */\n  updateEndpoint = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateEndpointRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$d,\n    method: 'PATCH',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/endpoints/${validatePathParam('endpointId', request.endpointId)}`\n  }, unmarshalEndpoint$2);\n\n  /**\n   * Delete an endpoint. Delete an existing Endpoint.\n   *\n   * @param request - The request {@link DeleteEndpointRequest}\n   */\n  deleteEndpoint = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/endpoints/${validatePathParam('endpointId', request.endpointId)}`\n  });\n  pageOfListDeploymentACLRules = request => this.client.fetch({\n    method: 'GET',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/deployments/${validatePathParam('deploymentId', request.deploymentId)}/acls`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListDeploymentACLRulesResponse);\n\n  /**\n   * List your ACLs. List ACLs for a specific deployment.\n   *\n   * @param request - The request {@link ListDeploymentACLRulesRequest}\n   * @returns A Promise of ListDeploymentACLRulesResponse\n   */\n  listDeploymentACLRules = request => enrichForPagination('rules', this.pageOfListDeploymentACLRules, request);\n\n  /**\n   * Add new ACLs. Add new ACL rules for a specific deployment.\n   *\n   * @param request - The request {@link AddDeploymentACLRulesRequest}\n   * @returns A Promise of AddDeploymentACLRulesResponse\n   */\n  addDeploymentACLRules = request => this.client.fetch({\n    body: JSON.stringify(marshalAddDeploymentACLRulesRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$d,\n    method: 'POST',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/deployments/${validatePathParam('deploymentId', request.deploymentId)}/acls`\n  }, unmarshalAddDeploymentACLRulesResponse);\n\n  /**\n   * Set new ACL. Set new ACL rules for a specific deployment.\n   *\n   * @param request - The request {@link SetDeploymentACLRulesRequest}\n   * @returns A Promise of SetDeploymentACLRulesResponse\n   */\n  setDeploymentACLRules = request => this.client.fetch({\n    body: JSON.stringify(marshalSetDeploymentACLRulesRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$d,\n    method: 'PUT',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/deployments/${validatePathParam('deploymentId', request.deploymentId)}/acls`\n  }, unmarshalSetDeploymentACLRulesResponse);\n\n  /**\n   * Delete an exising ACL.\n   *\n   * @param request - The request {@link DeleteDeploymentACLRuleRequest}\n   */\n  deleteDeploymentACLRule = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/acls/${validatePathParam('aclId', request.aclId)}`\n  });\n  pageOfListModels = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/models`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['tags', request.tags])\n  }, unmarshalListModelsResponse);\n\n  /**\n   * List models. List all available LLM models.\n   *\n   * @param request - The request {@link ListModelsRequest}\n   * @returns A Promise of ListModelsResponse\n   */\n  listModels = (request = {}) => enrichForPagination('models', this.pageOfListModels, request);\n\n  /**\n   * Get a model. Get the model for the given ID.\n   *\n   * @param request - The request {@link GetModelRequest}\n   * @returns A Promise of Model\n   */\n  getModel = request => this.client.fetch({\n    method: 'GET',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/models/${validatePathParam('modelId', request.modelId)}`\n  }, unmarshalModel);\n  getModelEula = request => this.client.fetch({\n    method: 'GET',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/models/${validatePathParam('modelId', request.modelId)}/eula`\n  }, unmarshalEula);\n  pageOfListNodeTypes = request => this.client.fetch({\n    method: 'GET',\n    path: `/llm-inference/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/node-types`,\n    urlParams: urlParams(['include_disabled_types', request.includeDisabledTypes], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListNodeTypesResponse$2);\n\n  /**\n   * List available node types. List all available node types. By default, the\n   * node types returned in the list are ordered by creation date in ascending\n   * order, though this can be modified via the `order_by` field.\n   *\n   * @param request - The request {@link ListNodeTypesRequest}\n   * @returns A Promise of ListNodeTypesResponse\n   */\n  listNodeTypes = request => enrichForPagination('nodeTypes', this.pageOfListNodeTypes, request);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst CreateDeploymentRequest = {\n  maxSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 50\n  },\n  minSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 50\n  },\n  modelName: {\n    maxLength: 255,\n    minLength: 0,\n    pattern: /^[\\w-_]+\\/[\\w-_.]+(:[\\w]+)?$/\n  },\n  name: {\n    maxLength: 255,\n    minLength: 1,\n    pattern: /^[A-Za-z0-9-_]+$/\n  },\n  nodeType: {\n    maxLength: 64,\n    minLength: 1\n  }\n};\nconst ListDeploymentsRequest = {\n  name: {\n    maxLength: 255,\n    minLength: 1\n  }\n};\nconst ListModelsRequest = {\n  name: {\n    maxLength: 255,\n    minLength: 1\n  }\n};\nconst UpdateDeploymentRequest = {\n  maxSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 50\n  },\n  minSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 50\n  },\n  name: {\n    maxLength: 255,\n    minLength: 1\n  }\n};\n\nvar validationRules_gen$4 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CreateDeploymentRequest: CreateDeploymentRequest,\n  ListDeploymentsRequest: ListDeploymentsRequest,\n  ListModelsRequest: ListModelsRequest,\n  UpdateDeploymentRequest: UpdateDeploymentRequest\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$f = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$d,\n  DEPLOYMENT_TRANSIENT_STATUSES: DEPLOYMENT_TRANSIENT_STATUSES,\n  ValidationRules: validationRules_gen$4\n});\n\nvar index$c = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1beta1: index_gen$f\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalCategory = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Category' failed as data isn't a dictionary.`);\n  }\n  return {\n    description: data.description,\n    id: data.id,\n    name: data.name\n  };\n};\nconst unmarshalImage$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Image' failed as data isn't a dictionary.`);\n  }\n  return {\n    categories: data.categories,\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    id: data.id,\n    label: data.label,\n    logo: data.logo,\n    name: data.name,\n    updatedAt: unmarshalDate(data.updated_at),\n    validUntil: unmarshalDate(data.valid_until)\n  };\n};\nconst unmarshalLocalImage = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'LocalImage' failed as data isn't a dictionary.`);\n  }\n  return {\n    arch: data.arch,\n    compatibleCommercialTypes: data.compatible_commercial_types,\n    id: data.id,\n    label: data.label,\n    type: data.type,\n    zone: data.zone\n  };\n};\nconst unmarshalVersion = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Version' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    name: data.name,\n    publishedAt: unmarshalDate(data.published_at),\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalListCategoriesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListCategoriesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    categories: unmarshalArrayOfObject(data.categories, unmarshalCategory),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListImagesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListImagesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    images: unmarshalArrayOfObject(data.images, unmarshalImage$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListLocalImagesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListLocalImagesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    localImages: unmarshalArrayOfObject(data.local_images, unmarshalLocalImage),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListVersionsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListVersionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    versions: unmarshalArrayOfObject(data.versions, unmarshalVersion)\n  };\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n/** Marketplace API. */\nlet API$c = class API extends API$z {\n  pageOfListImages = request => this.client.fetch({\n    method: 'GET',\n    path: `/marketplace/v2/images`,\n    urlParams: urlParams(['arch', request.arch], ['category', request.category], ['include_eol', request.includeEol], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListImagesResponse$1);\n\n  /**\n   * List marketplace images. List all available images on the marketplace,\n   * their UUID, CPU architecture and description.\n   *\n   * @param request - The request {@link ListImagesRequest}\n   * @returns A Promise of ListImagesResponse\n   */\n  listImages = request => enrichForPagination('images', this.pageOfListImages, request);\n\n  /**\n   * Get a specific marketplace image. Get detailed information about a\n   * marketplace image, specified by its `image_id` (UUID format).\n   *\n   * @param request - The request {@link GetImageRequest}\n   * @returns A Promise of Image\n   */\n  getImage = request => this.client.fetch({\n    method: 'GET',\n    path: `/marketplace/v2/images/${validatePathParam('imageId', request.imageId)}`\n  }, unmarshalImage$1);\n  pageOfListVersions = request => this.client.fetch({\n    method: 'GET',\n    path: `/marketplace/v2/versions`,\n    urlParams: urlParams(['image_id', request.imageId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListVersionsResponse);\n\n  /**\n   * List versions of an Image. Get a list of all available version of an image,\n   * specified by its `image_id` (UUID format).\n   *\n   * @param request - The request {@link ListVersionsRequest}\n   * @returns A Promise of ListVersionsResponse\n   */\n  listVersions = request => enrichForPagination('versions', this.pageOfListVersions, request);\n\n  /**\n   * Get a specific image version. Get information such as the name, creation\n   * date, last update and published date for an image version specified by its\n   * `version_id` (UUID format).\n   *\n   * @param request - The request {@link GetVersionRequest}\n   * @returns A Promise of Version\n   */\n  getVersion = request => this.client.fetch({\n    method: 'GET',\n    path: `/marketplace/v2/versions/${validatePathParam('versionId', request.versionId)}`\n  }, unmarshalVersion);\n  pageOfListLocalImages = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/marketplace/v2/local-images`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['type', request.type], ['zone', request.zone], ...Object.entries(resolveOneOf([{\n      param: 'image_id',\n      value: request.imageId\n    }, {\n      param: 'version_id',\n      value: request.versionId\n    }, {\n      param: 'image_label',\n      value: request.imageLabel\n    }])))\n  }, unmarshalListLocalImagesResponse);\n\n  /**\n   * List local images from a specific image or version. List information about\n   * local images in a specific Availability Zone, specified by its `image_id`\n   * (UUID format), `version_id` (UUID format) or `image_label`. Only one of\n   * these three parameters may be set.\n   *\n   * @param request - The request {@link ListLocalImagesRequest}\n   * @returns A Promise of ListLocalImagesResponse\n   */\n  listLocalImages = (request = {}) => enrichForPagination('localImages', this.pageOfListLocalImages, request);\n\n  /**\n   * Get a specific local image by ID. Get detailed information about a local\n   * image, including compatible commercial types, supported architecture,\n   * labels and the Availability Zone of the image, specified by its\n   * `local_image_id` (UUID format).\n   *\n   * @param request - The request {@link GetLocalImageRequest}\n   * @returns A Promise of LocalImage\n   */\n  getLocalImage = request => this.client.fetch({\n    method: 'GET',\n    path: `/marketplace/v2/local-images/${validatePathParam('localImageId', request.localImageId)}`\n  }, unmarshalLocalImage);\n  pageOfListCategories = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/marketplace/v2/categories`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListCategoriesResponse);\n\n  /**\n   * List existing image categories. Get a list of all existing categories. The\n   * output can be paginated.\n   *\n   * @param request - The request {@link ListCategoriesRequest}\n   * @returns A Promise of ListCategoriesResponse\n   */\n  listCategories = (request = {}) => enrichForPagination('categories', this.pageOfListCategories, request);\n\n  /**\n   * Get a specific category. Get information about a specific category of the\n   * marketplace catalog, specified by its `category_id` (UUID format).\n   *\n   * @param request - The request {@link GetCategoryRequest}\n   * @returns A Promise of Category\n   */\n  getCategory = request => this.client.fetch({\n    method: 'GET',\n    path: `/marketplace/v2/categories/${validatePathParam('categoryId', request.categoryId)}`\n  }, unmarshalCategory);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$e = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$c\n});\n\nvar index$b = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v2: index_gen$e\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalNatsAccount = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'NatsAccount' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    endpoint: data.endpoint,\n    id: data.id,\n    name: data.name,\n    projectId: data.project_id,\n    region: data.region,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalFile = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'File' failed as data isn't a dictionary.`);\n  }\n  return {\n    content: data.content,\n    name: data.name\n  };\n};\nconst unmarshalNatsCredentials = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'NatsCredentials' failed as data isn't a dictionary.`);\n  }\n  return {\n    checksum: data.checksum,\n    createdAt: unmarshalDate(data.created_at),\n    credentials: data.credentials ? unmarshalFile(data.credentials) : undefined,\n    id: data.id,\n    name: data.name,\n    natsAccountId: data.nats_account_id,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalSnsPermissions = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SnsPermissions' failed as data isn't a dictionary.`);\n  }\n  return {\n    canManage: data.can_manage,\n    canPublish: data.can_publish,\n    canReceive: data.can_receive\n  };\n};\nconst unmarshalSnsCredentials = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SnsCredentials' failed as data isn't a dictionary.`);\n  }\n  return {\n    accessKey: data.access_key,\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    name: data.name,\n    permissions: data.permissions ? unmarshalSnsPermissions(data.permissions) : undefined,\n    projectId: data.project_id,\n    region: data.region,\n    secretChecksum: data.secret_checksum,\n    secretKey: data.secret_key,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalSqsPermissions = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SqsPermissions' failed as data isn't a dictionary.`);\n  }\n  return {\n    canManage: data.can_manage,\n    canPublish: data.can_publish,\n    canReceive: data.can_receive\n  };\n};\nconst unmarshalSqsCredentials = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SqsCredentials' failed as data isn't a dictionary.`);\n  }\n  return {\n    accessKey: data.access_key,\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    name: data.name,\n    permissions: data.permissions ? unmarshalSqsPermissions(data.permissions) : undefined,\n    projectId: data.project_id,\n    region: data.region,\n    secretChecksum: data.secret_checksum,\n    secretKey: data.secret_key,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalListNatsAccountsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListNatsAccountsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    natsAccounts: unmarshalArrayOfObject(data.nats_accounts, unmarshalNatsAccount),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListNatsCredentialsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListNatsCredentialsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    natsCredentials: unmarshalArrayOfObject(data.nats_credentials, unmarshalNatsCredentials),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSnsCredentialsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSnsCredentialsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    snsCredentials: unmarshalArrayOfObject(data.sns_credentials, unmarshalSnsCredentials),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSqsCredentialsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSqsCredentialsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    sqsCredentials: unmarshalArrayOfObject(data.sqs_credentials, unmarshalSqsCredentials),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalSnsInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SnsInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    projectId: data.project_id,\n    region: data.region,\n    snsEndpointUrl: data.sns_endpoint_url,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalSqsInfo = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SqsInfo' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    projectId: data.project_id,\n    region: data.region,\n    sqsEndpointUrl: data.sqs_endpoint_url,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst marshalNatsApiCreateNatsAccountRequest = (request, defaults) => ({\n  name: request.name || randomName('mnq'),\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalNatsApiCreateNatsCredentialsRequest = (request, defaults) => ({\n  name: request.name || randomName('mnq'),\n  nats_account_id: request.natsAccountId\n});\nconst marshalNatsApiUpdateNatsAccountRequest = (request, defaults) => ({\n  name: request.name\n});\nconst marshalSnsApiActivateSnsRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalSnsPermissions = (request, defaults) => ({\n  can_manage: request.canManage,\n  can_publish: request.canPublish,\n  can_receive: request.canReceive\n});\nconst marshalSnsApiCreateSnsCredentialsRequest = (request, defaults) => ({\n  name: request.name || randomName('mnq_sns'),\n  permissions: request.permissions !== undefined ? marshalSnsPermissions(request.permissions) : undefined,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalSnsApiDeactivateSnsRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalSnsApiUpdateSnsCredentialsRequest = (request, defaults) => ({\n  name: request.name,\n  permissions: request.permissions !== undefined ? marshalSnsPermissions(request.permissions) : undefined\n});\nconst marshalSqsApiActivateSqsRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalSqsPermissions = (request, defaults) => ({\n  can_manage: request.canManage,\n  can_publish: request.canPublish,\n  can_receive: request.canReceive\n});\nconst marshalSqsApiCreateSqsCredentialsRequest = (request, defaults) => ({\n  name: request.name || randomName('mnq_sqs'),\n  permissions: request.permissions !== undefined ? marshalSqsPermissions(request.permissions) : undefined,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalSqsApiDeactivateSqsRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalSqsApiUpdateSqsCredentialsRequest = (request, defaults) => ({\n  name: request.name,\n  permissions: request.permissions !== undefined ? marshalSqsPermissions(request.permissions) : undefined\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$c = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * Messaging and Queuing NATS API.\n *\n * This API allows you to manage Scaleway Messaging and Queueing NATS accounts.\n */\nclass NatsAPI extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams'];\n\n  /**\n   * Create a NATS account. Create a NATS account associated with a Project.\n   *\n   * @param request - The request {@link NatsApiCreateNatsAccountRequest}\n   * @returns A Promise of NatsAccount\n   */\n  createNatsAccount = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalNatsApiCreateNatsAccountRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$c,\n    method: 'POST',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/nats-accounts`\n  }, unmarshalNatsAccount);\n\n  /**\n   * Delete a NATS account. Delete a NATS account, specified by its NATS account\n   * ID. Note that deleting a NATS account is irreversible, and any credentials,\n   * streams, consumer and stored messages belonging to this NATS account will\n   * also be deleted.\n   *\n   * @param request - The request {@link NatsApiDeleteNatsAccountRequest}\n   */\n  deleteNatsAccount = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/nats-accounts/${validatePathParam('natsAccountId', request.natsAccountId)}`\n  });\n\n  /**\n   * Update the name of a NATS account. Update the name of a NATS account,\n   * specified by its NATS account ID.\n   *\n   * @param request - The request {@link NatsApiUpdateNatsAccountRequest}\n   * @returns A Promise of NatsAccount\n   */\n  updateNatsAccount = request => this.client.fetch({\n    body: JSON.stringify(marshalNatsApiUpdateNatsAccountRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$c,\n    method: 'PATCH',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/nats-accounts/${validatePathParam('natsAccountId', request.natsAccountId)}`\n  }, unmarshalNatsAccount);\n\n  /**\n   * Get a NATS account. Retrieve information about an existing NATS account\n   * identified by its NATS account ID. Its full details, including name and\n   * endpoint, are returned in the response.\n   *\n   * @param request - The request {@link NatsApiGetNatsAccountRequest}\n   * @returns A Promise of NatsAccount\n   */\n  getNatsAccount = request => this.client.fetch({\n    method: 'GET',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/nats-accounts/${validatePathParam('natsAccountId', request.natsAccountId)}`\n  }, unmarshalNatsAccount);\n  pageOfListNatsAccounts = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/nats-accounts`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListNatsAccountsResponse);\n\n  /**\n   * List NATS accounts. List all NATS accounts in the specified region, for a\n   * Scaleway Organization or Project. By default, the NATS accounts returned in\n   * the list are ordered by creation date in ascending order, though this can\n   * be modified via the `order_by` field.\n   *\n   * @param request - The request {@link NatsApiListNatsAccountsRequest}\n   * @returns A Promise of ListNatsAccountsResponse\n   */\n  listNatsAccounts = (request = {}) => enrichForPagination('natsAccounts', this.pageOfListNatsAccounts, request);\n\n  /**\n   * Create NATS credentials. Create a set of credentials for a NATS account,\n   * specified by its NATS account ID.\n   *\n   * @param request - The request {@link NatsApiCreateNatsCredentialsRequest}\n   * @returns A Promise of NatsCredentials\n   */\n  createNatsCredentials = request => this.client.fetch({\n    body: JSON.stringify(marshalNatsApiCreateNatsCredentialsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$c,\n    method: 'POST',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/nats-credentials`\n  }, unmarshalNatsCredentials);\n\n  /**\n   * Delete NATS credentials. Delete a set of credentials, specified by their\n   * credentials ID. Deleting credentials is irreversible and cannot be undone.\n   * The credentials can no longer be used to access the NATS account, and\n   * active connections using this credentials will be closed.\n   *\n   * @param request - The request {@link NatsApiDeleteNatsCredentialsRequest}\n   */\n  deleteNatsCredentials = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/nats-credentials/${validatePathParam('natsCredentialsId', request.natsCredentialsId)}`\n  });\n\n  /**\n   * Get NATS credentials. Retrieve an existing set of credentials, identified\n   * by the `nats_credentials_id`. The credentials themselves are NOT returned,\n   * only their metadata (NATS account ID, credentials name, etc), are returned\n   * in the response.\n   *\n   * @param request - The request {@link NatsApiGetNatsCredentialsRequest}\n   * @returns A Promise of NatsCredentials\n   */\n  getNatsCredentials = request => this.client.fetch({\n    method: 'GET',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/nats-credentials/${validatePathParam('natsCredentialsId', request.natsCredentialsId)}`\n  }, unmarshalNatsCredentials);\n  pageOfListNatsCredentials = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/nats-credentials`,\n    urlParams: urlParams(['nats_account_id', request.natsAccountId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListNatsCredentialsResponse);\n\n  /**\n   * List NATS credentials. List existing credentials in the specified NATS\n   * account. The response contains only the metadata for the credentials, not\n   * the credentials themselves, which are only returned after a **Create\n   * Credentials** call.\n   *\n   * @param request - The request {@link NatsApiListNatsCredentialsRequest}\n   * @returns A Promise of ListNatsCredentialsResponse\n   */\n  listNatsCredentials = (request = {}) => enrichForPagination('natsCredentials', this.pageOfListNatsCredentials, request);\n}\n\n/**\n * Messaging and Queuing SNS API.\n *\n * This API allows you to manage Scaleway Messaging and Queueing SNS brokers.\n */\nclass SnsAPI extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams'];\n\n  /**\n   * Activate SNS. Activate SNS for the specified Project ID. SNS must be\n   * activated before any usage. Activating SNS does not trigger any billing,\n   * and you can deactivate at any time.\n   *\n   * @param request - The request {@link SnsApiActivateSnsRequest}\n   * @returns A Promise of SnsInfo\n   */\n  activateSns = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalSnsApiActivateSnsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$c,\n    method: 'POST',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/activate-sns`\n  }, unmarshalSnsInfo);\n\n  /**\n   * Get SNS info. Retrieve the SNS information of the specified Project ID.\n   * Informations include the activation status and the SNS API endpoint URL.\n   *\n   * @param request - The request {@link SnsApiGetSnsInfoRequest}\n   * @returns A Promise of SnsInfo\n   */\n  getSnsInfo = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/sns-info`,\n    urlParams: urlParams(['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalSnsInfo);\n\n  /**\n   * Deactivate SNS. Deactivate SNS for the specified Project ID.You must delete\n   * all topics and credentials before this call or you need to set the\n   * force_delete parameter.\n   *\n   * @param request - The request {@link SnsApiDeactivateSnsRequest}\n   * @returns A Promise of SnsInfo\n   */\n  deactivateSns = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalSnsApiDeactivateSnsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$c,\n    method: 'POST',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/deactivate-sns`\n  }, unmarshalSnsInfo);\n\n  /**\n   * Create SNS credentials. Create a set of credentials for SNS, specified by a\n   * Project ID. Credentials give the bearer access to topics, and the level of\n   * permissions can be defined granularly.\n   *\n   * @param request - The request {@link SnsApiCreateSnsCredentialsRequest}\n   * @returns A Promise of SnsCredentials\n   */\n  createSnsCredentials = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalSnsApiCreateSnsCredentialsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$c,\n    method: 'POST',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/sns-credentials`\n  }, unmarshalSnsCredentials);\n\n  /**\n   * Delete SNS credentials. Delete a set of SNS credentials, specified by their\n   * credentials ID. Deleting credentials is irreversible and cannot be undone.\n   * The credentials can then no longer be used to access SNS.\n   *\n   * @param request - The request {@link SnsApiDeleteSnsCredentialsRequest}\n   */\n  deleteSnsCredentials = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/sns-credentials/${validatePathParam('snsCredentialsId', request.snsCredentialsId)}`\n  });\n\n  /**\n   * Update SNS credentials. Update a set of SNS credentials. You can update the\n   * credentials' name, or their permissions.\n   *\n   * @param request - The request {@link SnsApiUpdateSnsCredentialsRequest}\n   * @returns A Promise of SnsCredentials\n   */\n  updateSnsCredentials = request => this.client.fetch({\n    body: JSON.stringify(marshalSnsApiUpdateSnsCredentialsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$c,\n    method: 'PATCH',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/sns-credentials/${validatePathParam('snsCredentialsId', request.snsCredentialsId)}`\n  }, unmarshalSnsCredentials);\n\n  /**\n   * Get SNS credentials. Retrieve an existing set of credentials, identified by\n   * the `credentials_id`. The credentials themselves, as well as their metadata\n   * (name, project ID etc), are returned in the response.\n   *\n   * @param request - The request {@link SnsApiGetSnsCredentialsRequest}\n   * @returns A Promise of SnsCredentials\n   */\n  getSnsCredentials = request => this.client.fetch({\n    method: 'GET',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/sns-credentials/${validatePathParam('snsCredentialsId', request.snsCredentialsId)}`\n  }, unmarshalSnsCredentials);\n  pageOfListSnsCredentials = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/sns-credentials`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListSnsCredentialsResponse);\n\n  /**\n   * List SNS credentials. List existing SNS credentials in the specified\n   * region. The response contains only the metadata for the credentials, not\n   * the credentials themselves.\n   *\n   * @param request - The request {@link SnsApiListSnsCredentialsRequest}\n   * @returns A Promise of ListSnsCredentialsResponse\n   */\n  listSnsCredentials = (request = {}) => enrichForPagination('snsCredentials', this.pageOfListSnsCredentials, request);\n}\n\n/**\n * Messaging and Queuing SQS API.\n *\n * This API allows you to manage Scaleway Messaging and Queueing SQS brokers.\n */\nclass SqsAPI extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams'];\n\n  /**\n   * Activate SQS. Activate SQS for the specified Project ID. SQS must be\n   * activated before any usage such as creating credentials and queues.\n   * Activating SQS does not trigger any billing, and you can deactivate at any\n   * time.\n   *\n   * @param request - The request {@link SqsApiActivateSqsRequest}\n   * @returns A Promise of SqsInfo\n   */\n  activateSqs = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalSqsApiActivateSqsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$c,\n    method: 'POST',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/activate-sqs`\n  }, unmarshalSqsInfo);\n\n  /**\n   * Get SQS info. Retrieve the SQS information of the specified Project ID.\n   * Informations include the activation status and the SQS API endpoint URL.\n   *\n   * @param request - The request {@link SqsApiGetSqsInfoRequest}\n   * @returns A Promise of SqsInfo\n   */\n  getSqsInfo = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/sqs-info`,\n    urlParams: urlParams(['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalSqsInfo);\n\n  /**\n   * Deactivate SQS. Deactivate SQS for the specified Project ID. You must\n   * delete all queues and credentials before this call or you need to set the\n   * force_delete parameter.\n   *\n   * @param request - The request {@link SqsApiDeactivateSqsRequest}\n   * @returns A Promise of SqsInfo\n   */\n  deactivateSqs = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalSqsApiDeactivateSqsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$c,\n    method: 'POST',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/deactivate-sqs`\n  }, unmarshalSqsInfo);\n\n  /**\n   * Create SQS credentials. Create a set of credentials for SQS, specified by a\n   * Project ID. Credentials give the bearer access to queues, and the level of\n   * permissions can be defined granularly.\n   *\n   * @param request - The request {@link SqsApiCreateSqsCredentialsRequest}\n   * @returns A Promise of SqsCredentials\n   */\n  createSqsCredentials = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalSqsApiCreateSqsCredentialsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$c,\n    method: 'POST',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/sqs-credentials`\n  }, unmarshalSqsCredentials);\n\n  /**\n   * Delete SQS credentials. Delete a set of SQS credentials, specified by their\n   * credentials ID. Deleting credentials is irreversible and cannot be undone.\n   * The credentials can then no longer be used to access SQS.\n   *\n   * @param request - The request {@link SqsApiDeleteSqsCredentialsRequest}\n   */\n  deleteSqsCredentials = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/sqs-credentials/${validatePathParam('sqsCredentialsId', request.sqsCredentialsId)}`\n  });\n\n  /**\n   * Update SQS credentials. Update a set of SQS credentials. You can update the\n   * credentials' name, or their permissions.\n   *\n   * @param request - The request {@link SqsApiUpdateSqsCredentialsRequest}\n   * @returns A Promise of SqsCredentials\n   */\n  updateSqsCredentials = request => this.client.fetch({\n    body: JSON.stringify(marshalSqsApiUpdateSqsCredentialsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$c,\n    method: 'PATCH',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/sqs-credentials/${validatePathParam('sqsCredentialsId', request.sqsCredentialsId)}`\n  }, unmarshalSqsCredentials);\n\n  /**\n   * Get SQS credentials. Retrieve an existing set of credentials, identified by\n   * the `credentials_id`. The credentials themselves, as well as their metadata\n   * (name, project ID etc), are returned in the response.\n   *\n   * @param request - The request {@link SqsApiGetSqsCredentialsRequest}\n   * @returns A Promise of SqsCredentials\n   */\n  getSqsCredentials = request => this.client.fetch({\n    method: 'GET',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/sqs-credentials/${validatePathParam('sqsCredentialsId', request.sqsCredentialsId)}`\n  }, unmarshalSqsCredentials);\n  pageOfListSqsCredentials = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/mnq/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/sqs-credentials`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListSqsCredentialsResponse);\n\n  /**\n   * List SQS credentials. List existing SQS credentials in the specified\n   * region. The response contains only the metadata for the credentials, not\n   * the credentials themselves.\n   *\n   * @param request - The request {@link SqsApiListSqsCredentialsRequest}\n   * @returns A Promise of ListSqsCredentialsResponse\n   */\n  listSqsCredentials = (request = {}) => enrichForPagination('sqsCredentials', this.pageOfListSqsCredentials, request);\n}\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst NatsAccount = {\n  name: {\n    maxLength: 64,\n    minLength: 1\n  }\n};\nconst NatsApiCreateNatsAccountRequest = {\n  name: {\n    maxLength: 64,\n    minLength: 1\n  }\n};\nconst NatsApiCreateNatsCredentialsRequest = {\n  name: {\n    maxLength: 500,\n    minLength: 1\n  }\n};\nconst NatsApiUpdateNatsAccountRequest = {\n  name: {\n    maxLength: 64,\n    minLength: 1\n  }\n};\nconst NatsCredentials = {\n  name: {\n    maxLength: 500,\n    minLength: 1\n  }\n};\nconst SnsApiCreateSnsCredentialsRequest = {\n  name: {\n    maxLength: 500,\n    minLength: 1\n  }\n};\nconst SnsApiUpdateSnsCredentialsRequest = {\n  name: {\n    maxLength: 500,\n    minLength: 1\n  }\n};\nconst SnsCredentials = {\n  accessKey: {\n    minLength: 1\n  },\n  name: {\n    maxLength: 500,\n    minLength: 1\n  }\n};\nconst SqsApiCreateSqsCredentialsRequest = {\n  name: {\n    maxLength: 500,\n    minLength: 1\n  }\n};\nconst SqsApiUpdateSqsCredentialsRequest = {\n  name: {\n    maxLength: 500,\n    minLength: 1\n  }\n};\nconst SqsCredentials = {\n  accessKey: {\n    minLength: 1\n  },\n  name: {\n    maxLength: 500,\n    minLength: 1\n  }\n};\n\nvar validationRules_gen$3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  NatsAccount: NatsAccount,\n  NatsApiCreateNatsAccountRequest: NatsApiCreateNatsAccountRequest,\n  NatsApiCreateNatsCredentialsRequest: NatsApiCreateNatsCredentialsRequest,\n  NatsApiUpdateNatsAccountRequest: NatsApiUpdateNatsAccountRequest,\n  NatsCredentials: NatsCredentials,\n  SnsApiCreateSnsCredentialsRequest: SnsApiCreateSnsCredentialsRequest,\n  SnsApiUpdateSnsCredentialsRequest: SnsApiUpdateSnsCredentialsRequest,\n  SnsCredentials: SnsCredentials,\n  SqsApiCreateSqsCredentialsRequest: SqsApiCreateSqsCredentialsRequest,\n  SqsApiUpdateSqsCredentialsRequest: SqsApiUpdateSqsCredentialsRequest,\n  SqsCredentials: SqsCredentials\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$d = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  NatsAPI: NatsAPI,\n  SnsAPI: SnsAPI,\n  SqsAPI: SqsAPI,\n  ValidationRules: validationRules_gen$3\n});\n\nvar index$a = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1beta1: index_gen$d\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link DatabaseBackupStatus}. */\nconst DATABASE_BACKUP_TRANSIENT_STATUSES = ['creating', 'restoring', 'deleting', 'exporting'];\n\n/** Lists transient statutes of the enum {@link InstanceLogStatus}. */\nconst INSTANCE_LOG_TRANSIENT_STATUSES = ['creating'];\n\n/** Lists transient statutes of the enum {@link InstanceStatus}. */\nconst INSTANCE_TRANSIENT_STATUSES = ['provisioning', 'configuring', 'deleting', 'autohealing', 'initializing', 'backuping', 'snapshotting', 'restarting'];\n\n/** Lists transient statutes of the enum {@link MaintenanceStatus}. */\nconst MAINTENANCE_TRANSIENT_STATUSES = ['ongoing'];\n\n/** Lists transient statutes of the enum {@link ReadReplicaStatus}. */\nconst READ_REPLICA_TRANSIENT_STATUSES = ['provisioning', 'initializing', 'deleting', 'configuring', 'promoting'];\n\n/** Lists transient statutes of the enum {@link SnapshotStatus}. */\nconst SNAPSHOT_TRANSIENT_STATUSES = ['creating', 'restoring', 'deleting'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalEndpointDirectAccessDetails = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EndpointDirectAccessDetails' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalEndpointLoadBalancerDetails = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EndpointLoadBalancerDetails' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalEndpointPrivateNetworkDetails = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EndpointPrivateNetworkDetails' failed as data isn't a dictionary.`);\n  }\n  return {\n    privateNetworkId: data.private_network_id,\n    serviceIp: data.service_ip,\n    zone: data.zone\n  };\n};\nconst unmarshalEndpoint$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Endpoint' failed as data isn't a dictionary.`);\n  }\n  return {\n    directAccess: data.direct_access ? unmarshalEndpointDirectAccessDetails(data.direct_access) : undefined,\n    hostname: data.hostname,\n    id: data.id,\n    ip: data.ip,\n    loadBalancer: data.load_balancer ? unmarshalEndpointLoadBalancerDetails(data.load_balancer) : undefined,\n    name: data.name,\n    port: data.port,\n    privateNetwork: data.private_network ? unmarshalEndpointPrivateNetworkDetails(data.private_network) : undefined\n  };\n};\nconst unmarshalMaintenance = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Maintenance' failed as data isn't a dictionary.`);\n  }\n  return {\n    closedAt: unmarshalDate(data.closed_at),\n    forcedAt: unmarshalDate(data.forced_at),\n    reason: data.reason,\n    startsAt: unmarshalDate(data.starts_at),\n    status: data.status,\n    stopsAt: unmarshalDate(data.stops_at)\n  };\n};\nconst unmarshalReadReplica = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ReadReplica' failed as data isn't a dictionary.`);\n  }\n  return {\n    endpoints: unmarshalArrayOfObject(data.endpoints, unmarshalEndpoint$1),\n    id: data.id,\n    instanceId: data.instance_id,\n    region: data.region,\n    sameZone: data.same_zone,\n    status: data.status\n  };\n};\nconst unmarshalDatabaseBackup$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DatabaseBackup' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    databaseName: data.database_name,\n    downloadUrl: data.download_url,\n    downloadUrlExpiresAt: unmarshalDate(data.download_url_expires_at),\n    expiresAt: unmarshalDate(data.expires_at),\n    id: data.id,\n    instanceId: data.instance_id,\n    instanceName: data.instance_name,\n    name: data.name,\n    region: data.region,\n    sameRegion: data.same_region,\n    size: data.size,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalDatabase$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Database' failed as data isn't a dictionary.`);\n  }\n  return {\n    managed: data.managed,\n    name: data.name,\n    owner: data.owner,\n    size: data.size\n  };\n};\nconst unmarshalInstanceLog = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'InstanceLog' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    downloadUrl: data.download_url,\n    expiresAt: unmarshalDate(data.expires_at),\n    id: data.id,\n    nodeName: data.node_name,\n    region: data.region,\n    status: data.status\n  };\n};\nconst unmarshalBackupSchedule = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'BackupSchedule' failed as data isn't a dictionary.`);\n  }\n  return {\n    disabled: data.disabled,\n    frequency: data.frequency,\n    nextRunAt: unmarshalDate(data.next_run_at),\n    retention: data.retention\n  };\n};\nconst unmarshalInstanceSetting = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'InstanceSetting' failed as data isn't a dictionary.`);\n  }\n  return {\n    name: data.name,\n    value: data.value\n  };\n};\nconst unmarshalLogsPolicy = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'LogsPolicy' failed as data isn't a dictionary.`);\n  }\n  return {\n    maxAgeRetention: data.max_age_retention,\n    totalDiskRetention: data.total_disk_retention\n  };\n};\nconst unmarshalUpgradableVersion = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'UpgradableVersion' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    minorVersion: data.minor_version,\n    name: data.name,\n    version: data.version\n  };\n};\nconst unmarshalVolume = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Volume' failed as data isn't a dictionary.`);\n  }\n  return {\n    class: data.class,\n    size: data.size,\n    type: data.type\n  };\n};\nconst unmarshalInstance = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Instance' failed as data isn't a dictionary.`);\n  }\n  return {\n    backupSameRegion: data.backup_same_region,\n    backupSchedule: data.backup_schedule ? unmarshalBackupSchedule(data.backup_schedule) : undefined,\n    createdAt: unmarshalDate(data.created_at),\n    endpoint: data.endpoint ? unmarshalEndpoint$1(data.endpoint) : undefined,\n    endpoints: unmarshalArrayOfObject(data.endpoints, unmarshalEndpoint$1),\n    engine: data.engine,\n    id: data.id,\n    initSettings: unmarshalArrayOfObject(data.init_settings, unmarshalInstanceSetting),\n    isHaCluster: data.is_ha_cluster,\n    logsPolicy: data.logs_policy ? unmarshalLogsPolicy(data.logs_policy) : undefined,\n    maintenances: unmarshalArrayOfObject(data.maintenances, unmarshalMaintenance),\n    name: data.name,\n    nodeType: data.node_type,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    readReplicas: unmarshalArrayOfObject(data.read_replicas, unmarshalReadReplica),\n    region: data.region,\n    settings: unmarshalArrayOfObject(data.settings, unmarshalInstanceSetting),\n    status: data.status,\n    tags: data.tags,\n    upgradableVersion: unmarshalArrayOfObject(data.upgradable_version, unmarshalUpgradableVersion),\n    volume: data.volume ? unmarshalVolume(data.volume) : undefined\n  };\n};\nconst unmarshalPrivilege = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Privilege' failed as data isn't a dictionary.`);\n  }\n  return {\n    databaseName: data.database_name,\n    permission: data.permission,\n    userName: data.user_name\n  };\n};\nconst unmarshalSnapshotVolumeType = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SnapshotVolumeType' failed as data isn't a dictionary.`);\n  }\n  return {\n    class: data.class,\n    type: data.type\n  };\n};\nconst unmarshalSnapshot = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Snapshot' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    expiresAt: unmarshalDate(data.expires_at),\n    id: data.id,\n    instanceId: data.instance_id,\n    instanceName: data.instance_name,\n    name: data.name,\n    nodeType: data.node_type,\n    region: data.region,\n    size: data.size,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at),\n    volumeType: data.volume_type ? unmarshalSnapshotVolumeType(data.volume_type) : undefined\n  };\n};\nconst unmarshalUser = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'User' failed as data isn't a dictionary.`);\n  }\n  return {\n    isAdmin: data.is_admin,\n    name: data.name\n  };\n};\nconst unmarshalACLRule$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ACLRule' failed as data isn't a dictionary.`);\n  }\n  return {\n    action: data.action,\n    description: data.description,\n    direction: data.direction,\n    ip: data.ip,\n    port: data.port,\n    protocol: data.protocol\n  };\n};\nconst unmarshalAddInstanceACLRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AddInstanceACLRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalACLRule$1)\n  };\n};\nconst unmarshalAddInstanceSettingsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AddInstanceSettingsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    settings: unmarshalArrayOfObject(data.settings, unmarshalInstanceSetting)\n  };\n};\nconst unmarshalDeleteInstanceACLRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DeleteInstanceACLRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalACLRule$1)\n  };\n};\nconst unmarshalDeleteInstanceSettingsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DeleteInstanceSettingsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    settings: unmarshalArrayOfObject(data.settings, unmarshalInstanceSetting)\n  };\n};\nconst unmarshalInstanceMetrics = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'InstanceMetrics' failed as data isn't a dictionary.`);\n  }\n  return {\n    timeseries: unmarshalArrayOfObject(data.timeseries, unmarshalTimeSeries)\n  };\n};\nconst unmarshalListDatabaseBackupsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDatabaseBackupsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    databaseBackups: unmarshalArrayOfObject(data.database_backups, unmarshalDatabaseBackup$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalEngineSetting = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EngineSetting' failed as data isn't a dictionary.`);\n  }\n  return {\n    defaultValue: data.default_value,\n    description: data.description,\n    floatMax: data.float_max,\n    floatMin: data.float_min,\n    hotConfigurable: data.hot_configurable,\n    intMax: data.int_max,\n    intMin: data.int_min,\n    name: data.name,\n    propertyType: data.property_type,\n    stringConstraint: data.string_constraint,\n    unit: data.unit\n  };\n};\nconst unmarshalEngineVersion = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EngineVersion' failed as data isn't a dictionary.`);\n  }\n  return {\n    availableInitSettings: unmarshalArrayOfObject(data.available_init_settings, unmarshalEngineSetting),\n    availableSettings: unmarshalArrayOfObject(data.available_settings, unmarshalEngineSetting),\n    beta: data.beta,\n    disabled: data.disabled,\n    endOfLife: unmarshalDate(data.end_of_life),\n    name: data.name,\n    version: data.version\n  };\n};\nconst unmarshalDatabaseEngine = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DatabaseEngine' failed as data isn't a dictionary.`);\n  }\n  return {\n    logoUrl: data.logo_url,\n    name: data.name,\n    region: data.region,\n    versions: unmarshalArrayOfObject(data.versions, unmarshalEngineVersion)\n  };\n};\nconst unmarshalListDatabaseEnginesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDatabaseEnginesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    engines: unmarshalArrayOfObject(data.engines, unmarshalDatabaseEngine),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListDatabasesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDatabasesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    databases: unmarshalArrayOfObject(data.databases, unmarshalDatabase$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListInstanceACLRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListInstanceACLRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalACLRule$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListInstanceLogsDetailsResponseInstanceLogDetail = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListInstanceLogsDetailsResponseInstanceLogDetail' failed as data isn't a dictionary.`);\n  }\n  return {\n    logName: data.log_name,\n    size: data.size\n  };\n};\nconst unmarshalListInstanceLogsDetailsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListInstanceLogsDetailsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    details: unmarshalArrayOfObject(data.details, unmarshalListInstanceLogsDetailsResponseInstanceLogDetail)\n  };\n};\nconst unmarshalListInstanceLogsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListInstanceLogsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    instanceLogs: unmarshalArrayOfObject(data.instance_logs, unmarshalInstanceLog)\n  };\n};\nconst unmarshalListInstancesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListInstancesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    instances: unmarshalArrayOfObject(data.instances, unmarshalInstance),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalNodeTypeVolumeConstraintSizes = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'NodeTypeVolumeConstraintSizes' failed as data isn't a dictionary.`);\n  }\n  return {\n    maxSize: data.max_size,\n    minSize: data.min_size\n  };\n};\nconst unmarshalNodeTypeVolumeType = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'NodeTypeVolumeType' failed as data isn't a dictionary.`);\n  }\n  return {\n    chunkSize: data.chunk_size,\n    class: data.class,\n    description: data.description,\n    maxSize: data.max_size,\n    minSize: data.min_size,\n    type: data.type\n  };\n};\nconst unmarshalNodeType$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'NodeType' failed as data isn't a dictionary.`);\n  }\n  return {\n    availableVolumeTypes: unmarshalArrayOfObject(data.available_volume_types, unmarshalNodeTypeVolumeType),\n    beta: data.beta,\n    description: data.description,\n    disabled: data.disabled,\n    generation: data.generation,\n    instanceRange: data.instance_range,\n    isBssdCompatible: data.is_bssd_compatible,\n    isHaRequired: data.is_ha_required,\n    memory: data.memory,\n    name: data.name,\n    region: data.region,\n    stockStatus: data.stock_status,\n    vcpus: data.vcpus,\n    volumeConstraint: data.volume_constraint ? unmarshalNodeTypeVolumeConstraintSizes(data.volume_constraint) : undefined\n  };\n};\nconst unmarshalListNodeTypesResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListNodeTypesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    nodeTypes: unmarshalArrayOfObject(data.node_types, unmarshalNodeType$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListPrivilegesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListPrivilegesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    privileges: unmarshalArrayOfObject(data.privileges, unmarshalPrivilege),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSnapshotsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSnapshotsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    snapshots: unmarshalArrayOfObject(data.snapshots, unmarshalSnapshot),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListUsersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListUsersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    users: unmarshalArrayOfObject(data.users, unmarshalUser)\n  };\n};\nconst unmarshalPrepareInstanceLogsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PrepareInstanceLogsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    instanceLogs: unmarshalArrayOfObject(data.instance_logs, unmarshalInstanceLog)\n  };\n};\nconst unmarshalSetInstanceACLRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetInstanceACLRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    rules: unmarshalArrayOfObject(data.rules, unmarshalACLRule$1)\n  };\n};\nconst unmarshalSetInstanceSettingsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetInstanceSettingsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    settings: unmarshalArrayOfObject(data.settings, unmarshalInstanceSetting)\n  };\n};\nconst marshalACLRuleRequest = (request, defaults) => ({\n  description: request.description,\n  ip: request.ip\n});\nconst marshalAddInstanceACLRulesRequest = (request, defaults) => ({\n  rules: request.rules.map(elt => marshalACLRuleRequest(elt))\n});\nconst marshalInstanceSetting = (request, defaults) => ({\n  name: request.name,\n  value: request.value\n});\nconst marshalAddInstanceSettingsRequest = (request, defaults) => ({\n  settings: request.settings.map(elt => marshalInstanceSetting(elt))\n});\nconst marshalCloneInstanceRequest = (request, defaults) => ({\n  name: request.name,\n  node_type: request.nodeType\n});\nconst marshalCreateDatabaseBackupRequest = (request, defaults) => ({\n  database_name: request.databaseName,\n  expires_at: request.expiresAt,\n  instance_id: request.instanceId,\n  name: request.name || randomName('bkp')\n});\nconst marshalCreateDatabaseRequest$1 = (request, defaults) => ({\n  name: request.name\n});\nconst marshalEndpointSpecPrivateNetworkIpamConfig = (request, defaults) => ({});\nconst marshalEndpointSpecLoadBalancer = (request, defaults) => ({});\nconst marshalEndpointSpecPrivateNetwork = (request, defaults) => ({\n  private_network_id: request.privateNetworkId,\n  ...resolveOneOf([{\n    param: 'service_ip',\n    value: request.serviceIp\n  }, {\n    param: 'ipam_config',\n    value: request.ipamConfig !== undefined ? marshalEndpointSpecPrivateNetworkIpamConfig(request.ipamConfig) : undefined\n  }])\n});\nconst marshalEndpointSpec$1 = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'load_balancer',\n    value: request.loadBalancer !== undefined ? marshalEndpointSpecLoadBalancer(request.loadBalancer) : undefined\n  }, {\n    param: 'private_network',\n    value: request.privateNetwork !== undefined ? marshalEndpointSpecPrivateNetwork(request.privateNetwork) : undefined\n  }])\n});\nconst marshalCreateEndpointRequest = (request, defaults) => ({\n  endpoint_spec: request.endpointSpec !== undefined ? marshalEndpointSpec$1(request.endpointSpec) : undefined\n});\nconst marshalCreateInstanceFromSnapshotRequest = (request, defaults) => ({\n  instance_name: request.instanceName,\n  is_ha_cluster: request.isHaCluster,\n  node_type: request.nodeType\n});\nconst marshalCreateInstanceRequest = (request, defaults) => ({\n  backup_same_region: request.backupSameRegion,\n  disable_backup: request.disableBackup,\n  engine: request.engine,\n  init_endpoints: request.initEndpoints !== undefined ? request.initEndpoints.map(elt => marshalEndpointSpec$1(elt)) : undefined,\n  init_settings: request.initSettings !== undefined ? request.initSettings.map(elt => marshalInstanceSetting(elt)) : undefined,\n  is_ha_cluster: request.isHaCluster,\n  name: request.name || randomName('ins'),\n  node_type: request.nodeType,\n  password: request.password,\n  tags: request.tags,\n  user_name: request.userName,\n  volume_size: request.volumeSize,\n  volume_type: request.volumeType,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project_id',\n    value: request.projectId\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization_id',\n    value: request.organizationId\n  }])\n});\nconst marshalReadReplicaEndpointSpecPrivateNetworkIpamConfig = (request, defaults) => ({});\nconst marshalReadReplicaEndpointSpecDirectAccess = (request, defaults) => ({});\nconst marshalReadReplicaEndpointSpecPrivateNetwork = (request, defaults) => ({\n  private_network_id: request.privateNetworkId,\n  ...resolveOneOf([{\n    param: 'service_ip',\n    value: request.serviceIp\n  }, {\n    param: 'ipam_config',\n    value: request.ipamConfig !== undefined ? marshalReadReplicaEndpointSpecPrivateNetworkIpamConfig(request.ipamConfig) : undefined\n  }])\n});\nconst marshalReadReplicaEndpointSpec = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'direct_access',\n    value: request.directAccess !== undefined ? marshalReadReplicaEndpointSpecDirectAccess(request.directAccess) : undefined\n  }, {\n    param: 'private_network',\n    value: request.privateNetwork !== undefined ? marshalReadReplicaEndpointSpecPrivateNetwork(request.privateNetwork) : undefined\n  }])\n});\nconst marshalCreateReadReplicaEndpointRequest = (request, defaults) => ({\n  endpoint_spec: request.endpointSpec.map(elt => marshalReadReplicaEndpointSpec(elt))\n});\nconst marshalCreateReadReplicaRequest = (request, defaults) => ({\n  endpoint_spec: request.endpointSpec !== undefined ? request.endpointSpec.map(elt => marshalReadReplicaEndpointSpec(elt)) : undefined,\n  instance_id: request.instanceId,\n  same_zone: request.sameZone\n});\nconst marshalCreateSnapshotRequest = (request, defaults) => ({\n  expires_at: request.expiresAt,\n  name: request.name || randomName('snp')\n});\nconst marshalCreateUserRequest = (request, defaults) => ({\n  is_admin: request.isAdmin,\n  name: request.name,\n  password: request.password\n});\nconst marshalDeleteInstanceACLRulesRequest = (request, defaults) => ({\n  acl_rule_ips: request.aclRuleIps\n});\nconst marshalDeleteInstanceSettingsRequest = (request, defaults) => ({\n  setting_names: request.settingNames\n});\nconst marshalMigrateEndpointRequest = (request, defaults) => ({\n  instance_id: request.instanceId\n});\nconst marshalPrepareInstanceLogsRequest = (request, defaults) => ({\n  end_date: request.endDate,\n  start_date: request.startDate\n});\nconst marshalPurgeInstanceLogsRequest = (request, defaults) => ({\n  log_name: request.logName\n});\nconst marshalRestoreDatabaseBackupRequest = (request, defaults) => ({\n  database_name: request.databaseName,\n  instance_id: request.instanceId\n});\nconst marshalSetInstanceACLRulesRequest = (request, defaults) => ({\n  rules: request.rules.map(elt => marshalACLRuleRequest(elt))\n});\nconst marshalSetInstanceSettingsRequest = (request, defaults) => ({\n  settings: request.settings.map(elt => marshalInstanceSetting(elt))\n});\nconst marshalSetPrivilegeRequest = (request, defaults) => ({\n  database_name: request.databaseName,\n  permission: request.permission,\n  user_name: request.userName\n});\nconst marshalUpdateDatabaseBackupRequest = (request, defaults) => ({\n  expires_at: request.expiresAt,\n  name: request.name\n});\nconst marshalLogsPolicy = (request, defaults) => ({\n  max_age_retention: request.maxAgeRetention,\n  total_disk_retention: request.totalDiskRetention\n});\nconst marshalUpdateInstanceRequest = (request, defaults) => ({\n  backup_same_region: request.backupSameRegion,\n  backup_schedule_frequency: request.backupScheduleFrequency,\n  backup_schedule_retention: request.backupScheduleRetention,\n  backup_schedule_start_hour: request.backupScheduleStartHour,\n  is_backup_schedule_disabled: request.isBackupScheduleDisabled,\n  logs_policy: request.logsPolicy !== undefined ? marshalLogsPolicy(request.logsPolicy) : undefined,\n  name: request.name,\n  tags: request.tags\n});\nconst marshalUpdateSnapshotRequest = (request, defaults) => ({\n  expires_at: request.expiresAt,\n  name: request.name\n});\nconst marshalUpdateUserRequest = (request, defaults) => ({\n  is_admin: request.isAdmin,\n  password: request.password\n});\nconst marshalUpgradeInstanceRequestMajorUpgradeWorkflow = (request, defaults) => ({\n  upgradable_version_id: request.upgradableVersionId,\n  with_endpoints: request.withEndpoints\n});\nconst marshalUpgradeInstanceRequest = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'node_type',\n    value: request.nodeType\n  }, {\n    param: 'enable_ha',\n    value: request.enableHa\n  }, {\n    param: 'volume_size',\n    value: request.volumeSize\n  }, {\n    param: 'volume_type',\n    value: request.volumeType\n  }, {\n    param: 'upgradable_version_id',\n    value: request.upgradableVersionId\n  }, {\n    param: 'major_upgrade_workflow',\n    value: request.majorUpgradeWorkflow !== undefined ? marshalUpgradeInstanceRequestMajorUpgradeWorkflow(request.majorUpgradeWorkflow) : undefined\n  }])\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$b = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Managed Database for PostgreSQL and MySQL API. */\nlet API$b = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n  pageOfListDatabaseEngines = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/database-engines`,\n    urlParams: urlParams(['name', request.name], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['version', request.version])\n  }, unmarshalListDatabaseEnginesResponse);\n\n  /**\n   * List available database engines. List the PostgreSQL and MySQL database\n   * engines available at Scaleway.\n   *\n   * @param request - The request {@link ListDatabaseEnginesRequest}\n   * @returns A Promise of ListDatabaseEnginesResponse\n   */\n  listDatabaseEngines = (request = {}) => enrichForPagination('engines', this.pageOfListDatabaseEngines, request);\n  pageOfListNodeTypes = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/node-types`,\n    urlParams: urlParams(['include_disabled_types', request.includeDisabledTypes], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListNodeTypesResponse$1);\n\n  /**\n   * List available node types. List all available node types. By default, the\n   * node types returned in the list are ordered by creation date in ascending\n   * order, though this can be modified via the `order_by` field.\n   *\n   * @param request - The request {@link ListNodeTypesRequest}\n   * @returns A Promise of ListNodeTypesResponse\n   */\n  listNodeTypes = request => enrichForPagination('nodeTypes', this.pageOfListNodeTypes, request);\n  pageOfListDatabaseBackups = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backups`,\n    urlParams: urlParams(['instance_id', request.instanceId], ['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListDatabaseBackupsResponse$1);\n\n  /**\n   * List database backups. List all backups in a specified region, for a given\n   * Scaleway Organization or Scaleway Project. By default, the backups listed\n   * are ordered by creation date in ascending order. This can be modified via\n   * the `order_by` field.\n   *\n   * @param request - The request {@link ListDatabaseBackupsRequest}\n   * @returns A Promise of ListDatabaseBackupsResponse\n   */\n  listDatabaseBackups = (request = {}) => enrichForPagination('databaseBackups', this.pageOfListDatabaseBackups, request);\n\n  /**\n   * Create a database backup. Create a new backup. You must set the\n   * `instance_id`, `database_name`, `name` and `expires_at` parameters.\n   *\n   * @param request - The request {@link CreateDatabaseBackupRequest}\n   * @returns A Promise of DatabaseBackup\n   */\n  createDatabaseBackup = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateDatabaseBackupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backups`\n  }, unmarshalDatabaseBackup$1);\n\n  /**\n   * Get a database backup. Retrieve information about a given backup, specified\n   * by its database backup ID and region. Full details about the backup, like\n   * size, URL and expiration date, are returned in the response.\n   *\n   * @param request - The request {@link GetDatabaseBackupRequest}\n   * @returns A Promise of DatabaseBackup\n   */\n  getDatabaseBackup = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backups/${validatePathParam('databaseBackupId', request.databaseBackupId)}`\n  }, unmarshalDatabaseBackup$1);\n\n  /**\n   * Waits for {@link DatabaseBackup} to be in a final state.\n   *\n   * @param request - The request {@link GetDatabaseBackupRequest}\n   * @param options - The waiting options\n   * @returns A Promise of DatabaseBackup\n   */\n  waitForDatabaseBackup = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!DATABASE_BACKUP_TRANSIENT_STATUSES.includes(res.status))), this.getDatabaseBackup, request, options);\n\n  /**\n   * Update a database backup. Update the parameters of a backup, including name\n   * and expiration date.\n   *\n   * @param request - The request {@link UpdateDatabaseBackupRequest}\n   * @returns A Promise of DatabaseBackup\n   */\n  updateDatabaseBackup = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateDatabaseBackupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'PATCH',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backups/${validatePathParam('databaseBackupId', request.databaseBackupId)}`\n  }, unmarshalDatabaseBackup$1);\n\n  /**\n   * Delete a database backup. Delete a backup, specified by its database backup\n   * ID and region. Deleting a backup is permanent, and cannot be undone.\n   *\n   * @param request - The request {@link DeleteDatabaseBackupRequest}\n   * @returns A Promise of DatabaseBackup\n   */\n  deleteDatabaseBackup = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backups/${validatePathParam('databaseBackupId', request.databaseBackupId)}`\n  }, unmarshalDatabaseBackup$1);\n\n  /**\n   * Restore a database backup. Launch the process of restoring database backup.\n   * You must specify the `instance_id` of the Database Instance of destination,\n   * where the backup will be restored. Note that large database backups can\n   * take up to several hours to restore.\n   *\n   * @param request - The request {@link RestoreDatabaseBackupRequest}\n   * @returns A Promise of DatabaseBackup\n   */\n  restoreDatabaseBackup = request => this.client.fetch({\n    body: JSON.stringify(marshalRestoreDatabaseBackupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backups/${validatePathParam('databaseBackupId', request.databaseBackupId)}/restore`\n  }, unmarshalDatabaseBackup$1);\n\n  /**\n   * Export a database backup. Export a backup, specified by the\n   * `database_backup_id` and the `region` parameters. The download URL is\n   * returned in the response.\n   *\n   * @param request - The request {@link ExportDatabaseBackupRequest}\n   * @returns A Promise of DatabaseBackup\n   */\n  exportDatabaseBackup = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backups/${validatePathParam('databaseBackupId', request.databaseBackupId)}/export`\n  }, unmarshalDatabaseBackup$1);\n\n  /**\n   * Upgrade a Database Instance. Upgrade your current Database Instance\n   * specifications like node type, high availability, volume, or the database\n   * engine version. Note that upon upgrade the `enable_ha` parameter can only\n   * be set to `true`.\n   *\n   * @param request - The request {@link UpgradeInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  upgradeInstance = request => this.client.fetch({\n    body: JSON.stringify(marshalUpgradeInstanceRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/upgrade`\n  }, unmarshalInstance);\n  pageOfListInstances = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['tags', request.tags])\n  }, unmarshalListInstancesResponse);\n\n  /**\n   * List Database Instances. List all Database Instances in the specified\n   * region, for a given Scaleway Organization or Scaleway Project. By default,\n   * the Database Instances returned in the list are ordered by creation date in\n   * ascending order, though this can be modified via the order_by field. You\n   * can define additional parameters for your query, such as `tags` and `name`.\n   * For the `name` parameter, the value you include will be checked against the\n   * whole name string to see if it includes the string you put in the\n   * parameter.\n   *\n   * @param request - The request {@link ListInstancesRequest}\n   * @returns A Promise of ListInstancesResponse\n   */\n  listInstances = (request = {}) => enrichForPagination('instances', this.pageOfListInstances, request);\n\n  /**\n   * Get a Database Instance. Retrieve information about a given Database\n   * Instance, specified by the `region` and `instance_id` parameters. Its full\n   * details, including name, status, IP address and port, are returned in the\n   * response object.\n   *\n   * @param request - The request {@link GetInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  getInstance = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}`\n  }, unmarshalInstance);\n\n  /**\n   * Waits for {@link Instance} to be in a final state.\n   *\n   * @param request - The request {@link GetInstanceRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Instance\n   */\n  waitForInstance = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!INSTANCE_TRANSIENT_STATUSES.includes(res.status))), this.getInstance, request, options);\n\n  /**\n   * Create a Database Instance. Create a new Database Instance. You must set\n   * the `engine`, `user_name`, `password` and `node_type` parameters.\n   * Optionally, you can specify the volume type and size.\n   *\n   * @param request - The request {@link CreateInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  createInstance = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateInstanceRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances`\n  }, unmarshalInstance);\n\n  /**\n   * Update a Database Instance. Update the parameters of a Database Instance,\n   * including name, tags and backup schedule details.\n   *\n   * @param request - The request {@link UpdateInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  updateInstance = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateInstanceRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'PATCH',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}`\n  }, unmarshalInstance);\n\n  /**\n   * Delete a Database Instance. Delete a given Database Instance, specified by\n   * the `region` and `instance_id` parameters. Deleting a Database Instance is\n   * permanent, and cannot be undone. Note that upon deletion all your data will\n   * be lost.\n   *\n   * @param request - The request {@link DeleteInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  deleteInstance = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}`\n  }, unmarshalInstance);\n\n  /**\n   * Clone a Database Instance. Clone a given Database Instance, specified by\n   * the `region` and `instance_id` parameters. The clone feature allows you to\n   * create a new Database Instance from an existing one. The clone includes all\n   * existing databases, users and permissions. You can create a clone on a\n   * Database Instance bigger than your current one.\n   *\n   * @param request - The request {@link CloneInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  cloneInstance = request => this.client.fetch({\n    body: JSON.stringify(marshalCloneInstanceRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/clone`\n  }, unmarshalInstance);\n\n  /**\n   * Restart Database Instance. Restart a given Database Instance, specified by\n   * the `region` and `instance_id` parameters. The status of the Database\n   * Instance returned in the response.\n   *\n   * @param request - The request {@link RestartInstanceRequest}\n   * @returns A Promise of Instance\n   */\n  restartInstance = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/restart`\n  }, unmarshalInstance);\n\n  /**\n   * Get the TLS certificate of a Database Instance. Retrieve information about\n   * the TLS certificate of a given Database Instance. Details like name and\n   * content are returned in the response.\n   *\n   * @param request - The request {@link GetInstanceCertificateRequest}\n   * @returns A Promise of Blob\n   */\n  getInstanceCertificate = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/certificate`,\n    urlParams: urlParams(['dl', 1]),\n    responseType: 'blob'\n  });\n\n  /**\n   * Renew the TLS certificate of a Database Instance. Renew a TLS for a\n   * Database Instance. Renewing a certificate means that you will not be able\n   * to connect to your Database Instance using the previous certificate. You\n   * will also need to download and update the new certificate for all database\n   * clients.\n   *\n   * @param request - The request {@link RenewInstanceCertificateRequest}\n   */\n  renewInstanceCertificate = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/renew-certificate`\n  });\n\n  /**\n   * Get Database Instance metrics. Retrieve the time series metrics of a given\n   * Database Instance. You can define the period from which to retrieve metrics\n   * by specifying the `start_date` and `end_date`.\n   *\n   * @param request - The request {@link GetInstanceMetricsRequest}\n   * @returns A Promise of InstanceMetrics\n   */\n  getInstanceMetrics = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/metrics`,\n    urlParams: urlParams(['end_date', request.endDate], ['metric_name', request.metricName], ['start_date', request.startDate])\n  }, unmarshalInstanceMetrics);\n\n  /**\n   * Create a Read Replica. Create a new Read Replica of a Database Instance.\n   * You must specify the `region` and the `instance_id`. You can only create a\n   * maximum of 3 Read Replicas per Database Instance.\n   *\n   * @param request - The request {@link CreateReadReplicaRequest}\n   * @returns A Promise of ReadReplica\n   */\n  createReadReplica = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateReadReplicaRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/read-replicas`\n  }, unmarshalReadReplica);\n\n  /**\n   * Get a Read Replica. Retrieve information about a Database Instance Read\n   * Replica. Full details about the Read Replica, like `endpoints`, `status`\n   * and `region` are returned in the response.\n   *\n   * @param request - The request {@link GetReadReplicaRequest}\n   * @returns A Promise of ReadReplica\n   */\n  getReadReplica = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/read-replicas/${validatePathParam('readReplicaId', request.readReplicaId)}`\n  }, unmarshalReadReplica);\n\n  /**\n   * Waits for {@link ReadReplica} to be in a final state.\n   *\n   * @param request - The request {@link GetReadReplicaRequest}\n   * @param options - The waiting options\n   * @returns A Promise of ReadReplica\n   */\n  waitForReadReplica = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!READ_REPLICA_TRANSIENT_STATUSES.includes(res.status))), this.getReadReplica, request, options);\n\n  /**\n   * Delete a Read Replica. Delete a Read Replica of a Database Instance. You\n   * must specify the `region` and `read_replica_id` parameters of the Read\n   * Replica you want to delete.\n   *\n   * @param request - The request {@link DeleteReadReplicaRequest}\n   * @returns A Promise of ReadReplica\n   */\n  deleteReadReplica = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/read-replicas/${validatePathParam('readReplicaId', request.readReplicaId)}`\n  }, unmarshalReadReplica);\n\n  /**\n   * Resync a Read Replica. When you resync a Read Replica, first it is reset,\n   * then its data is resynchronized from the primary node. Your Read Replica\n   * remains unavailable during the resync process. The duration of this process\n   * is proportional to the size of your Database Instance. The configured\n   * endpoints do not change.\n   *\n   * @param request - The request {@link ResetReadReplicaRequest}\n   * @returns A Promise of ReadReplica\n   */\n  resetReadReplica = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/read-replicas/${validatePathParam('readReplicaId', request.readReplicaId)}/reset`\n  }, unmarshalReadReplica);\n\n  /**\n   * Promote a Read Replica. Promote a Read Replica to Database Instance\n   * automatically.\n   *\n   * @param request - The request {@link PromoteReadReplicaRequest}\n   * @returns A Promise of Instance\n   */\n  promoteReadReplica = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/read-replicas/${validatePathParam('readReplicaId', request.readReplicaId)}/promote`\n  }, unmarshalInstance);\n\n  /**\n   * Create an endpoint for a Read Replica. Create a new endpoint for a Read\n   * Replica. Read Replicas can have at most one direct access and one Private\n   * Network endpoint.\n   *\n   * @param request - The request {@link CreateReadReplicaEndpointRequest}\n   * @returns A Promise of ReadReplica\n   */\n  createReadReplicaEndpoint = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateReadReplicaEndpointRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/read-replicas/${validatePathParam('readReplicaId', request.readReplicaId)}/endpoints`\n  }, unmarshalReadReplica);\n\n  /**\n   * Prepare logs of a Database Instance. Prepare your Database Instance logs.\n   * You can define the `start_date` and `end_date` parameters for your query.\n   * The download URL is returned in the response. Logs are recorded from 00h00\n   * to 23h59 and then aggregated in a `.log` file once a day. Therefore, even\n   * if you specify a timeframe from which you want to get the logs, you will\n   * receive logs from the full 24 hours.\n   *\n   * @param request - The request {@link PrepareInstanceLogsRequest}\n   * @returns A Promise of PrepareInstanceLogsResponse\n   */\n  prepareInstanceLogs = request => this.client.fetch({\n    body: JSON.stringify(marshalPrepareInstanceLogsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/prepare-logs`\n  }, unmarshalPrepareInstanceLogsResponse);\n\n  /**\n   * List available logs of a Database Instance. List the available logs of a\n   * Database Instance. By default, the logs returned in the list are ordered by\n   * creation date in ascending order, though this can be modified via the\n   * order_by field.\n   *\n   * @param request - The request {@link ListInstanceLogsRequest}\n   * @returns A Promise of ListInstanceLogsResponse\n   */\n  listInstanceLogs = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/logs`,\n    urlParams: urlParams(['order_by', request.orderBy])\n  }, unmarshalListInstanceLogsResponse);\n\n  /**\n   * Get given logs of a Database Instance. Retrieve information about the logs\n   * of a Database Instance. Specify the `instance_log_id` and `region` in your\n   * request to get information such as `download_url`, `status`, `expires_at`\n   * and `created_at` about your logs in the response.\n   *\n   * @param request - The request {@link GetInstanceLogRequest}\n   * @returns A Promise of InstanceLog\n   */\n  getInstanceLog = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/logs/${validatePathParam('instanceLogId', request.instanceLogId)}`\n  }, unmarshalInstanceLog);\n\n  /**\n   * Waits for {@link InstanceLog} to be in a final state.\n   *\n   * @param request - The request {@link GetInstanceLogRequest}\n   * @param options - The waiting options\n   * @returns A Promise of InstanceLog\n   */\n  waitForInstanceLog = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!INSTANCE_LOG_TRANSIENT_STATUSES.includes(res.status))), this.getInstanceLog, request, options);\n\n  /**\n   * Purge remote Database Instance logs. Purge a given remote log from a\n   * Database Instance. You can specify the `log_name` of the log you wish to\n   * clean from your Database Instance.\n   *\n   * @param request - The request {@link PurgeInstanceLogsRequest}\n   */\n  purgeInstanceLogs = request => this.client.fetch({\n    body: JSON.stringify(marshalPurgeInstanceLogsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/purge-logs`\n  });\n\n  /**\n   * List remote Database Instance logs details. List remote log details. By\n   * default, the details returned in the list are ordered by creation date in\n   * ascending order, though this can be modified via the order_by field.\n   *\n   * @param request - The request {@link ListInstanceLogsDetailsRequest}\n   * @returns A Promise of ListInstanceLogsDetailsResponse\n   */\n  listInstanceLogsDetails = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/logs-details`\n  }, unmarshalListInstanceLogsDetailsResponse);\n\n  /**\n   * Add Database Instance advanced settings. Add an advanced setting to a\n   * Database Instance. You must set the `name` and the `value` of each\n   * setting.\n   *\n   * @param request - The request {@link AddInstanceSettingsRequest}\n   * @returns A Promise of AddInstanceSettingsResponse\n   */\n  addInstanceSettings = request => this.client.fetch({\n    body: JSON.stringify(marshalAddInstanceSettingsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/settings`\n  }, unmarshalAddInstanceSettingsResponse);\n\n  /**\n   * Delete Database Instance advanced settings. Delete an advanced setting in a\n   * Database Instance. You must specify the names of the settings you want to\n   * delete in the request.\n   *\n   * @param request - The request {@link DeleteInstanceSettingsRequest}\n   * @returns A Promise of DeleteInstanceSettingsResponse\n   */\n  deleteInstanceSettings = request => this.client.fetch({\n    body: JSON.stringify(marshalDeleteInstanceSettingsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'DELETE',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/settings`\n  }, unmarshalDeleteInstanceSettingsResponse);\n\n  /**\n   * Set Database Instance advanced settings. Update an advanced setting for a\n   * Database Instance. Settings added upon database engine initalization can\n   * only be defined once, and cannot, therefore, be updated.\n   *\n   * @param request - The request {@link SetInstanceSettingsRequest}\n   * @returns A Promise of SetInstanceSettingsResponse\n   */\n  setInstanceSettings = request => this.client.fetch({\n    body: JSON.stringify(marshalSetInstanceSettingsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'PUT',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/settings`\n  }, unmarshalSetInstanceSettingsResponse);\n  pageOfListInstanceACLRules = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/acls`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListInstanceACLRulesResponse);\n\n  /**\n   * List ACL rules of a Database Instance. List the ACL rules for a given\n   * Database Instance. The response is an array of ACL objects, each one\n   * representing an ACL that denies, allows or redirects traffic based on\n   * certain conditions.\n   *\n   * @param request - The request {@link ListInstanceACLRulesRequest}\n   * @returns A Promise of ListInstanceACLRulesResponse\n   */\n  listInstanceACLRules = request => enrichForPagination('rules', this.pageOfListInstanceACLRules, request);\n\n  /**\n   * Add an ACL rule to a Database Instance. Add an additional ACL rule to a\n   * Database Instance.\n   *\n   * @param request - The request {@link AddInstanceACLRulesRequest}\n   * @returns A Promise of AddInstanceACLRulesResponse\n   */\n  addInstanceACLRules = request => this.client.fetch({\n    body: JSON.stringify(marshalAddInstanceACLRulesRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/acls`\n  }, unmarshalAddInstanceACLRulesResponse);\n\n  /**\n   * Set ACL rules for a Database Instance. Replace all the ACL rules of a\n   * Database Instance.\n   *\n   * @param request - The request {@link SetInstanceACLRulesRequest}\n   * @returns A Promise of SetInstanceACLRulesResponse\n   */\n  setInstanceACLRules = request => this.client.fetch({\n    body: JSON.stringify(marshalSetInstanceACLRulesRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'PUT',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/acls`\n  }, unmarshalSetInstanceACLRulesResponse);\n\n  /**\n   * Delete ACL rules of a Database Instance. Delete one or more ACL rules of a\n   * Database Instance.\n   *\n   * @param request - The request {@link DeleteInstanceACLRulesRequest}\n   * @returns A Promise of DeleteInstanceACLRulesResponse\n   */\n  deleteInstanceACLRules = request => this.client.fetch({\n    body: JSON.stringify(marshalDeleteInstanceACLRulesRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'DELETE',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/acls`\n  }, unmarshalDeleteInstanceACLRulesResponse);\n  pageOfListUsers = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/users`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListUsersResponse);\n\n  /**\n   * List users of a Database Instance. List all users of a given Database\n   * Instance. By default, the users returned in the list are ordered by\n   * creation date in ascending order, though this can be modified via the\n   * order_by field.\n   *\n   * @param request - The request {@link ListUsersRequest}\n   * @returns A Promise of ListUsersResponse\n   */\n  listUsers = request => enrichForPagination('users', this.pageOfListUsers, request);\n\n  /**\n   * Create a user for a Database Instance. Create a new user for a Database\n   * Instance. You must define the `name`, `password` and `is_admin`\n   * parameters.\n   *\n   * @param request - The request {@link CreateUserRequest}\n   * @returns A Promise of User\n   */\n  createUser = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateUserRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/users`\n  }, unmarshalUser);\n\n  /**\n   * Update a user on a Database Instance. Update the parameters of a user on a\n   * Database Instance. You can update the `password` and `is_admin` parameters,\n   * but you cannot change the name of the user.\n   *\n   * @param request - The request {@link UpdateUserRequest}\n   * @returns A Promise of User\n   */\n  updateUser = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateUserRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'PATCH',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/users/${validatePathParam('name', request.name)}`\n  }, unmarshalUser);\n\n  /**\n   * Delete a user on a Database Instance. Delete a given user on a Database\n   * Instance. You must specify, in the endpoint, the `region`, `instance_id`\n   * and `name` parameters of the user you want to delete.\n   *\n   * @param request - The request {@link DeleteUserRequest}\n   */\n  deleteUser = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/users/${validatePathParam('name', request.name)}`\n  });\n  pageOfListDatabases = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/databases`,\n    urlParams: urlParams(['managed', request.managed], ['name', request.name], ['order_by', request.orderBy], ['owner', request.owner], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListDatabasesResponse$1);\n\n  /**\n   * List databases in a Database Instance. List all databases of a given\n   * Database Instance. By default, the databases returned in the list are\n   * ordered by creation date in ascending order, though this can be modified\n   * via the order_by field. You can define additional parameters for your\n   * query, such as `name`, `managed` and `owner`.\n   *\n   * @param request - The request {@link ListDatabasesRequest}\n   * @returns A Promise of ListDatabasesResponse\n   */\n  listDatabases = request => enrichForPagination('databases', this.pageOfListDatabases, request);\n\n  /**\n   * Create a database in a Database Instance. Create a new database. You must\n   * define the `name` parameter in the request.\n   *\n   * @param request - The request {@link CreateDatabaseRequest}\n   * @returns A Promise of Database\n   */\n  createDatabase = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateDatabaseRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/databases`\n  }, unmarshalDatabase$1);\n\n  /**\n   * Delete a database in a Database Instance. Delete a given database on a\n   * Database Instance. You must specify, in the endpoint, the `region`,\n   * `instance_id` and `name` parameters of the database you want to delete.\n   *\n   * @param request - The request {@link DeleteDatabaseRequest}\n   */\n  deleteDatabase = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/databases/${validatePathParam('name', request.name)}`\n  });\n  pageOfListPrivileges = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/privileges`,\n    urlParams: urlParams(['database_name', request.databaseName], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['user_name', request.userName])\n  }, unmarshalListPrivilegesResponse);\n\n  /**\n   * List user privileges for a database. List privileges of a user on a\n   * database. By default, the details returned in the list are ordered by\n   * creation date in ascending order, though this can be modified via the\n   * order_by field. You can define additional parameters for your query, such\n   * as `database_name` and `user_name`.\n   *\n   * @param request - The request {@link ListPrivilegesRequest}\n   * @returns A Promise of ListPrivilegesResponse\n   */\n  listPrivileges = request => enrichForPagination('privileges', this.pageOfListPrivileges, request);\n\n  /**\n   * Set user privileges for a database. Set the privileges of a user on a\n   * database. You must define `database_name`, `user_name` and `permission` in\n   * the request body.\n   *\n   * @param request - The request {@link SetPrivilegeRequest}\n   * @returns A Promise of Privilege\n   */\n  setPrivilege = request => this.client.fetch({\n    body: JSON.stringify(marshalSetPrivilegeRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'PUT',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/privileges`\n  }, unmarshalPrivilege);\n  pageOfListSnapshots = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/snapshots`,\n    urlParams: urlParams(['instance_id', request.instanceId], ['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListSnapshotsResponse);\n\n  /**\n   * List snapshots. List snapshots. You can include the `instance_id` or\n   * `project_id` in your query to get the list of snapshots for specific\n   * Database Instances and/or Projects. By default, the details returned in the\n   * list are ordered by creation date in ascending order, though this can be\n   * modified via the `order_by` field.\n   *\n   * @param request - The request {@link ListSnapshotsRequest}\n   * @returns A Promise of ListSnapshotsResponse\n   */\n  listSnapshots = (request = {}) => enrichForPagination('snapshots', this.pageOfListSnapshots, request);\n\n  /**\n   * Get a Database Instance snapshot. Retrieve information about a given\n   * snapshot, specified by its `snapshot_id` and `region`. Full details about\n   * the snapshot, like size and expiration date, are returned in the response.\n   *\n   * @param request - The request {@link GetSnapshotRequest}\n   * @returns A Promise of Snapshot\n   */\n  getSnapshot = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}`\n  }, unmarshalSnapshot);\n\n  /**\n   * Waits for {@link Snapshot} to be in a final state.\n   *\n   * @param request - The request {@link GetSnapshotRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Snapshot\n   */\n  waitForSnapshot = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!SNAPSHOT_TRANSIENT_STATUSES.includes(res.status))), this.getSnapshot, request, options);\n\n  /**\n   * Create a Database Instance snapshot. Create a new snapshot of a Database\n   * Instance. You must define the `name` parameter in the request.\n   *\n   * @param request - The request {@link CreateSnapshotRequest}\n   * @returns A Promise of Snapshot\n   */\n  createSnapshot = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateSnapshotRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/snapshots`\n  }, unmarshalSnapshot);\n\n  /**\n   * Update a Database Instance snapshot. Update the parameters of a snapshot of\n   * a Database Instance. You can update the `name` and `expires_at`\n   * parameters.\n   *\n   * @param request - The request {@link UpdateSnapshotRequest}\n   * @returns A Promise of Snapshot\n   */\n  updateSnapshot = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateSnapshotRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'PATCH',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}`\n  }, unmarshalSnapshot);\n\n  /**\n   * Delete a Database Instance snapshot. Delete a given snapshot of a Database\n   * Instance. You must specify, in the endpoint, the `region` and `snapshot_id`\n   * parameters of the snapshot you want to delete.\n   *\n   * @param request - The request {@link DeleteSnapshotRequest}\n   * @returns A Promise of Snapshot\n   */\n  deleteSnapshot = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}`\n  }, unmarshalSnapshot);\n\n  /**\n   * Create a new Database Instance from a snapshot. Restore a snapshot. When\n   * you restore a snapshot, a new Instance is created and billed to your\n   * account. Note that is possible to select a larger node type for your new\n   * Database Instance. However, the Block volume size will be the same as the\n   * size of the restored snapshot. All Instance settings will be restored if\n   * you chose a node type with the same or more memory size than the initial\n   * Instance. Settings will be reset to the default if your node type has less\n   * memory.\n   *\n   * @param request - The request {@link CreateInstanceFromSnapshotRequest}\n   * @returns A Promise of Instance\n   */\n  createInstanceFromSnapshot = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateInstanceFromSnapshotRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/snapshots/${validatePathParam('snapshotId', request.snapshotId)}/create-instance`\n  }, unmarshalInstance);\n\n  /**\n   * Create a new Database Instance endpoint. Create a new endpoint for a\n   * Database Instance. You can add `load_balancer` and `private_network`\n   * specifications to the body of the request.\n   *\n   * @param request - The request {@link CreateEndpointRequest}\n   * @returns A Promise of Endpoint\n   */\n  createEndpoint = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateEndpointRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/endpoints`\n  }, unmarshalEndpoint$1);\n\n  /**\n   * Delete a Database Instance endpoint. Delete the endpoint of a Database\n   * Instance. You must specify the `region` and `endpoint_id` parameters of the\n   * endpoint you want to delete. Note that might need to update any environment\n   * configurations that point to the deleted endpoint.\n   *\n   * @param request - The request {@link DeleteEndpointRequest}\n   */\n  deleteEndpoint = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/endpoints/${validatePathParam('endpointId', request.endpointId)}`\n  });\n\n  /**\n   * Get a Database Instance endpoint. Retrieve information about a Database\n   * Instance endpoint. Full details about the endpoint, like `ip`, `port`,\n   * `private_network` and `load_balancer` specifications are returned in the\n   * response.\n   *\n   * @param request - The request {@link GetEndpointRequest}\n   * @returns A Promise of Endpoint\n   */\n  getEndpoint = request => this.client.fetch({\n    method: 'GET',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/endpoints/${validatePathParam('endpointId', request.endpointId)}`\n  }, unmarshalEndpoint$1);\n\n  /**\n   * Migrate an existing instance endpoint to another instance.\n   *\n   * @param request - The request {@link MigrateEndpointRequest}\n   * @returns A Promise of Endpoint\n   */\n  migrateEndpoint = request => this.client.fetch({\n    body: JSON.stringify(marshalMigrateEndpointRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/endpoints/${validatePathParam('endpointId', request.endpointId)}/migrate`\n  }, unmarshalEndpoint$1);\n\n  /**\n   * Apply Database Instance maintenance. Apply maintenance tasks to your\n   * Database Instance. This will trigger pending maintenance tasks to start in\n   * your Database Instance and can generate service interruption. Maintenance\n   * tasks can be applied between `starts_at` and `stops_at` times, and are run\n   * directly by Scaleway at `forced_at` timestamp.\n   *\n   * @param request - The request {@link ApplyInstanceMaintenanceRequest}\n   * @returns A Promise of Maintenance\n   */\n  applyInstanceMaintenance = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$b,\n    method: 'POST',\n    path: `/rdb/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/instances/${validatePathParam('instanceId', request.instanceId)}/apply-maintenance`\n  }, unmarshalMaintenance);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst UpdateInstanceRequest = {\n  backupScheduleStartHour: {\n    lessThanOrEqual: 23\n  }\n};\n\nvar validationRules_gen$2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UpdateInstanceRequest: UpdateInstanceRequest\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$c = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$b,\n  DATABASE_BACKUP_TRANSIENT_STATUSES: DATABASE_BACKUP_TRANSIENT_STATUSES,\n  INSTANCE_LOG_TRANSIENT_STATUSES: INSTANCE_LOG_TRANSIENT_STATUSES,\n  INSTANCE_TRANSIENT_STATUSES: INSTANCE_TRANSIENT_STATUSES,\n  MAINTENANCE_TRANSIENT_STATUSES: MAINTENANCE_TRANSIENT_STATUSES,\n  READ_REPLICA_TRANSIENT_STATUSES: READ_REPLICA_TRANSIENT_STATUSES,\n  SNAPSHOT_TRANSIENT_STATUSES: SNAPSHOT_TRANSIENT_STATUSES,\n  ValidationRules: validationRules_gen$2\n});\n\nvar index$9 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1: index_gen$c\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link ClusterStatus}. */\nconst CLUSTER_TRANSIENT_STATUSES = ['provisioning', 'configuring', 'deleting', 'autohealing', 'initializing'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalACLRule = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ACLRule' failed as data isn't a dictionary.`);\n  }\n  return {\n    description: data.description,\n    id: data.id,\n    ipCidr: data.ip_cidr\n  };\n};\nconst unmarshalPrivateNetwork$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PrivateNetwork' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    provisioningMode: data.provisioning_mode,\n    serviceIps: data.service_ips,\n    zone: data.zone\n  };\n};\nconst unmarshalPublicNetwork = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PublicNetwork' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalEndpoint = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Endpoint' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    ips: data.ips,\n    port: data.port,\n    privateNetwork: data.private_network ? unmarshalPrivateNetwork$2(data.private_network) : undefined,\n    publicNetwork: data.public_network ? unmarshalPublicNetwork(data.public_network) : undefined\n  };\n};\nconst unmarshalClusterSetting = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ClusterSetting' failed as data isn't a dictionary.`);\n  }\n  return {\n    name: data.name,\n    value: data.value\n  };\n};\nconst unmarshalCluster = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Cluster' failed as data isn't a dictionary.`);\n  }\n  return {\n    aclRules: unmarshalArrayOfObject(data.acl_rules, unmarshalACLRule),\n    clusterSettings: unmarshalArrayOfObject(data.cluster_settings, unmarshalClusterSetting),\n    clusterSize: data.cluster_size,\n    createdAt: unmarshalDate(data.created_at),\n    endpoints: unmarshalArrayOfObject(data.endpoints, unmarshalEndpoint),\n    id: data.id,\n    name: data.name,\n    nodeType: data.node_type,\n    projectId: data.project_id,\n    status: data.status,\n    tags: data.tags,\n    tlsEnabled: data.tls_enabled,\n    updatedAt: unmarshalDate(data.updated_at),\n    upgradableVersions: data.upgradable_versions,\n    userName: data.user_name,\n    version: data.version,\n    zone: data.zone\n  };\n};\nconst unmarshalAddAclRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AddAclRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    aclRules: unmarshalArrayOfObject(data.acl_rules, unmarshalACLRule),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalAddEndpointsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AddEndpointsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    endpoints: unmarshalArrayOfObject(data.endpoints, unmarshalEndpoint),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalClusterMetricsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ClusterMetricsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    timeseries: unmarshalArrayOfObject(data.timeseries, unmarshalTimeSeries)\n  };\n};\nconst unmarshalClusterSettingsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ClusterSettingsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    settings: unmarshalArrayOfObject(data.settings, unmarshalClusterSetting)\n  };\n};\nconst unmarshalAvailableClusterSetting = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AvailableClusterSetting' failed as data isn't a dictionary.`);\n  }\n  return {\n    defaultValue: data.default_value,\n    deprecated: data.deprecated,\n    description: data.description,\n    maxValue: data.max_value,\n    minValue: data.min_value,\n    name: data.name,\n    regex: data.regex,\n    type: data.type\n  };\n};\nconst unmarshalClusterVersion = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ClusterVersion' failed as data isn't a dictionary.`);\n  }\n  return {\n    availableSettings: unmarshalArrayOfObject(data.available_settings, unmarshalAvailableClusterSetting),\n    endOfLifeAt: unmarshalDate(data.end_of_life_at),\n    logoUrl: data.logo_url,\n    version: data.version,\n    zone: data.zone\n  };\n};\nconst unmarshalListClusterVersionsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListClusterVersionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    versions: unmarshalArrayOfObject(data.versions, unmarshalClusterVersion)\n  };\n};\nconst unmarshalListClustersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListClustersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    clusters: unmarshalArrayOfObject(data.clusters, unmarshalCluster),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalNodeType = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'NodeType' failed as data isn't a dictionary.`);\n  }\n  return {\n    beta: data.beta,\n    description: data.description,\n    disabled: data.disabled,\n    memory: data.memory,\n    name: data.name,\n    stockStatus: data.stock_status,\n    vcpus: data.vcpus,\n    zone: data.zone\n  };\n};\nconst unmarshalListNodeTypesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListNodeTypesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    nodeTypes: unmarshalArrayOfObject(data.node_types, unmarshalNodeType),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalSetAclRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetAclRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    aclRules: unmarshalArrayOfObject(data.acl_rules, unmarshalACLRule)\n  };\n};\nconst unmarshalSetEndpointsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetEndpointsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    endpoints: unmarshalArrayOfObject(data.endpoints, unmarshalEndpoint)\n  };\n};\nconst marshalACLRuleSpec = (request, defaults) => ({\n  description: request.description,\n  ip_cidr: request.ipCidr\n});\nconst marshalAddAclRulesRequest = (request, defaults) => ({\n  acl_rules: request.aclRules.map(elt => marshalACLRuleSpec(elt))\n});\nconst marshalClusterSetting = (request, defaults) => ({\n  name: request.name,\n  value: request.value\n});\nconst marshalAddClusterSettingsRequest = (request, defaults) => ({\n  settings: request.settings.map(elt => marshalClusterSetting(elt))\n});\nconst marshalEndpointSpecPrivateNetworkSpecIpamConfig = (request, defaults) => ({});\nconst marshalEndpointSpecPrivateNetworkSpec = (request, defaults) => ({\n  id: request.id,\n  ipam_config: request.ipamConfig !== undefined ? marshalEndpointSpecPrivateNetworkSpecIpamConfig(request.ipamConfig) : undefined,\n  service_ips: request.serviceIps\n});\nconst marshalEndpointSpecPublicNetworkSpec = (request, defaults) => ({});\nconst marshalEndpointSpec = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'private_network',\n    value: request.privateNetwork !== undefined ? marshalEndpointSpecPrivateNetworkSpec(request.privateNetwork) : undefined\n  }, {\n    param: 'public_network',\n    value: request.publicNetwork !== undefined ? marshalEndpointSpecPublicNetworkSpec(request.publicNetwork) : undefined\n  }])\n});\nconst marshalAddEndpointsRequest = (request, defaults) => ({\n  endpoints: request.endpoints.map(elt => marshalEndpointSpec(elt))\n});\nconst marshalCreateClusterRequest = (request, defaults) => ({\n  acl_rules: request.aclRules !== undefined ? request.aclRules.map(elt => marshalACLRuleSpec(elt)) : undefined,\n  cluster_settings: request.clusterSettings !== undefined ? request.clusterSettings.map(elt => marshalClusterSetting(elt)) : undefined,\n  cluster_size: request.clusterSize,\n  endpoints: request.endpoints !== undefined ? request.endpoints.map(elt => marshalEndpointSpec(elt)) : undefined,\n  name: request.name || randomName('ins'),\n  node_type: request.nodeType,\n  password: request.password,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  tags: request.tags,\n  tls_enabled: request.tlsEnabled,\n  user_name: request.userName,\n  version: request.version\n});\nconst marshalMigrateClusterRequest = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'version',\n    value: request.version\n  }, {\n    param: 'node_type',\n    value: request.nodeType\n  }, {\n    param: 'cluster_size',\n    value: request.clusterSize\n  }])\n});\nconst marshalSetAclRulesRequest = (request, defaults) => ({\n  acl_rules: request.aclRules.map(elt => marshalACLRuleSpec(elt))\n});\nconst marshalSetClusterSettingsRequest = (request, defaults) => ({\n  settings: request.settings.map(elt => marshalClusterSetting(elt))\n});\nconst marshalSetEndpointsRequest = (request, defaults) => ({\n  endpoints: request.endpoints.map(elt => marshalEndpointSpec(elt))\n});\nconst marshalUpdateClusterRequest = (request, defaults) => ({\n  name: request.name,\n  password: request.password,\n  tags: request.tags,\n  user_name: request.userName\n});\nconst marshalUpdateEndpointRequest = (request, defaults) => ({\n  ...resolveOneOf([{\n    param: 'private_network',\n    value: request.privateNetwork !== undefined ? marshalEndpointSpecPrivateNetworkSpec(request.privateNetwork) : undefined\n  }, {\n    param: 'public_network',\n    value: request.publicNetwork !== undefined ? marshalEndpointSpecPublicNetworkSpec(request.publicNetwork) : undefined\n  }])\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$a = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Managed Database for Redis\u2122 API. */\nlet API$a = class API extends API$z {\n  /** Lists the available zones of the API. */\n  static LOCALITIES = ['fr-par-1', 'fr-par-2', 'nl-ams-1', 'nl-ams-2', 'pl-waw-1', 'pl-waw-2'];\n\n  /**\n   * Create a Redis\u2122 Database Instance. Create a new Redis\u2122 Database Instance\n   * (Redis\u2122 cluster). You must set the `zone`, `project_id`, `version`,\n   * `node_type`, `user_name` and `password` parameters. Optionally you can\n   * define `acl_rules`, `endpoints`, `tls_enabled` and `cluster_settings`.\n   *\n   * @param request - The request {@link CreateClusterRequest}\n   * @returns A Promise of Cluster\n   */\n  createCluster = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateClusterRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$a,\n    method: 'POST',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters`\n  }, unmarshalCluster);\n\n  /**\n   * Update a Redis\u2122 Database Instance. Update the parameters of a Redis\u2122\n   * Database Instance (Redis\u2122 cluster), including `name`, `tags`, `user_name`\n   * and `password`.\n   *\n   * @param request - The request {@link UpdateClusterRequest}\n   * @returns A Promise of Cluster\n   */\n  updateCluster = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateClusterRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$a,\n    method: 'PATCH',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}`\n  }, unmarshalCluster);\n\n  /**\n   * Get a Redis\u2122 Database Instance. Retrieve information about a Redis\u2122\n   * Database Instance (Redis\u2122 cluster). Specify the `cluster_id` and `region`\n   * in your request to get information such as `id`, `status`, `version`,\n   * `tls_enabled`, `cluster_settings`, `upgradable_versions` and `endpoints`\n   * about your cluster in the response.\n   *\n   * @param request - The request {@link GetClusterRequest}\n   * @returns A Promise of Cluster\n   */\n  getCluster = request => this.client.fetch({\n    method: 'GET',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}`\n  }, unmarshalCluster);\n\n  /**\n   * Waits for {@link Cluster} to be in a final state.\n   *\n   * @param request - The request {@link GetClusterRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Cluster\n   */\n  waitForCluster = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!CLUSTER_TRANSIENT_STATUSES.includes(res.status))), this.getCluster, request, options);\n  pageOfListClusters = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['tags', request.tags], ['version', request.version])\n  }, unmarshalListClustersResponse);\n\n  /**\n   * List Redis\u2122 Database Instances. List all Redis\u2122 Database Instances (Redis\u2122\n   * cluster) in the specified zone. By default, the Database Instances returned\n   * in the list are ordered by creation date in ascending order, though this\n   * can be modified via the order_by field. You can define additional\n   * parameters for your query, such as `tags`, `name`, `organization_id` and\n   * `version`.\n   *\n   * @param request - The request {@link ListClustersRequest}\n   * @returns A Promise of ListClustersResponse\n   */\n  listClusters = (request = {}) => enrichForPagination('clusters', this.pageOfListClusters, request);\n\n  /**\n   * Scale up a Redis\u2122 Database Instance. Upgrade your Redis\u2122 Database Instance,\n   * either by upgrading to a bigger node type (vertical scaling) or by adding\n   * more nodes to your Database Instance to increase your number of endpoints\n   * and distribute cache (horizontal scaling, available for clusters only).\n   * Note that scaling horizontally your Redis\u2122 Database Instance will not renew\n   * its TLS certificate. In order to refresh the TLS certificate, you must use\n   * the Renew TLS certificate endpoint.\n   *\n   * @param request - The request {@link MigrateClusterRequest}\n   * @returns A Promise of Cluster\n   */\n  migrateCluster = request => this.client.fetch({\n    body: JSON.stringify(marshalMigrateClusterRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$a,\n    method: 'POST',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}/migrate`\n  }, unmarshalCluster);\n\n  /**\n   * Delete a Redis\u2122 Database Instance. Delete a Redis\u2122 Database Instance\n   * (Redis\u2122 cluster), specified by the `region` and `cluster_id` parameters.\n   * Deleting a Database Instance is permanent, and cannot be undone. Note that\n   * upon deletion all your data will be lost.\n   *\n   * @param request - The request {@link DeleteClusterRequest}\n   * @returns A Promise of Cluster\n   */\n  deleteCluster = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}`\n  }, unmarshalCluster);\n\n  /**\n   * Get metrics of a Redis\u2122 Database Instance. Retrieve the metrics of a Redis\u2122\n   * Database Instance (Redis\u2122 cluster). You can define the period from which to\n   * retrieve metrics by specifying the `start_date` and `end_date`.\n   *\n   * @param request - The request {@link GetClusterMetricsRequest}\n   * @returns A Promise of ClusterMetricsResponse\n   */\n  getClusterMetrics = request => this.client.fetch({\n    method: 'GET',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}/metrics`,\n    urlParams: urlParams(['end_at', request.endAt], ['metric_name', request.metricName], ['start_at', request.startAt])\n  }, unmarshalClusterMetricsResponse);\n  pageOfListNodeTypes = request => this.client.fetch({\n    method: 'GET',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/node-types`,\n    urlParams: urlParams(['include_disabled_types', request.includeDisabledTypes], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListNodeTypesResponse);\n\n  /**\n   * List available node types. List all available node types. By default, the\n   * node types returned in the list are ordered by creation date in ascending\n   * order, though this can be modified via the `order_by` field.\n   *\n   * @param request - The request {@link ListNodeTypesRequest}\n   * @returns A Promise of ListNodeTypesResponse\n   */\n  listNodeTypes = request => enrichForPagination('nodeTypes', this.pageOfListNodeTypes, request);\n  pageOfListClusterVersions = request => this.client.fetch({\n    method: 'GET',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/cluster-versions`,\n    urlParams: urlParams(['include_beta', request.includeBeta], ['include_deprecated', request.includeDeprecated], ['include_disabled', request.includeDisabled], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['version', request.version])\n  }, unmarshalListClusterVersionsResponse);\n\n  /**\n   * List available Redis\u2122 versions. List the Redis\u2122 database engine versions\n   * available. You can define additional parameters for your query, such as\n   * `include_disabled`, `include_beta`, `include_deprecated` and `version`.\n   *\n   * @param request - The request {@link ListClusterVersionsRequest}\n   * @returns A Promise of ListClusterVersionsResponse\n   */\n  listClusterVersions = request => enrichForPagination('versions', this.pageOfListClusterVersions, request);\n\n  /**\n   * Get the TLS certificate of a cluster. Retrieve information about the TLS\n   * certificate of a Redis\u2122 Database Instance (Redis\u2122 cluster). Details like\n   * name and content are returned in the response.\n   *\n   * @param request - The request {@link GetClusterCertificateRequest}\n   * @returns A Promise of Blob\n   */\n  getClusterCertificate = request => this.client.fetch({\n    method: 'GET',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}/certificate`,\n    urlParams: urlParams(['dl', 1]),\n    responseType: 'blob'\n  });\n\n  /**\n   * Renew the TLS certificate of a cluster. Renew a TLS certificate for a\n   * Redis\u2122 Database Instance (Redis\u2122 cluster). Renewing a certificate means\n   * that you will not be able to connect to your Database Instance using the\n   * previous certificate. You will also need to download and update the new\n   * certificate for all database clients.\n   *\n   * @param request - The request {@link RenewClusterCertificateRequest}\n   * @returns A Promise of Cluster\n   */\n  renewClusterCertificate = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$a,\n    method: 'POST',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}/renew-certificate`\n  }, unmarshalCluster);\n\n  /**\n   * Add advanced settings. Add an advanced setting to a Redis\u2122 Database\n   * Instance (Redis\u2122 cluster). You must set the `name` and the `value` of each\n   * setting.\n   *\n   * @param request - The request {@link AddClusterSettingsRequest}\n   * @returns A Promise of ClusterSettingsResponse\n   */\n  addClusterSettings = request => this.client.fetch({\n    body: JSON.stringify(marshalAddClusterSettingsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$a,\n    method: 'POST',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}/settings`\n  }, unmarshalClusterSettingsResponse);\n\n  /**\n   * Delete advanced setting. Delete an advanced setting in a Redis\u2122 Database\n   * Instance (Redis\u2122 cluster). You must specify the names of the settings you\n   * want to delete in the request body.\n   *\n   * @param request - The request {@link DeleteClusterSettingRequest}\n   * @returns A Promise of Cluster\n   */\n  deleteClusterSetting = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}/settings/${validatePathParam('settingName', request.settingName)}`\n  }, unmarshalCluster);\n\n  /**\n   * Set advanced settings. Update an advanced setting for a Redis\u2122 Database\n   * Instance (Redis\u2122 cluster). Settings added upon database engine\n   * initalization can only be defined once, and cannot, therefore, be updated.\n   *\n   * @param request - The request {@link SetClusterSettingsRequest}\n   * @returns A Promise of ClusterSettingsResponse\n   */\n  setClusterSettings = request => this.client.fetch({\n    body: JSON.stringify(marshalSetClusterSettingsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$a,\n    method: 'PUT',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}/settings`\n  }, unmarshalClusterSettingsResponse);\n\n  /**\n   * Set ACL rules for a cluster. Replace all the ACL rules of a Redis\u2122 Database\n   * Instance (Redis\u2122 cluster).\n   *\n   * @param request - The request {@link SetAclRulesRequest}\n   * @returns A Promise of SetAclRulesResponse\n   */\n  setAclRules = request => this.client.fetch({\n    body: JSON.stringify(marshalSetAclRulesRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$a,\n    method: 'PUT',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}/acls`\n  }, unmarshalSetAclRulesResponse);\n\n  /**\n   * Add ACL rules for a cluster. Add an additional ACL rule to a Redis\u2122\n   * Database Instance (Redis\u2122 cluster).\n   *\n   * @param request - The request {@link AddAclRulesRequest}\n   * @returns A Promise of AddAclRulesResponse\n   */\n  addAclRules = request => this.client.fetch({\n    body: JSON.stringify(marshalAddAclRulesRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$a,\n    method: 'POST',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}/acls`\n  }, unmarshalAddAclRulesResponse);\n\n  /**\n   * Delete an ACL rule for a cluster. Delete an ACL rule of a Redis\u2122 Database\n   * Instance (Redis\u2122 cluster). You must specify the `acl_id` of the rule you\n   * want to delete in your request.\n   *\n   * @param request - The request {@link DeleteAclRuleRequest}\n   * @returns A Promise of Cluster\n   */\n  deleteAclRule = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/acls/${validatePathParam('aclId', request.aclId)}`\n  }, unmarshalCluster);\n\n  /**\n   * Get an ACL rule. Retrieve information about an ACL rule of a Redis\u2122\n   * Database Instance (Redis\u2122 cluster). You must specify the `acl_id` of the\n   * rule in your request.\n   *\n   * @param request - The request {@link GetAclRuleRequest}\n   * @returns A Promise of ACLRule\n   */\n  getAclRule = request => this.client.fetch({\n    method: 'GET',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/acls/${validatePathParam('aclId', request.aclId)}`\n  }, unmarshalACLRule);\n\n  /**\n   * Set endpoints for a cluster. Update an endpoint for a Redis\u2122 Database\n   * Instance (Redis\u2122 cluster). You must specify the `cluster_id` and the\n   * `endpoints` parameters in your request.\n   *\n   * @param request - The request {@link SetEndpointsRequest}\n   * @returns A Promise of SetEndpointsResponse\n   */\n  setEndpoints = request => this.client.fetch({\n    body: JSON.stringify(marshalSetEndpointsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$a,\n    method: 'PUT',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}/endpoints`\n  }, unmarshalSetEndpointsResponse);\n\n  /**\n   * Add endpoints for a cluster. Add a new endpoint for a Redis\u2122 Database\n   * Instance (Redis\u2122 cluster). You can add `private_network` or\n   * `public_network` specifications to the body of the request.\n   *\n   * @param request - The request {@link AddEndpointsRequest}\n   * @returns A Promise of AddEndpointsResponse\n   */\n  addEndpoints = request => this.client.fetch({\n    body: JSON.stringify(marshalAddEndpointsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$a,\n    method: 'POST',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/clusters/${validatePathParam('clusterId', request.clusterId)}/endpoints`\n  }, unmarshalAddEndpointsResponse);\n\n  /**\n   * Delete an endpoint for a cluster. Delete the endpoint of a Redis\u2122 Database\n   * Instance (Redis\u2122 cluster). You must specify the `region` and `endpoint_id`\n   * parameters of the endpoint you want to delete. Note that might need to\n   * update any environment configurations that point to the deleted endpoint.\n   *\n   * @param request - The request {@link DeleteEndpointRequest}\n   * @returns A Promise of Cluster\n   */\n  deleteEndpoint = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/endpoints/${validatePathParam('endpointId', request.endpointId)}`\n  }, unmarshalCluster);\n\n  /**\n   * Get an endpoint. Retrieve information about a Redis\u2122 Database Instance\n   * (Redis\u2122 cluster) endpoint. Full details about the endpoint, like `ips`,\n   * `port`, `private_network` and `public_network` specifications are returned\n   * in the response.\n   *\n   * @param request - The request {@link GetEndpointRequest}\n   * @returns A Promise of Endpoint\n   */\n  getEndpoint = request => this.client.fetch({\n    method: 'GET',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/endpoints/${validatePathParam('endpointId', request.endpointId)}`\n  }, unmarshalEndpoint);\n\n  /**\n   * Update an endpoint. Update information about a Redis\u2122 Database Instance\n   * (Redis\u2122 cluster) endpoint. Full details about the endpoint, like `ips`,\n   * `port`, `private_network` and `public_network` specifications are returned\n   * in the response.\n   *\n   * @param request - The request {@link UpdateEndpointRequest}\n   * @returns A Promise of Endpoint\n   */\n  updateEndpoint = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateEndpointRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$a,\n    method: 'PATCH',\n    path: `/redis/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/endpoints/${validatePathParam('endpointId', request.endpointId)}`\n  }, unmarshalEndpoint);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$b = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$a,\n  CLUSTER_TRANSIENT_STATUSES: CLUSTER_TRANSIENT_STATUSES\n});\n\nvar index$8 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1: index_gen$b\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link ImageStatus}. */\nconst IMAGE_TRANSIENT_STATUSES = ['deleting'];\n\n/** Lists transient statutes of the enum {@link NamespaceStatus}. */\nconst NAMESPACE_TRANSIENT_STATUSES = ['deleting'];\n\n/** Lists transient statutes of the enum {@link TagStatus}. */\nconst TAG_TRANSIENT_STATUSES = ['deleting'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalImage = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Image' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    name: data.name,\n    namespaceId: data.namespace_id,\n    size: data.size,\n    status: data.status,\n    statusMessage: data.status_message,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    visibility: data.visibility\n  };\n};\nconst unmarshalNamespace = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Namespace' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    endpoint: data.endpoint,\n    id: data.id,\n    imageCount: data.image_count,\n    isPublic: data.is_public,\n    name: data.name,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    region: data.region,\n    size: data.size,\n    status: data.status,\n    statusMessage: data.status_message,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalTag = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Tag' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    digest: data.digest,\n    id: data.id,\n    imageId: data.image_id,\n    name: data.name,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalListImagesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListImagesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    images: unmarshalArrayOfObject(data.images, unmarshalImage),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListNamespacesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListNamespacesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    namespaces: unmarshalArrayOfObject(data.namespaces, unmarshalNamespace),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListTagsResponse$2 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTagsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    tags: unmarshalArrayOfObject(data.tags, unmarshalTag),\n    totalCount: data.total_count\n  };\n};\nconst marshalCreateNamespaceRequest = (request, defaults) => ({\n  description: request.description,\n  is_public: request.isPublic,\n  name: request.name || randomName('ns'),\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project_id',\n    value: request.projectId\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization_id',\n    value: request.organizationId\n  }])\n});\nconst marshalUpdateImageRequest = (request, defaults) => ({\n  visibility: request.visibility\n});\nconst marshalUpdateNamespaceRequest = (request, defaults) => ({\n  description: request.description,\n  is_public: request.isPublic\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$9 = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Container Registry API. */\nlet API$9 = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n  pageOfListNamespaces = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/registry/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListNamespacesResponse);\n\n  /**\n   * List namespaces. List all namespaces in a specified region. By default, the\n   * namespaces listed are ordered by creation date in ascending order. This can\n   * be modified via the order_by field. You can also define additional\n   * parameters for your query, such as the `instance_id` and `project_id`\n   * parameters.\n   *\n   * @param request - The request {@link ListNamespacesRequest}\n   * @returns A Promise of ListNamespacesResponse\n   */\n  listNamespaces = (request = {}) => enrichForPagination('namespaces', this.pageOfListNamespaces, request);\n\n  /**\n   * Get a namespace. Retrieve information about a given namespace, specified by\n   * its `namespace_id` and region. Full details about the namespace, such as\n   * `description`, `project_id`, `status`, `endpoint`, `is_public`, `size`, and\n   * `image_count` are returned in the response.\n   *\n   * @param request - The request {@link GetNamespaceRequest}\n   * @returns A Promise of Namespace\n   */\n  getNamespace = request => this.client.fetch({\n    method: 'GET',\n    path: `/registry/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces/${validatePathParam('namespaceId', request.namespaceId)}`\n  }, unmarshalNamespace);\n\n  /**\n   * Waits for {@link Namespace} to be in a final state.\n   *\n   * @param request - The request {@link GetNamespaceRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Namespace\n   */\n  waitForNamespace = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!NAMESPACE_TRANSIENT_STATUSES.includes(res.status))), this.getNamespace, request, options);\n\n  /**\n   * Create a namespace. Create a new Container Registry namespace. You must\n   * specify the namespace name and region in which you want it to be created.\n   * Optionally, you can specify the `project_id` and `is_public` in the request\n   * payload.\n   *\n   * @param request - The request {@link CreateNamespaceRequest}\n   * @returns A Promise of Namespace\n   */\n  createNamespace = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateNamespaceRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$9,\n    method: 'POST',\n    path: `/registry/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces`\n  }, unmarshalNamespace);\n\n  /**\n   * Update a namespace. Update the parameters of a given namespace, specified\n   * by its `namespace_id` and `region`. You can update the `description` and\n   * `is_public` parameters.\n   *\n   * @param request - The request {@link UpdateNamespaceRequest}\n   * @returns A Promise of Namespace\n   */\n  updateNamespace = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateNamespaceRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$9,\n    method: 'PATCH',\n    path: `/registry/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces/${validatePathParam('namespaceId', request.namespaceId)}`\n  }, unmarshalNamespace);\n\n  /**\n   * Delete a namespace. Delete a given namespace. You must specify, in the\n   * endpoint, the `region` and `namespace_id` parameters of the namespace you\n   * want to delete.\n   *\n   * @param request - The request {@link DeleteNamespaceRequest}\n   * @returns A Promise of Namespace\n   */\n  deleteNamespace = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/registry/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/namespaces/${validatePathParam('namespaceId', request.namespaceId)}`\n  }, unmarshalNamespace);\n  pageOfListImages = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/registry/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/images`,\n    urlParams: urlParams(['name', request.name], ['namespace_id', request.namespaceId], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListImagesResponse);\n\n  /**\n   * List images. List all images in a specified region. By default, the images\n   * listed are ordered by creation date in ascending order. This can be\n   * modified via the order_by field. You can also define additional parameters\n   * for your query, such as the `namespace_id` and `project_id` parameters.\n   *\n   * @param request - The request {@link ListImagesRequest}\n   * @returns A Promise of ListImagesResponse\n   */\n  listImages = (request = {}) => enrichForPagination('images', this.pageOfListImages, request);\n\n  /**\n   * Get an image. Retrieve information about a given container image, specified\n   * by its `image_id` and region. Full details about the image, such as `name`,\n   * `namespace_id`, `status`, `visibility`, and `size` are returned in the\n   * response.\n   *\n   * @param request - The request {@link GetImageRequest}\n   * @returns A Promise of Image\n   */\n  getImage = request => this.client.fetch({\n    method: 'GET',\n    path: `/registry/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/images/${validatePathParam('imageId', request.imageId)}`\n  }, unmarshalImage);\n\n  /**\n   * Waits for {@link Image} to be in a final state.\n   *\n   * @param request - The request {@link GetImageRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Image\n   */\n  waitForImage = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!IMAGE_TRANSIENT_STATUSES.includes(res.status))), this.getImage, request, options);\n\n  /**\n   * Update an image. Update the parameters of a given image, specified by its\n   * `image_id` and `region`. You can update the `visibility` parameter.\n   *\n   * @param request - The request {@link UpdateImageRequest}\n   * @returns A Promise of Image\n   */\n  updateImage = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateImageRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$9,\n    method: 'PATCH',\n    path: `/registry/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/images/${validatePathParam('imageId', request.imageId)}`\n  }, unmarshalImage);\n\n  /**\n   * Delete an image. Delete a given image. You must specify, in the endpoint,\n   * the `region` and `image_id` parameters of the image you want to delete.\n   *\n   * @param request - The request {@link DeleteImageRequest}\n   * @returns A Promise of Image\n   */\n  deleteImage = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/registry/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/images/${validatePathParam('imageId', request.imageId)}`\n  }, unmarshalImage);\n  pageOfListTags = request => this.client.fetch({\n    method: 'GET',\n    path: `/registry/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/images/${validatePathParam('imageId', request.imageId)}/tags`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListTagsResponse$2);\n\n  /**\n   * List tags. List all tags for a given image, specified by region. By\n   * default, the tags listed are ordered by creation date in ascending order.\n   * This can be modified via the order_by field. You can also define additional\n   * parameters for your query, such as the `name`.\n   *\n   * @param request - The request {@link ListTagsRequest}\n   * @returns A Promise of ListTagsResponse\n   */\n  listTags = request => enrichForPagination('tags', this.pageOfListTags, request);\n\n  /**\n   * Get a tag. Retrieve information about a given image tag, specified by its\n   * `tag_id` and region. Full details about the tag, such as `name`,\n   * `image_id`, `status`, and `digest` are returned in the response.\n   *\n   * @param request - The request {@link GetTagRequest}\n   * @returns A Promise of Tag\n   */\n  getTag = request => this.client.fetch({\n    method: 'GET',\n    path: `/registry/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/tags/${validatePathParam('tagId', request.tagId)}`\n  }, unmarshalTag);\n\n  /**\n   * Waits for {@link Tag} to be in a final state.\n   *\n   * @param request - The request {@link GetTagRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Tag\n   */\n  waitForTag = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!TAG_TRANSIENT_STATUSES.includes(res.status))), this.getTag, request, options);\n\n  /**\n   * Delete a tag. Delete a given image tag. You must specify, in the endpoint,\n   * the `region` and `tag_id` parameters of the tag you want to delete.\n   *\n   * @param request - The request {@link DeleteTagRequest}\n   * @returns A Promise of Tag\n   */\n  deleteTag = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/registry/v1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/tags/${validatePathParam('tagId', request.tagId)}`,\n    urlParams: urlParams(['force', request.force])\n  }, unmarshalTag);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$a = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$9,\n  IMAGE_TRANSIENT_STATUSES: IMAGE_TRANSIENT_STATUSES,\n  NAMESPACE_TRANSIENT_STATUSES: NAMESPACE_TRANSIENT_STATUSES,\n  TAG_TRANSIENT_STATUSES: TAG_TRANSIENT_STATUSES\n});\n\nvar index$7 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1: index_gen$a\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalFolder = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Folder' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    name: data.name,\n    path: data.path,\n    projectId: data.project_id,\n    region: data.region\n  };\n};\nconst unmarshalEphemeralProperties$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EphemeralProperties' failed as data isn't a dictionary.`);\n  }\n  return {\n    action: data.action,\n    expiresAt: unmarshalDate(data.expires_at),\n    expiresOnceAccessed: data.expires_once_accessed\n  };\n};\nconst unmarshalSecretVersion$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SecretVersion' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    ephemeralProperties: data.ephemeral_properties ? unmarshalEphemeralProperties$1(data.ephemeral_properties) : undefined,\n    isLatest: data.is_latest,\n    revision: data.revision,\n    secretId: data.secret_id,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalEphemeralPolicy$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EphemeralPolicy' failed as data isn't a dictionary.`);\n  }\n  return {\n    action: data.action,\n    expiresOnceAccessed: data.expires_once_accessed,\n    timeToLive: data.time_to_live\n  };\n};\nconst unmarshalSecret$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Secret' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    ephemeralPolicy: data.ephemeral_policy ? unmarshalEphemeralPolicy$1(data.ephemeral_policy) : undefined,\n    id: data.id,\n    isManaged: data.is_managed,\n    isProtected: data.is_protected,\n    name: data.name,\n    path: data.path,\n    projectId: data.project_id,\n    region: data.region,\n    status: data.status,\n    tags: data.tags,\n    type: data.type,\n    updatedAt: unmarshalDate(data.updated_at),\n    versionCount: data.version_count\n  };\n};\nconst unmarshalAccessSecretVersionResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AccessSecretVersionResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    data: data.data,\n    dataCrc32: data.data_crc32,\n    revision: data.revision,\n    secretId: data.secret_id\n  };\n};\nconst unmarshalListFoldersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListFoldersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    folders: unmarshalArrayOfObject(data.folders, unmarshalFolder),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSecretVersionsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSecretVersionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    versions: unmarshalArrayOfObject(data.versions, unmarshalSecretVersion$1)\n  };\n};\nconst unmarshalListSecretsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSecretsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    secrets: unmarshalArrayOfObject(data.secrets, unmarshalSecret$1),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListTagsResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTagsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    tags: data.tags,\n    totalCount: data.total_count\n  };\n};\nconst marshalAddSecretOwnerRequest$1 = (request, defaults) => ({\n  product: request.product,\n  product_name: request.productName\n});\nconst marshalCreateFolderRequest = (request, defaults) => ({\n  name: request.name,\n  path: request.path,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalEphemeralPolicy$1 = (request, defaults) => ({\n  action: request.action,\n  expires_once_accessed: request.expiresOnceAccessed,\n  time_to_live: request.timeToLive\n});\nconst marshalCreateSecretRequest$1 = (request, defaults) => ({\n  description: request.description,\n  ephemeral_policy: request.ephemeralPolicy !== undefined ? marshalEphemeralPolicy$1(request.ephemeralPolicy) : undefined,\n  is_protected: request.isProtected,\n  name: request.name,\n  path: request.path,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  tags: request.tags,\n  type: request.type\n});\nconst marshalPasswordGenerationParams = (request, defaults) => ({\n  additional_chars: request.additionalChars,\n  length: request.length,\n  no_digits: request.noDigits,\n  no_lowercase_letters: request.noLowercaseLetters,\n  no_uppercase_letters: request.noUppercaseLetters\n});\nconst marshalCreateSecretVersionRequest$1 = (request, defaults) => ({\n  data: request.data,\n  data_crc32: request.dataCrc32,\n  description: request.description,\n  disable_previous: request.disablePrevious,\n  password_generation: request.passwordGeneration !== undefined ? marshalPasswordGenerationParams(request.passwordGeneration) : undefined\n});\nconst marshalGeneratePasswordRequest = (request, defaults) => ({\n  additional_chars: request.additionalChars,\n  description: request.description,\n  disable_previous: request.disablePrevious,\n  length: request.length,\n  no_digits: request.noDigits,\n  no_lowercase_letters: request.noLowercaseLetters,\n  no_uppercase_letters: request.noUppercaseLetters\n});\nconst marshalUpdateSecretRequest$1 = (request, defaults) => ({\n  description: request.description,\n  ephemeral_policy: request.ephemeralPolicy !== undefined ? marshalEphemeralPolicy$1(request.ephemeralPolicy) : undefined,\n  name: request.name,\n  path: request.path,\n  tags: request.tags\n});\nconst marshalEphemeralProperties$1 = (request, defaults) => ({\n  action: request.action,\n  expires_at: request.expiresAt,\n  expires_once_accessed: request.expiresOnceAccessed\n});\nconst marshalUpdateSecretVersionRequest$1 = (request, defaults) => ({\n  description: request.description,\n  ephemeral_properties: request.ephemeralProperties !== undefined ? marshalEphemeralProperties$1(request.ephemeralProperties) : undefined\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$8 = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * Secret Manager API.\n *\n * Secret Manager API. This API allows you to conveniently store, access and\n * share sensitive data.\n */\nlet API$8 = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n\n  /**\n   * Create a secret. You must specify the `region` to create a secret.\n   *\n   * @param request - The request {@link CreateSecretRequest}\n   * @returns A Promise of Secret\n   */\n  createSecret = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateSecretRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$8,\n    method: 'POST',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets`\n  }, unmarshalSecret$1);\n\n  /**\n   * Create folder.\n   *\n   * @param request - The request {@link CreateFolderRequest}\n   * @returns A Promise of Folder\n   */\n  createFolder = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateFolderRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$8,\n    method: 'POST',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/folders`\n  }, unmarshalFolder);\n\n  /**\n   * Get metadata using the secret's ID. Retrieve the metadata of a secret\n   * specified by the `region` and `secret_id` parameters.\n   *\n   * @param request - The request {@link GetSecretRequest}\n   * @returns A Promise of Secret\n   */\n  getSecret = request => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}`\n  }, unmarshalSecret$1);\n\n  /**\n   * Get metadata using the secret's name. Retrieve the metadata of a secret\n   * specified by the `region` and `secret_name` parameters.\n   *\n   * GetSecretByName usage is now deprecated.\n   *\n   * Scaleway recommends that you use the `ListSecrets` request with the `name`\n   * filter.\n   *\n   * @deprecated\n   * @param request - The request {@link GetSecretByNameRequest}\n   * @returns A Promise of Secret\n   */\n  getSecretByName = request => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets-by-name/${validatePathParam('secretName', request.secretName)}`,\n    urlParams: urlParams(['project_id', request.projectId])\n  }, unmarshalSecret$1);\n\n  /**\n   * Update metadata of a secret. Edit a secret's metadata such as name, tag(s),\n   * description and ephemeral policy. The secret to update is specified by the\n   * `secret_id` and `region` parameters.\n   *\n   * @param request - The request {@link UpdateSecretRequest}\n   * @returns A Promise of Secret\n   */\n  updateSecret = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateSecretRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$8,\n    method: 'PATCH',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}`\n  }, unmarshalSecret$1);\n  pageOfListSecrets = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets`,\n    urlParams: urlParams(['is_ephemeral', request.isEphemeral], ['is_managed', request.isManaged], ['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['path', request.path], ['project_id', request.projectId], ['tags', request.tags])\n  }, unmarshalListSecretsResponse$1);\n\n  /**\n   * List secrets. Retrieve the list of secrets created within an Organization\n   * and/or Project. You must specify either the `organization_id` or the\n   * `project_id` and the `region`.\n   *\n   * @param request - The request {@link ListSecretsRequest}\n   * @returns A Promise of ListSecretsResponse\n   */\n  listSecrets = (request = {}) => enrichForPagination('secrets', this.pageOfListSecrets, request);\n  pageOfListFolders = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/folders`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['path', request.path], ['project_id', request.projectId])\n  }, unmarshalListFoldersResponse);\n\n  /**\n   * List folders. Retrieve the list of folders created within a Project.\n   *\n   * @param request - The request {@link ListFoldersRequest}\n   * @returns A Promise of ListFoldersResponse\n   */\n  listFolders = (request = {}) => enrichForPagination('folders', this.pageOfListFolders, request);\n\n  /**\n   * Delete a secret. Delete a given secret specified by the `region` and\n   * `secret_id` parameters.\n   *\n   * @param request - The request {@link DeleteSecretRequest}\n   */\n  deleteSecret = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}`\n  });\n\n  /**\n   * Delete a given folder specified by the `region` and `folder_id` parameters.\n   *\n   * @param request - The request {@link DeleteFolderRequest}\n   */\n  deleteFolder = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/folders/${validatePathParam('folderId', request.folderId)}`\n  });\n\n  /**\n   * Protect a secret. Protect a given secret specified by the `secret_id`\n   * parameter. A protected secret can be read and modified but cannot be\n   * deleted.\n   *\n   * @param request - The request {@link ProtectSecretRequest}\n   * @returns A Promise of Secret\n   */\n  protectSecret = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$8,\n    method: 'POST',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/protect`\n  }, unmarshalSecret$1);\n\n  /**\n   * Unprotect a secret. Unprotect a given secret specified by the `secret_id`\n   * parameter. An unprotected secret can be read, modified and deleted.\n   *\n   * @param request - The request {@link UnprotectSecretRequest}\n   * @returns A Promise of Secret\n   */\n  unprotectSecret = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$8,\n    method: 'POST',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/unprotect`\n  }, unmarshalSecret$1);\n\n  /**\n   * Allow a product to use the secret.\n   *\n   * @param request - The request {@link AddSecretOwnerRequest}\n   */\n  addSecretOwner = request => this.client.fetch({\n    body: JSON.stringify(marshalAddSecretOwnerRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$8,\n    method: 'POST',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/add-owner`\n  });\n\n  /**\n   * Create a version. Create a version of a given secret specified by the\n   * `region` and `secret_id` parameters.\n   *\n   * @param request - The request {@link CreateSecretVersionRequest}\n   * @returns A Promise of SecretVersion\n   */\n  createSecretVersion = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateSecretVersionRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$8,\n    method: 'POST',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions`\n  }, unmarshalSecretVersion$1);\n\n  /**\n   * Generate a password in a new version. Generate a password for the given\n   * secret specified by the `region` and `secret_id` parameters. This will also\n   * create a new version of the secret that will store the password.\n   *\n   * @param request - The request {@link GeneratePasswordRequest}\n   * @returns A Promise of SecretVersion\n   */\n  generatePassword = request => this.client.fetch({\n    body: JSON.stringify(marshalGeneratePasswordRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$8,\n    method: 'POST',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/generate-password`\n  }, unmarshalSecretVersion$1);\n\n  /**\n   * Get metadata of a secret's version using the secret's ID. Retrieve the\n   * metadata of a secret's given version specified by the `region`, `secret_id`\n   * and `revision` parameters.\n   *\n   * @param request - The request {@link GetSecretVersionRequest}\n   * @returns A Promise of SecretVersion\n   */\n  getSecretVersion = request => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions/${validatePathParam('revision', request.revision)}`\n  }, unmarshalSecretVersion$1);\n\n  /**\n   * Get metadata of a secret's version using the secret's name. Retrieve the\n   * metadata of a secret's given version specified by the `region`,\n   * `secret_name`, `revision` and `project_id` parameters.\n   *\n   * This method is deprecated.\n   *\n   * Scaleway recommends that you use the `ListSecrets` request with the `name`\n   * filter to specify the secret version desired, then use the\n   * `GetSecretVersion` request.\n   *\n   * @deprecated\n   * @param request - The request {@link GetSecretVersionByNameRequest}\n   * @returns A Promise of SecretVersion\n   */\n  getSecretVersionByName = request => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets-by-name/${validatePathParam('secretName', request.secretName)}/versions/${validatePathParam('revision', request.revision)}`,\n    urlParams: urlParams(['project_id', request.projectId])\n  }, unmarshalSecretVersion$1);\n\n  /**\n   * Update metadata of a version. Edit the metadata of a secret's given\n   * version, specified by the `region`, `secret_id` and `revision` parameters.\n   *\n   * @param request - The request {@link UpdateSecretVersionRequest}\n   * @returns A Promise of SecretVersion\n   */\n  updateSecretVersion = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateSecretVersionRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$8,\n    method: 'PATCH',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions/${validatePathParam('revision', request.revision)}`\n  }, unmarshalSecretVersion$1);\n  pageOfListSecretVersions = request => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['status', request.status])\n  }, unmarshalListSecretVersionsResponse$1);\n\n  /**\n   * List versions of a secret using the secret's ID. Retrieve the list of a\n   * given secret's versions specified by the `secret_id` and `region`\n   * parameters.\n   *\n   * @param request - The request {@link ListSecretVersionsRequest}\n   * @returns A Promise of ListSecretVersionsResponse\n   */\n  listSecretVersions = request => enrichForPagination('versions', this.pageOfListSecretVersions, request);\n  pageOfListSecretVersionsByName = request => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets-by-name/${validatePathParam('secretName', request.secretName)}/versions`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['status', request.status])\n  }, unmarshalListSecretVersionsResponse$1);\n\n  /**\n   * List versions of a secret using the secret's name. Retrieve the list of a\n   * given secret's versions specified by the `secret_name`,`region` and\n   * `project_id` parameters.\n   *\n   * This method is deprecated.\n   *\n   * Scaleway recommends that you use the `ListSecrets` request with the `name`\n   * filter to specify the secret version desired, then use the\n   * `ListSecretVersions` request.\n   *\n   * @deprecated\n   * @param request - The request {@link ListSecretVersionsByNameRequest}\n   * @returns A Promise of ListSecretVersionsResponse\n   */\n  listSecretVersionsByName = request => enrichForPagination('versions', this.pageOfListSecretVersionsByName, request);\n\n  /**\n   * Enable a version. Make a specific version accessible. You must specify the\n   * `region`, `secret_id` and `revision` parameters.\n   *\n   * @param request - The request {@link EnableSecretVersionRequest}\n   * @returns A Promise of SecretVersion\n   */\n  enableSecretVersion = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$8,\n    method: 'POST',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions/${validatePathParam('revision', request.revision)}/enable`\n  }, unmarshalSecretVersion$1);\n\n  /**\n   * Disable a version. Make a specific version inaccessible. You must specify\n   * the `region`, `secret_id` and `revision` parameters.\n   *\n   * @param request - The request {@link DisableSecretVersionRequest}\n   * @returns A Promise of SecretVersion\n   */\n  disableSecretVersion = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$8,\n    method: 'POST',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions/${validatePathParam('revision', request.revision)}/disable`\n  }, unmarshalSecretVersion$1);\n\n  /**\n   * Access a secret's version using the secret's ID. Access sensitive data in a\n   * secret's version specified by the `region`, `secret_id` and `revision`\n   * parameters.\n   *\n   * @param request - The request {@link AccessSecretVersionRequest}\n   * @returns A Promise of AccessSecretVersionResponse\n   */\n  accessSecretVersion = request => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions/${validatePathParam('revision', request.revision)}/access`\n  }, unmarshalAccessSecretVersionResponse$1);\n\n  /**\n   * Access a secret's version using the secret's name. Access sensitive data in\n   * a secret's version specified by the `region`, `secret_name`, `revision` and\n   * `project_id` parameters.\n   *\n   * This method is deprecated.\n   *\n   * Scaleway recommends that you use the `ListSecrets` request with the `name`\n   * filter to specify the secret version desired, then use the\n   * `AccessSecretVersion` request.\n   *\n   * @deprecated\n   * @param request - The request {@link AccessSecretVersionByNameRequest}\n   * @returns A Promise of AccessSecretVersionResponse\n   */\n  accessSecretVersionByName = request => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets-by-name/${validatePathParam('secretName', request.secretName)}/versions/${validatePathParam('revision', request.revision)}/access`,\n    urlParams: urlParams(['project_id', request.projectId])\n  }, unmarshalAccessSecretVersionResponse$1);\n\n  /**\n   * Delete a version. Delete a secret's version and the sensitive data\n   * contained in it. Deleting a version is permanent and cannot be undone.\n   *\n   * @param request - The request {@link DestroySecretVersionRequest}\n   * @returns A Promise of SecretVersion\n   */\n  destroySecretVersion = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$8,\n    method: 'POST',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions/${validatePathParam('revision', request.revision)}/destroy`\n  }, unmarshalSecretVersion$1);\n  pageOfListTags = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/tags`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListTagsResponse$1);\n\n  /**\n   * List tags. List all tags associated with secrets within a given Project.\n   *\n   * @param request - The request {@link ListTagsRequest}\n   * @returns A Promise of ListTagsResponse\n   */\n  listTags = (request = {}) => enrichForPagination('tags', this.pageOfListTags, request);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$9 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$8\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalEphemeralProperties = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EphemeralProperties' failed as data isn't a dictionary.`);\n  }\n  return {\n    action: data.action,\n    expiresAt: unmarshalDate(data.expires_at),\n    expiresOnceAccessed: data.expires_once_accessed\n  };\n};\nconst unmarshalSecretVersion = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SecretVersion' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    ephemeralProperties: data.ephemeral_properties ? unmarshalEphemeralProperties(data.ephemeral_properties) : undefined,\n    latest: data.latest,\n    revision: data.revision,\n    secretId: data.secret_id,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalEphemeralPolicy = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EphemeralPolicy' failed as data isn't a dictionary.`);\n  }\n  return {\n    action: data.action,\n    expiresOnceAccessed: data.expires_once_accessed,\n    timeToLive: data.time_to_live\n  };\n};\nconst unmarshalSecret = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Secret' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    description: data.description,\n    ephemeralPolicy: data.ephemeral_policy ? unmarshalEphemeralPolicy(data.ephemeral_policy) : undefined,\n    id: data.id,\n    managed: data.managed,\n    name: data.name,\n    path: data.path,\n    projectId: data.project_id,\n    protected: data.protected,\n    region: data.region,\n    status: data.status,\n    tags: data.tags,\n    type: data.type,\n    updatedAt: unmarshalDate(data.updated_at),\n    versionCount: data.version_count\n  };\n};\nconst unmarshalAccessSecretVersionResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AccessSecretVersionResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    data: data.data,\n    dataCrc32: data.data_crc32,\n    revision: data.revision,\n    secretId: data.secret_id,\n    type: data.type\n  };\n};\nconst unmarshalBrowseSecretsResponseItemFolderDetails = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'BrowseSecretsResponseItemFolderDetails' failed as data isn't a dictionary.`);\n  }\n  return {};\n};\nconst unmarshalBrowseSecretsResponseItemSecretDetails = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'BrowseSecretsResponseItemSecretDetails' failed as data isn't a dictionary.`);\n  }\n  return {\n    ephemeralPolicy: data.ephemeral_policy ? unmarshalEphemeralPolicy(data.ephemeral_policy) : undefined,\n    id: data.id,\n    protected: data.protected,\n    tags: data.tags,\n    versionCount: data.version_count\n  };\n};\nconst unmarshalBrowseSecretsResponseItem = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'BrowseSecretsResponseItem' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    folder: data.folder ? unmarshalBrowseSecretsResponseItemFolderDetails(data.folder) : undefined,\n    name: data.name,\n    secret: data.secret ? unmarshalBrowseSecretsResponseItemSecretDetails(data.secret) : undefined,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalBrowseSecretsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'BrowseSecretsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    currentPath: data.current_path,\n    items: unmarshalArrayOfObject(data.items, unmarshalBrowseSecretsResponseItem),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListSecretVersionsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSecretVersionsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    versions: unmarshalArrayOfObject(data.versions, unmarshalSecretVersion)\n  };\n};\nconst unmarshalListSecretsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListSecretsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    secrets: unmarshalArrayOfObject(data.secrets, unmarshalSecret),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListTagsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListTagsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    tags: data.tags,\n    totalCount: data.total_count\n  };\n};\nconst marshalAddSecretOwnerRequest = (request, defaults) => ({\n  product: request.product\n});\nconst marshalEphemeralPolicy = (request, defaults) => ({\n  action: request.action,\n  expires_once_accessed: request.expiresOnceAccessed,\n  time_to_live: request.timeToLive\n});\nconst marshalCreateSecretRequest = (request, defaults) => ({\n  description: request.description,\n  ephemeral_policy: request.ephemeralPolicy !== undefined ? marshalEphemeralPolicy(request.ephemeralPolicy) : undefined,\n  name: request.name,\n  path: request.path,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  protected: request.protected,\n  tags: request.tags,\n  type: request.type\n});\nconst marshalCreateSecretVersionRequest = (request, defaults) => ({\n  data: request.data,\n  data_crc32: request.dataCrc32,\n  description: request.description,\n  disable_previous: request.disablePrevious\n});\nconst marshalUpdateSecretRequest = (request, defaults) => ({\n  description: request.description,\n  ephemeral_policy: request.ephemeralPolicy !== undefined ? marshalEphemeralPolicy(request.ephemeralPolicy) : undefined,\n  name: request.name,\n  path: request.path,\n  tags: request.tags\n});\nconst marshalEphemeralProperties = (request, defaults) => ({\n  action: request.action,\n  expires_at: request.expiresAt,\n  expires_once_accessed: request.expiresOnceAccessed\n});\nconst marshalUpdateSecretVersionRequest = (request, defaults) => ({\n  description: request.description,\n  ephemeral_properties: request.ephemeralProperties !== undefined ? marshalEphemeralProperties(request.ephemeralProperties) : undefined\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$7 = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * Secret Manager API.\n *\n * This API allows you to conveniently store, access and share sensitive data\n * such as passwords, API keys and certificates.\n */\nlet API$7 = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n\n  /**\n   * Create a secret. Create a secret in a given region specified by the\n   * `region` parameter.\n   *\n   * @param request - The request {@link CreateSecretRequest}\n   * @returns A Promise of Secret\n   */\n  createSecret = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateSecretRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$7,\n    method: 'POST',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets`\n  }, unmarshalSecret);\n\n  /**\n   * Get metadata using the secret's ID. Retrieve the metadata of a secret\n   * specified by the `region` and `secret_id` parameters.\n   *\n   * @param request - The request {@link GetSecretRequest}\n   * @returns A Promise of Secret\n   */\n  getSecret = request => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}`\n  }, unmarshalSecret);\n\n  /**\n   * Update metadata of a secret. Edit a secret's metadata such as name, tag(s),\n   * description and ephemeral policy. The secret to update is specified by the\n   * `secret_id` and `region` parameters.\n   *\n   * @param request - The request {@link UpdateSecretRequest}\n   * @returns A Promise of Secret\n   */\n  updateSecret = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateSecretRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$7,\n    method: 'PATCH',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}`\n  }, unmarshalSecret);\n\n  /**\n   * Delete a secret. Delete a given secret specified by the `region` and\n   * `secret_id` parameters.\n   *\n   * @param request - The request {@link DeleteSecretRequest}\n   */\n  deleteSecret = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}`\n  });\n  pageOfListSecrets = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets`,\n    urlParams: urlParams(['ephemeral', request.ephemeral], ['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['path', request.path], ['project_id', request.projectId], ['tags', request.tags], ['type', request.type])\n  }, unmarshalListSecretsResponse);\n\n  /**\n   * List secrets. Retrieve the list of secrets created within an Organization\n   * and/or Project. You must specify either the `organization_id` or the\n   * `project_id` and the `region`.\n   *\n   * @param request - The request {@link ListSecretsRequest}\n   * @returns A Promise of ListSecretsResponse\n   */\n  listSecrets = (request = {}) => enrichForPagination('secrets', this.pageOfListSecrets, request);\n\n  /**\n   * Browse secrets. Retrieve the list of secrets and folders for the given\n   * prefix. You must specify either the `organization_id` or the `project_id`\n   * and the `region`.\n   *\n   * @param request - The request {@link BrowseSecretsRequest}\n   * @returns A Promise of BrowseSecretsResponse\n   */\n  browseSecrets = request => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/browse`,\n    urlParams: urlParams(['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['prefix', request.prefix], ['project_id', request.projectId], ['tags', request.tags])\n  }, unmarshalBrowseSecretsResponse);\n\n  /**\n   * Enable secret protection. Enable secret protection for a given secret\n   * specified by the `secret_id` parameter. Enabling secret protection means\n   * that your secret can be read and modified, but it cannot be deleted.\n   *\n   * @param request - The request {@link ProtectSecretRequest}\n   * @returns A Promise of Secret\n   */\n  protectSecret = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$7,\n    method: 'POST',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/protect`\n  }, unmarshalSecret);\n\n  /**\n   * Disable secret protection. Disable secret protection for a given secret\n   * specified by the `secret_id` parameter. Disabling secret protection means\n   * that your secret can be read, modified and deleted.\n   *\n   * @param request - The request {@link UnprotectSecretRequest}\n   * @returns A Promise of Secret\n   */\n  unprotectSecret = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$7,\n    method: 'POST',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/unprotect`\n  }, unmarshalSecret);\n\n  /**\n   * Allow a product to use the secret.\n   *\n   * @param request - The request {@link AddSecretOwnerRequest}\n   */\n  addSecretOwner = request => this.client.fetch({\n    body: JSON.stringify(marshalAddSecretOwnerRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$7,\n    method: 'POST',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/add-owner`\n  });\n\n  /**\n   * Create a version. Create a version of a given secret specified by the\n   * `region` and `secret_id` parameters.\n   *\n   * @param request - The request {@link CreateSecretVersionRequest}\n   * @returns A Promise of SecretVersion\n   */\n  createSecretVersion = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateSecretVersionRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$7,\n    method: 'POST',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions`\n  }, unmarshalSecretVersion);\n\n  /**\n   * Get metadata of a secret's version using the secret's ID. Retrieve the\n   * metadata of a secret's given version specified by the `region`, `secret_id`\n   * and `revision` parameters.\n   *\n   * @param request - The request {@link GetSecretVersionRequest}\n   * @returns A Promise of SecretVersion\n   */\n  getSecretVersion = request => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions/${validatePathParam('revision', request.revision)}`\n  }, unmarshalSecretVersion);\n\n  /**\n   * Update metadata of a version. Edit the metadata of a secret's given\n   * version, specified by the `region`, `secret_id` and `revision` parameters.\n   *\n   * @param request - The request {@link UpdateSecretVersionRequest}\n   * @returns A Promise of SecretVersion\n   */\n  updateSecretVersion = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateSecretVersionRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$7,\n    method: 'PATCH',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions/${validatePathParam('revision', request.revision)}`\n  }, unmarshalSecretVersion);\n\n  /**\n   * Delete a version. Delete a secret's version and the sensitive data\n   * contained in it. Deleting a version is permanent and cannot be undone.\n   *\n   * @param request - The request {@link DeleteSecretVersionRequest}\n   */\n  deleteSecretVersion = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions/${validatePathParam('revision', request.revision)}`\n  });\n  pageOfListSecretVersions = request => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['status', request.status])\n  }, unmarshalListSecretVersionsResponse);\n\n  /**\n   * List versions of a secret using the secret's ID. Retrieve the list of a\n   * given secret's versions specified by the `secret_id` and `region`\n   * parameters.\n   *\n   * @param request - The request {@link ListSecretVersionsRequest}\n   * @returns A Promise of ListSecretVersionsResponse\n   */\n  listSecretVersions = request => enrichForPagination('versions', this.pageOfListSecretVersions, request);\n\n  /**\n   * Access a secret's version using the secret's ID. Access sensitive data in a\n   * secret's version specified by the `region`, `secret_id` and `revision`\n   * parameters.\n   *\n   * @param request - The request {@link AccessSecretVersionRequest}\n   * @returns A Promise of AccessSecretVersionResponse\n   */\n  accessSecretVersion = request => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions/${validatePathParam('revision', request.revision)}/access`\n  }, unmarshalAccessSecretVersionResponse);\n\n  /**\n   * Enable a version. Make a specific version accessible. You must specify the\n   * `region`, `secret_id` and `revision` parameters.\n   *\n   * @param request - The request {@link EnableSecretVersionRequest}\n   * @returns A Promise of SecretVersion\n   */\n  enableSecretVersion = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$7,\n    method: 'POST',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions/${validatePathParam('revision', request.revision)}/enable`\n  }, unmarshalSecretVersion);\n\n  /**\n   * Disable a version. Make a specific version inaccessible. You must specify\n   * the `region`, `secret_id` and `revision` parameters.\n   *\n   * @param request - The request {@link DisableSecretVersionRequest}\n   * @returns A Promise of SecretVersion\n   */\n  disableSecretVersion = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$7,\n    method: 'POST',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/secrets/${validatePathParam('secretId', request.secretId)}/versions/${validatePathParam('revision', request.revision)}/disable`\n  }, unmarshalSecretVersion);\n  pageOfListTags = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/secret-manager/v1beta1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/tags`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalListTagsResponse);\n\n  /**\n   * List tags. List all tags associated with secrets within a given Project.\n   *\n   * @param request - The request {@link ListTagsRequest}\n   * @returns A Promise of ListTagsResponse\n   */\n  listTags = (request = {}) => enrichForPagination('tags', this.pageOfListTags, request);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$8 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$7\n});\n\nvar index$6 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1alpha1: index_gen$9,\n  v1beta1: index_gen$8\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link DatabaseStatus}. */\nconst DATABASE_TRANSIENT_STATUSES = ['creating', 'deleting', 'restoring'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalDatabaseBackup = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DatabaseBackup' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    databaseId: data.database_id,\n    downloadUrl: data.download_url,\n    downloadUrlExpiresAt: unmarshalDate(data.download_url_expires_at),\n    expiresAt: unmarshalDate(data.expires_at),\n    id: data.id,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    region: data.region,\n    size: data.size,\n    status: data.status\n  };\n};\nconst unmarshalDatabase = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Database' failed as data isn't a dictionary.`);\n  }\n  return {\n    cpuCurrent: data.cpu_current,\n    cpuMax: data.cpu_max,\n    cpuMin: data.cpu_min,\n    createdAt: unmarshalDate(data.created_at),\n    endpoint: data.endpoint,\n    engineMajorVersion: data.engine_major_version,\n    id: data.id,\n    name: data.name,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    region: data.region,\n    started: data.started,\n    status: data.status\n  };\n};\nconst unmarshalListDatabaseBackupsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDatabaseBackupsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    backups: unmarshalArrayOfObject(data.backups, unmarshalDatabaseBackup),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListDatabasesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDatabasesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    databases: unmarshalArrayOfObject(data.databases, unmarshalDatabase),\n    totalCount: data.total_count\n  };\n};\nconst marshalCreateDatabaseRequest = (request, defaults) => ({\n  cpu_max: request.cpuMax,\n  cpu_min: request.cpuMin,\n  from_backup_id: request.fromBackupId,\n  name: request.name,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalRestoreDatabaseFromBackupRequest = (request, defaults) => ({\n  backup_id: request.backupId\n});\nconst marshalUpdateDatabaseRequest = (request, defaults) => ({\n  cpu_max: request.cpuMax,\n  cpu_min: request.cpuMin\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$6 = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * Serverless SQL Databases API.\n *\n * This API allows you to manage your Serverless SQL DB databases.\n */\nlet API$6 = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par'];\n\n  /**\n   * Create a new Serverless SQL Database. You must provide the following\n   * parameters: `organization_id`, `project_id`, `name`, `cpu_min`, `cpu_max`.\n   * You can also provide `from_backup_id` to create a database from a backup.\n   *\n   * @param request - The request {@link CreateDatabaseRequest}\n   * @returns A Promise of Database\n   */\n  createDatabase = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateDatabaseRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$6,\n    method: 'POST',\n    path: `/serverless-sqldb/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/databases`\n  }, unmarshalDatabase);\n\n  /**\n   * Get a database information. Retrieve information about your Serverless SQL\n   * Database. You must provide the `database_id` parameter.\n   *\n   * @param request - The request {@link GetDatabaseRequest}\n   * @returns A Promise of Database\n   */\n  getDatabase = request => this.client.fetch({\n    method: 'GET',\n    path: `/serverless-sqldb/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/databases/${validatePathParam('databaseId', request.databaseId)}`\n  }, unmarshalDatabase);\n\n  /**\n   * Waits for {@link Database} to be in a final state.\n   *\n   * @param request - The request {@link GetDatabaseRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Database\n   */\n  waitForDatabase = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!DATABASE_TRANSIENT_STATUSES.includes(res.status))), this.getDatabase, request, options);\n\n  /**\n   * Delete a database. Deletes a database. You must provide the `database_id`\n   * parameter. All data stored in the database will be permanently deleted.\n   *\n   * @param request - The request {@link DeleteDatabaseRequest}\n   * @returns A Promise of Database\n   */\n  deleteDatabase = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/serverless-sqldb/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/databases/${validatePathParam('databaseId', request.databaseId)}`\n  }, unmarshalDatabase);\n  pageOfListDatabases = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/serverless-sqldb/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/databases`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize], ['project_id', request.projectId ?? this.client.settings.defaultProjectId])\n  }, unmarshalListDatabasesResponse);\n\n  /**\n   * List your Serverless SQL Databases. List all Serverless SQL Databases for a\n   * given Scaleway Organization or Scaleway Project. By default, the databases\n   * returned in the list are ordered by creation date in ascending order,\n   * though this can be modified via the order_by field. For the `name`\n   * parameter, the value you include will be checked against the whole name\n   * string to see if it includes the string you put in the parameter.\n   *\n   * @param request - The request {@link ListDatabasesRequest}\n   * @returns A Promise of ListDatabasesResponse\n   */\n  listDatabases = (request = {}) => enrichForPagination('databases', this.pageOfListDatabases, request);\n\n  /**\n   * Update database information. Update CPU limits of your Serverless SQL\n   * Database. You must provide the `database_id` parameter.\n   *\n   * @param request - The request {@link UpdateDatabaseRequest}\n   * @returns A Promise of Database\n   */\n  updateDatabase = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateDatabaseRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$6,\n    method: 'PATCH',\n    path: `/serverless-sqldb/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/databases/${validatePathParam('databaseId', request.databaseId)}`\n  }, unmarshalDatabase);\n\n  /**\n   * Restore a database from a backup. Restore a database from a backup. You\n   * must provide the `backup_id` parameter.\n   *\n   * @param request - The request {@link RestoreDatabaseFromBackupRequest}\n   * @returns A Promise of Database\n   */\n  restoreDatabaseFromBackup = request => this.client.fetch({\n    body: JSON.stringify(marshalRestoreDatabaseFromBackupRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$6,\n    method: 'POST',\n    path: `/serverless-sqldb/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/databases/${validatePathParam('databaseId', request.databaseId)}/restore`\n  }, unmarshalDatabase);\n\n  /**\n   * Get a database backup information. Retrieve information about your\n   * Serverless SQL Database backup. You must provide the `backup_id`\n   * parameter.\n   *\n   * @param request - The request {@link GetDatabaseBackupRequest}\n   * @returns A Promise of DatabaseBackup\n   */\n  getDatabaseBackup = request => this.client.fetch({\n    method: 'GET',\n    path: `/serverless-sqldb/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backups/${validatePathParam('backupId', request.backupId)}`\n  }, unmarshalDatabaseBackup);\n  pageOfListDatabaseBackups = request => this.client.fetch({\n    method: 'GET',\n    path: `/serverless-sqldb/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backups`,\n    urlParams: urlParams(['database_id', request.databaseId], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize], ['project_id', request.projectId])\n  }, unmarshalListDatabaseBackupsResponse);\n\n  /**\n   * List your Serverless SQL Database backups. List all Serverless SQL Database\n   * backups for a given Scaleway Project or Database. By default, the backups\n   * returned in the list are ordered by creation date in ascending order,\n   * though this can be modified via the order_by field.\n   *\n   * @param request - The request {@link ListDatabaseBackupsRequest}\n   * @returns A Promise of ListDatabaseBackupsResponse\n   */\n  listDatabaseBackups = request => enrichForPagination('backups', this.pageOfListDatabaseBackups, request);\n\n  /**\n   * Export a database backup. Export a database backup providing a download\n   * link once the export process is completed. You must provide the `backup_id`\n   * parameter.\n   *\n   * @param request - The request {@link ExportDatabaseBackupRequest}\n   * @returns A Promise of DatabaseBackup\n   */\n  exportDatabaseBackup = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$6,\n    method: 'POST',\n    path: `/serverless-sqldb/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/backups/${validatePathParam('backupId', request.backupId)}/export`\n  }, unmarshalDatabaseBackup);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst CreateDatabaseRequest = {\n  cpuMax: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 15\n  },\n  cpuMin: {\n    lessThanOrEqual: 15\n  },\n  fromBackupId: {\n    ignoreEmpty: true\n  },\n  name: {\n    maxLength: 63,\n    minLength: 1\n  }\n};\nconst Database = {\n  cpuCurrent: {\n    lessThanOrEqual: 15\n  },\n  cpuMax: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 15\n  },\n  cpuMin: {\n    lessThanOrEqual: 15\n  }\n};\nconst ListDatabaseBackupsRequest = {\n  page: {\n    greaterThanOrEqual: 1\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 1000\n  }\n};\nconst ListDatabasesRequest = {\n  page: {\n    greaterThanOrEqual: 1\n  },\n  pageSize: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 1000\n  }\n};\nconst UpdateDatabaseRequest = {\n  cpuMax: {\n    greaterThanOrEqual: 1,\n    lessThanOrEqual: 15\n  },\n  cpuMin: {\n    lessThanOrEqual: 15\n  }\n};\n\nvar validationRules_gen$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CreateDatabaseRequest: CreateDatabaseRequest,\n  Database: Database,\n  ListDatabaseBackupsRequest: ListDatabaseBackupsRequest,\n  ListDatabasesRequest: ListDatabasesRequest,\n  UpdateDatabaseRequest: UpdateDatabaseRequest\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$7 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$6,\n  DATABASE_TRANSIENT_STATUSES: DATABASE_TRANSIENT_STATUSES,\n  ValidationRules: validationRules_gen$1\n});\n\nvar index$5 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1alpha1: index_gen$7\n});\n\nvar index_gen$6 = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link HumanStatus}. */\nconst HUMAN_TRANSIENT_STATUSES = ['running'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalHuman = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Human' failed as data isn't a dictionary.`);\n  }\n  return {\n    altitudeInMeter: data.altitude_in_meter,\n    altitudeInMillimeter: data.altitude_in_millimeter,\n    createdAt: unmarshalDate(data.created_at),\n    eyesColor: data.eyes_color,\n    fingersCount: data.fingers_count,\n    hairCount: data.hair_count,\n    height: data.height,\n    id: data.id,\n    isHappy: data.is_happy,\n    name: data.name,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    shoeSize: data.shoe_size,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalListHumansResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListHumansResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    humans: unmarshalArrayOfObject(data.humans, unmarshalHuman),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalRegisterResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'RegisterResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    accessKey: data.access_key,\n    secretKey: data.secret_key\n  };\n};\nconst marshalCreateHumanRequest = (request, defaults) => ({\n  altitude_in_meter: request.altitudeInMeter,\n  altitude_in_millimeter: request.altitudeInMillimeter,\n  eyes_color: request.eyesColor,\n  fingers_count: request.fingersCount,\n  hair_count: request.hairCount,\n  height: request.height,\n  is_happy: request.isHappy,\n  name: request.name,\n  shoe_size: request.shoeSize,\n  ...resolveOneOf([{\n    default: defaults.defaultProjectId,\n    param: 'project_id',\n    value: request.projectId\n  }, {\n    default: defaults.defaultOrganizationId,\n    param: 'organization_id',\n    value: request.organizationId\n  }])\n});\nconst marshalRegisterRequest = (request, defaults) => ({\n  username: request.username\n});\nconst marshalUpdateHumanRequest = (request, defaults) => ({\n  altitude_in_meter: request.altitudeInMeter,\n  altitude_in_millimeter: request.altitudeInMillimeter,\n  eyes_color: request.eyesColor,\n  fingers_count: request.fingersCount,\n  hair_count: request.hairCount,\n  height: request.height,\n  is_happy: request.isHappy,\n  name: request.name,\n  shoe_size: request.shoeSize\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$5 = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/**\n * Fake API.\n *\n * No Auth Service for end-to-end testing.\n */\nlet API$5 = class API extends API$z {\n  /**\n   * Register a user. Register a human and return a access-key and a secret-key\n   * that must be used in all other commands.\n   *\n   * Hint: you can use other test commands by setting the SCW_SECRET_KEY env\n   * variable.\n   *\n   * @param request - The request {@link RegisterRequest}\n   * @returns A Promise of RegisterResponse\n   */\n  register = request => this.client.fetch({\n    body: JSON.stringify(marshalRegisterRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$5,\n    method: 'POST',\n    path: `/test/v1/register`\n  }, unmarshalRegisterResponse);\n  pageOfListHumans = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/test/v1/humans`,\n    urlParams: urlParams(['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListHumansResponse);\n\n  /**\n   * List all your humans.\n   *\n   * @param request - The request {@link ListHumansRequest}\n   * @returns A Promise of ListHumansResponse\n   */\n  listHumans = (request = {}) => enrichForPagination('humans', this.pageOfListHumans, request);\n\n  /**\n   * Get human details. Get the human details associated with the given id.\n   *\n   * @param request - The request {@link GetHumanRequest}\n   * @returns A Promise of Human\n   */\n  getHuman = request => this.client.fetch({\n    method: 'GET',\n    path: `/test/v1/humans/${validatePathParam('humanId', request.humanId)}`\n  }, unmarshalHuman);\n\n  /**\n   * Waits for {@link Human} to be in a final state.\n   *\n   * @param request - The request {@link GetHumanRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Human\n   */\n  waitForHuman = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!HUMAN_TRANSIENT_STATUSES.includes(res.status))), this.getHuman, request, options);\n\n  /**\n   * Create a new human.\n   *\n   * @param request - The request {@link CreateHumanRequest}\n   * @returns A Promise of Human\n   */\n  createHuman = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateHumanRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$5,\n    method: 'POST',\n    path: `/test/v1/humans`\n  }, unmarshalHuman);\n\n  /**\n   * Update an existing human. Update the human associated with the given id.\n   *\n   * @param request - The request {@link UpdateHumanRequest}\n   * @returns A Promise of Human\n   */\n  updateHuman = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateHumanRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$5,\n    method: 'PATCH',\n    path: `/test/v1/humans/${validatePathParam('humanId', request.humanId)}`\n  }, unmarshalHuman);\n\n  /**\n   * Delete an existing human. Delete the human associated with the given id.\n   *\n   * @param request - The request {@link DeleteHumanRequest}\n   * @returns A Promise of Human\n   */\n  deleteHuman = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/test/v1/humans/${validatePathParam('humanId', request.humanId)}`\n  }, unmarshalHuman);\n\n  /**\n   * Start a 1h running for the given human. Start a one hour running for the\n   * given human.\n   *\n   * @param request - The request {@link RunHumanRequest}\n   * @returns A Promise of Human\n   */\n  runHuman = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$5,\n    method: 'POST',\n    path: `/test/v1/humans/${validatePathParam('humanId', request.humanId)}/run`\n  }, unmarshalHuman);\n\n  /**\n   * Make a human smoke.\n   *\n   * @deprecated\n   * @param request - The request {@link SmokeHumanRequest}\n   * @returns A Promise of Human\n   */\n  smokeHuman = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$5,\n    method: 'POST',\n    path: `/test/v1/humans/${validatePathParam('humanId', request.humanId)}/smoke`\n  }, unmarshalHuman);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$5 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$5,\n  HUMAN_TRANSIENT_STATUSES: HUMAN_TRANSIENT_STATUSES\n});\n\nvar index$4 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1: index_gen$5\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link DomainStatus}. */\nconst DOMAIN_TRANSIENT_STATUSES = ['pending'];\n\n/** Lists transient statutes of the enum {@link EmailStatus}. */\nconst EMAIL_TRANSIENT_STATUSES = ['new', 'sending'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalEmailTry = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'EmailTry' failed as data isn't a dictionary.`);\n  }\n  return {\n    code: data.code,\n    message: data.message,\n    rank: data.rank,\n    triedAt: unmarshalDate(data.tried_at)\n  };\n};\nconst unmarshalEmail = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Email' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    flags: data.flags,\n    id: data.id,\n    lastTries: unmarshalArrayOfObject(data.last_tries, unmarshalEmailTry),\n    mailFrom: data.mail_from,\n    mailRcpt: data.mail_rcpt,\n    messageId: data.message_id,\n    projectId: data.project_id,\n    rcptTo: data.rcpt_to,\n    rcptType: data.rcpt_type,\n    status: data.status,\n    statusDetails: data.status_details,\n    subject: data.subject,\n    tryCount: data.try_count,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalDomainRecordsDMARC = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainRecordsDMARC' failed as data isn't a dictionary.`);\n  }\n  return {\n    name: data.name,\n    value: data.value\n  };\n};\nconst unmarshalDomainRecords = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainRecords' failed as data isn't a dictionary.`);\n  }\n  return {\n    dmarc: data.dmarc ? unmarshalDomainRecordsDMARC(data.dmarc) : undefined\n  };\n};\nconst unmarshalDomainReputation = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainReputation' failed as data isn't a dictionary.`);\n  }\n  return {\n    previousScore: data.previous_score,\n    previousScoredAt: unmarshalDate(data.previous_scored_at),\n    score: data.score,\n    scoredAt: unmarshalDate(data.scored_at),\n    status: data.status\n  };\n};\nconst unmarshalDomainStatistics = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainStatistics' failed as data isn't a dictionary.`);\n  }\n  return {\n    canceledCount: data.canceled_count,\n    failedCount: data.failed_count,\n    sentCount: data.sent_count,\n    totalCount: data.total_count\n  };\n};\nconst unmarshalDomain = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Domain' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    dkimConfig: data.dkim_config,\n    id: data.id,\n    lastError: data.last_error,\n    lastValidAt: unmarshalDate(data.last_valid_at),\n    name: data.name,\n    nextCheckAt: unmarshalDate(data.next_check_at),\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    records: data.records ? unmarshalDomainRecords(data.records) : undefined,\n    region: data.region,\n    reputation: data.reputation ? unmarshalDomainReputation(data.reputation) : undefined,\n    revokedAt: unmarshalDate(data.revoked_at),\n    spfConfig: data.spf_config,\n    statistics: data.statistics ? unmarshalDomainStatistics(data.statistics) : undefined,\n    status: data.status\n  };\n};\nconst unmarshalCreateEmailResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'CreateEmailResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    emails: unmarshalArrayOfObject(data.emails, unmarshalEmail)\n  };\n};\nconst unmarshalDomainLastStatusDkimRecord = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainLastStatusDkimRecord' failed as data isn't a dictionary.`);\n  }\n  return {\n    error: data.error,\n    lastValidAt: unmarshalDate(data.last_valid_at),\n    status: data.status\n  };\n};\nconst unmarshalDomainLastStatusDmarcRecord = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainLastStatusDmarcRecord' failed as data isn't a dictionary.`);\n  }\n  return {\n    error: data.error,\n    lastValidAt: unmarshalDate(data.last_valid_at),\n    status: data.status\n  };\n};\nconst unmarshalDomainLastStatusSpfRecord = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainLastStatusSpfRecord' failed as data isn't a dictionary.`);\n  }\n  return {\n    error: data.error,\n    lastValidAt: unmarshalDate(data.last_valid_at),\n    status: data.status\n  };\n};\nconst unmarshalDomainLastStatus = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DomainLastStatus' failed as data isn't a dictionary.`);\n  }\n  return {\n    dkimRecord: data.dkim_record ? unmarshalDomainLastStatusDkimRecord(data.dkim_record) : undefined,\n    dmarcRecord: data.dmarc_record ? unmarshalDomainLastStatusDmarcRecord(data.dmarc_record) : undefined,\n    domainId: data.domain_id,\n    domainName: data.domain_name,\n    spfRecord: data.spf_record ? unmarshalDomainLastStatusSpfRecord(data.spf_record) : undefined\n  };\n};\nconst unmarshalListDomainsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDomainsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    domains: unmarshalArrayOfObject(data.domains, unmarshalDomain),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListEmailsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListEmailsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    emails: unmarshalArrayOfObject(data.emails, unmarshalEmail),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalStatistics = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Statistics' failed as data isn't a dictionary.`);\n  }\n  return {\n    canceledCount: data.canceled_count,\n    failedCount: data.failed_count,\n    newCount: data.new_count,\n    sendingCount: data.sending_count,\n    sentCount: data.sent_count,\n    totalCount: data.total_count\n  };\n};\nconst marshalCreateDomainRequest = (request, defaults) => ({\n  accept_tos: request.acceptTos,\n  domain_name: request.domainName,\n  project_id: request.projectId ?? defaults.defaultProjectId\n});\nconst marshalCreateEmailRequestAddress = (request, defaults) => ({\n  email: request.email,\n  name: request.name\n});\nconst marshalCreateEmailRequestAttachment = (request, defaults) => ({\n  content: request.content,\n  name: request.name,\n  type: request.type\n});\nconst marshalCreateEmailRequestHeader = (request, defaults) => ({\n  key: request.key,\n  value: request.value\n});\nconst marshalCreateEmailRequest = (request, defaults) => ({\n  additional_headers: request.additionalHeaders !== undefined ? request.additionalHeaders.map(elt => marshalCreateEmailRequestHeader(elt)) : undefined,\n  attachments: request.attachments !== undefined ? request.attachments.map(elt => marshalCreateEmailRequestAttachment(elt)) : undefined,\n  bcc: request.bcc !== undefined ? request.bcc.map(elt => marshalCreateEmailRequestAddress(elt)) : undefined,\n  cc: request.cc !== undefined ? request.cc.map(elt => marshalCreateEmailRequestAddress(elt)) : undefined,\n  from: request.from !== undefined ? marshalCreateEmailRequestAddress(request.from) : undefined,\n  html: request.html,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  send_before: request.sendBefore,\n  subject: request.subject,\n  text: request.text,\n  to: request.to !== undefined ? request.to.map(elt => marshalCreateEmailRequestAddress(elt)) : undefined\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$4 = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Transactional Email API. */\nlet API$4 = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par'];\n\n  /**\n   * Send an email. You must specify the `region`, the sender and the\n   * recipient's information and the `project_id` to send an email from a\n   * checked domain. The subject of the email must contain at least 6\n   * characters.\n   *\n   * @param request - The request {@link CreateEmailRequest}\n   * @returns A Promise of CreateEmailResponse\n   */\n  createEmail = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateEmailRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$4,\n    method: 'POST',\n    path: `/transactional-email/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/emails`\n  }, unmarshalCreateEmailResponse);\n\n  /**\n   * Get an email. Retrieve information about a specific email using the\n   * `email_id` and `region` parameters.\n   *\n   * @param request - The request {@link GetEmailRequest}\n   * @returns A Promise of Email\n   */\n  getEmail = request => this.client.fetch({\n    method: 'GET',\n    path: `/transactional-email/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/emails/${validatePathParam('emailId', request.emailId)}`\n  }, unmarshalEmail);\n\n  /**\n   * Waits for {@link Email} to be in a final state.\n   *\n   * @param request - The request {@link GetEmailRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Email\n   */\n  waitForEmail = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!EMAIL_TRANSIENT_STATUSES.includes(res.status))), this.getEmail, request, options);\n  pageOfListEmails = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/transactional-email/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/emails`,\n    urlParams: urlParams(['domain_id', request.domainId], ['flags', request.flags], ['mail_from', request.mailFrom], ['mail_rcpt', request.mailRcpt], ['mail_to', request.mailTo], ['message_id', request.messageId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['search', request.search], ['since', request.since], ['statuses', request.statuses], ['subject', request.subject], ['until', request.until])\n  }, unmarshalListEmailsResponse);\n\n  /**\n   * List emails. Retrieve the list of emails sent from a specific domain or for\n   * a specific Project or Organization. You must specify the `region`.\n   *\n   * @param request - The request {@link ListEmailsRequest}\n   * @returns A Promise of ListEmailsResponse\n   */\n  listEmails = (request = {}) => enrichForPagination('emails', this.pageOfListEmails, request);\n\n  /**\n   * Email statuses. Get information on your emails' statuses.\n   *\n   * @param request - The request {@link GetStatisticsRequest}\n   * @returns A Promise of Statistics\n   */\n  getStatistics = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/transactional-email/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/statistics`,\n    urlParams: urlParams(['domain_id', request.domainId], ['mail_from', request.mailFrom], ['project_id', request.projectId], ['since', request.since], ['until', request.until])\n  }, unmarshalStatistics);\n\n  /**\n   * Cancel an email. You can cancel the sending of an email if it has not been\n   * sent yet. You must specify the `region` and the `email_id` of the email you\n   * want to cancel.\n   *\n   * @param request - The request {@link CancelEmailRequest}\n   * @returns A Promise of Email\n   */\n  cancelEmail = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$4,\n    method: 'POST',\n    path: `/transactional-email/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/emails/${validatePathParam('emailId', request.emailId)}/cancel`\n  }, unmarshalEmail);\n\n  /**\n   * Register a domain in a project. You must specify the `region`, `project_id`\n   * and `domain_name` to register a domain in a specific Project.\n   *\n   * @param request - The request {@link CreateDomainRequest}\n   * @returns A Promise of Domain\n   */\n  createDomain = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateDomainRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$4,\n    method: 'POST',\n    path: `/transactional-email/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains`\n  }, unmarshalDomain);\n\n  /**\n   * Get information about a domain. Retrieve information about a specific\n   * domain using the `region` and `domain_id` parameters. Monitor your domain's\n   * reputation and improve **average** and **bad** reputation statuses, using\n   * your domain's **Email activity** tab on the [Scaleway\n   * console](https://console.scaleway.com/transactional-email/domains) to get a\n   * more detailed report. Check out our [dedicated\n   * documentation](https://www.scaleway.com/en/docs/managed-services/transactional-email/reference-content/understanding-tem-reputation-score/)\n   * to improve your domain's reputation.\n   *\n   * @param request - The request {@link GetDomainRequest}\n   * @returns A Promise of Domain\n   */\n  getDomain = request => this.client.fetch({\n    method: 'GET',\n    path: `/transactional-email/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains/${validatePathParam('domainId', request.domainId)}`\n  }, unmarshalDomain);\n\n  /**\n   * Waits for {@link Domain} to be in a final state.\n   *\n   * @param request - The request {@link GetDomainRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Domain\n   */\n  waitForDomain = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!DOMAIN_TRANSIENT_STATUSES.includes(res.status))), this.getDomain, request, options);\n  pageOfListDomains = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/transactional-email/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains`,\n    urlParams: urlParams(['name', request.name], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['status', request.status])\n  }, unmarshalListDomainsResponse);\n\n  /**\n   * List domains. Retrieve domains in a specific Project or in a specific\n   * Organization using the `region` parameter.\n   *\n   * @param request - The request {@link ListDomainsRequest}\n   * @returns A Promise of ListDomainsResponse\n   */\n  listDomains = (request = {}) => enrichForPagination('domains', this.pageOfListDomains, request);\n\n  /**\n   * Delete a domain. You must specify the domain you want to delete by the\n   * `region` and `domain_id`. Deleting a domain is permanent and cannot be\n   * undone.\n   *\n   * @param request - The request {@link RevokeDomainRequest}\n   * @returns A Promise of Domain\n   */\n  revokeDomain = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$4,\n    method: 'POST',\n    path: `/transactional-email/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains/${validatePathParam('domainId', request.domainId)}/revoke`\n  }, unmarshalDomain);\n\n  /**\n   * Domain DNS check. Perform an immediate DNS check of a domain using the\n   * `region` and `domain_id` parameters.\n   *\n   * @param request - The request {@link CheckDomainRequest}\n   * @returns A Promise of Domain\n   */\n  checkDomain = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$4,\n    method: 'POST',\n    path: `/transactional-email/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains/${validatePathParam('domainId', request.domainId)}/check`\n  }, unmarshalDomain);\n\n  /**\n   * Display SPF and DKIM records status and potential errors. Display SPF and\n   * DKIM records status and potential errors, including the found records to\n   * make debugging easier.\n   *\n   * @param request - The request {@link GetDomainLastStatusRequest}\n   * @returns A Promise of DomainLastStatus\n   */\n  getDomainLastStatus = request => this.client.fetch({\n    method: 'GET',\n    path: `/transactional-email/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains/${validatePathParam('domainId', request.domainId)}/verification`\n  }, unmarshalDomainLastStatus);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$4 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$4,\n  DOMAIN_TRANSIENT_STATUSES: DOMAIN_TRANSIENT_STATUSES,\n  EMAIL_TRANSIENT_STATUSES: EMAIL_TRANSIENT_STATUSES\n});\n\nvar index$3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1alpha1: index_gen$4\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalPrivateNetwork$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PrivateNetwork' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    name: data.name,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    subnets: data.subnets,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalListPrivateNetworksResponse$1 = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListPrivateNetworksResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    privateNetworks: unmarshalArrayOfObject(data.private_networks, unmarshalPrivateNetwork$1),\n    totalCount: data.total_count\n  };\n};\nconst marshalCreatePrivateNetworkRequest$1 = (request, defaults) => ({\n  name: request.name || randomName('pn'),\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  subnets: request.subnets,\n  tags: request.tags\n});\nconst marshalUpdatePrivateNetworkRequest$1 = (request, defaults) => ({\n  name: request.name,\n  subnets: request.subnets,\n  tags: request.tags\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$3 = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** VPC API. */\nlet API$3 = class API extends API$z {\n  /** Lists the available zones of the API. */\n  static LOCALITIES = ['fr-par-1', 'fr-par-2', 'fr-par-3', 'nl-ams-1', 'nl-ams-2', 'nl-ams-3', 'pl-waw-1', 'pl-waw-2'];\n  pageOfListPrivateNetworks = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/vpc/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/private-networks`,\n    urlParams: urlParams(['include_regional', request.includeRegional], ['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['private_network_ids', request.privateNetworkIds], ['project_id', request.projectId], ['tags', request.tags])\n  }, unmarshalListPrivateNetworksResponse$1);\n\n  /**\n   * List Private Networks. List existing Private Networks in a specified\n   * Availability Zone. By default, the Private Networks returned in the list\n   * are ordered by creation date in ascending order, though this can be\n   * modified via the order_by field.\n   *\n   * @param request - The request {@link ListPrivateNetworksRequest}\n   * @returns A Promise of ListPrivateNetworksResponse\n   */\n  listPrivateNetworks = (request = {}) => enrichForPagination('privateNetworks', this.pageOfListPrivateNetworks, request);\n\n  /**\n   * Create a Private Network. Create a new Private Network. Once created, you\n   * can attach Scaleway resources in the same Availability Zone.\n   *\n   * @param request - The request {@link CreatePrivateNetworkRequest}\n   * @returns A Promise of PrivateNetwork\n   */\n  createPrivateNetwork = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreatePrivateNetworkRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$3,\n    method: 'POST',\n    path: `/vpc/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/private-networks`\n  }, unmarshalPrivateNetwork$1);\n\n  /**\n   * Get a Private Network. Retrieve information about an existing Private\n   * Network, specified by its Private Network ID. Its full details are returned\n   * in the response object.\n   *\n   * @param request - The request {@link GetPrivateNetworkRequest}\n   * @returns A Promise of PrivateNetwork\n   */\n  getPrivateNetwork = request => this.client.fetch({\n    method: 'GET',\n    path: `/vpc/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}`\n  }, unmarshalPrivateNetwork$1);\n\n  /**\n   * Update Private Network. Update parameters (such as name or tags) of an\n   * existing Private Network, specified by its Private Network ID.\n   *\n   * @param request - The request {@link UpdatePrivateNetworkRequest}\n   * @returns A Promise of PrivateNetwork\n   */\n  updatePrivateNetwork = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdatePrivateNetworkRequest$1(request, this.client.settings)),\n    headers: jsonContentHeaders$3,\n    method: 'PATCH',\n    path: `/vpc/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}`\n  }, unmarshalPrivateNetwork$1);\n\n  /**\n   * Delete a Private Network. Delete an existing Private Network. Note that you\n   * must first detach all resources from the network, in order to delete it.\n   *\n   * @param request - The request {@link DeletePrivateNetworkRequest}\n   */\n  deletePrivateNetwork = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/vpc/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}`\n  });\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$3\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalSubnet = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Subnet' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    subnet: data.subnet,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalPrivateNetwork = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PrivateNetwork' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    dhcpEnabled: data.dhcp_enabled,\n    id: data.id,\n    name: data.name,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    region: data.region,\n    subnets: unmarshalArrayOfObject(data.subnets, unmarshalSubnet),\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    vpcId: data.vpc_id\n  };\n};\nconst unmarshalVPC = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'VPC' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    id: data.id,\n    isDefault: data.is_default,\n    name: data.name,\n    organizationId: data.organization_id,\n    privateNetworkCount: data.private_network_count,\n    projectId: data.project_id,\n    region: data.region,\n    routingEnabled: data.routing_enabled,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at)\n  };\n};\nconst unmarshalAddSubnetsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'AddSubnetsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    subnets: data.subnets\n  };\n};\nconst unmarshalDeleteSubnetsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DeleteSubnetsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    subnets: data.subnets\n  };\n};\nconst unmarshalListPrivateNetworksResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListPrivateNetworksResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    privateNetworks: unmarshalArrayOfObject(data.private_networks, unmarshalPrivateNetwork),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListVPCsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListVPCsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    totalCount: data.total_count,\n    vpcs: unmarshalArrayOfObject(data.vpcs, unmarshalVPC)\n  };\n};\nconst unmarshalSetSubnetsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetSubnetsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    subnets: data.subnets\n  };\n};\nconst marshalAddSubnetsRequest = (request, defaults) => ({\n  subnets: request.subnets\n});\nconst marshalCreatePrivateNetworkRequest = (request, defaults) => ({\n  name: request.name || randomName('pn'),\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  subnets: request.subnets,\n  tags: request.tags,\n  vpc_id: request.vpcId\n});\nconst marshalCreateVPCRequest = (request, defaults) => ({\n  enable_routing: request.enableRouting,\n  name: request.name || randomName('vpc'),\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  tags: request.tags\n});\nconst marshalDeleteSubnetsRequest = (request, defaults) => ({\n  subnets: request.subnets\n});\nconst marshalMigrateZonalPrivateNetworksRequest = (request, defaults) => ({\n  private_network_ids: request.privateNetworkIds,\n  ...resolveOneOf([{\n    default: defaults.defaultOrganizationId,\n    param: 'organization_id',\n    value: request.organizationId\n  }, {\n    default: defaults.defaultProjectId,\n    param: 'project_id',\n    value: request.projectId\n  }])\n});\nconst marshalSetSubnetsRequest = (request, defaults) => ({\n  subnets: request.subnets\n});\nconst marshalUpdatePrivateNetworkRequest = (request, defaults) => ({\n  name: request.name,\n  tags: request.tags\n});\nconst marshalUpdateVPCRequest = (request, defaults) => ({\n  name: request.name,\n  tags: request.tags\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$2 = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** VPC API. */\nlet API$2 = class API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams', 'pl-waw'];\n  pageOfListVPCs = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/vpcs`,\n    urlParams: urlParams(['is_default', request.isDefault], ['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['routing_enabled', request.routingEnabled], ['tags', request.tags])\n  }, unmarshalListVPCsResponse);\n\n  /**\n   * List VPCs. List existing VPCs in the specified region.\n   *\n   * @param request - The request {@link ListVPCsRequest}\n   * @returns A Promise of ListVPCsResponse\n   */\n  listVPCs = (request = {}) => enrichForPagination('vpcs', this.pageOfListVPCs, request);\n\n  /**\n   * Create a VPC. Create a new VPC in the specified region.\n   *\n   * @param request - The request {@link CreateVPCRequest}\n   * @returns A Promise of VPC\n   */\n  createVPC = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateVPCRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$2,\n    method: 'POST',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/vpcs`\n  }, unmarshalVPC);\n\n  /**\n   * Get a VPC. Retrieve details of an existing VPC, specified by its VPC ID.\n   *\n   * @param request - The request {@link GetVPCRequest}\n   * @returns A Promise of VPC\n   */\n  getVPC = request => this.client.fetch({\n    method: 'GET',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/vpcs/${validatePathParam('vpcId', request.vpcId)}`\n  }, unmarshalVPC);\n\n  /**\n   * Update VPC. Update parameters including name and tags of the specified VPC.\n   *\n   * @param request - The request {@link UpdateVPCRequest}\n   * @returns A Promise of VPC\n   */\n  updateVPC = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateVPCRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$2,\n    method: 'PATCH',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/vpcs/${validatePathParam('vpcId', request.vpcId)}`\n  }, unmarshalVPC);\n\n  /**\n   * Delete a VPC. Delete a VPC specified by its VPC ID.\n   *\n   * @param request - The request {@link DeleteVPCRequest}\n   */\n  deleteVPC = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/vpcs/${validatePathParam('vpcId', request.vpcId)}`\n  });\n  pageOfListPrivateNetworks = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/private-networks`,\n    urlParams: urlParams(['dhcp_enabled', request.dhcpEnabled], ['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['private_network_ids', request.privateNetworkIds], ['project_id', request.projectId], ['tags', request.tags], ['vpc_id', request.vpcId])\n  }, unmarshalListPrivateNetworksResponse);\n\n  /**\n   * List Private Networks. List existing Private Networks in the specified\n   * region. By default, the Private Networks returned in the list are ordered\n   * by creation date in ascending order, though this can be modified via the\n   * order_by field.\n   *\n   * @param request - The request {@link ListPrivateNetworksRequest}\n   * @returns A Promise of ListPrivateNetworksResponse\n   */\n  listPrivateNetworks = (request = {}) => enrichForPagination('privateNetworks', this.pageOfListPrivateNetworks, request);\n\n  /**\n   * Create a Private Network. Create a new Private Network. Once created, you\n   * can attach Scaleway resources which are in the same region.\n   *\n   * @param request - The request {@link CreatePrivateNetworkRequest}\n   * @returns A Promise of PrivateNetwork\n   */\n  createPrivateNetwork = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreatePrivateNetworkRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$2,\n    method: 'POST',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/private-networks`\n  }, unmarshalPrivateNetwork);\n\n  /**\n   * Get a Private Network. Retrieve information about an existing Private\n   * Network, specified by its Private Network ID. Its full details are returned\n   * in the response object.\n   *\n   * @param request - The request {@link GetPrivateNetworkRequest}\n   * @returns A Promise of PrivateNetwork\n   */\n  getPrivateNetwork = request => this.client.fetch({\n    method: 'GET',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}`\n  }, unmarshalPrivateNetwork);\n\n  /**\n   * Update Private Network. Update parameters (such as name or tags) of an\n   * existing Private Network, specified by its Private Network ID.\n   *\n   * @param request - The request {@link UpdatePrivateNetworkRequest}\n   * @returns A Promise of PrivateNetwork\n   */\n  updatePrivateNetwork = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdatePrivateNetworkRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$2,\n    method: 'PATCH',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}`\n  }, unmarshalPrivateNetwork);\n\n  /**\n   * Delete a Private Network. Delete an existing Private Network. Note that you\n   * must first detach all resources from the network, in order to delete it.\n   *\n   * @param request - The request {@link DeletePrivateNetworkRequest}\n   */\n  deletePrivateNetwork = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}`\n  });\n\n  /**\n   * Migrate Private Networks from zoned to regional. Transform multiple\n   * existing zoned Private Networks (scoped to a single Availability Zone) into\n   * regional Private Networks, scoped to an entire region. You can transform\n   * one or many Private Networks (specified by their Private Network IDs)\n   * within a single Scaleway Organization or Project, with the same call.\n   *\n   * @param request - The request {@link MigrateZonalPrivateNetworksRequest}\n   */\n  migrateZonalPrivateNetworks = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalMigrateZonalPrivateNetworksRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$2,\n    method: 'POST',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/private-networks/migrate-zonal`\n  });\n\n  /**\n   * Enable DHCP on a Private Network. Enable DHCP managed on an existing\n   * Private Network. Note that you will not be able to deactivate it\n   * afterwards.\n   *\n   * @param request - The request {@link EnableDHCPRequest}\n   * @returns A Promise of PrivateNetwork\n   */\n  enableDHCP = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$2,\n    method: 'POST',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}/enable-dhcp`\n  }, unmarshalPrivateNetwork);\n\n  /**\n   * Enable routing on a VPC. Enable routing on an existing VPC. Note that you\n   * will not be able to deactivate it afterwards.\n   *\n   * @param request - The request {@link EnableRoutingRequest}\n   * @returns A Promise of VPC\n   */\n  enableRouting = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$2,\n    method: 'POST',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/vpcs/${validatePathParam('vpcId', request.vpcId)}/enable-routing`\n  }, unmarshalVPC);\n\n  /**\n   * Set the subnets of a Private Network. Set subnets for an existing Private\n   * Network. Note that the method is PUT and not PATCH. Any existing subnets\n   * will be removed in favor of the new specified set of subnets.\n   *\n   * @param request - The request {@link SetSubnetsRequest}\n   * @returns A Promise of SetSubnetsResponse\n   */\n  setSubnets = request => this.client.fetch({\n    body: JSON.stringify(marshalSetSubnetsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$2,\n    method: 'PUT',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}/subnets`\n  }, unmarshalSetSubnetsResponse);\n\n  /**\n   * Add subnets to a Private Network. Add new subnets to an existing Private\n   * Network.\n   *\n   * @param request - The request {@link AddSubnetsRequest}\n   * @returns A Promise of AddSubnetsResponse\n   */\n  addSubnets = request => this.client.fetch({\n    body: JSON.stringify(marshalAddSubnetsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$2,\n    method: 'POST',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}/subnets`\n  }, unmarshalAddSubnetsResponse);\n\n  /**\n   * Delete subnets from a Private Network. Delete the specified subnets from a\n   * Private Network.\n   *\n   * @param request - The request {@link DeleteSubnetsRequest}\n   * @returns A Promise of DeleteSubnetsResponse\n   */\n  deleteSubnets = request => this.client.fetch({\n    body: JSON.stringify(marshalDeleteSubnetsRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$2,\n    method: 'DELETE',\n    path: `/vpc/v2/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/private-networks/${validatePathParam('privateNetworkId', request.privateNetworkId)}/subnets`\n  }, unmarshalDeleteSubnetsResponse);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$2\n});\n\nvar index$2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1: index_gen$3,\n  v2: index_gen$2\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link GatewayNetworkStatus}. */\nconst GATEWAY_NETWORK_TRANSIENT_STATUSES = ['attaching', 'configuring', 'detaching'];\n\n/** Lists transient statutes of the enum {@link GatewayStatus}. */\nconst GATEWAY_TRANSIENT_STATUSES = ['allocating', 'configuring', 'stopping', 'deleting'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalDHCP = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DHCP' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    createdAt: unmarshalDate(data.created_at),\n    dnsLocalName: data.dns_local_name,\n    dnsSearch: data.dns_search,\n    dnsServersOverride: data.dns_servers_override,\n    enableDynamic: data.enable_dynamic,\n    id: data.id,\n    organizationId: data.organization_id,\n    poolHigh: data.pool_high,\n    poolLow: data.pool_low,\n    projectId: data.project_id,\n    pushDefaultRoute: data.push_default_route,\n    pushDnsServer: data.push_dns_server,\n    rebindTimer: data.rebind_timer,\n    renewTimer: data.renew_timer,\n    subnet: data.subnet,\n    updatedAt: unmarshalDate(data.updated_at),\n    validLifetime: data.valid_lifetime,\n    zone: data.zone\n  };\n};\nconst unmarshalIpamConfig = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'IpamConfig' failed as data isn't a dictionary.`);\n  }\n  return {\n    ipamIpId: data.ipam_ip_id,\n    pushDefaultRoute: data.push_default_route\n  };\n};\nconst unmarshalGatewayNetwork = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GatewayNetwork' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    createdAt: unmarshalDate(data.created_at),\n    dhcp: data.dhcp ? unmarshalDHCP(data.dhcp) : undefined,\n    enableDhcp: data.enable_dhcp,\n    enableMasquerade: data.enable_masquerade,\n    gatewayId: data.gateway_id,\n    id: data.id,\n    ipamConfig: data.ipam_config ? unmarshalIpamConfig(data.ipam_config) : undefined,\n    macAddress: data.mac_address,\n    privateNetworkId: data.private_network_id,\n    status: data.status,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalIP = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'IP' failed as data isn't a dictionary.`);\n  }\n  return {\n    address: data.address,\n    createdAt: unmarshalDate(data.created_at),\n    gatewayId: data.gateway_id,\n    id: data.id,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    reverse: data.reverse,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalDHCPEntry = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DHCPEntry' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    gatewayNetworkId: data.gateway_network_id,\n    hostname: data.hostname,\n    id: data.id,\n    ipAddress: data.ip_address,\n    macAddress: data.mac_address,\n    type: data.type,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalGatewayType = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'GatewayType' failed as data isn't a dictionary.`);\n  }\n  return {\n    bandwidth: data.bandwidth,\n    name: data.name,\n    zone: data.zone\n  };\n};\nconst unmarshalGateway = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Gateway' failed as data isn't a dictionary.`);\n  }\n  return {\n    bastionEnabled: data.bastion_enabled,\n    bastionPort: data.bastion_port,\n    canUpgradeTo: data.can_upgrade_to,\n    createdAt: unmarshalDate(data.created_at),\n    gatewayNetworks: unmarshalArrayOfObject(data.gateway_networks, unmarshalGatewayNetwork),\n    id: data.id,\n    ip: data.ip ? unmarshalIP(data.ip) : undefined,\n    ipMobilityEnabled: data.ip_mobility_enabled,\n    isLegacy: data.is_legacy,\n    name: data.name,\n    organizationId: data.organization_id,\n    projectId: data.project_id,\n    smtpEnabled: data.smtp_enabled,\n    status: data.status,\n    tags: data.tags,\n    type: data.type ? unmarshalGatewayType(data.type) : undefined,\n    updatedAt: unmarshalDate(data.updated_at),\n    upstreamDnsServers: data.upstream_dns_servers,\n    version: data.version,\n    zone: data.zone\n  };\n};\nconst unmarshalPATRule = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'PATRule' failed as data isn't a dictionary.`);\n  }\n  return {\n    createdAt: unmarshalDate(data.created_at),\n    gatewayId: data.gateway_id,\n    id: data.id,\n    privateIp: data.private_ip,\n    privatePort: data.private_port,\n    protocol: data.protocol,\n    publicPort: data.public_port,\n    updatedAt: unmarshalDate(data.updated_at),\n    zone: data.zone\n  };\n};\nconst unmarshalListDHCPEntriesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDHCPEntriesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    dhcpEntries: unmarshalArrayOfObject(data.dhcp_entries, unmarshalDHCPEntry),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListDHCPsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListDHCPsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    dhcps: unmarshalArrayOfObject(data.dhcps, unmarshalDHCP),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListGatewayNetworksResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListGatewayNetworksResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    gatewayNetworks: unmarshalArrayOfObject(data.gateway_networks, unmarshalGatewayNetwork),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListGatewayTypesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListGatewayTypesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    types: unmarshalArrayOfObject(data.types, unmarshalGatewayType)\n  };\n};\nconst unmarshalListGatewaysResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListGatewaysResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    gateways: unmarshalArrayOfObject(data.gateways, unmarshalGateway),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListIPsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListIPsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    ips: unmarshalArrayOfObject(data.ips, unmarshalIP),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListPATRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListPATRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    patRules: unmarshalArrayOfObject(data.pat_rules, unmarshalPATRule),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalSetDHCPEntriesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetDHCPEntriesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    dhcpEntries: unmarshalArrayOfObject(data.dhcp_entries, unmarshalDHCPEntry)\n  };\n};\nconst unmarshalSetPATRulesResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'SetPATRulesResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    patRules: unmarshalArrayOfObject(data.pat_rules, unmarshalPATRule)\n  };\n};\nconst marshalCreateDHCPRequest = (request, defaults) => ({\n  address: request.address,\n  dns_local_name: request.dnsLocalName,\n  dns_search: request.dnsSearch,\n  dns_servers_override: request.dnsServersOverride,\n  enable_dynamic: request.enableDynamic,\n  pool_high: request.poolHigh,\n  pool_low: request.poolLow,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  push_default_route: request.pushDefaultRoute,\n  push_dns_server: request.pushDnsServer,\n  rebind_timer: request.rebindTimer,\n  renew_timer: request.renewTimer,\n  subnet: request.subnet,\n  valid_lifetime: request.validLifetime\n});\nconst marshalCreateDHCPEntryRequest = (request, defaults) => ({\n  gateway_network_id: request.gatewayNetworkId,\n  ip_address: request.ipAddress,\n  mac_address: request.macAddress\n});\nconst marshalCreateGatewayNetworkRequestIpamConfig = (request, defaults) => ({\n  ipam_ip_id: request.ipamIpId,\n  push_default_route: request.pushDefaultRoute\n});\nconst marshalCreateGatewayNetworkRequest = (request, defaults) => ({\n  enable_dhcp: request.enableDhcp,\n  enable_masquerade: request.enableMasquerade,\n  gateway_id: request.gatewayId,\n  private_network_id: request.privateNetworkId,\n  ...resolveOneOf([{\n    param: 'dhcp_id',\n    value: request.dhcpId\n  }, {\n    param: 'dhcp',\n    value: request.dhcp !== undefined ? marshalCreateDHCPRequest(request.dhcp, defaults) : undefined\n  }, {\n    param: 'address',\n    value: request.address\n  }, {\n    param: 'ipam_config',\n    value: request.ipamConfig !== undefined ? marshalCreateGatewayNetworkRequestIpamConfig(request.ipamConfig) : undefined\n  }])\n});\nconst marshalCreateGatewayRequest = (request, defaults) => ({\n  bastion_port: request.bastionPort,\n  enable_bastion: request.enableBastion,\n  enable_smtp: request.enableSmtp,\n  ip_id: request.ipId,\n  name: request.name || randomName('gw'),\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  tags: request.tags,\n  type: request.type,\n  upstream_dns_servers: request.upstreamDnsServers\n});\nconst marshalCreateIPRequest = (request, defaults) => ({\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  tags: request.tags\n});\nconst marshalCreatePATRuleRequest = (request, defaults) => ({\n  gateway_id: request.gatewayId,\n  private_ip: request.privateIp,\n  private_port: request.privatePort,\n  protocol: request.protocol,\n  public_port: request.publicPort\n});\nconst marshalSetDHCPEntriesRequestEntry = (request, defaults) => ({\n  ip_address: request.ipAddress,\n  mac_address: request.macAddress\n});\nconst marshalSetDHCPEntriesRequest = (request, defaults) => ({\n  dhcp_entries: request.dhcpEntries !== undefined ? request.dhcpEntries.map(elt => marshalSetDHCPEntriesRequestEntry(elt)) : undefined,\n  gateway_network_id: request.gatewayNetworkId\n});\nconst marshalSetPATRulesRequestRule = (request, defaults) => ({\n  private_ip: request.privateIp,\n  private_port: request.privatePort,\n  protocol: request.protocol,\n  public_port: request.publicPort\n});\nconst marshalSetPATRulesRequest = (request, defaults) => ({\n  gateway_id: request.gatewayId,\n  pat_rules: request.patRules.map(elt => marshalSetPATRulesRequestRule(elt))\n});\nconst marshalUpdateDHCPEntryRequest = (request, defaults) => ({\n  ip_address: request.ipAddress\n});\nconst marshalUpdateDHCPRequest = (request, defaults) => ({\n  address: request.address,\n  dns_local_name: request.dnsLocalName,\n  dns_search: request.dnsSearch,\n  dns_servers_override: request.dnsServersOverride,\n  enable_dynamic: request.enableDynamic,\n  pool_high: request.poolHigh,\n  pool_low: request.poolLow,\n  push_default_route: request.pushDefaultRoute,\n  push_dns_server: request.pushDnsServer,\n  rebind_timer: request.rebindTimer,\n  renew_timer: request.renewTimer,\n  subnet: request.subnet,\n  valid_lifetime: request.validLifetime\n});\nconst marshalUpdateGatewayNetworkRequestIpamConfig = (request, defaults) => ({\n  ipam_ip_id: request.ipamIpId,\n  push_default_route: request.pushDefaultRoute\n});\nconst marshalUpdateGatewayNetworkRequest = (request, defaults) => ({\n  enable_dhcp: request.enableDhcp,\n  enable_masquerade: request.enableMasquerade,\n  ...resolveOneOf([{\n    param: 'dhcp_id',\n    value: request.dhcpId\n  }, {\n    param: 'address',\n    value: request.address\n  }, {\n    param: 'ipam_config',\n    value: request.ipamConfig !== undefined ? marshalUpdateGatewayNetworkRequestIpamConfig(request.ipamConfig) : undefined\n  }])\n});\nconst marshalUpdateGatewayRequest = (request, defaults) => ({\n  bastion_port: request.bastionPort,\n  enable_bastion: request.enableBastion,\n  enable_smtp: request.enableSmtp,\n  name: request.name,\n  tags: request.tags,\n  upstream_dns_servers: request.upstreamDnsServers\n});\nconst marshalUpdateIPRequest = (request, defaults) => ({\n  gateway_id: request.gatewayId,\n  reverse: request.reverse,\n  tags: request.tags\n});\nconst marshalUpdatePATRuleRequest = (request, defaults) => ({\n  private_ip: request.privateIp,\n  private_port: request.privatePort,\n  protocol: request.protocol,\n  public_port: request.publicPort\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders$1 = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Public Gateways API. */\nlet API$1 = class API extends API$z {\n  /** Lists the available zones of the API. */\n  static LOCALITIES = ['fr-par-1', 'fr-par-2', 'nl-ams-1', 'nl-ams-2', 'nl-ams-3', 'pl-waw-1', 'pl-waw-2', 'pl-waw-3'];\n  pageOfListGateways = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateways`,\n    urlParams: urlParams(['name', request.name], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['private_network_id', request.privateNetworkId], ['project_id', request.projectId], ['status', request.status], ['tags', request.tags], ['type', request.type])\n  }, unmarshalListGatewaysResponse);\n\n  /**\n   * List Public Gateways. List Public Gateways in a given Scaleway Organization\n   * or Project. By default, results are displayed in ascending order of\n   * creation date.\n   *\n   * @param request - The request {@link ListGatewaysRequest}\n   * @returns A Promise of ListGatewaysResponse\n   */\n  listGateways = (request = {}) => enrichForPagination('gateways', this.pageOfListGateways, request);\n\n  /**\n   * Get a Public Gateway. Get details of a Public Gateway, specified by its\n   * gateway ID. The response object contains full details of the gateway,\n   * including its **name**, **type**, **status** and more.\n   *\n   * @param request - The request {@link GetGatewayRequest}\n   * @returns A Promise of Gateway\n   */\n  getGateway = request => this.client.fetch({\n    method: 'GET',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateways/${validatePathParam('gatewayId', request.gatewayId)}`\n  }, unmarshalGateway);\n\n  /**\n   * Waits for {@link Gateway} to be in a final state.\n   *\n   * @param request - The request {@link GetGatewayRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Gateway\n   */\n  waitForGateway = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!GATEWAY_TRANSIENT_STATUSES.includes(res.status))), this.getGateway, request, options);\n\n  /**\n   * Create a Public Gateway. Create a new Public Gateway in the specified\n   * Scaleway Project, defining its **name**, **type** and other configuration\n   * details such as whether to enable SSH bastion.\n   *\n   * @param request - The request {@link CreateGatewayRequest}\n   * @returns A Promise of Gateway\n   */\n  createGateway = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateGatewayRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'POST',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateways`\n  }, unmarshalGateway);\n\n  /**\n   * Update a Public Gateway. Update the parameters of an existing Public\n   * Gateway, for example, its **name**, **tags**, **SSH bastion\n   * configuration**, and **DNS servers**.\n   *\n   * @param request - The request {@link UpdateGatewayRequest}\n   * @returns A Promise of Gateway\n   */\n  updateGateway = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateGatewayRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'PATCH',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateways/${validatePathParam('gatewayId', request.gatewayId)}`\n  }, unmarshalGateway);\n\n  /**\n   * Delete a Public Gateway. Delete an existing Public Gateway, specified by\n   * its gateway ID. This action is irreversible.\n   *\n   * @param request - The request {@link DeleteGatewayRequest}\n   */\n  deleteGateway = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateways/${validatePathParam('gatewayId', request.gatewayId)}`,\n    urlParams: urlParams(['cleanup_dhcp', request.cleanupDhcp])\n  });\n\n  /**\n   * Upgrade a Public Gateway to the latest version. Upgrade a given Public\n   * Gateway to the newest software version. This applies the latest bugfixes\n   * and features to your Public Gateway, but its service will be interrupted\n   * during the update.\n   *\n   * @param request - The request {@link UpgradeGatewayRequest}\n   * @returns A Promise of Gateway\n   */\n  upgradeGateway = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$1,\n    method: 'POST',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateways/${validatePathParam('gatewayId', request.gatewayId)}/upgrade`\n  }, unmarshalGateway);\n\n  /**\n   * Upgrade a Public Gateway to IP mobility. Upgrade a Public Gateway to IP\n   * mobility (move from NAT IP to routed IP). This is idempotent: repeated\n   * calls after the first will return no error but have no effect.\n   *\n   * @param request - The request {@link EnableIPMobilityRequest}\n   */\n  enableIPMobility = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$1,\n    method: 'POST',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateways/${validatePathParam('gatewayId', request.gatewayId)}/enable-ip-mobility`\n  });\n  pageOfListGatewayNetworks = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateway-networks`,\n    urlParams: urlParams(['dhcp_id', request.dhcpId], ['enable_masquerade', request.enableMasquerade], ['gateway_id', request.gatewayId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['private_network_id', request.privateNetworkId], ['status', request.status])\n  }, unmarshalListGatewayNetworksResponse);\n\n  /**\n   * List Public Gateway connections to Private Networks. List the connections\n   * between Public Gateways and Private Networks (a connection = a\n   * GatewayNetwork). You can choose to filter by `gateway-id` to list all\n   * Private Networks attached to the specified Public Gateway, or by\n   * `private_network_id` to list all Public Gateways attached to the specified\n   * Private Network. Other query parameters are also available. The result is\n   * an array of GatewayNetwork objects, each giving details of the connection\n   * between a given Public Gateway and a given Private Network.\n   *\n   * @param request - The request {@link ListGatewayNetworksRequest}\n   * @returns A Promise of ListGatewayNetworksResponse\n   */\n  listGatewayNetworks = (request = {}) => enrichForPagination('gatewayNetworks', this.pageOfListGatewayNetworks, request);\n\n  /**\n   * Get a Public Gateway connection to a Private Network. Get details of a\n   * given connection between a Public Gateway and a Private Network (this\n   * connection = a GatewayNetwork), specified by its `gateway_network_id`. The\n   * response object contains details of the connection including the IDs of the\n   * Public Gateway and Private Network, the dates the connection was\n   * created/updated and its configuration settings.\n   *\n   * @param request - The request {@link GetGatewayNetworkRequest}\n   * @returns A Promise of GatewayNetwork\n   */\n  getGatewayNetwork = request => this.client.fetch({\n    method: 'GET',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateway-networks/${validatePathParam('gatewayNetworkId', request.gatewayNetworkId)}`\n  }, unmarshalGatewayNetwork);\n\n  /**\n   * Waits for {@link GatewayNetwork} to be in a final state.\n   *\n   * @param request - The request {@link GetGatewayNetworkRequest}\n   * @param options - The waiting options\n   * @returns A Promise of GatewayNetwork\n   */\n  waitForGatewayNetwork = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!GATEWAY_NETWORK_TRANSIENT_STATUSES.includes(res.status))), this.getGatewayNetwork, request, options);\n\n  /**\n   * Attach a Public Gateway to a Private Network. Attach a specific Public\n   * Gateway to a specific Private Network (create a GatewayNetwork). You can\n   * configure parameters for the connection including DHCP settings, whether to\n   * enable masquerade (dynamic NAT), and more.\n   *\n   * @param request - The request {@link CreateGatewayNetworkRequest}\n   * @returns A Promise of GatewayNetwork\n   */\n  createGatewayNetwork = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateGatewayNetworkRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'POST',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateway-networks`\n  }, unmarshalGatewayNetwork);\n\n  /**\n   * Update a Public Gateway's connection to a Private Network. Update the\n   * configuration parameters of a connection between a given Public Gateway and\n   * Private Network (the connection = a GatewayNetwork). Updatable parameters\n   * include DHCP settings and whether to enable traffic masquerade (dynamic\n   * NAT).\n   *\n   * @param request - The request {@link UpdateGatewayNetworkRequest}\n   * @returns A Promise of GatewayNetwork\n   */\n  updateGatewayNetwork = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateGatewayNetworkRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'PATCH',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateway-networks/${validatePathParam('gatewayNetworkId', request.gatewayNetworkId)}`\n  }, unmarshalGatewayNetwork);\n\n  /**\n   * Detach a Public Gateway from a Private Network. Detach a given Public\n   * Gateway from a given Private Network, i.e. delete a GatewayNetwork\n   * specified by a gateway_network_id.\n   *\n   * @param request - The request {@link DeleteGatewayNetworkRequest}\n   */\n  deleteGatewayNetwork = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateway-networks/${validatePathParam('gatewayNetworkId', request.gatewayNetworkId)}`,\n    urlParams: urlParams(['cleanup_dhcp', request.cleanupDhcp])\n  });\n  pageOfListDHCPs = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/dhcps`,\n    urlParams: urlParams(['address', request.address], ['has_address', request.hasAddress], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId])\n  }, unmarshalListDHCPsResponse);\n\n  /**\n   * List DHCP configurations. List DHCP configurations, optionally filtering by\n   * Organization, Project, Public Gateway IP address or more. The response is\n   * an array of DHCP configuration objects, each identified by a DHCP ID and\n   * containing configuration settings for the assignment of IP addresses to\n   * devices on a Private Network attached to a Public Gateway. Note that the\n   * response does not contain the IDs of any Private Network / Public Gateway\n   * the configuration is attached to. Use the `List Public Gateway connections\n   * to Private Networks` method for that purpose, filtering on DHCP ID.\n   *\n   * @param request - The request {@link ListDHCPsRequest}\n   * @returns A Promise of ListDHCPsResponse\n   */\n  listDHCPs = (request = {}) => enrichForPagination('dhcps', this.pageOfListDHCPs, request);\n\n  /**\n   * Get a DHCP configuration. Get a DHCP configuration object, identified by\n   * its DHCP ID. The response object contains configuration settings for the\n   * assignment of IP addresses to devices on a Private Network attached to a\n   * Public Gateway. Note that the response does not contain the IDs of any\n   * Private Network / Public Gateway the configuration is attached to. Use the\n   * `List Public Gateway connections to Private Networks` method for that\n   * purpose, filtering on DHCP ID.\n   *\n   * @param request - The request {@link GetDHCPRequest}\n   * @returns A Promise of DHCP\n   */\n  getDHCP = request => this.client.fetch({\n    method: 'GET',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/dhcps/${validatePathParam('dhcpId', request.dhcpId)}`\n  }, unmarshalDHCP);\n\n  /**\n   * Create a DHCP configuration. Create a new DHCP configuration object,\n   * containing settings for the assignment of IP addresses to devices on a\n   * Private Network attached to a Public Gateway. The response object includes\n   * the ID of the DHCP configuration object. You can use this ID as part of a\n   * call to `Create a Public Gateway connection to a Private Network` or\n   * `Update a Public Gateway connection to a Private Network` to directly apply\n   * this DHCP configuration.\n   *\n   * @param request - The request {@link CreateDHCPRequest}\n   * @returns A Promise of DHCP\n   */\n  createDHCP = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateDHCPRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'POST',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/dhcps`\n  }, unmarshalDHCP);\n\n  /**\n   * Update a DHCP configuration. Update a DHCP configuration object, identified\n   * by its DHCP ID.\n   *\n   * @param request - The request {@link UpdateDHCPRequest}\n   * @returns A Promise of DHCP\n   */\n  updateDHCP = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateDHCPRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'PATCH',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/dhcps/${validatePathParam('dhcpId', request.dhcpId)}`\n  }, unmarshalDHCP);\n\n  /**\n   * Delete a DHCP configuration. Delete a DHCP configuration object, identified\n   * by its DHCP ID. Note that you cannot delete a DHCP configuration object\n   * that is currently being used by a Gateway Network.\n   *\n   * @param request - The request {@link DeleteDHCPRequest}\n   */\n  deleteDHCP = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/dhcps/${validatePathParam('dhcpId', request.dhcpId)}`\n  });\n  pageOfListDHCPEntries = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/dhcp-entries`,\n    urlParams: urlParams(['gateway_network_id', request.gatewayNetworkId], ['hostname', request.hostname], ['ip_address', request.ipAddress], ['mac_address', request.macAddress], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['type', request.type])\n  }, unmarshalListDHCPEntriesResponse);\n\n  /**\n   * List DHCP entries. List DHCP entries, whether dynamically assigned and/or\n   * statically reserved. DHCP entries can be filtered by the Gateway Network\n   * they are on, their MAC address, IP address, type or hostname.\n   *\n   * @param request - The request {@link ListDHCPEntriesRequest}\n   * @returns A Promise of ListDHCPEntriesResponse\n   */\n  listDHCPEntries = (request = {}) => enrichForPagination('dhcpEntries', this.pageOfListDHCPEntries, request);\n\n  /**\n   * Get a DHCP entry. Get a DHCP entry, specified by its DHCP entry ID.\n   *\n   * @param request - The request {@link GetDHCPEntryRequest}\n   * @returns A Promise of DHCPEntry\n   */\n  getDHCPEntry = request => this.client.fetch({\n    method: 'GET',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/dhcp-entries/${validatePathParam('dhcpEntryId', request.dhcpEntryId)}`\n  }, unmarshalDHCPEntry);\n\n  /**\n   * Create a DHCP entry. Create a static DHCP reservation, specifying the\n   * Gateway Network for the reservation, the MAC address of the target device\n   * and the IP address to assign this device. The response is a DHCP entry\n   * object, confirming the ID and configuration details of the static DHCP\n   * reservation.\n   *\n   * @param request - The request {@link CreateDHCPEntryRequest}\n   * @returns A Promise of DHCPEntry\n   */\n  createDHCPEntry = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateDHCPEntryRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'POST',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/dhcp-entries`\n  }, unmarshalDHCPEntry);\n\n  /**\n   * Update a DHCP entry. Update the IP address for a DHCP entry, specified by\n   * its DHCP entry ID. You can update an existing DHCP entry of any type\n   * (`reservation` (static), `lease` (dynamic) or `unknown`), but in manually\n   * updating the IP address the entry will necessarily be of type `reservation`\n   * after the update.\n   *\n   * @param request - The request {@link UpdateDHCPEntryRequest}\n   * @returns A Promise of DHCPEntry\n   */\n  updateDHCPEntry = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateDHCPEntryRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'PATCH',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/dhcp-entries/${validatePathParam('dhcpEntryId', request.dhcpEntryId)}`\n  }, unmarshalDHCPEntry);\n\n  /**\n   * Set all DHCP reservations on a Gateway Network. Set the list of DHCP\n   * reservations attached to a Gateway Network. Reservations are identified by\n   * their MAC address, and will sync the current DHCP entry list to the given\n   * list, creating, updating or deleting DHCP entries accordingly.\n   *\n   * @param request - The request {@link SetDHCPEntriesRequest}\n   * @returns A Promise of SetDHCPEntriesResponse\n   */\n  setDHCPEntries = request => this.client.fetch({\n    body: JSON.stringify(marshalSetDHCPEntriesRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'PUT',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/dhcp-entries`\n  }, unmarshalSetDHCPEntriesResponse);\n\n  /**\n   * Delete a DHCP entry. Delete a static DHCP reservation, identified by its\n   * DHCP entry ID. Note that you cannot delete DHCP entries of type `lease`,\n   * these are deleted automatically when their time-to-live expires.\n   *\n   * @param request - The request {@link DeleteDHCPEntryRequest}\n   */\n  deleteDHCPEntry = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/dhcp-entries/${validatePathParam('dhcpEntryId', request.dhcpEntryId)}`\n  });\n  pageOfListPATRules = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/pat-rules`,\n    urlParams: urlParams(['gateway_id', request.gatewayId], ['order_by', request.orderBy], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['private_ip', request.privateIp], ['protocol', request.protocol])\n  }, unmarshalListPATRulesResponse);\n\n  /**\n   * List PAT rules. List PAT rules. You can filter by gateway ID to list all\n   * PAT rules for a particular gateway, or filter for PAT rules targeting a\n   * specific IP address or using a specific protocol.\n   *\n   * @param request - The request {@link ListPATRulesRequest}\n   * @returns A Promise of ListPATRulesResponse\n   */\n  listPATRules = (request = {}) => enrichForPagination('patRules', this.pageOfListPATRules, request);\n\n  /**\n   * Get a PAT rule. Get a PAT rule, specified by its PAT rule ID. The response\n   * object gives full details of the PAT rule, including the Public Gateway it\n   * belongs to and the configuration settings in terms of public / private\n   * ports, private IP and protocol.\n   *\n   * @param request - The request {@link GetPATRuleRequest}\n   * @returns A Promise of PATRule\n   */\n  getPATRule = request => this.client.fetch({\n    method: 'GET',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/pat-rules/${validatePathParam('patRuleId', request.patRuleId)}`\n  }, unmarshalPATRule);\n\n  /**\n   * Create a PAT rule. Create a new PAT rule on a specified Public Gateway,\n   * defining the protocol to use, public port to listen on, and private port /\n   * IP address to map to.\n   *\n   * @param request - The request {@link CreatePATRuleRequest}\n   * @returns A Promise of PATRule\n   */\n  createPATRule = request => this.client.fetch({\n    body: JSON.stringify(marshalCreatePATRuleRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'POST',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/pat-rules`\n  }, unmarshalPATRule);\n\n  /**\n   * Update a PAT rule. Update a PAT rule, specified by its PAT rule ID.\n   * Configuration settings including private/public port, private IP address\n   * and protocol can all be updated.\n   *\n   * @param request - The request {@link UpdatePATRuleRequest}\n   * @returns A Promise of PATRule\n   */\n  updatePATRule = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdatePATRuleRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'PATCH',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/pat-rules/${validatePathParam('patRuleId', request.patRuleId)}`\n  }, unmarshalPATRule);\n\n  /**\n   * Set all PAT rules. Set a definitive list of PAT rules attached to a Public\n   * Gateway. Each rule is identified by its public port and protocol. This will\n   * sync the current PAT rule list on the gateway with the new list, creating,\n   * updating or deleting PAT rules accordingly.\n   *\n   * @param request - The request {@link SetPATRulesRequest}\n   * @returns A Promise of SetPATRulesResponse\n   */\n  setPATRules = request => this.client.fetch({\n    body: JSON.stringify(marshalSetPATRulesRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'PUT',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/pat-rules`\n  }, unmarshalSetPATRulesResponse);\n\n  /**\n   * Delete a PAT rule. Delete a PAT rule, identified by its PAT rule ID. This\n   * action is irreversible.\n   *\n   * @param request - The request {@link DeletePATRuleRequest}\n   */\n  deletePATRule = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/pat-rules/${validatePathParam('patRuleId', request.patRuleId)}`\n  });\n\n  /**\n   * List Public Gateway types. List the different Public Gateway commercial\n   * offer types available at Scaleway. The response is an array of objects\n   * describing the name and technical details of each available gateway type.\n   *\n   * @param request - The request {@link ListGatewayTypesRequest}\n   * @returns A Promise of ListGatewayTypesResponse\n   */\n  listGatewayTypes = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateway-types`\n  }, unmarshalListGatewayTypesResponse);\n  pageOfListIPs = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips`,\n    urlParams: urlParams(['is_free', request.isFree], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['reverse', request.reverse], ['tags', request.tags])\n  }, unmarshalListIPsResponse);\n\n  /**\n   * List IPs. List Public Gateway flexible IP addresses. A number of filter\n   * options are available for limiting results in the response.\n   *\n   * @param request - The request {@link ListIPsRequest}\n   * @returns A Promise of ListIPsResponse\n   */\n  listIPs = (request = {}) => enrichForPagination('ips', this.pageOfListIPs, request);\n\n  /**\n   * Get an IP. Get details of a Public Gateway flexible IP address, identified\n   * by its IP ID. The response object contains information including which (if\n   * any) Public Gateway using this IP address, the reverse and various other\n   * metadata.\n   *\n   * @param request - The request {@link GetIPRequest}\n   * @returns A Promise of IP\n   */\n  getIP = request => this.client.fetch({\n    method: 'GET',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips/${validatePathParam('ipId', request.ipId)}`\n  }, unmarshalIP);\n\n  /**\n   * Reserve an IP. Create (reserve) a new flexible IP address that can be used\n   * for a Public Gateway in a specified Scaleway Project.\n   *\n   * @param request - The request {@link CreateIPRequest}\n   * @returns A Promise of IP\n   */\n  createIP = (request = {}) => this.client.fetch({\n    body: JSON.stringify(marshalCreateIPRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'POST',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips`\n  }, unmarshalIP);\n\n  /**\n   * Update an IP. Update details of an existing flexible IP address, including\n   * its tags, reverse and the Public Gateway it is assigned to.\n   *\n   * @param request - The request {@link UpdateIPRequest}\n   * @returns A Promise of IP\n   */\n  updateIP = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateIPRequest(request, this.client.settings)),\n    headers: jsonContentHeaders$1,\n    method: 'PATCH',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips/${validatePathParam('ipId', request.ipId)}`\n  }, unmarshalIP);\n\n  /**\n   * Delete an IP. Delete a flexible IP address from your account. This action\n   * is irreversible.\n   *\n   * @param request - The request {@link DeleteIPRequest}\n   */\n  deleteIP = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/ips/${validatePathParam('ipId', request.ipId)}`\n  });\n\n  /**\n   * Refresh a Public Gateway's SSH keys. Refresh the SSH keys of a given Public\n   * Gateway, specified by its gateway ID. This adds any new SSH keys in the\n   * gateway's Scaleway Project to the gateway itself.\n   *\n   * @param request - The request {@link RefreshSSHKeysRequest}\n   * @returns A Promise of Gateway\n   */\n  refreshSSHKeys = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders$1,\n    method: 'POST',\n    path: `/vpc-gw/v1/zones/${validatePathParam('zone', request.zone ?? this.client.settings.defaultZone)}/gateways/${validatePathParam('gatewayId', request.gatewayId)}/refresh-ssh-keys`\n  }, unmarshalGateway);\n};\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API$1,\n  GATEWAY_NETWORK_TRANSIENT_STATUSES: GATEWAY_NETWORK_TRANSIENT_STATUSES,\n  GATEWAY_TRANSIENT_STATUSES: GATEWAY_TRANSIENT_STATUSES\n});\n\nvar index$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1: index_gen$1\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\n/** Lists transient statutes of the enum {@link HostingStatus}. */\nconst HOSTING_TRANSIENT_STATUSES = ['delivering', 'deleting', 'migrating'];\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst unmarshalHostingCpanelUrls = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'HostingCpanelUrls' failed as data isn't a dictionary.`);\n  }\n  return {\n    dashboard: data.dashboard,\n    webmail: data.webmail\n  };\n};\nconst unmarshalHostingOption = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'HostingOption' failed as data isn't a dictionary.`);\n  }\n  return {\n    id: data.id,\n    name: data.name\n  };\n};\nconst unmarshalHosting = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Hosting' failed as data isn't a dictionary.`);\n  }\n  return {\n    controlPanelName: data.control_panel_name,\n    cpanelUrls: data.cpanel_urls ? unmarshalHostingCpanelUrls(data.cpanel_urls) : undefined,\n    createdAt: unmarshalDate(data.created_at),\n    dnsStatus: data.dns_status,\n    domain: data.domain,\n    id: data.id,\n    ipv4: data.ipv4,\n    ipv6: data.ipv6,\n    offerEndOfLife: data.offer_end_of_life,\n    offerId: data.offer_id,\n    offerName: data.offer_name,\n    options: unmarshalArrayOfObject(data.options, unmarshalHostingOption),\n    organizationId: data.organization_id,\n    platformGroup: data.platform_group,\n    platformHostname: data.platform_hostname,\n    platformNumber: data.platform_number,\n    projectId: data.project_id,\n    protected: data.protected,\n    region: data.region,\n    status: data.status,\n    tags: data.tags,\n    updatedAt: unmarshalDate(data.updated_at),\n    username: data.username\n  };\n};\nconst unmarshalDnsRecord = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DnsRecord' failed as data isn't a dictionary.`);\n  }\n  return {\n    name: data.name,\n    priority: data.priority,\n    status: data.status,\n    ttl: data.ttl,\n    type: data.type,\n    value: data.value\n  };\n};\nconst unmarshalNameserver = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Nameserver' failed as data isn't a dictionary.`);\n  }\n  return {\n    hostname: data.hostname,\n    isDefault: data.is_default,\n    status: data.status\n  };\n};\nconst unmarshalDnsRecords = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'DnsRecords' failed as data isn't a dictionary.`);\n  }\n  return {\n    nameServers: unmarshalArrayOfObject(data.name_servers, unmarshalNameserver),\n    records: unmarshalArrayOfObject(data.records, unmarshalDnsRecord),\n    status: data.status\n  };\n};\nconst unmarshalControlPanel = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ControlPanel' failed as data isn't a dictionary.`);\n  }\n  return {\n    available: data.available,\n    logoUrl: data.logo_url,\n    name: data.name\n  };\n};\nconst unmarshalListControlPanelsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListControlPanelsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    controlPanels: unmarshalArrayOfObject(data.control_panels, unmarshalControlPanel),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalListHostingsResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListHostingsResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    hostings: unmarshalArrayOfObject(data.hostings, unmarshalHosting),\n    totalCount: data.total_count\n  };\n};\nconst unmarshalOfferProduct = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'OfferProduct' failed as data isn't a dictionary.`);\n  }\n  return {\n    databasesQuota: data.databases_quota,\n    emailAccountsQuota: data.email_accounts_quota,\n    emailStorageQuota: data.email_storage_quota,\n    hostingStorageQuota: data.hosting_storage_quota,\n    maxAddonDomains: data.max_addon_domains,\n    name: data.name,\n    option: data.option,\n    ram: data.ram,\n    supportIncluded: data.support_included,\n    vCpu: data.v_cpu\n  };\n};\nconst unmarshalOffer = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'Offer' failed as data isn't a dictionary.`);\n  }\n  return {\n    available: data.available,\n    billingOperationPath: data.billing_operation_path,\n    controlPanelName: data.control_panel_name,\n    endOfLife: data.end_of_life,\n    id: data.id,\n    price: data.price ? unmarshalMoney(data.price) : undefined,\n    product: data.product ? unmarshalOfferProduct(data.product) : undefined,\n    quotaWarnings: data.quota_warnings\n  };\n};\nconst unmarshalListOffersResponse = data => {\n  if (!isJSONObject(data)) {\n    throw new TypeError(`Unmarshalling the type 'ListOffersResponse' failed as data isn't a dictionary.`);\n  }\n  return {\n    offers: unmarshalArrayOfObject(data.offers, unmarshalOffer)\n  };\n};\nconst marshalCreateHostingRequestDomainConfiguration = (request, defaults) => ({\n  update_all_records: request.updateAllRecords,\n  update_mail_record: request.updateMailRecord,\n  update_nameservers: request.updateNameservers,\n  update_web_record: request.updateWebRecord\n});\nconst marshalCreateHostingRequest = (request, defaults) => ({\n  domain: request.domain,\n  domain_configuration: request.domainConfiguration !== undefined ? marshalCreateHostingRequestDomainConfiguration(request.domainConfiguration) : undefined,\n  email: request.email,\n  language: request.language,\n  offer_id: request.offerId,\n  option_ids: request.optionIds,\n  project_id: request.projectId ?? defaults.defaultProjectId,\n  tags: request.tags\n});\nconst marshalUpdateHostingRequest = (request, defaults) => ({\n  email: request.email,\n  offer_id: request.offerId,\n  option_ids: request.optionIds,\n  protected: request.protected,\n  tags: request.tags\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\nconst jsonContentHeaders = {\n  'Content-Type': 'application/json; charset=utf-8'\n};\n\n/** Web Hosting API. */\nclass API extends API$z {\n  /** Lists the available regions of the API. */\n  static LOCALITIES = ['fr-par', 'nl-ams'];\n\n  /**\n   * Order a Web Hosting plan. Order a Web Hosting plan, specifying the offer\n   * type required via the `offer_id` parameter.\n   *\n   * @param request - The request {@link CreateHostingRequest}\n   * @returns A Promise of Hosting\n   */\n  createHosting = request => this.client.fetch({\n    body: JSON.stringify(marshalCreateHostingRequest(request, this.client.settings)),\n    headers: jsonContentHeaders,\n    method: 'POST',\n    path: `/webhosting/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hostings`\n  }, unmarshalHosting);\n  pageOfListHostings = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/webhosting/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hostings`,\n    urlParams: urlParams(['control_panels', request.controlPanels], ['domain', request.domain], ['order_by', request.orderBy], ['organization_id', request.organizationId], ['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize], ['project_id', request.projectId], ['statuses', request.statuses], ['tags', request.tags])\n  }, unmarshalListHostingsResponse);\n\n  /**\n   * List all Web Hosting plans. List all of your existing Web Hosting plans.\n   * Various filters are available to limit the results, including filtering by\n   * domain, status, tag and Project ID.\n   *\n   * @param request - The request {@link ListHostingsRequest}\n   * @returns A Promise of ListHostingsResponse\n   */\n  listHostings = (request = {}) => enrichForPagination('hostings', this.pageOfListHostings, request);\n\n  /**\n   * Get a Web Hosting plan. Get the details of one of your existing Web Hosting\n   * plans, specified by its `hosting_id`.\n   *\n   * @param request - The request {@link GetHostingRequest}\n   * @returns A Promise of Hosting\n   */\n  getHosting = request => this.client.fetch({\n    method: 'GET',\n    path: `/webhosting/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hostings/${validatePathParam('hostingId', request.hostingId)}`\n  }, unmarshalHosting);\n\n  /**\n   * Waits for {@link Hosting} to be in a final state.\n   *\n   * @param request - The request {@link GetHostingRequest}\n   * @param options - The waiting options\n   * @returns A Promise of Hosting\n   */\n  waitForHosting = (request, options) => waitForResource(options?.stop ?? (res => Promise.resolve(!HOSTING_TRANSIENT_STATUSES.includes(res.status))), this.getHosting, request, options);\n\n  /**\n   * Update a Web Hosting plan. Update the details of one of your existing Web\n   * Hosting plans, specified by its `hosting_id`. You can update parameters\n   * including the contact email address, tags, options and offer.\n   *\n   * @param request - The request {@link UpdateHostingRequest}\n   * @returns A Promise of Hosting\n   */\n  updateHosting = request => this.client.fetch({\n    body: JSON.stringify(marshalUpdateHostingRequest(request, this.client.settings)),\n    headers: jsonContentHeaders,\n    method: 'PATCH',\n    path: `/webhosting/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hostings/${validatePathParam('hostingId', request.hostingId)}`\n  }, unmarshalHosting);\n\n  /**\n   * Delete a Web Hosting plan. Delete a Web Hosting plan, specified by its\n   * `hosting_id`. Note that deletion is not immediate: it will take place at\n   * the end of the calendar month, after which time your Web Hosting plan and\n   * all its data (files and emails) will be irreversibly lost.\n   *\n   * @param request - The request {@link DeleteHostingRequest}\n   * @returns A Promise of Hosting\n   */\n  deleteHosting = request => this.client.fetch({\n    method: 'DELETE',\n    path: `/webhosting/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hostings/${validatePathParam('hostingId', request.hostingId)}`\n  }, unmarshalHosting);\n\n  /**\n   * Restore a Web Hosting plan. When you [delete a Web Hosting\n   * plan](#path-hostings-delete-a-hosting), definitive deletion does not take\n   * place until the end of the calendar month. In the time between initiating\n   * the deletion, and definitive deletion at the end of the month, you can\n   * choose to **restore** the Web Hosting plan, using this endpoint and\n   * specifying its `hosting_id`.\n   *\n   * @param request - The request {@link RestoreHostingRequest}\n   * @returns A Promise of Hosting\n   */\n  restoreHosting = request => this.client.fetch({\n    body: '{}',\n    headers: jsonContentHeaders,\n    method: 'POST',\n    path: `/webhosting/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/hostings/${validatePathParam('hostingId', request.hostingId)}/restore`\n  }, unmarshalHosting);\n\n  /**\n   * Get DNS records. Get the set of DNS records of a specified domain\n   * associated with a Web Hosting plan.\n   *\n   * @param request - The request {@link GetDomainDnsRecordsRequest}\n   * @returns A Promise of DnsRecords\n   */\n  getDomainDnsRecords = request => this.client.fetch({\n    method: 'GET',\n    path: `/webhosting/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/domains/${validatePathParam('domain', request.domain)}/dns-records`\n  }, unmarshalDnsRecords);\n\n  /**\n   * List all offers. List the different Web Hosting offers, and their options,\n   * available to order from Scaleway.\n   *\n   * @param request - The request {@link ListOffersRequest}\n   * @returns A Promise of ListOffersResponse\n   */\n  listOffers = request => this.client.fetch({\n    method: 'GET',\n    path: `/webhosting/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/offers`,\n    urlParams: urlParams(['control_panels', request.controlPanels], ['hosting_id', request.hostingId], ['only_options', request.onlyOptions], ['order_by', request.orderBy], ['without_options', request.withoutOptions])\n  }, unmarshalListOffersResponse);\n  pageOfListControlPanels = (request = {}) => this.client.fetch({\n    method: 'GET',\n    path: `/webhosting/v1alpha1/regions/${validatePathParam('region', request.region ?? this.client.settings.defaultRegion)}/control-panels`,\n    urlParams: urlParams(['page', request.page], ['page_size', request.pageSize ?? this.client.settings.defaultPageSize])\n  }, unmarshalListControlPanelsResponse);\n\n  /**\n   * List all control panels type. List the control panels type: cpanel or\n   * plesk.\n   *\n   * @param request - The request {@link ListControlPanelsRequest}\n   * @returns A Promise of ListControlPanelsResponse\n   */\n  listControlPanels = (request = {}) => enrichForPagination('controlPanels', this.pageOfListControlPanels, request);\n}\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nconst ListControlPanelsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\nconst ListHostingsRequest = {\n  page: {\n    greaterThan: 0\n  },\n  pageSize: {\n    greaterThan: 0,\n    lessThanOrEqual: 100\n  }\n};\n\nvar validationRules_gen = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ListControlPanelsRequest: ListControlPanelsRequest,\n  ListHostingsRequest: ListHostingsRequest\n});\n\n// This file was automatically generated. DO NOT EDIT.\n// If you have any remark or suggestion do not hesitate to open an issue.\n\nvar index_gen = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  API: API,\n  HOSTING_TRANSIENT_STATUSES: HOSTING_TRANSIENT_STATUSES,\n  ValidationRules: validationRules_gen\n});\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  v1alpha1: index_gen\n});\n\nexports.API = API$z;\nexports.Account = index$A;\nexports.AppleSilicon = index$z;\nexports.BareMetal = index$x;\nexports.Billing = index$w;\nexports.Block = index$v;\nexports.Cockpit = index$u;\nexports.Container = index$t;\nexports.Dedibox = index$s;\nexports.DocumentDB = index$r;\nexports.Domain = index$q;\nexports.Errors = index$B;\nexports.FlexibleIP = index$p;\nexports.Function = index$o;\nexports.IAM = index$n;\nexports.IOT = index$k;\nexports.IPAM = index$j;\nexports.IPFS = index$i;\nexports.Instance = index$l;\nexports.Jobs = index$h;\nexports.K8S = index$f;\nexports.LB = index$d;\nexports.LLMInference = index$c;\nexports.MNQ = index$a;\nexports.Marketplace = index$b;\nexports.RDB = index$9;\nexports.Redis = index$8;\nexports.Registry = index$7;\nexports.Secret = index$6;\nexports.ServerlessSQLDB = index$5;\nexports.Std = index_gen$6;\nexports.Test = index$4;\nexports.TransactionalEmail = index$3;\nexports.VPC = index$2;\nexports.VPCGW = index$1;\nexports.Webhosting = index;\nexports.addAsyncHeaderInterceptor = addAsyncHeaderInterceptor;\nexports.authenticateWithSessionToken = authenticateWithSessionToken;\nexports.createAdvancedClient = createAdvancedClient;\nexports.createClient = createClient;\nexports.createExponentialBackoffStrategy = createExponentialBackoffStrategy;\nexports.enableConsoleLogger = enableConsoleLogger;\nexports.enrichForPagination = enrichForPagination;\nexports.isJSONObject = isJSONObject;\nexports.marshalMoney = marshalMoney;\nexports.marshalScwFile = marshalScwFile;\nexports.marshalTimeSeries = marshalTimeSeries;\nexports.resolveOneOf = resolveOneOf;\nexports.setLogger = setLogger;\nexports.tryAtIntervals = tryAtIntervals;\nexports.unmarshalArrayOfObject = unmarshalArrayOfObject;\nexports.unmarshalDate = unmarshalDate;\nexports.unmarshalMapOfObject = unmarshalMapOfObject;\nexports.unmarshalMoney = unmarshalMoney;\nexports.unmarshalScwFile = unmarshalScwFile;\nexports.unmarshalServiceInfo = unmarshalServiceInfo;\nexports.unmarshalTimeSeries = unmarshalTimeSeries;\nexports.unmarshalTimeSeriesPoint = unmarshalTimeSeriesPoint;\nexports.urlParams = urlParams;\nexports.validatePathParam = validatePathParam;\nexports.waitForResource = waitForResource;\nexports.withAdditionalInterceptors = withAdditionalInterceptors;\nexports.withDefaultPageSize = withDefaultPageSize;\nexports.withHTTPClient = withHTTPClient;\nexports.withProfile = withProfile;\nexports.withUserAgent = withUserAgent;\nexports.withUserAgentSuffix = withUserAgentSuffix;\n", "import 'cross-fetch/polyfill'\nimport { Registry } from './products/registry/Registry'\n\nexport default () => <Registry />\n", "const fetchNode = require('./node-ponyfill')\n\nif (!global.fetch) {\n  const fetch = fetchNode.fetch.bind({})\n\n  global.fetch = fetch\n  global.fetch.polyfill = true\n  global.Response = fetchNode.Response\n  global.Headers = fetchNode.Headers\n  global.Request = fetchNode.Request\n}\n", "import { createContext, useRef, useCallback, useMemo, useContext } from 'react';\nimport { KEY_IS_NOT_STRING_ERROR, DEFAULT_MAX_CONCURRENT_REQUESTS } from './constants.js';\nimport DataLoader from './dataloader.js';\nimport { jsx } from 'react/jsx-runtime';\n\nconst DataLoaderContext = createContext(undefined);\nconst DataLoaderProvider = ({\n  children,\n  cacheKeyPrefix = '',\n  onError,\n  maxConcurrentRequests = DEFAULT_MAX_CONCURRENT_REQUESTS\n}) => {\n  const requestsRef = useRef({});\n  const computeKey = useCallback(key => `${cacheKeyPrefix ? `${cacheKeyPrefix}-` : ''}${key}`, [cacheKeyPrefix]);\n  const getRequest = useCallback(key => requestsRef.current[computeKey(key)], [computeKey]);\n  const addRequest = useCallback((key, args) => {\n    if (DataLoader.maxConcurrent !== maxConcurrentRequests) {\n      DataLoader.maxConcurrent = maxConcurrentRequests;\n    }\n    if (key && typeof key === 'string') {\n      const newRequest = new DataLoader({\n        ...args,\n        key: computeKey(key)\n      });\n      requestsRef.current[newRequest.key] = newRequest;\n      return newRequest;\n    }\n    throw new Error(KEY_IS_NOT_STRING_ERROR);\n  }, [computeKey, maxConcurrentRequests]);\n  const getOrAddRequest = useCallback((key, args) => {\n    const requestFound = getRequest(key);\n    if (!requestFound) {\n      return addRequest(key, args);\n    }\n    return requestFound;\n  }, [addRequest, getRequest]);\n  const clearCachedData = useCallback(key => {\n    if (key && typeof key === 'string') {\n      getRequest(key)?.clearData();\n    } else throw new Error(KEY_IS_NOT_STRING_ERROR);\n  }, [getRequest]);\n  const clearAllCachedData = useCallback(() => {\n    Object.values(requestsRef.current).forEach(request => {\n      request.clearData();\n    });\n  }, []);\n  const reload = useCallback(async key => {\n    if (key && typeof key === 'string') {\n      await getRequest(key)?.load(true);\n    } else throw new Error(KEY_IS_NOT_STRING_ERROR);\n  }, [getRequest]);\n  const reloadAll = useCallback(async () => {\n    await Promise.all(Object.values(requestsRef.current).map(request => request.load(true)));\n  }, []);\n  const getCachedData = useCallback(key => {\n    if (key) {\n      return getRequest(key)?.getData();\n    }\n    return Object.values(requestsRef.current).reduce((acc, request) => ({\n      ...acc,\n      [request.key]: request.getData()\n    }), {});\n  }, [getRequest]);\n  const getReloads = useCallback(key => {\n    if (key) {\n      return getRequest(key) ? () => getRequest(key)?.load(true) : undefined;\n    }\n    return Object.entries(requestsRef.current).reduce((acc, [requestKey, {\n      load\n    }]) => ({\n      ...acc,\n      [requestKey]: () => load(true)\n    }), {});\n  }, [getRequest]);\n  const value = useMemo(() => ({\n    addRequest,\n    cacheKeyPrefix,\n    clearAllCachedData,\n    clearCachedData,\n    getCachedData,\n    getOrAddRequest,\n    getReloads,\n    getRequest,\n    onError,\n    reload,\n    reloadAll\n  }), [addRequest, cacheKeyPrefix, clearAllCachedData, clearCachedData, getCachedData, getOrAddRequest, getRequest, getReloads, onError, reload, reloadAll]);\n  return jsx(DataLoaderContext.Provider, {\n    value: value,\n    children: children\n  });\n};\nconst useDataLoaderContext = () => useContext(DataLoaderContext);\nvar DataLoaderProvider$1 = DataLoaderProvider;\n\nexport { DataLoaderContext, DataLoaderProvider$1 as default, useDataLoaderContext };\n", "let StatusEnum = function (StatusEnum) {\n  StatusEnum[\"ERROR\"] = \"error\";\n  StatusEnum[\"IDLE\"] = \"idle\";\n  StatusEnum[\"LOADING\"] = \"loading\";\n  StatusEnum[\"SUCCESS\"] = \"success\";\n  return StatusEnum;\n}({});\nconst KEY_IS_NOT_STRING_ERROR = 'Key should be a string';\nconst DEFAULT_MAX_CONCURRENT_REQUESTS = 20;\n\nexport { DEFAULT_MAX_CONCURRENT_REQUESTS, KEY_IS_NOT_STRING_ERROR, StatusEnum };\n", "import { DEFAULT_MAX_CONCURRENT_REQUESTS, StatusEnum } from './constants.js';\n\nclass DataLoader {\n  static maxConcurrent = DEFAULT_MAX_CONCURRENT_REQUESTS;\n  static started = 0;\n  static cachedData = {};\n  static queue = {};\n  isCalled = false;\n  isCancelled = true;\n  status = StatusEnum.IDLE;\n  observers = [];\n  loadCount = 0;\n  isFirstLoading = true;\n  constructor(args) {\n    this.key = args.key;\n    this.method = args.method;\n    if (args.enabled) {\n      this.status = StatusEnum.LOADING;\n    }\n    this.data = DataLoader.cachedData[this.key];\n    if (args.notifyChanges) this.observers.push(args.notifyChanges);\n  }\n  notifyChanges() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    this.timeout = setTimeout(() => {\n      this.observers.forEach(observer => observer());\n    });\n  }\n  getData() {\n    return DataLoader.cachedData[this.key];\n  }\n  tryLaunch = async () => {\n    if (DataLoader.started < DataLoader.maxConcurrent) {\n      DataLoader.started += 1;\n      DataLoader.queue[this.key] = this.launch();\n    } else {\n      DataLoader.queue[this.key] = new Promise(resolve => {\n        setTimeout(resolve);\n      }).then(this.tryLaunch);\n    }\n    return DataLoader.queue[this.key];\n  };\n  load = async (force = false) => {\n    if (force || !this.isCalled) {\n      this.isCalled = true;\n      if (this.status !== StatusEnum.LOADING) {\n        this.status = StatusEnum.LOADING;\n        this.notifyChanges();\n      }\n      DataLoader.queue[this.key] = this.tryLaunch();\n    }\n    return DataLoader.queue[this.key];\n  };\n  launch = async () => {\n    try {\n      this.isCancelled = false;\n      this.loadCount += 1;\n      const data = await this.method();\n      if (!this.isCancelled) {\n        DataLoader.cachedData[this.key] = data;\n        this.status = StatusEnum.SUCCESS;\n        this.data = data;\n        this.error = undefined;\n        this.dataUpdatedAt = Date.now();\n      }\n      this.isCalled = false;\n      this.isFirstLoading = false;\n      DataLoader.started -= 1;\n      delete DataLoader.queue[this.key];\n      this.notifyChanges();\n      return data;\n    } catch (error) {\n      if (!this.isCancelled) {\n        this.status = StatusEnum.ERROR;\n        this.error = error;\n      }\n      this.isCalled = false;\n      this.isFirstLoading = false;\n      DataLoader.started -= 1;\n      delete DataLoader.queue[this.key];\n      this.notifyChanges();\n      if (!this.isCancelled) {\n        throw error;\n      }\n      return undefined;\n    }\n  };\n  clearData() {\n    DataLoader.cachedData[this.key] = undefined;\n  }\n  cancel() {\n    DataLoader.started -= 1;\n    delete DataLoader.queue[this.key];\n    this.isCancelled = true;\n    this.status = StatusEnum.IDLE;\n  }\n  addObserver(observer) {\n    this.observers.push(observer);\n  }\n  removeObserver(observer) {\n    const index = this.observers.indexOf(observer);\n    if (index > -1) this.observers.splice(index, 1);\n  }\n}\n\nexport { DataLoader as default };\n", "import { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { useDataLoaderContext } from './DataLoaderProvider.js';\nimport { StatusEnum } from './constants.js';\nimport { marshalQueryKey } from './helpers.js';\n\nconst useDataLoader = (key, method, {\n  enabled = true,\n  onError,\n  onSuccess,\n  keepPreviousData = false,\n  needPolling = true,\n  pollingInterval,\n  initialData,\n  dataLifetime\n} = {}) => {\n  const {\n    getOrAddRequest,\n    onError: onGlobalError\n  } = useDataLoaderContext();\n  const methodRef = useRef(method);\n  const onSuccessRef = useRef(onSuccess);\n  const onErrorRef = useRef(onError ?? onGlobalError);\n  const needPollingRef = useRef(needPolling);\n  const [, setCounter] = useState(0);\n  const forceRerender = useCallback(() => {\n    setCounter(current => current + 1);\n  }, []);\n  const queryKey = useMemo(() => marshalQueryKey(key), [key]);\n  const request = getOrAddRequest(queryKey, {\n    enabled,\n    method: methodRef.current\n  });\n  useEffect(() => {\n    request.addObserver(forceRerender);\n    return () => {\n      request.removeObserver(forceRerender);\n    };\n  }, [request, forceRerender]);\n  const needLoad = useMemo(() => !!(enabled && (!request.dataUpdatedAt || !dataLifetime || request.dataUpdatedAt && dataLifetime && request.dataUpdatedAt + dataLifetime < Date.now())), [enabled, request.dataUpdatedAt, dataLifetime]);\n  const optimisticIsLoadingRef = useRef(needLoad);\n  const previousDataRef = useRef(request.data);\n  const isLoading = request.status === StatusEnum.LOADING || optimisticIsLoadingRef.current;\n  const isSuccess = request.status === StatusEnum.SUCCESS;\n  const isError = request.status === StatusEnum.ERROR;\n  const isIdle = request.status === StatusEnum.IDLE && !enabled;\n  const isPolling = !!(pollingInterval && (typeof needPolling === 'function' && (request.isFirstLoading || needPolling(request.data)) || typeof needPolling !== 'function' && needPolling));\n  const reload = useCallback(() => request.load(true).then(onSuccessRef.current).catch(onErrorRef.current), [request]);\n  useEffect(() => {\n    needPollingRef.current = needPolling;\n  }, [needPolling]);\n  useEffect(() => {\n    request.method = method;\n  }, [method, request]);\n  useEffect(() => {\n    onSuccessRef.current = onSuccess;\n  }, [onSuccess]);\n  useEffect(() => {\n    onErrorRef.current = onError ?? onGlobalError;\n  }, [onError, onGlobalError]);\n  useEffect(() => {\n    if (keepPreviousData) {\n      previousDataRef.current = request.data;\n    }\n  }, [request.data, keepPreviousData]);\n  useEffect(() => {\n    if (needLoad) {\n      const defaultOnSuccessOrError = () => {};\n      const onSuccessLoad = onSuccessRef.current ?? defaultOnSuccessOrError;\n      const onFailedLoad = onErrorRef.current ?? defaultOnSuccessOrError;\n      request.load().then(onSuccessLoad).catch(onFailedLoad);\n    }\n    optimisticIsLoadingRef.current = false;\n  }, [needLoad, request]);\n  useEffect(() => {\n    let interval;\n    if (pollingInterval) {\n      interval = setInterval(() => {\n        if (needPollingRef.current && typeof needPollingRef.current === 'function' && needPollingRef.current(request.data) || typeof needPollingRef.current !== 'function' && needPollingRef.current && !request.isCalled) {\n          const defaultOnSuccessOrError = () => {};\n          const onSuccessLoad = onSuccessRef.current ?? defaultOnSuccessOrError;\n          const onFailedLoad = onErrorRef.current ?? defaultOnSuccessOrError;\n          request.load(true).then(onSuccessLoad).catch(onFailedLoad);\n        }\n      }, pollingInterval);\n    }\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [pollingInterval, request]);\n  return {\n    data: !request.isFirstLoading ? request.data : initialData,\n    error: request.error,\n    isError,\n    isIdle,\n    isLoading,\n    isPolling,\n    isSuccess,\n    previousData: previousDataRef.current,\n    reload\n  };\n};\n\nexport { useDataLoader };\n", "const marshalQueryKey = queryKey => Array.isArray(queryKey) ? queryKey.filter(value => value !== undefined && value !== null).map(subKey => {\n  if (subKey instanceof Date) {\n    return subKey.toISOString();\n  }\n  return subKey?.toString();\n}).join('.') : queryKey.toString();\n\nexport { marshalQueryKey };\n", "import { List } from '@raycast/api'\nimport { getPreferenceUser } from 'helpers/getPreferenceUser'\nimport { useReducer, useState } from 'react'\nimport { POLLING_INTERVAL } from '../../constants'\nimport { ImageAction, ImageDetail } from './pages/images'\nimport { NamespaceDropdown } from './pages/namespaces'\nimport { useAllImagesQuery, useAllRegionNamespacesQuery } from './queries'\nimport { isImageTransient, isNamespaceTransient } from './status'\n\nexport const Images = () => {\n  const clientSetting = getPreferenceUser()\n  const [isDetailOpen, toggleIsDetailOpen] = useReducer((state) => !state, true)\n  const [selectedNamespaceId, setSelectedNamespaceId] = useState<string>('')\n\n  const { data: namespaces = [], isLoading: isLoadingNamespaces } = useAllRegionNamespacesQuery(\n    {\n      orderBy: 'created_at_desc',\n      organizationId: clientSetting.defaultOrganizationId,\n    },\n    {\n      needPolling: (n) => (n || []).some(isNamespaceTransient),\n    }\n  )\n\n  const { data: images, isLoading: isLoadingImages } = useAllImagesQuery(\n    {\n      namespaceId: selectedNamespaceId,\n      organizationId: clientSetting.defaultOrganizationId,\n      region: namespaces.find(({ id }) => id === selectedNamespaceId)?.region,\n    },\n    {\n      enabled: selectedNamespaceId !== '',\n      pollingInterval: POLLING_INTERVAL['10S'],\n      needPolling: (image) => (image || []).some(isImageTransient),\n    }\n  )\n\n  const isLoading = isLoadingImages || isLoadingNamespaces\n\n  const isListLoading = isLoading && !images\n\n  return (\n    <List\n      isLoading={isListLoading}\n      isShowingDetail={isDetailOpen}\n      searchBarPlaceholder=\"Search Images \u2026\"\n      searchBarAccessory={\n        <NamespaceDropdown\n          setSelectedNamespaceId={setSelectedNamespaceId}\n          namespaces={namespaces}\n        />\n      }\n    >\n      {(images || []).map((image) => (\n        <List.Item\n          key={image.id}\n          title={image.name}\n          icon={{\n            source: {\n              dark: 'icons/registry@dark.svg',\n              light: 'icons/registry@light.svg',\n            },\n          }}\n          detail={<ImageDetail image={image} namespaces={namespaces} />}\n          actions={\n            <ImageAction\n              image={image}\n              namespaces={namespaces}\n              toggleIsDetailOpen={toggleIsDetailOpen}\n            />\n          }\n        />\n      ))}\n\n      <List.EmptyView title=\"No Images found\" />\n    </List>\n  )\n}\n", "import {\n  Alert,\n  Clipboard,\n  Toast,\n  confirmAlert,\n  getPreferenceValues,\n  openExtensionPreferences,\n  showToast,\n} from '@raycast/api'\nimport { loadProfileFromConfigurationFile } from '@scaleway/configuration-loader'\nimport type { Profile } from '@scaleway/sdk'\n\ntype PreferenceValues = Profile & {\n  profileName?: string\n}\n\nconst { error } = console\n\nexport const getErrorMessage = (e: unknown) => {\n  if (e instanceof Error) return e.message\n\n  return String(e)\n}\n\nexport const showToastError = async (e: unknown, title: string) =>\n  showToast({\n    style: Toast.Style.Failure,\n    title,\n    message: getErrorMessage(e),\n    primaryAction: {\n      title: 'Open Preferences',\n      onAction: () => {\n        openExtensionPreferences().then().catch(error)\n      },\n    },\n    secondaryAction: {\n      title: 'Copy Error',\n      onAction: () => {\n        Clipboard.copy(getErrorMessage(e)).then().catch(error)\n      },\n    },\n  })\n\nexport const showAlertError = async (e: unknown, title: string) => {\n  const options: Alert.Options = {\n    title,\n    message: getErrorMessage(e),\n    primaryAction: {\n      style: Alert.ActionStyle.Destructive,\n      title: 'Open Preferences',\n      onAction: () => {\n        openExtensionPreferences().then().catch(error)\n      },\n    },\n  }\n  await confirmAlert(options)\n}\n\n/**\n * Will use the setup preference of the user\n */\nexport const getPreferenceUser = () => {\n  try {\n    const { accessKey, secretKey, defaultOrganizationId, defaultRegion, defaultZone, profileName } =\n      getPreferenceValues<PreferenceValues>()\n\n    if (profileName) {\n      try {\n        const config = loadProfileFromConfigurationFile({\n          profileName,\n        })\n\n        return config\n      } catch (err) {\n        showAlertError(\n          'Your profile is not well configure, check your file ~/.config/scw/config.yaml',\n          `Profile Config ${profileName}`\n        )\n          .then()\n          .catch(() => {})\n      }\n    }\n\n    return {\n      accessKey,\n      secretKey,\n      defaultOrganizationId,\n      defaultRegion,\n      defaultZone,\n    }\n  } catch (e: unknown) {\n    showAlertError(getErrorMessage(e), 'Get Preferences').catch(() => {})\n\n    throw new Error(getErrorMessage(e))\n  }\n}\n", "export const CONSOLE_URL = 'https://console.scaleway.com'\n\nexport const POLLING_INTERVAL = {\n  '10S': 10000,\n  '5S': 5000,\n  '3S': 3000,\n} as const\n", "import { Color, Icon, List } from '@raycast/api'\nimport type { Registry } from '@scaleway/sdk'\nimport { bytesToSize } from '../../../../helpers/bytesToSize'\nimport { getIconFromLocality } from '../../../../helpers/locality'\nimport { getImageStatusIcon } from '../../status'\n\ntype ImageDetailProps = {\n  image: Registry.v1.Image\n  namespaces: Registry.v1.Namespace[]\n}\n\nexport const getPrivacyAccessory = ({\n  image,\n  namespace,\n}: {\n  image: Registry.v1.Image\n  namespace: Registry.v1.Namespace\n}) => {\n  switch (image.visibility) {\n    case 'public':\n      return { icon: { source: Icon.LockUnlocked, tintColor: Color.Green }, tooltip: 'Public' }\n    case 'private':\n      return { icon: Icon.Lock, tooltip: 'Private' }\n    case 'inherit':\n      if (namespace.isPublic) {\n        return { icon: { source: Icon.LockUnlocked, tintColor: Color.Green }, tooltip: 'Public' }\n      }\n\n      return { icon: Icon.Lock, tooltip: 'Private' }\n    case 'visibility_unknown':\n      return { icon: Icon.QuestionMarkCircle, tooltip: 'Unknown' }\n    default:\n      return { icon: Icon.QuestionMarkCircle, tooltip: 'Unknown' }\n  }\n}\n\nexport const ImageDetail = ({ image, namespaces }: ImageDetailProps) => {\n  const namespace = namespaces.find(({ id }) => id === image.namespaceId)\n\n  return (\n    <List.Item.Detail\n      metadata={\n        <List.Item.Detail.Metadata>\n          <List.Item.Detail.Metadata.Label\n            title=\"Status\"\n            text={image.status}\n            icon={getImageStatusIcon(image)}\n          />\n\n          <List.Item.Detail.Metadata.Separator />\n\n          <List.Item.Detail.Metadata.Label title=\"ID\" text={image.id} />\n          {namespace ? (\n            <>\n              <List.Item.Detail.Metadata.Label\n                title=\"Region\"\n                text={namespace.region}\n                icon={{ source: getIconFromLocality(namespace.region) }}\n              />\n\n              <List.Item.Detail.Metadata.Label\n                title=\"Privacy\"\n                text={\n                  getPrivacyAccessory({\n                    image,\n                    namespace,\n                  }).tooltip\n                }\n                icon={\n                  getPrivacyAccessory({\n                    image,\n                    namespace,\n                  }).icon\n                }\n              />\n            </>\n          ) : null}\n\n          <List.Item.Detail.Metadata.Label title=\"Size\" text={bytesToSize(image.size)} />\n\n          <List.Item.Detail.Metadata.Separator />\n\n          <List.Item.Detail.Metadata.Label\n            title=\"Created At\"\n            text={image.createdAt?.toDateString()}\n          />\n          <List.Item.Detail.Metadata.Label\n            title=\"Updated At\"\n            text={image.updatedAt?.toDateString()}\n          />\n\n          <List.Item.Detail.Metadata.Separator />\n\n          <List.Item.Detail.Metadata.Label title=\"Project ID\" text={namespace?.projectId} />\n          <List.Item.Detail.Metadata.Label\n            title=\"Organization ID\"\n            text={namespace?.organizationId}\n          />\n\n          <List.Item.Detail.Metadata.Separator />\n\n          {image.tags.length > 0 && (\n            <List.Item.Detail.Metadata.TagList title=\"Tags\">\n              {image.tags.map((tag) => (\n                <List.Item.Detail.Metadata.TagList.Item key={tag} text={tag} />\n              ))}\n            </List.Item.Detail.Metadata.TagList>\n          )}\n        </List.Item.Detail.Metadata>\n      }\n    />\n  )\n}\n", "export const bytesToSize = (bytes?: number) => {\n  if (bytes === undefined) return 'unknown'\n\n  const sizes = ['Bytes', 'Ko', 'Mo', 'Go', 'To', 'Po']\n  if (bytes === 0) return '0 Byte'\n  const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1e3)).toString(), 10)\n\n  return `${Math.round(bytes / 1e3 ** i)} ${sizes[i] as string}`\n}\n", "import type { Region, Zone } from '@scaleway/sdk'\n\ntype Locality = NonNullable<Region | Zone>\n\nexport const isRegion = (locality: Locality): locality is Region => {\n  if (locality.split('-').length === 2) {\n    return true\n  }\n\n  return false\n}\n\nexport const isZone = (locality: Locality): locality is Zone => {\n  if (locality.toLowerCase().split('-').length === 3) {\n    return true\n  }\n\n  return false\n}\n\nexport const getIconFromLocality = (locality: Locality) =>\n  `flags/${locality.split('-')[0] as string}.svg`\n", "import { Color, Icon } from '@raycast/api'\nimport { Registry } from '@scaleway/sdk'\n\nexport const NAMESPACES_STATUSES = Registry.v1.NAMESPACE_TRANSIENT_STATUSES.reduce(\n  (acc, transientStatus) => ({\n    ...acc,\n    [transientStatus]: {\n      ...acc[transientStatus],\n      source: Icon.CircleProgress100,\n      tintColor: Color.Blue,\n    },\n  }),\n  {\n    unknown: { source: Icon.QuestionMarkCircle, tintColor: Color.Purple },\n    creating: { source: Icon.CircleProgress100, tintColor: Color.Blue },\n    created: { source: Icon.CircleProgress100, tintColor: Color.Blue },\n    ready: { source: Icon.CircleFilled, tintColor: Color.Green },\n    deleting: { source: Icon.CircleProgress100, tintColor: Color.Blue },\n    error: { source: Icon.CircleFilled, tintColor: Color.Red },\n    locked: { source: Icon.Lock, tintColor: Color.Red },\n    pending: { source: Icon.CircleProgress100, tintColor: Color.Blue },\n  }\n)\n\nexport const IMAGES_STATUS = Registry.v1.IMAGE_TRANSIENT_STATUSES.reduce(\n  (acc, transientStatus) => ({\n    ...acc,\n    [transientStatus]: {\n      ...acc[transientStatus],\n      source: Icon.CircleProgress100,\n      tintColor: Color.Blue,\n    },\n  }),\n  {\n    unknown: { source: Icon.QuestionMarkCircle, tintColor: Color.Purple },\n    creating: { source: Icon.CircleProgress100, tintColor: Color.Blue },\n    created: { source: Icon.CircleProgress100, tintColor: Color.Blue },\n    ready: { source: Icon.CircleFilled, tintColor: Color.Green },\n    deleting: { source: Icon.CircleProgress100, tintColor: Color.Blue },\n    error: { source: Icon.CircleFilled, tintColor: Color.Red },\n    locked: { source: Icon.Lock, tintColor: Color.Red },\n    pending: { source: Icon.CircleProgress100, tintColor: Color.Blue },\n  }\n)\n\nexport const getNamespaceStatusIcon = (namespace: Registry.v1.Namespace) =>\n  NAMESPACES_STATUSES[namespace.status]\n\nexport const getImageStatusIcon = (image: Registry.v1.Image) => IMAGES_STATUS[image.status]\n\nexport const isNamespaceTransient = (namespace?: Registry.v1.Namespace) =>\n  namespace ? Registry.v1.NAMESPACE_TRANSIENT_STATUSES.includes(namespace.status) : false\n\nexport const isImageTransient = (image?: Registry.v1.Image) =>\n  image ? Registry.v1.IMAGE_TRANSIENT_STATUSES.includes(image.status) : false\n", "import { Action, ActionPanel } from '@raycast/api'\nimport type { Registry } from '@scaleway/sdk'\nimport { getImageUrl } from '../../urls'\n\ntype ImageActionProps = {\n  namespaces: Registry.v1.Namespace[]\n  image: Registry.v1.Image\n  toggleIsDetailOpen: () => void\n}\n\nexport const ImageAction = ({ namespaces, image, toggleIsDetailOpen }: ImageActionProps) => {\n  const namespace = namespaces.find(({ id }) => id === image.namespaceId)\n\n  return (\n    <ActionPanel>\n      <Action title=\"More Information\" onAction={toggleIsDetailOpen} />\n      {namespace ? (\n        <>\n          <Action.OpenInBrowser url={getImageUrl({ namespace, image })} />\n          <Action.CopyToClipboard content={getImageUrl({ namespace, image })} />\n        </>\n      ) : null}\n    </ActionPanel>\n  )\n}\n", "import type { Registry } from '@scaleway/sdk'\nimport { CONSOLE_URL } from '../../constants'\n\nexport const getNamespaceUrl = (namespace: Registry.v1.Namespace) =>\n  `${CONSOLE_URL}/registry/namespaces/${namespace.region}/${namespace.id}`\n\nexport const getImageUrl = ({\n  namespace,\n  image,\n}: {\n  namespace: Registry.v1.Namespace\n  image: Registry.v1.Image\n}) => `${getNamespaceUrl(namespace)}/images/${image.id}`\n", "import { Action, ActionPanel } from '@raycast/api'\nimport type { Registry } from '@scaleway/sdk'\nimport { getNamespaceUrl } from './urls'\n\ntype NamespaceActionProps = {\n  namespace: Registry.v1.Namespace\n  toggleIsDetailOpen: () => void\n}\n\nexport const NamespaceAction = ({ namespace, toggleIsDetailOpen }: NamespaceActionProps) => (\n  <ActionPanel>\n    <Action title=\"More Information\" onAction={toggleIsDetailOpen} />\n    <Action.OpenInBrowser url={getNamespaceUrl(namespace)} />\n    <Action.CopyToClipboard content={getNamespaceUrl(namespace)} />\n  </ActionPanel>\n)\n", "import { List } from '@raycast/api'\nimport type { Registry } from '@scaleway/sdk'\nimport { getIconFromLocality } from '../../../../helpers/locality'\n\ntype NamespaceDetailProps = {\n  namespace: Registry.v1.Namespace\n}\n\nexport const NamespaceDetail = ({ namespace }: NamespaceDetailProps) => (\n  <List.Item.Detail\n    metadata={\n      <List.Item.Detail.Metadata>\n        <List.Item.Detail.Metadata.Label title=\"ID\" text={namespace.id} />\n        <List.Item.Detail.Metadata.Label\n          title=\"Region\"\n          text={namespace.region}\n          icon={{ source: getIconFromLocality(namespace.region) }}\n        />\n\n        <List.Item.Detail.Metadata.Separator />\n\n        <List.Item.Detail.Metadata.Label title=\"Endpoint\" text={namespace.endpoint} />\n\n        <List.Item.Detail.Metadata.Separator />\n\n        <List.Item.Detail.Metadata.Label\n          title=\"Created At\"\n          text={namespace.createdAt?.toDateString()}\n        />\n        <List.Item.Detail.Metadata.Label\n          title=\"Updated At\"\n          text={namespace.updatedAt?.toDateString()}\n        />\n\n        <List.Item.Detail.Metadata.Separator />\n\n        <List.Item.Detail.Metadata.Label title=\"Project ID\" text={namespace.projectId} />\n        <List.Item.Detail.Metadata.Label title=\"Organization ID\" text={namespace.organizationId} />\n      </List.Item.Detail.Metadata>\n    }\n  />\n)\n", "import { List } from '@raycast/api'\nimport type { Registry } from '@scaleway/sdk'\nimport type { Dispatch, SetStateAction } from 'react'\nimport { getIconFromLocality } from '../../../../helpers/locality'\n\ntype NamespaceDropdownProps = {\n  setSelectedNamespaceId: Dispatch<SetStateAction<string>>\n  namespaces?: Registry.v1.Namespace[]\n}\nexport const NamespaceDropdown = ({\n  setSelectedNamespaceId,\n  namespaces,\n}: NamespaceDropdownProps) => (\n  <List.Dropdown\n    tooltip=\"Change Namespace\"\n    placeholder=\"Search namespace...\"\n    storeValue\n    onChange={setSelectedNamespaceId}\n  >\n    {namespaces?.map((namespace) => (\n      <List.Dropdown.Item\n        key={namespace.id}\n        title={namespace.name}\n        value={namespace.id}\n        icon={getIconFromLocality(namespace.region)}\n      />\n    ))}\n  </List.Dropdown>\n)\n", "import { Registry } from '@scaleway/sdk'\nimport { useDataLoader } from '@scaleway/use-dataloader'\nimport { fetchAllRegions } from 'helpers/fetchLocalities'\nimport { useAPI } from 'helpers/useAPI'\n\ntype DataLoaderOptions<T> = Parameters<typeof useDataLoader<T>>[2]\n\nexport const useAllRegionNamespacesQuery = (\n  params: Registry.v1.ListNamespacesRequest,\n  dataloaderOptions: DataLoaderOptions<Registry.v1.ListNamespacesResponse['namespaces']> = {}\n) => {\n  const { registryV1 } = useAPI()\n\n  const regions = params.region ? [params.region] : Registry.v1.API.LOCALITIES\n\n  const key = ['Registry', 'namespaces', 'all', regions, Object.entries(params).sort()].flat(3)\n\n  return useDataLoader(\n    key,\n    () => fetchAllRegions(regions, (request) => registryV1.listNamespaces(request).all(), params),\n    dataloaderOptions\n  )\n}\n", "import type { Region, Zone } from '@scaleway/sdk'\n\ntype RegionFetcher<T, R> = (request: R) => Promise<T[]>\ntype ZoneFetcher<T, R> = (request: R) => Promise<T[]>\n\n/**\n * Executes a request for several zones at once.\n *\n * @param zones - The zones\n * @param fetcher - The fetcher\n * @param request - The request\n * @returns The resolved promise\n *\n * @internal\n */\nexport const fetchAllZones = async <T, R extends { zone?: Zone }>(\n  zones: Zone[],\n  fetcher: ZoneFetcher<T, R>,\n  request: R\n) => (await Promise.all(zones.map((zone) => fetcher({ ...request, zone })))).flat()\n\n/**\n * Executes a request for several regions at once.\n *\n * @param regions - The regions\n * @param fetcher - The fetcher\n * @param request - The request\n * @returns The resolved promise\n *\n * @internal\n */\nexport const fetchAllRegions = async <T, R extends { region?: Region }>(\n  regions: Region[],\n  fetcher: RegionFetcher<T, R>,\n  request: R\n) => (await Promise.all(regions.map((region) => fetcher({ ...request, region })))).flat()\n", "// @scaleway/sdk extends Request\n// https://github.com/scaleway/scaleway-sdk-js/blob/397fc3edf40583f31a89ecb5db401f36ddd5844b/packages/clients/src/scw/fetch/http-interceptors.ts#L21\n// it's only available on browser or node 18 without remove experimental feature.\n// it's was remove inside raycast https://developers.raycast.com/changelog#1.46.0-2023-01-18\n// import 'cross-fetch/polyfill'\n\nimport {\n  AppleSilicon,\n  BareMetal,\n  Block,\n  Cockpit,\n  Container,\n  DocumentDB,\n  Domain,\n  Function,\n  IAM,\n  IOT,\n  IPAM,\n  IPFS,\n  Instance,\n  Jobs,\n  K8S,\n  LB,\n  RDB,\n  Redis,\n  Registry,\n  Secret,\n  TransactionalEmail,\n  VPC,\n  VPCGW,\n  Webhosting,\n  createAdvancedClient,\n  enableConsoleLogger,\n  withProfile,\n  withUserAgent,\n} from '@scaleway/sdk'\nimport { getPreferenceUser } from './getPreferenceUser'\n\nexport const useAPI = () => {\n  const apis = () => {\n    const clientSetting = getPreferenceUser()\n    const client = createAdvancedClient(withProfile(clientSetting), withUserAgent('Raycast'))\n\n    enableConsoleLogger('silent')\n\n    return {\n      appleSiliconV1Alpha1: new AppleSilicon.v1alpha1.API(client),\n      blockV1Alpha1: new Block.v1alpha1.API(client),\n      cockpitV1Beta1: new Cockpit.v1beta1.API(client),\n      containerV1Beta1: new Container.v1beta1.API(client),\n      documentDBV1Beta1: new DocumentDB.v1beta1.API(client),\n      domainRegistrarV2beta1: new Domain.v2beta1.RegistrarAPI(client),\n      domainV2beta1: new Domain.v2beta1.API(client),\n      elasticMetalV1: new BareMetal.v1.API(client),\n      functionV1beta1: new Function.v1beta1.API(client),\n      iamV1alpha1: new IAM.v1alpha1.API(client),\n      instanceV1: new Instance.v1.API(client),\n      iotV1: new IOT.v1.API(client),\n      ipamV1: new IPAM.v1.API(client),\n      ipfsV1Alpha1: new IPFS.v1alpha1.API(client),\n      jobsV1alpha1: new Jobs.v1alpha1.API(client),\n      k8sV1: new K8S.v1.API(client),\n      loadbalancerV1: new LB.v1.ZonedAPI(client),\n      vpcV2: new VPC.v2.API(client),\n      publicGatewaysV1: new VPCGW.v1.API(client),\n      redisV1: new Redis.v1.API(client),\n      registryV1: new Registry.v1.API(client),\n      relationalDatabaseV1: new RDB.v1.API(client),\n      secretManager: new Secret.v1beta1.API(client),\n      transactionalEmailV1alpha1: new TransactionalEmail.v1alpha1.API(client),\n      webhostingV1alpha1: new Webhosting.v1alpha1.API(client),\n    }\n  }\n\n  return apis()\n}\n", "import type { Registry } from '@scaleway/sdk'\nimport { useDataLoader } from '@scaleway/use-dataloader'\nimport { useAPI } from 'helpers/useAPI'\n\ntype DataLoaderOptions<T> = Parameters<typeof useDataLoader<T>>[2]\n\nexport const useImagesQuery = (\n  params: Registry.v1.ListImagesRequest,\n  dataloaderOptions: DataLoaderOptions<Registry.v1.ListImagesResponse> = {}\n) => {\n  const { registryV1 } = useAPI()\n\n  const key = ['registry', 'images', Object.entries(params).sort()].flat(3)\n\n  return useDataLoader(key, () => registryV1.listImages(params), dataloaderOptions)\n}\n\nexport const useAllImagesQuery = (\n  params: Registry.v1.ListImagesRequest,\n  dataloaderOptions: DataLoaderOptions<Registry.v1.ListImagesResponse['images']> = {}\n) => {\n  const { registryV1 } = useAPI()\n\n  const key = ['registry', 'images', 'all', Object.entries(params).sort()].flat(3)\n\n  return useDataLoader(key, () => registryV1.listImages(params).all(), dataloaderOptions)\n}\n", "import { DataLoaderProvider } from '@scaleway/use-dataloader'\nimport { Images } from './Images'\n\nexport const Registry = () => (\n  <DataLoaderProvider>\n    <Images />\n  </DataLoaderProvider>\n)\n"],
  "mappings": "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SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyyBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,yBAAyyBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,uBAAuB,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,uBAAuB,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,GAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyyBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyyBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyyBAAyB,CAAC,KAAK,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyyBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,yBAAyyBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,EAAE,yBAAyB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,MAA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GAAiB,CACrB,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAmB,CACvB,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAyB,CAC7B,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAA0B,CAC9B,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAmB,CACvB,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAoB,CACxB,UAAW,CACT,YAAa,CACf,CACF,EACMC,GAAY,CAChB,GAAI,CACF,YAAa,CACf,CACF,EACMC,GAA2C,CAC/C,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAAqC,CACzC,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAAmD,CACvD,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAAqC,CACzC,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAAuB,CAC3B,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAyB,CAC7B,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAAgB,CACpB,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,EACA,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAoB,CACxB,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAAyB,CAC7B,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,EACA,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAA0B,CAC9B,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,EACA,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAqB,CACzB,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAAsB,CAC1B,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAAuC,CAC3C,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,EACA,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAsB,CAC1B,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAyC,CAC7C,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAAwB,CAC5B,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAA+B,CACnC,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAA4B,CAChC,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAmC,CACvC,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAA0B,CAC9B,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAA8B,CAClC,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAA2B,CAC/B,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAiC,CACrC,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAoC,CACxC,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAAuC,CAC3C,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAAgC,CACpC,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAA6B,CACjC,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAA+B,CACnC,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAA0C,CAC9C,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAAuC,CAC3C,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAAqC,CACzC,QAAS,CACP,YAAa,CACf,EACA,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAA+B,CACnC,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAAgC,CACpC,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAAiC,CACrC,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAgC,CACpC,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAAoC,CACxC,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAAiC,CACrC,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAAkC,CACtC,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAAoC,CACxC,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAAgD,CACpD,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAA+C,CACnD,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAA+B,CACnC,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAA2C,CAC/C,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAAoC,CACxC,QAAS,CACP,YAAa,CACf,EACA,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAAiC,CACrC,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAAkC,CACtC,QAAS,CACP,YAAa,CACf,EACA,KAAM,CACJ,YAAa,CACf,EACA,SAAU,CACR,YAAa,EACb,gBAAiB,GACnB,CACF,EACMC,GAAsC,CAC1C,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAA2C,CAC/C,QAAS,CACP,YAAa,CACf,CACF,EACMC,GAAqB,CACzB,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAqB,CACzB,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAuB,CAC3B,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAoB,CACxB,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAoB,CACxB,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAA+B,CACnC,SAAU,CACR,YAAa,CACf,EACA,SAAU,CACR,YAAa,CACf,CACF,EACMC,GAAiC,CACrC,SAAU,CACR,YAAa,CACf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",
  "names": ["require_lib", "__commonJSMin", "exports", "module", "conversions", "sign", "x", "evenRound", "createNumberConversion", "bitLength", "typeOpts", "lowerBound", "upperBound", "moduloVal", "moduloBound", "V", "opts", "val", "c", "i", "S", "n", "U", "d", "a", "b", "require_utils", "__commonJSMin", "exports", "module", "target", "source", "keys", "i", "impl", "wrapper", "require_mappingTable", "__commonJSMin", "exports", "module", "require_tr46", "__commonJSMin", "exports", "module", "punycode", "mappingTable", "PROCESSING_OPTIONS", "normalize", "str", "s", "findStatus", "val", "start", "end", "mid", "target", "regexAstralSymbols", "countSymbols", "string", "mapChars", "domain_name", "useSTD3", "processing_option", "hasError", "processed", "len", "i", "codePoint", "status", "combiningMarksRegex", "validateLabel", "label", "error", "processing", "result", "labels", "validation", "verifyDnsLength", "l", "total", "require_url_state_machine", "__commonJSMin", "exports", "module", "punycode", "tr46", "specialSchemes", "failure", "countSymbols", "str", "at", "input", "idx", "c", "isASCIIDigit", "isASCIIAlpha", "isASCIIAlphanumeric", "isASCIIHex", "isSingleDot", "buffer", "isDoubleDot", "isWindowsDriveLetterCodePoints", "cp1", "cp2", "isWindowsDriveLetterString", "string", "isNormalizedWindowsDriveLetterString", "containsForbiddenHostCodePoint", "containsForbiddenHostCodePointExcludingPercent", "isSpecialScheme", "scheme", "isSpecial", "url", "defaultPort", "percentEncode", "hex", "utf8PercentEncode", "buf", "i", "utf8PercentDecode", "output", "isC0ControlPercentEncode", "extraPathPercentEncodeSet", "isPathPercentEncode", "extraUserinfoPercentEncodeSet", "isUserinfoPercentEncode", "percentEncodeChar", "encodeSetPredicate", "cStr", "parseIPv4Number", "R", "parseIPv4", "parts", "numbers", "part", "n", "ipv4", "counter", "serializeIPv4", "address", "parseIPv6", "pieceIndex", "compress", "pointer", "value", "length", "numbersSeen", "ipv4Piece", "number", "swaps", "temp", "serializeIPv6", "findLongestZeroSequence", "ignore0", "parseHost", "isSpecialArg", "parseOpaqueHost", "domain", "asciiDomain", "ipv4Host", "decoded", "arr", "maxIdx", "maxLen", "currStart", "currLen", "serializeHost", "host", "trimControlChars", "trimTabAndNewline", "shortenPath", "path", "isNormalizedWindowsDriveLetter", "includesCredentials", "cannotHaveAUsernamePasswordPort", "URLStateMachine", "base", "encodingOverride", "stateOverride", "res", "ret", "len", "codePoint", "encodedCodePoints", "port", "fileOtherwiseCodePoints", "serializeURL", "excludeFragment", "serializeOrigin", "tuple", "result", "options", "usm", "username", "password", "integer", "require_URL_impl", "__commonJSMin", "exports", "usm", "constructorArgs", "url", "base", "parsedBase", "parsedURL", "v", "input", "require_URL", "__commonJSMin", "exports", "module", "conversions", "utils", "Impl", "impl", "URL", "url", "args", "i", "V", "obj", "constructorArgs", "privateData", "require_public_api", "__commonJSMin", "exports", "require_lib", "__commonJSMin", "exports", "module", "_interopDefault", "ex", "Stream", "http", "Url", "whatwgUrl", "https", "zlib", "Readable", "BUFFER", "TYPE", "Blob", "_Blob", "blobParts", "options", "buffers", "size", "a", "length", "i", "element", "buffer", "type", "buf", "ab", "readable", "start", "end", "relativeStart", "relativeEnd", "span", "slicedBuffer", "blob", "FetchError", "message", "systemError", "convert", "INTERNALS", "PassThrough", "Body", "body", "_this", "_ref", "_ref$size", "_ref$timeout", "timeout", "isURLSearchParams", "isBlob", "err", "error", "consumeBody", "ct", "_this2", "_this3", "convertBody", "proto", "name", "desc", "_this4", "accum", "accumBytes", "abort", "resolve", "reject", "resTimeout", "chunk", "headers", "charset", "res", "str", "obj", "clone", "instance", "p1", "p2", "extractContentType", "getTotalBytes", "writeToStream", "dest", "invalidTokenRegex", "invalidHeaderCharRegex", "validateName", "validateValue", "value", "find", "map", "key", "MAP", "Headers", "_Headers", "init", "rawHeaders", "headerNames", "headerName", "method", "pairs", "pair", "callback", "thisArg", "getHeaders", "_pairs$i", "createHeadersIterator", "kind", "k", "INTERNAL", "target", "iterator", "HeadersIteratorPrototype", "_INTERNAL", "index", "values", "len", "exportNodeCompatibleHeaders", "hostHeaderKey", "createHeadersLenient", "val", "INTERNALS$1", "STATUS_CODES", "Response", "_Response", "opts", "status", "contentType", "INTERNALS$2", "URL", "parse_url", "format_url", "parseURL", "urlStr", "streamDestructionSupported", "isRequest", "input", "isAbortSignal", "signal", "Request", "_Request", "parsedURL", "inputBody", "getNodeRequestOptions", "request", "contentLengthValue", "totalBytes", "agent", "AbortError", "URL$1", "PassThrough$1", "isDomainOrSubdomain", "destination", "original", "orig", "isSameProtocol", "fetch", "url", "send", "response", "destroyStream", "abortAndFinalize", "finalize", "req", "reqTimeout", "socket", "fixResponseChunkedTransferBadEnding", "s", "hadError", "hasDataListener", "location", "locationURL", "requestOpts", "response_options", "codings", "zlibOptions", "raw", "errorCallback", "stream", "code", "require_node_ponyfill", "__commonJSMin", "exports", "module", "nodeFetch", "realFetch", "fetch", "url", "options", "require_dist", "__commonJSMin", "exports", "process", "node_os", "path", "node_process", "fs", "_interopNamespaceDefault", "n", "k", "d", "path__namespace", "EnvironmentKey", "getScwConfigurationDirectory", "xdgConfigPath", "resolveConfigurationFilePath", "envFilePath", "STRIP_COMMENT_REGEX", "DETECT_SECTION_REGEX", "DETECT_ITEM_REGEX", "convertYamlToConfiguration", "input", "foundProfilesKey", "currentSection", "map", "rawLine", "line", "newSection", "item", "loadConfigurationFromFile", "filePath", "fileContent", "convertFileConfigToSDK", "obj", "loadProfileFromEnvironmentValues", "loadAllProfilesFromConfigurationFile", "params", "configs", "prev", "pKey", "loadProfileFromConfigurationFile", "profileName", "profileMap", "require_dist", "__commonJSMin", "exports", "LevelResolver", "shouldLog", "currentLevel", "level", "ConsoleLogger", "logLevel", "prefix", "output", "method", "message", "sdkLogger", "setLogger", "logger", "enableConsoleLogger", "getLogger", "addHeaderInterceptor", "key", "value", "request", "clone", "addAsyncHeaderInterceptor", "getter", "isAccessKeyRegex", "isRegionRegex", "isUUIDRegex", "isZoneRegex", "isUUID", "str", "isAccessKey", "isSecretKey", "isOrganizationId", "isProjectId", "isRegion", "isZone", "isURL", "url", "hasAuthenticationSecrets", "obj", "assertValidAuthenticationSecrets", "SESSION_HEADER_KEY", "AUTH_HEADER_KEY", "authenticateWithSessionToken", "getToken", "authenticateWithSecrets", "secrets", "obfuscateToken", "obfuscateUUID", "obfuscateAuthHeadersEntry", "name", "withProfile", "profile", "settings", "newSettings", "withHTTPClient", "httpClient", "withDefaultPageSize", "defaultPageSize", "withUserAgent", "userAgent", "withUserAgentSuffix", "withAdditionalInterceptors", "interceptors", "withLegacyInterceptors", "allInterceptors", "assertValidSettings", "version", "isBrowser", "composeRequestInterceptors", "asyncResult", "interceptor", "composeResponseInterceptors", "response", "composeResponseErrorInterceptors", "error", "prevError", "err", "toPascalCase", "word", "serializeHeadersEntry", "serializeHeaders", "headers", "dumpRequest", "dumpResponse", "ObfuscatedRequest", "_ObfuscatedRequest", "obfuscate", "obfuscateInterceptor", "identity", "logRequest", "identifier", "logResponse", "isResponse", "isJSONObject", "objT", "isRecordOfStringArray", "elt", "x", "buildDefaultMessage", "status", "body", "list", "ScalewayError", "_ScalewayError", "buildMessage$5", "acc", "details", "readableReason", "InvalidArgumentsError", "_InvalidArgumentsError", "detail", "buildMessage$4", "buildScope", "QuotasExceededError", "_QuotasExceededError", "InvalidRequestMapper", "fields", "fieldsMessages", "argumentName", "messages", "helpMessage", "ResourceNotFoundError", "_ResourceNotFoundError", "resource", "resourceId", "UnknownResourceMapper", "messageParts", "AlreadyExistsError", "_AlreadyExistsError", "buildMessage$3", "reason", "reasonDesc", "DeniedAuthenticationError", "_DeniedAuthenticationError", "OutOfStockError", "_OutOfStockError", "buildMessage$2", "action", "PermissionsDeniedError", "_PermissionsDeniedError", "buildMessage$1", "precondition", "PreconditionFailedError", "_PreconditionFailedError", "ResourceExpiredError", "_ResourceExpiredError", "expiredSince", "ResourceLockedError", "_ResourceLockedError", "buildMessage", "limit", "resetSeconds", "resetAt", "TooManyRequestsError", "_TooManyRequestsError", "TransientStateError", "_TransientStateError", "currentState", "unmarshalStandardError", "type", "unmarshalNonStandardError", "parseScalewayError", "X_TOTAL_COUNT_HEADER_KEY", "TOTAL_COUNT_RES_KEY", "fixLegacyTotalCount", "headerVal", "totalCount", "responseParser", "unmarshaller", "responseType", "contentType", "buildRequest", "path", "asIs", "buildFetcher", "requestNumber", "prepareRequest", "requestId", "prepareResponse", "prepareResponseErrors", "unwrapper", "finalRequest", "finalResponse", "handledError", "DEFAULT_SETTINGS", "createAdvancedClient", "configs", "currentSettings", "config", "createClient", "index$B", "sleep", "ms", "resolve", "DEFAULT_TIMEOUT_SECONDS", "DEFAULT_MIN_DELAY_SECONDS", "DEFAULT_MAX_DELAY_SECONDS", "createExponentialBackoffStrategy", "minDelay", "maxDelay", "attempt", "ceiling", "randomInRange", "min", "max", "tryAtIntervals", "retry", "strategy", "timeout", "timeoutTimestamp", "retryCount", "delay", "done", "waitForResource", "stop", "fetcher", "options", "API$z", "client", "validatePathParam", "param", "resolveOneOf", "isRequired", "keyList", "urlParams", "paramTuples", "params", "innerValue", "unmarshalDate", "data", "date", "unmarshalArrayOfObject", "emptyFallback", "unmarshalMapOfObject", "unmarshalMoney", "unmarshalServiceInfo", "unmarshalScwFile", "unmarshalTimeSeriesPoint", "unmarshalTimeSeries", "marshalScwFile", "marshalMoney", "marshalTimeSeriesPoint", "marshalTimeSeries", "extract", "result", "pages", "firstPage", "getList", "page", "length", "fetchPaginated", "initial", "fetchAll", "enrichForPagination", "ADJECTIVES", "NAMES", "randomName", "separator", "unmarshalProject$1", "unmarshalListProjectsResponse$1", "marshalCreateProjectRequest", "defaults", "marshalUpdateProjectRequest", "jsonContentHeaders$x", "API$y", "index_gen$x", "unmarshalProject", "unmarshalListProjectsResponse", "marshalProjectApiCreateProjectRequest", "marshalProjectApiUpdateProjectRequest", "jsonContentHeaders$w", "ProjectAPI", "ProjectApiCreateProjectRequest", "ProjectApiListProjectsRequest", "ProjectApiUpdateProjectRequest", "validationRules_gen$g", "index_gen$w", "index$A", "SERVER_TRANSIENT_STATUSES$3", "unmarshalOS$2", "unmarshalServerTypeCPU", "unmarshalServerTypeDisk", "unmarshalServerTypeMemory", "unmarshalServerType$1", "unmarshalServer$3", "unmarshalListOSResponse$2", "unmarshalListServerTypesResponse", "unmarshalListServersResponse$3", "marshalCreateServerRequest$3", "marshalUpdateServerRequest$3", "jsonContentHeaders$v", "API$x", "res", "index_gen$v", "index$z", "SERVER_INSTALL_TRANSIENT_STATUSES$1", "SERVER_PRIVATE_NETWORK_TRANSIENT_STATUSES", "SERVER_TRANSIENT_STATUSES$2", "unmarshalIP$3", "unmarshalOSOSField", "unmarshalOS$1", "unmarshalCPU$1", "unmarshalDisk$1", "unmarshalMemory$1", "unmarshalOfferOptionOffer", "unmarshalPersistentMemory$1", "unmarshalRaidController$1", "unmarshalOffer$2", "unmarshalOption", "unmarshalServerPrivateNetwork", "unmarshalServerInstall$1", "unmarshalServerOption$1", "unmarshalServerRescueServer", "unmarshalServer$2", "unmarshalSetting", "unmarshalBMCAccess$1", "unmarshalGetServerMetricsResponse", "unmarshalListOSResponse$1", "unmarshalListOffersResponse$2", "unmarshalListOptionsResponse", "unmarshalServerEvent$1", "unmarshalListServerEventsResponse$1", "unmarshalListServerPrivateNetworksResponse", "unmarshalListServersResponse$2", "unmarshalListSettingsResponse", "unmarshalSetServerPrivateNetworksResponse", "marshalAddOptionServerRequest", "marshalCreateServerRequestInstall", "marshalCreateServerRequest$2", "marshalInstallServerRequest$1", "marshalPrivateNetworkApiAddServerPrivateNetworkRequest", "marshalPrivateNetworkApiSetServerPrivateNetworksRequest", "marshalRebootServerRequest", "marshalStartBMCAccessRequest$1", "marshalStartServerRequest", "marshalUpdateIPRequest$2", "marshalUpdateServerRequest$2", "marshalUpdateSettingRequest", "jsonContentHeaders$u", "API$w", "PrivateNetworkAPI", "BaremetalV1UtilsAPI", "server", "CreateServerRequest", "CreateServerRequestInstall", "InstallServerRequest$1", "ListOSRequest$1", "ListOffersRequest$1", "ListOptionsRequest", "ListServerEventsRequest$1", "ListServersRequest$1", "ListSettingsRequest", "UpdateServerRequest$1", "validationRules_gen$f", "index$y", "index$x", "unmarshalGetConsumptionResponseConsumption", "unmarshalGetConsumptionResponse", "unmarshalDiscountCoupon$1", "unmarshalDiscountFilter$1", "unmarshalDiscount$1", "unmarshalListDiscountsResponse$1", "unmarshalInvoice$2", "unmarshalListInvoicesResponse$2", "API$v", "index_gen$u", "unmarshalInvoice$1", "unmarshalListConsumptionsResponseConsumption", "unmarshalListConsumptionsResponse", "unmarshalDiscountCoupon", "unmarshalDiscountFilter", "unmarshalDiscount", "unmarshalListDiscountsResponse", "unmarshalListInvoicesResponse$1", "unmarshalListTaxesResponseTax", "unmarshalListTaxesResponse", "API$u", "index_gen$t", "index$w", "REFERENCE_TRANSIENT_STATUSES", "SNAPSHOT_TRANSIENT_STATUSES$3", "VOLUME_TRANSIENT_STATUSES$1", "unmarshalReference", "unmarshalSnapshotParentVolume", "unmarshalSnapshot$3", "unmarshalVolumeSpecifications", "unmarshalVolume$4", "unmarshalListSnapshotsResponse$3", "unmarshalVolumeType$1", "unmarshalListVolumeTypesResponse", "unmarshalListVolumesResponse$2", "marshalCreateSnapshotRequest$3", "marshalCreateVolumeRequestFromEmpty", "marshalCreateVolumeRequestFromSnapshot", "marshalCreateVolumeRequest$2", "marshalUpdateSnapshotRequest$3", "marshalUpdateVolumeRequest$2", "jsonContentHeaders$t", "API$t", "CreateSnapshotRequest", "CreateVolumeRequest", "ListSnapshotsRequest", "ListVolumeTypesRequest", "ListVolumesRequest", "Reference", "validationRules_gen$e", "index_gen$s", "index$v", "COCKPIT_TRANSIENT_STATUSES", "unmarshalContactPointEmail", "unmarshalContactPoint", "unmarshalDatasource", "unmarshalGrafanaProductDashboard", "unmarshalGrafanaUser", "unmarshalTokenScopes", "unmarshalToken$2", "unmarshalCockpitEndpoints", "unmarshalPlan", "unmarshalCockpit", "unmarshalCockpitMetrics", "unmarshalListContactPointsResponse", "unmarshalListDatasourcesResponse", "unmarshalListGrafanaProductDashboardsResponse", "unmarshalListGrafanaUsersResponse", "unmarshalListPlansResponse", "unmarshalListTokensResponse$2", "unmarshalSelectPlanResponse", "marshalActivateCockpitRequest", "marshalContactPointEmail", "marshalContactPoint", "marshalCreateContactPointRequest", "marshalCreateDatasourceRequest", "marshalCreateGrafanaUserRequest", "marshalTokenScopes", "marshalCreateTokenRequest$2", "marshalDeactivateCockpitRequest", "marshalDeleteContactPointRequest", "marshalDeleteGrafanaUserRequest", "marshalDisableManagedAlertsRequest", "marshalEnableManagedAlertsRequest", "marshalResetGrafanaUserPasswordRequest", "marshalSelectPlanRequest", "marshalTriggerTestAlertRequest", "jsonContentHeaders$s", "API$s", "index_gen$r", "index$u", "CONTAINER_TRANSIENT_STATUSES", "CRON_TRANSIENT_STATUSES$1", "DOMAIN_TRANSIENT_STATUSES$3", "NAMESPACE_TRANSIENT_STATUSES$2", "TOKEN_TRANSIENT_STATUSES$1", "TRIGGER_TRANSIENT_STATUSES$1", "unmarshalSecretHashedValue$1", "unmarshalContainer", "unmarshalCron$1", "unmarshalDomain$3", "unmarshalNamespace$2", "unmarshalToken$1", "unmarshalTriggerMnqNatsClientConfig$1", "unmarshalTriggerMnqSqsClientConfig$1", "unmarshalTriggerSqsClientConfig$1", "unmarshalTrigger$1", "unmarshalListContainersResponse", "unmarshalListCronsResponse$1", "unmarshalListDomainsResponse$3", "unmarshalListNamespacesResponse$2", "unmarshalListTokensResponse$1", "unmarshalListTriggersResponse$1", "marshalSecret$1", "marshalCreateContainerRequest", "marshalCreateCronRequest$1", "marshalCreateDomainRequest$2", "marshalCreateNamespaceRequest$2", "marshalCreateTokenRequest$1", "marshalCreateTriggerRequestMnqNatsClientConfig$1", "marshalCreateTriggerRequestMnqSqsClientConfig$1", "marshalCreateTriggerRequestSqsClientConfig$1", "marshalCreateTriggerRequest$1", "marshalUpdateContainerRequest", "marshalUpdateCronRequest$1", "marshalUpdateNamespaceRequest$2", "marshalUpdateTriggerRequestSqsClientConfig$1", "marshalUpdateTriggerRequest$1", "jsonContentHeaders$r", "API$r", "CreateTriggerRequest$1", "CreateTriggerRequestMnqNatsClientConfig$1", "CreateTriggerRequestMnqSqsClientConfig$1", "UpdateTriggerRequest$1", "validationRules_gen$d", "index_gen$q", "index$t", "BMC_ACCESS_TRANSIENT_STATUSES", "I_PV6_BLOCK_DELEGATION_TRANSIENT_STATUSES", "RPN_GROUP_MEMBER_TRANSIENT_STATUSES", "RPN_SAN_TRANSIENT_STATUSES", "RPN_V2_GROUP_TRANSIENT_STATUSES", "RPN_V2_MEMBER_TRANSIENT_STATUSES", "SERVER_INSTALL_TRANSIENT_STATUSES", "SERVER_TRANSIENT_STATUSES$1", "SERVICE_PROVISIONING_TRANSIENT_STATUSES", "unmarshalIP$2", "unmarshalCPU", "unmarshalDisk", "unmarshalMemory", "unmarshalPersistentMemory", "unmarshalRaidController", "unmarshalOfferAntiDosInfo", "unmarshalOfferBackupInfo", "unmarshalOfferBandwidthInfo", "unmarshalOfferFailoverBlockInfo", "unmarshalOffer$1", "unmarshalOfferFailoverIpInfo", "unmarshalOfferLicenseInfo", "unmarshalOfferRPNInfo", "unmarshalOfferSANInfo", "unmarshalOfferServerInfo", "unmarshalOfferServiceLevelInfo", "unmarshalOfferStorageInfo", "unmarshalOS", "unmarshalRpnSan", "unmarshalRpnGroup", "unmarshalNetworkInterface", "unmarshalServerLocation$1", "unmarshalServerOption", "unmarshalServiceLevel", "unmarshalServer$1", "unmarshalRpnV2GroupSubnet", "unmarshalRpnV2Group", "unmarshalService", "unmarshalFailoverBlock", "unmarshalFailoverIP", "unmarshalBMCAccess", "unmarshalBackup", "unmarshalCanOrderResponse", "unmarshalCreateFailoverIPsResponse", "unmarshalGetIPv6BlockQuotasResponseQuota", "unmarshalGetIPv6BlockQuotasResponse", "unmarshalGetRemainingQuotaResponse", "unmarshalGetRpnStatusResponse", "unmarshalIPv6Block", "unmarshalInvoice", "unmarshalListFailoverIPsResponse", "unmarshalListIPv6BlockSubnetsAvailableResponseSubnet", "unmarshalListIPv6BlockSubnetsAvailableResponse", "unmarshalInvoiceSummary", "unmarshalListInvoicesResponse", "unmarshalRpnSanIpRpnV2Group", "unmarshalRpnSanIpServer", "unmarshalRpnSanIp", "unmarshalListIpsResponse$2", "unmarshalListOSResponse", "unmarshalListOffersResponse$1", "unmarshalRefundSummary", "unmarshalListRefundsResponse", "unmarshalRpnSanServer", "unmarshalListRpnCapableSanServersResponse", "unmarshalListRpnCapableServersResponse", "unmarshalRpnGroupMember", "unmarshalListRpnGroupMembersResponse", "unmarshalListRpnGroupsResponse", "unmarshalListRpnInvitesResponse", "unmarshalRpnSanSummary", "unmarshalListRpnSansResponse", "unmarshalRpnServerCapability", "unmarshalListRpnServerCapabilitiesResponse", "unmarshalListRpnV2CapableResourcesResponse", "unmarshalRpnV2Member", "unmarshalLog$1", "unmarshalListRpnV2GroupLogsResponse", "unmarshalListRpnV2GroupsResponse", "unmarshalListRpnV2MembersResponse", "unmarshalServerDisk", "unmarshalListServerDisksResponse", "unmarshalServerEvent", "unmarshalListServerEventsResponse", "unmarshalServerSummary$1", "unmarshalListServersResponse$1", "unmarshalListServicesResponse", "unmarshalListSubscribableServerOptionsResponse", "unmarshalRaidArray", "unmarshalRaid", "unmarshalRefund", "unmarshalRescue", "unmarshalPartition", "unmarshalServerDefaultPartitioning", "unmarshalServerInstall", "unmarshalSubscribeStorageOptionsResponse", "marshalAttachFailoverIPToMacAddressRequest", "marshalAttachFailoverIPsRequest", "marshalCreateFailoverIPsRequest", "marshalCreateServerRequest$1", "marshalDetachFailoverIPsRequest", "marshalIPv6BlockApiCreateIPv6BlockRequest", "marshalIPv6BlockApiCreateIPv6BlockSubnetRequest", "marshalIPv6BlockApiUpdateIPv6BlockRequest", "marshalInstallPartition", "marshalInstallServerRequest", "marshalRpnSanApiAddIpRequest", "marshalRpnSanApiCreateRpnSanRequest", "marshalRpnSanApiRemoveIpRequest", "marshalRpnV1ApiAddRpnGroupMembersRequest", "marshalRpnV1ApiCreateRpnGroupRequest", "marshalRpnV1ApiDeleteRpnGroupMembersRequest", "marshalRpnV1ApiLeaveRpnGroupRequest", "marshalRpnV1ApiRpnGroupInviteRequest", "marshalRpnV1ApiUpdateRpnGroupNameRequest", "marshalRpnV2ApiAddRpnV2MembersRequest", "marshalRpnV2ApiCreateRpnV2GroupRequest", "marshalRpnV2ApiDeleteRpnV2MembersRequest", "marshalRpnV2ApiEnableRpnV2GroupCompatibilityRequest", "marshalRpnV2ApiUpdateRpnV2GroupNameRequest", "marshalRpnV2ApiUpdateRpnV2VlanForMembersRequest", "marshalStartBMCAccessRequest", "marshalStartRescueRequest", "marshalSubscribeServerOptionRequest", "marshalSubscribeStorageOptionsRequest", "marshalUpdatableRaidArray", "marshalUpdateRaidRequest", "marshalUpdateReverseRequest", "marshalUpdateServerBackupRequest", "marshalUpdateServerRequest$1", "marshalUpdateServerTagsRequest", "jsonContentHeaders$q", "API$q", "BillingAPI", "IPv6BlockAPI", "RpnAPI", "RpnSanAPI", "RpnV1API", "RpnV2API", "AttachFailoverIPToMacAddressRequest", "AttachFailoverIPsRequest", "BillingApiDownloadInvoiceRequest", "BillingApiDownloadRefundRequest", "BillingApiGetInvoiceRequest", "BillingApiGetRefundRequest", "BillingApiListInvoicesRequest", "BillingApiListRefundsRequest", "CancelServerInstallRequest", "DeleteFailoverIPRequest", "DeleteServerRequest", "DeleteServiceRequest", "DetachFailoverIPFromMacAddressRequest", "GetBMCAccessRequest", "GetFailoverIPRequest", "GetOSRequest", "GetOfferRequest", "GetOrderedServiceRequest", "GetRaidRequest", "GetRescueRequest", "GetServerBackupRequest", "GetServerInstallRequest", "GetServerRequest", "GetServiceRequest", "IPv6Block", "IPv6BlockApiCreateIPv6BlockSubnetRequest", "IPv6BlockApiDeleteIPv6BlockRequest", "IPv6BlockApiListIPv6BlockSubnetsAvailableRequest", "IPv6BlockApiUpdateIPv6BlockRequest", "InstallServerRequest", "ListFailoverIPsRequest", "ListOSRequest", "ListOffersRequest", "ListServerDisksRequest", "ListServerEventsRequest", "ListServersRequest", "ListServicesRequest", "ListSubscribableServerOptionsRequest", "RebootServerRequest", "RpnApiListRpnServerCapabilitiesRequest", "RpnSanApiAddIpRequest", "RpnSanApiDeleteRpnSanRequest", "RpnSanApiGetRpnSanRequest", "RpnSanApiListAvailableIpsRequest", "RpnSanApiListIpsRequest", "RpnSanApiListRpnSansRequest", "RpnSanApiRemoveIpRequest", "RpnV1ApiAcceptRpnInviteRequest", "RpnV1ApiAddRpnGroupMembersRequest", "RpnV1ApiDeleteRpnGroupMembersRequest", "RpnV1ApiDeleteRpnGroupRequest", "RpnV1ApiGetRpnGroupRequest", "RpnV1ApiLeaveRpnGroupRequest", "RpnV1ApiListRpnCapableSanServersRequest", "RpnV1ApiListRpnCapableServersRequest", "RpnV1ApiListRpnGroupMembersRequest", "RpnV1ApiListRpnGroupsRequest", "RpnV1ApiListRpnInvitesRequest", "RpnV1ApiRefuseRpnInviteRequest", "RpnV1ApiRpnGroupInviteRequest", "RpnV1ApiUpdateRpnGroupNameRequest", "RpnV2ApiAddRpnV2MembersRequest", "RpnV2ApiDeleteRpnV2GroupRequest", "RpnV2ApiDeleteRpnV2MembersRequest", "RpnV2ApiDisableRpnV2GroupCompatibilityRequest", "RpnV2ApiEnableRpnV2GroupCompatibilityRequest", "RpnV2ApiGetRpnV2GroupRequest", "RpnV2ApiListRpnV2CapableResourcesRequest", "RpnV2ApiListRpnV2GroupLogsRequest", "RpnV2ApiListRpnV2GroupsRequest", "RpnV2ApiListRpnV2MembersRequest", "RpnV2ApiUpdateRpnV2GroupNameRequest", "RpnV2ApiUpdateRpnV2VlanForMembersRequest", "StartRescueRequest", "StartServerRequest", "StopBMCAccessRequest", "StopRescueRequest", "StopServerRequest", "SubscribeServerOptionRequest", "SubscribeStorageOptionsRequest", "UpdateRaidRequest", "UpdateReverseRequest", "UpdateServerBackupRequest", "UpdateServerRequest", "UpdateServerTagsRequest", "validationRules_gen$c", "index_gen$p", "index$s", "INSTANCE_LOG_TRANSIENT_STATUSES$1", "INSTANCE_TRANSIENT_STATUSES$2", "MAINTENANCE_TRANSIENT_STATUSES$1", "READ_REPLICA_TRANSIENT_STATUSES$1", "SNAPSHOT_TRANSIENT_STATUSES$2", "unmarshalEndpointDirectAccessDetails$1", "unmarshalEndpointLoadBalancerDetails$1", "unmarshalEndpointPrivateNetworkDetails$2", "unmarshalEndpoint$3", "unmarshalMaintenance$1", "unmarshalReadReplica$1", "unmarshalDatabase$2", "unmarshalInstanceLog$1", "unmarshalBackupSchedule$1", "unmarshalInstanceSetting$1", "unmarshalLogsPolicy$1", "unmarshalUpgradableVersion$1", "unmarshalVolume$3", "unmarshalInstance$2", "unmarshalPrivilege$1", "unmarshalSnapshotVolumeType$1", "unmarshalSnapshot$2", "unmarshalUser$2", "unmarshalACLRule$3", "unmarshalAddInstanceACLRulesResponse$1", "unmarshalAddInstanceSettingsResponse$1", "unmarshalDeleteInstanceACLRulesResponse$1", "unmarshalDeleteInstanceSettingsResponse$1", "unmarshalInstanceMetrics$1", "unmarshalEngineSetting$1", "unmarshalEngineVersion$1", "unmarshalDatabaseEngine$1", "unmarshalListDatabaseEnginesResponse$1", "unmarshalListDatabasesResponse$2", "unmarshalListInstanceACLRulesResponse$1", "unmarshalListInstanceLogsDetailsResponseInstanceLogDetail$1", "unmarshalListInstanceLogsDetailsResponse$1", "unmarshalListInstanceLogsResponse$1", "unmarshalListInstancesResponse$1", "unmarshalNodeTypeVolumeConstraintSizes$1", "unmarshalNodeTypeVolumeType$1", "unmarshalNodeType$3", "unmarshalListNodeTypesResponse$3", "unmarshalListPrivilegesResponse$1", "unmarshalListSnapshotsResponse$2", "unmarshalListUsersResponse$2", "unmarshalSetInstanceACLRulesResponse$1", "unmarshalSetInstanceSettingsResponse$1", "marshalACLRuleRequest$2", "marshalAddInstanceACLRulesRequest$1", "marshalInstanceSetting$1", "marshalAddInstanceSettingsRequest$1", "marshalCloneInstanceRequest$1", "marshalCreateDatabaseRequest$2", "marshalEndpointSpecPrivateNetworkIpamConfig$1", "marshalEndpointSpecLoadBalancer$1", "marshalEndpointSpecPrivateNetwork$2", "marshalEndpointSpec$3", "marshalCreateEndpointRequest$2", "marshalCreateInstanceFromSnapshotRequest$1", "marshalCreateInstanceRequest$1", "marshalReadReplicaEndpointSpecPrivateNetworkIpamConfig$1", "marshalReadReplicaEndpointSpecDirectAccess$1", "marshalReadReplicaEndpointSpecPrivateNetwork$1", "marshalReadReplicaEndpointSpec$1", "marshalCreateReadReplicaEndpointRequest$1", "marshalCreateReadReplicaRequest$1", "marshalCreateSnapshotRequest$2", "marshalCreateUserRequest$2", "marshalDeleteInstanceACLRulesRequest$1", "marshalDeleteInstanceSettingsRequest$1", "marshalMigrateEndpointRequest$1", "marshalPurgeInstanceLogsRequest$1", "marshalSetInstanceACLRulesRequest$1", "marshalSetInstanceSettingsRequest$1", "marshalSetPrivilegeRequest$1", "marshalLogsPolicy$1", "marshalUpdateInstanceRequest$1", "marshalUpdateSnapshotRequest$2", "marshalUpdateUserRequest$2", "marshalUpgradeInstanceRequestMajorUpgradeWorkflow$1", "marshalUpgradeInstanceRequest$1", "jsonContentHeaders$p", "API$p", "UpdateInstanceRequest$1", "validationRules_gen$b", "index_gen$o", "index$r", "DNS_ZONE_TRANSIENT_STATUSES", "DOMAIN_FEATURE_TRANSIENT_STATUSES", "DOMAIN_REGISTRATION_STATUS_TRANSFER_TRANSIENT_STATUSES", "DOMAIN_TRANSIENT_STATUSES$2", "HOST_TRANSIENT_STATUSES", "SSL_CERTIFICATE_TRANSIENT_STATUSES", "TASK_TRANSIENT_STATUSES$1", "unmarshalContactExtensionFRAssociationInfo", "unmarshalContactExtensionFRCodeAuthAfnicInfo", "unmarshalContactExtensionFRDunsInfo", "unmarshalContactExtensionFRIndividualInfo", "unmarshalContactExtensionFRTrademarkInfo", "unmarshalContactExtensionEU", "unmarshalContactExtensionFR", "unmarshalContactExtensionNL", "unmarshalContactQuestion", "unmarshalContact", "unmarshalDNSZone", "unmarshalHost", "unmarshalSSLCertificate", "unmarshalCheckContactsCompatibilityResponseContactCheckResult", "unmarshalCheckContactsCompatibilityResponse", "unmarshalClearDNSZoneRecordsResponse", "unmarshalDeleteDNSZoneResponse", "unmarshalDeleteExternalDomainResponse", "unmarshalDeleteSSLCertificateResponse", "unmarshalDSRecordPublicKey", "unmarshalDSRecordDigest", "unmarshalDSRecord", "unmarshalTldOffer", "unmarshalDomainDNSSEC", "unmarshalDomainRegistrationStatusExternalDomain", "unmarshalDomainRegistrationStatusTransfer", "unmarshalTld", "unmarshalDomain$2", "unmarshalGetDNSZoneTsigKeyResponse", "unmarshalDomainRecordGeoIPConfigMatch", "unmarshalDomainRecordViewConfigView", "unmarshalDomainRecordWeightedConfigWeightedIP", "unmarshalDomainRecordGeoIPConfig", "unmarshalDomainRecordHTTPServiceConfig", "unmarshalDomainRecordViewConfig", "unmarshalDomainRecordWeightedConfig", "unmarshalDomainRecord", "unmarshalRecordIdentifier", "unmarshalRecordChangeAdd", "unmarshalRecordChangeClear", "unmarshalRecordChangeDelete", "unmarshalRecordChangeSet", "unmarshalRecordChange", "unmarshalGetDNSZoneVersionDiffResponse", "unmarshalGetDomainAuthCodeResponse", "unmarshalImportProviderDNSZoneResponse", "unmarshalImportRawDNSZoneResponse", "unmarshalContactRolesRoles", "unmarshalContactRoles", "unmarshalListContactsResponse", "unmarshalNameserver$1", "unmarshalListDNSZoneNameserversResponse", "unmarshalListDNSZoneRecordsResponse", "unmarshalListDNSZoneVersionRecordsResponse", "unmarshalDNSZoneVersion", "unmarshalListDNSZoneVersionsResponse", "unmarshalListDNSZonesResponse", "unmarshalListDomainHostsResponse", "unmarshalDomainSummary", "unmarshalListDomainsResponse$2", "unmarshalRenewableDomain", "unmarshalListRenewableDomainsResponse", "unmarshalListSSLCertificatesResponse", "unmarshalTask$1", "unmarshalListTasksResponse", "unmarshalListTldsResponse", "unmarshalOrderResponse", "unmarshalRefreshDNSZoneResponse", "unmarshalRegisterExternalDomainResponse", "unmarshalRestoreDNSZoneVersionResponse", "unmarshalAvailableDomain", "unmarshalSearchAvailableDomainsResponse", "unmarshalUpdateDNSZoneNameserversResponse", "unmarshalUpdateDNSZoneRecordsResponse", "marshalCloneDNSZoneRequest", "marshalCreateDNSZoneRequest", "marshalCreateSSLCertificateRequest", "marshalImportProviderDNSZoneRequestOnlineV1", "marshalImportProviderDNSZoneRequest", "marshalImportRawDNSZoneRequestTsigKey", "marshalImportRawDNSZoneRequestAXFRSource", "marshalImportRawDNSZoneRequestBindSource", "marshalImportRawDNSZoneRequest", "marshalRefreshDNSZoneRequest", "marshalContactExtensionFRAssociationInfo", "marshalContactExtensionFRCodeAuthAfnicInfo", "marshalContactExtensionFRDunsInfo", "marshalContactExtensionFRIndividualInfo", "marshalContactExtensionFRTrademarkInfo", "marshalContactExtensionEU", "marshalContactExtensionFR", "marshalContactExtensionNL", "marshalContactQuestion", "marshalNewContact", "marshalRegistrarApiBuyDomainsRequest", "marshalRegistrarApiCheckContactsCompatibilityRequest", "marshalRegistrarApiCreateDomainHostRequest", "marshalDSRecordPublicKey", "marshalDSRecordDigest", "marshalDSRecord", "marshalRegistrarApiEnableDomainDNSSECRequest", "marshalRegistrarApiRegisterExternalDomainRequest", "marshalRegistrarApiRenewDomainsRequest", "marshalRegistrarApiTradeDomainRequest", "marshalTransferInDomainRequestTransferRequest", "marshalRegistrarApiTransferInDomainRequest", "marshalUpdateContactRequestQuestion", "marshalRegistrarApiUpdateContactRequest", "marshalRegistrarApiUpdateDomainHostRequest", "marshalRegistrarApiUpdateDomainRequest", "marshalNameserver", "marshalUpdateDNSZoneNameserversRequest", "marshalDomainRecordGeoIPConfigMatch", "marshalDomainRecordViewConfigView", "marshalDomainRecordWeightedConfigWeightedIP", "marshalDomainRecordGeoIPConfig", "marshalDomainRecordHTTPServiceConfig", "marshalDomainRecordViewConfig", "marshalDomainRecordWeightedConfig", "marshalDomainRecord", "marshalRecordIdentifier", "marshalRecordChangeAdd", "marshalRecordChangeClear", "marshalRecordChangeDelete", "marshalRecordChangeSet", "marshalRecordChange", "marshalUpdateDNSZoneRecordsRequest", "marshalUpdateDNSZoneRequest", "jsonContentHeaders$o", "API$o", "RegistrarAPI", "index_gen$n", "index$q", "FLEXIBLE_IP_TRANSIENT_STATUSES", "MAC_ADDRESS_TRANSIENT_STATUSES", "unmarshalMACAddress", "unmarshalFlexibleIP", "unmarshalAttachFlexibleIPsResponse", "unmarshalDetachFlexibleIPsResponse", "unmarshalListFlexibleIPsResponse", "marshalAttachFlexibleIPRequest", "marshalCreateFlexibleIPRequest", "marshalDetachFlexibleIPRequest", "marshalDuplicateMACAddrRequest", "marshalGenerateMACAddrRequest", "marshalMoveMACAddrRequest", "marshalUpdateFlexibleIPRequest", "jsonContentHeaders$n", "API$n", "ListFlexibleIPsRequest", "validationRules_gen$a", "index_gen$m", "index$p", "CRON_TRANSIENT_STATUSES", "DOMAIN_TRANSIENT_STATUSES$1", "FUNCTION_TRANSIENT_STATUSES", "NAMESPACE_TRANSIENT_STATUSES$1", "TOKEN_TRANSIENT_STATUSES", "TRIGGER_TRANSIENT_STATUSES", "unmarshalCron", "unmarshalDomain$1", "unmarshalSecretHashedValue", "unmarshalFunction", "unmarshalNamespace$1", "unmarshalToken", "unmarshalTriggerMnqNatsClientConfig", "unmarshalTriggerMnqSqsClientConfig", "unmarshalTriggerSqsClientConfig", "unmarshalTrigger", "unmarshalDownloadURL", "unmarshalListCronsResponse", "unmarshalListDomainsResponse$1", "unmarshalRuntime", "unmarshalListFunctionRuntimesResponse", "unmarshalListFunctionsResponse", "unmarshalListNamespacesResponse$1", "unmarshalListTokensResponse", "unmarshalListTriggersResponse", "unmarshalUploadURL", "marshalCreateCronRequest", "marshalCreateDomainRequest$1", "marshalSecret", "marshalCreateFunctionRequest", "marshalCreateNamespaceRequest$1", "marshalCreateTokenRequest", "marshalCreateTriggerRequestMnqNatsClientConfig", "marshalCreateTriggerRequestMnqSqsClientConfig", "marshalCreateTriggerRequestSqsClientConfig", "marshalCreateTriggerRequest", "marshalUpdateCronRequest", "marshalUpdateFunctionRequest", "marshalUpdateNamespaceRequest$1", "marshalUpdateTriggerRequestSqsClientConfig", "marshalUpdateTriggerRequest", "jsonContentHeaders$m", "API$m", "CreateTriggerRequest", "CreateTriggerRequestMnqNatsClientConfig", "CreateTriggerRequestMnqSqsClientConfig", "UpdateTriggerRequest", "validationRules_gen$9", "index_gen$l", "index$o", "unmarshalJWT", "unmarshalAPIKey", "unmarshalApplication", "unmarshalGroup", "unmarshalLog", "unmarshalPolicy", "unmarshalQuotum", "unmarshalSSHKey", "unmarshalUser$1", "unmarshalEncodedJWT", "unmarshalListAPIKeysResponse", "unmarshalListApplicationsResponse", "unmarshalListGroupsResponse", "unmarshalListJWTsResponse", "unmarshalListLogsResponse", "unmarshalPermissionSet", "unmarshalListPermissionSetsResponse", "unmarshalListPoliciesResponse", "unmarshalListQuotaResponse", "unmarshalRule", "unmarshalListRulesResponse", "unmarshalListSSHKeysResponse", "unmarshalListUsersResponse$1", "unmarshalSetRulesResponse", "marshalAddGroupMemberRequest", "marshalAddGroupMembersRequest", "marshalCreateAPIKeyRequest", "marshalCreateApplicationRequest", "marshalCreateGroupRequest", "marshalCreateJWTRequest", "marshalRuleSpecs", "marshalCreatePolicyRequest", "marshalCreateSSHKeyRequest", "marshalCreateUserRequest$1", "marshalRemoveGroupMemberRequest", "marshalSetGroupMembersRequest", "marshalSetRulesRequest", "marshalUpdateAPIKeyRequest", "marshalUpdateApplicationRequest", "marshalUpdateGroupRequest", "marshalUpdatePolicyRequest", "marshalUpdateSSHKeyRequest", "marshalUpdateUserRequest$1", "jsonContentHeaders$l", "API$l", "CreateAPIKeyRequest", "CreateApplicationRequest", "CreateGroupRequest", "CreatePolicyRequest", "CreateSSHKeyRequest", "GetQuotumRequest", "ListAPIKeysRequest", "ListApplicationsRequest", "ListGroupsRequest", "ListJWTsRequest", "ListLogsRequest", "ListPermissionSetsRequest", "ListPoliciesRequest", "ListQuotaRequest", "ListRulesRequest", "ListSSHKeysRequest", "ListUsersRequest", "UpdateAPIKeyRequest", "UpdateApplicationRequest", "UpdateGroupRequest", "UpdatePolicyRequest", "UpdateSSHKeyRequest", "validationRules_gen$8", "index_gen$k", "index$n", "unmarshalPrivateNIC", "unmarshalServerSummary", "unmarshalBootscript", "unmarshalVolume$2", "unmarshalVolumeSummary", "unmarshalImage$2", "unmarshalPlacementGroup", "unmarshalSecurityGroupSummary", "unmarshalServerIp", "unmarshalServerIpv6", "unmarshalServerLocation", "unmarshalServerMaintenance", "unmarshalVolumeServer", "unmarshalServer", "unmarshalAttachServerVolumeResponse", "unmarshalCreateImageResponse", "unmarshalIp$1", "unmarshalCreateIpResponse", "unmarshalCreatePlacementGroupResponse", "unmarshalCreatePrivateNICResponse", "unmarshalSecurityGroup", "unmarshalCreateSecurityGroupResponse", "unmarshalSecurityGroupRule", "unmarshalCreateSecurityGroupRuleResponse", "unmarshalCreateServerResponse", "unmarshalSnapshotBaseVolume", "unmarshalSnapshot$1", "unmarshalTask", "unmarshalCreateSnapshotResponse", "unmarshalCreateVolumeResponse", "unmarshalDetachServerVolumeResponse", "unmarshalExportSnapshotResponse", "unmarshalGetBootscriptResponse", "unmarshalDashboard", "unmarshalGetDashboardResponse", "unmarshalGetImageResponse", "unmarshalGetIpResponse", "unmarshalGetPlacementGroupResponse", "unmarshalPlacementGroupServer", "unmarshalGetPlacementGroupServersResponse", "unmarshalGetPrivateNICResponse", "unmarshalGetSecurityGroupResponse", "unmarshalGetSecurityGroupRuleResponse", "unmarshalGetServerResponse", "unmarshalGetServerTypesAvailabilityResponseAvailability", "unmarshalGetServerTypesAvailabilityResponse", "unmarshalGetSnapshotResponse", "unmarshalGetVolumeResponse", "unmarshalListBootscriptsResponse", "unmarshalListImagesResponse$2", "unmarshalListIpsResponse$1", "unmarshalListPlacementGroupsResponse", "unmarshalListPrivateNICsResponse", "unmarshalListSecurityGroupRulesResponse", "unmarshalListSecurityGroupsResponse", "unmarshalListServerActionsResponse", "unmarshalListServerUserDataResponse", "unmarshalListServersResponse", "unmarshalServerTypeNetworkInterface", "unmarshalServerTypeVolumeConstraintSizes", "unmarshalServerTypeCapabilities", "unmarshalServerTypeNetwork", "unmarshalServerTypeVolumeConstraintsByType", "unmarshalServerType", "unmarshalListServersTypesResponse", "unmarshalListSnapshotsResponse$1", "unmarshalListVolumesResponse$1", "unmarshalVolumeTypeCapabilities", "unmarshalVolumeTypeConstraints", "unmarshalVolumeType", "unmarshalListVolumesTypesResponse", "unmarshalMigrationPlan", "unmarshalServerActionResponse", "unmarshalSetImageResponse", "unmarshalSetPlacementGroupResponse", "unmarshalSetPlacementGroupServersResponse", "unmarshalSetSecurityGroupResponse", "unmarshalSetSecurityGroupRuleResponse", "unmarshalSetSecurityGroupRulesResponse", "unmarshalSetServerResponse", "unmarshalSetSnapshotResponse", "unmarshalUpdateImageResponse", "unmarshalUpdateIpResponse", "unmarshalUpdatePlacementGroupResponse", "unmarshalUpdatePlacementGroupServersResponse", "unmarshalUpdateSecurityGroupResponse", "unmarshalUpdateSecurityGroupRuleResponse", "unmarshalUpdateServerResponse", "unmarshalUpdateSnapshotResponse", "unmarshalUpdateVolumeResponse", "marshalApplyBlockMigrationRequest", "marshalAttachServerVolumeRequest", "marshalVolumeTemplate", "marshalCreateImageRequest", "marshalCreateIpRequest$1", "marshalCreatePlacementGroupRequest", "marshalCreatePrivateNICRequest", "marshalCreateSecurityGroupRequest", "marshalCreateSecurityGroupRuleRequest", "marshalVolumeServerTemplate", "marshalCreateServerRequest", "marshalCreateSnapshotRequest$1", "marshalCreateVolumeRequest$1", "marshalDetachServerVolumeRequest", "marshalExportSnapshotRequest", "marshalPlanBlockMigrationRequest", "marshalServerActionRequestVolumeBackupTemplate", "marshalServerActionRequest", "marshalServerSummary", "marshalBootscript", "marshalVolume", "marshalVolumeSummary", "marshalSetImageRequest", "marshalSetPlacementGroupRequest", "marshalSetPlacementGroupServersRequest", "marshalSetSecurityGroupRequest", "marshalSetSecurityGroupRuleRequest", "marshalSetSecurityGroupRulesRequestRule", "marshalSetSecurityGroupRulesRequest", "marshalImage", "marshalPlacementGroup", "marshalPrivateNIC", "marshalSecurityGroupSummary", "marshalServerIp", "marshalServerIpv6", "marshalServerLocation", "marshalServerMaintenance", "marshalSetServerRequest", "marshalSnapshotBaseVolume", "marshalSetSnapshotRequest", "marshalVolumeImageUpdateTemplate", "marshalUpdateImageRequest$1", "marshalUpdateIpRequest$1", "marshalUpdatePlacementGroupRequest", "marshalUpdatePlacementGroupServersRequest", "marshalUpdatePrivateNICRequest", "marshalUpdateSecurityGroupRequest", "marshalUpdateSecurityGroupRuleRequest", "marshalSecurityGroupTemplate", "marshalUpdateServerRequest", "marshalUpdateSnapshotRequest$1", "marshalUpdateVolumeRequest$1", "jsonContentHeaders$k", "API$k", "IMAGE_TRANSIENT_STATUSES$1", "IP_TRANSIENT_STATUSES", "PRIVATE_NIC_TRANSIENT_STATUSES", "SECURITY_GROUP_TRANSIENT_STATUSES", "SERVER_IP_TRANSIENT_STATUSES", "SERVER_TRANSIENT_STATUSES", "SNAPSHOT_TRANSIENT_STATUSES$1", "TASK_TRANSIENT_STATUSES", "VOLUME_SERVER_TRANSIENT_STATUSES", "VOLUME_TRANSIENT_STATUSES", "validateNotUndefined", "InstanceV1UtilsAPI", "finalServer", "expectedState", "volumes", "newVolumes", "found", "volumesLength", "index", "serverId", "volume", "index$m", "index$l", "HUB_TRANSIENT_STATUSES", "unmarshalDeviceMessageFiltersRule", "unmarshalDeviceMessageFilters", "unmarshalDevice", "unmarshalNetwork", "unmarshalHubTwinsGraphiteConfig", "unmarshalHub", "unmarshalCertificate$1", "unmarshalCreateDeviceResponse", "unmarshalCreateNetworkResponse", "unmarshalGetDeviceCertificateResponse", "unmarshalGetDeviceMetricsResponse", "unmarshalGetHubCAResponse", "unmarshalGetHubMetricsResponse", "unmarshalListDevicesResponse", "unmarshalListHubsResponse", "unmarshalListNetworksResponse", "unmarshalRouteSummary", "unmarshalListRoutesResponse$1", "unmarshalListTwinDocumentsResponseDocumentSummary", "unmarshalListTwinDocumentsResponse", "unmarshalRenewDeviceCertificateResponse", "unmarshalRouteDatabaseConfig", "unmarshalRouteRestConfig", "unmarshalRouteS3Config", "unmarshalRoute$1", "unmarshalSetDeviceCertificateResponse", "unmarshalTwinDocument", "marshalDeviceMessageFiltersRule", "marshalDeviceMessageFilters", "marshalCreateDeviceRequest", "marshalHubTwinsGraphiteConfig", "marshalCreateHubRequest", "marshalCreateNetworkRequest", "marshalCreateRouteRequestDatabaseConfig", "marshalCreateRouteRequestRestConfig", "marshalCreateRouteRequestS3Config", "marshalCreateRouteRequest$1", "marshalPatchTwinDocumentRequest", "marshalPutTwinDocumentRequest", "marshalSetDeviceCertificateRequest", "marshalSetHubCARequest", "marshalUpdateDeviceRequest", "marshalUpdateHubRequest", "marshalUpdateRouteRequestDatabaseConfig", "marshalUpdateRouteRequestRestConfig", "marshalUpdateRouteRequestS3Config", "marshalUpdateRouteRequest$1", "jsonContentHeaders$j", "API$j", "index_gen$j", "index$k", "unmarshalResource", "unmarshalReverse", "unmarshalSource", "unmarshalIP$1", "unmarshalListIPsResponse$1", "marshalSource", "marshalBookIPRequest", "marshalReverse", "marshalUpdateIPRequest$1", "jsonContentHeaders$i", "API$i", "ListIPsRequest", "validationRules_gen$7", "index_gen$i", "index$j", "NAME_TRANSIENT_STATUSES", "PIN_TRANSIENT_STATUSES", "unmarshalName", "unmarshalPinCIDMeta", "unmarshalPinCID", "unmarshalPinInfo", "unmarshalPin", "unmarshalVolume$1", "unmarshalExportKeyNameResponse", "unmarshalListNamesResponse", "unmarshalListPinsResponse", "unmarshalListVolumesResponse", "unmarshalReplacePinResponse", "marshalCreatePinByCIDRequest", "marshalCreatePinByURLRequest", "marshalCreateVolumeRequest", "marshalIpnsApiCreateNameRequest", "marshalIpnsApiImportKeyNameRequest", "marshalIpnsApiUpdateNameRequest", "marshalReplacePinRequest", "marshalUpdateVolumeRequest", "jsonContentHeaders$h", "API$h", "IpnsAPI", "index_gen$h", "index$i", "unmarshalCronSchedule", "unmarshalJobDefinition", "unmarshalJobRun", "unmarshalListJobDefinitionsResponse", "unmarshalListJobRunsResponse", "unmarshalStartJobDefinitionResponse", "marshalCreateJobDefinitionRequestCronScheduleConfig", "marshalCreateJobDefinitionRequest", "marshalStartJobDefinitionRequest", "marshalUpdateJobDefinitionRequestCronScheduleConfig", "marshalUpdateJobDefinitionRequest", "jsonContentHeaders$g", "API$g", "JOB_RUN_TRANSIENT_STATUSES", "CreateJobDefinitionRequest", "CreateJobDefinitionRequestCronScheduleConfig", "CronSchedule", "ListJobDefinitionsRequest", "ListJobRunsRequest", "StartJobDefinitionRequest", "UpdateJobDefinitionRequest", "UpdateJobDefinitionRequestCronScheduleConfig", "validationRules_gen$6", "index_gen$g", "index$h", "CLUSTER_TRANSIENT_STATUSES$1", "NODE_TRANSIENT_STATUSES", "POOL_TRANSIENT_STATUSES", "unmarshalPoolUpgradePolicy", "unmarshalPool", "unmarshalVersion$1", "unmarshalMaintenanceWindow", "unmarshalClusterAutoUpgrade", "unmarshalClusterAutoscalerConfig", "unmarshalClusterOpenIDConnectConfig", "unmarshalCluster$1", "unmarshalNode", "unmarshalExternalNodeCoreV1Taint", "unmarshalExternalNode", "unmarshalClusterType", "unmarshalListClusterAvailableTypesResponse", "unmarshalListClusterAvailableVersionsResponse", "unmarshalListClusterTypesResponse", "unmarshalListClustersResponse$1", "unmarshalListNodesResponse", "unmarshalListPoolsResponse", "unmarshalListVersionsResponse$1", "marshalMaintenanceWindow", "marshalCreateClusterRequestPoolConfigUpgradePolicy", "marshalCreateClusterRequestAutoUpgrade", "marshalCreateClusterRequestAutoscalerConfig", "marshalCreateClusterRequestOpenIDConnectConfig", "marshalCreateClusterRequestPoolConfig", "marshalCreateClusterRequest$1", "marshalCreatePoolRequestUpgradePolicy", "marshalCreatePoolRequest", "marshalMigrateToPrivateNetworkClusterRequest", "marshalSetClusterTypeRequest", "marshalUpdateClusterRequestAutoUpgrade", "marshalUpdateClusterRequestAutoscalerConfig", "marshalUpdateClusterRequestOpenIDConnectConfig", "marshalUpdateClusterRequest$1", "marshalUpdatePoolRequestUpgradePolicy", "marshalUpdatePoolRequest", "marshalUpgradeClusterRequest", "marshalUpgradePoolRequest", "jsonContentHeaders$f", "API$f", "K8SUtilsAPI", "CreateClusterRequest", "CreateClusterRequestAutoscalerConfig", "CreateClusterRequestOpenIDConnectConfig", "CreateClusterRequestPoolConfig", "CreatePoolRequest", "ListClusterTypesRequest", "ListClustersRequest", "ListNodesRequest", "ListPoolsRequest", "MaintenanceWindow", "UpdateClusterRequest", "UpdateClusterRequestAutoscalerConfig", "validationRules_gen$5", "index$g", "index$f", "CERTIFICATE_TRANSIENT_STATUSES", "INSTANCE_TRANSIENT_STATUSES$1", "LB_TRANSIENT_STATUSES", "PRIVATE_NETWORK_TRANSIENT_STATUSES", "unmarshalIp", "unmarshalSubscriberEmailConfig", "unmarshalSubscriberWebhookConfig", "unmarshalSubscriber", "unmarshalHealthCheckHttpConfig", "unmarshalHealthCheckHttpsConfig", "unmarshalHealthCheckLdapConfig", "unmarshalHealthCheckMysqlConfig", "unmarshalHealthCheckPgsqlConfig", "unmarshalHealthCheckRedisConfig", "unmarshalHealthCheckTcpConfig", "unmarshalHealthCheck", "unmarshalInstance$1", "unmarshalLb", "unmarshalBackend", "unmarshalCertificate", "unmarshalFrontend", "unmarshalAclActionRedirect", "unmarshalAclAction", "unmarshalAclMatch", "unmarshalAcl", "unmarshalPrivateNetworkDHCPConfig", "unmarshalPrivateNetworkIpamConfig", "unmarshalPrivateNetworkStaticConfig", "unmarshalPrivateNetwork$3", "unmarshalRouteMatch", "unmarshalRoute", "unmarshalBackendServerStats", "unmarshalLbStats", "unmarshalListAclResponse", "unmarshalListBackendStatsResponse", "unmarshalListBackendsResponse", "unmarshalListCertificatesResponse", "unmarshalListFrontendsResponse", "unmarshalListIpsResponse", "unmarshalListLbPrivateNetworksResponse", "unmarshalLbType", "unmarshalListLbTypesResponse", "unmarshalListLbsResponse", "unmarshalListRoutesResponse", "unmarshalListSubscriberResponse", "unmarshalSetAclsResponse", "marshalAddBackendServersRequest", "marshalPrivateNetworkDHCPConfig", "marshalPrivateNetworkIpamConfig", "marshalPrivateNetworkStaticConfig", "marshalAttachPrivateNetworkRequest", "marshalAclActionRedirect", "marshalAclAction", "marshalAclMatch", "marshalCreateAclRequest", "marshalHealthCheckHttpConfig", "marshalHealthCheckHttpsConfig", "marshalHealthCheckLdapConfig", "marshalHealthCheckMysqlConfig", "marshalHealthCheckPgsqlConfig", "marshalHealthCheckRedisConfig", "marshalHealthCheckTcpConfig", "marshalHealthCheck", "marshalCreateBackendRequest", "marshalCreateCertificateRequestCustomCertificate", "marshalCreateCertificateRequestLetsencryptConfig", "marshalCreateCertificateRequest", "marshalCreateFrontendRequest", "marshalCreateIpRequest", "marshalCreateLbRequest", "marshalRouteMatch", "marshalCreateRouteRequest", "marshalSubscriberEmailConfig", "marshalSubscriberWebhookConfig", "marshalCreateSubscriberRequest", "marshalMigrateLbRequest", "marshalRemoveBackendServersRequest", "marshalSetBackendServersRequest", "marshalSubscribeToLbRequest", "marshalUpdateAclRequest", "marshalUpdateBackendRequest", "marshalUpdateCertificateRequest", "marshalUpdateFrontendRequest", "marshalUpdateHealthCheckRequest", "marshalUpdateIpRequest", "marshalUpdateLbRequest", "marshalUpdateRouteRequest", "marshalUpdateSubscriberRequest", "marshalZonedApiAddBackendServersRequest", "marshalZonedApiAttachPrivateNetworkRequest", "marshalZonedApiCreateAclRequest", "marshalZonedApiCreateBackendRequest", "marshalZonedApiCreateCertificateRequest", "marshalZonedApiCreateFrontendRequest", "marshalZonedApiCreateIpRequest", "marshalZonedApiCreateLbRequest", "marshalZonedApiCreateRouteRequest", "marshalZonedApiCreateSubscriberRequest", "marshalZonedApiMigrateLbRequest", "marshalZonedApiRemoveBackendServersRequest", "marshalAclSpec", "marshalZonedApiSetAclsRequest", "marshalZonedApiSetBackendServersRequest", "marshalZonedApiSubscribeToLbRequest", "marshalZonedApiUpdateAclRequest", "marshalZonedApiUpdateBackendRequest", "marshalZonedApiUpdateCertificateRequest", "marshalZonedApiUpdateFrontendRequest", "marshalZonedApiUpdateHealthCheckRequest", "marshalZonedApiUpdateIpRequest", "marshalZonedApiUpdateLbRequest", "marshalZonedApiUpdateRouteRequest", "marshalZonedApiUpdateSubscriberRequest", "jsonContentHeaders$e", "ZonedAPI", "API$e", "LbV1UtilsAPI", "LbZonedV1UtilsAPI", "index$e", "index$d", "DEPLOYMENT_TRANSIENT_STATUSES", "unmarshalEndpointPrivateNetworkDetails$1", "unmarshalEndpointPublicAccessDetails", "unmarshalEndpoint$2", "unmarshalDeployment", "unmarshalModelS3Model", "unmarshalModel", "unmarshalACLRule$2", "unmarshalAddDeploymentACLRulesResponse", "unmarshalEula", "unmarshalListDeploymentACLRulesResponse", "unmarshalListDeploymentsResponse", "unmarshalListModelsResponse", "unmarshalNodeType$2", "unmarshalListNodeTypesResponse$2", "unmarshalSetDeploymentACLRulesResponse", "marshalACLRuleRequest$1", "marshalAddDeploymentACLRulesRequest", "marshalEndpointSpecPrivateNetwork$1", "marshalEndpointSpecPublic", "marshalEndpointSpec$2", "marshalCreateDeploymentRequest", "marshalCreateEndpointRequest$1", "marshalSetDeploymentACLRulesRequest", "marshalUpdateDeploymentRequest", "marshalUpdateEndpointRequest$1", "jsonContentHeaders$d", "API$d", "CreateDeploymentRequest", "ListDeploymentsRequest", "ListModelsRequest", "UpdateDeploymentRequest", "validationRules_gen$4", "index_gen$f", "index$c", "unmarshalCategory", "unmarshalImage$1", "unmarshalLocalImage", "unmarshalVersion", "unmarshalListCategoriesResponse", "unmarshalListImagesResponse$1", "unmarshalListLocalImagesResponse", "unmarshalListVersionsResponse", "API$c", "index_gen$e", "index$b", "unmarshalNatsAccount", "unmarshalFile", "unmarshalNatsCredentials", "unmarshalSnsPermissions", "unmarshalSnsCredentials", "unmarshalSqsPermissions", "unmarshalSqsCredentials", "unmarshalListNatsAccountsResponse", "unmarshalListNatsCredentialsResponse", "unmarshalListSnsCredentialsResponse", "unmarshalListSqsCredentialsResponse", "unmarshalSnsInfo", "unmarshalSqsInfo", "marshalNatsApiCreateNatsAccountRequest", "marshalNatsApiCreateNatsCredentialsRequest", "marshalNatsApiUpdateNatsAccountRequest", "marshalSnsApiActivateSnsRequest", "marshalSnsPermissions", "marshalSnsApiCreateSnsCredentialsRequest", "marshalSnsApiDeactivateSnsRequest", "marshalSnsApiUpdateSnsCredentialsRequest", "marshalSqsApiActivateSqsRequest", "marshalSqsPermissions", "marshalSqsApiCreateSqsCredentialsRequest", "marshalSqsApiDeactivateSqsRequest", "marshalSqsApiUpdateSqsCredentialsRequest", "jsonContentHeaders$c", "NatsAPI", "SnsAPI", "SqsAPI", "NatsAccount", "NatsApiCreateNatsAccountRequest", "NatsApiCreateNatsCredentialsRequest", "NatsApiUpdateNatsAccountRequest", "NatsCredentials", "SnsApiCreateSnsCredentialsRequest", "SnsApiUpdateSnsCredentialsRequest", "SnsCredentials", "SqsApiCreateSqsCredentialsRequest", "SqsApiUpdateSqsCredentialsRequest", "SqsCredentials", "validationRules_gen$3", "index_gen$d", "index$a", "DATABASE_BACKUP_TRANSIENT_STATUSES", "INSTANCE_LOG_TRANSIENT_STATUSES", "INSTANCE_TRANSIENT_STATUSES", "MAINTENANCE_TRANSIENT_STATUSES", "READ_REPLICA_TRANSIENT_STATUSES", "SNAPSHOT_TRANSIENT_STATUSES", "unmarshalEndpointDirectAccessDetails", "unmarshalEndpointLoadBalancerDetails", "unmarshalEndpointPrivateNetworkDetails", "unmarshalEndpoint$1", "unmarshalMaintenance", "unmarshalReadReplica", "unmarshalDatabaseBackup$1", "unmarshalDatabase$1", "unmarshalInstanceLog", "unmarshalBackupSchedule", "unmarshalInstanceSetting", "unmarshalLogsPolicy", "unmarshalUpgradableVersion", "unmarshalVolume", "unmarshalInstance", "unmarshalPrivilege", "unmarshalSnapshotVolumeType", "unmarshalSnapshot", "unmarshalUser", "unmarshalACLRule$1", "unmarshalAddInstanceACLRulesResponse", "unmarshalAddInstanceSettingsResponse", "unmarshalDeleteInstanceACLRulesResponse", "unmarshalDeleteInstanceSettingsResponse", "unmarshalInstanceMetrics", "unmarshalListDatabaseBackupsResponse$1", "unmarshalEngineSetting", "unmarshalEngineVersion", "unmarshalDatabaseEngine", "unmarshalListDatabaseEnginesResponse", "unmarshalListDatabasesResponse$1", "unmarshalListInstanceACLRulesResponse", "unmarshalListInstanceLogsDetailsResponseInstanceLogDetail", "unmarshalListInstanceLogsDetailsResponse", "unmarshalListInstanceLogsResponse", "unmarshalListInstancesResponse", "unmarshalNodeTypeVolumeConstraintSizes", "unmarshalNodeTypeVolumeType", "unmarshalNodeType$1", "unmarshalListNodeTypesResponse$1", "unmarshalListPrivilegesResponse", "unmarshalListSnapshotsResponse", "unmarshalListUsersResponse", "unmarshalPrepareInstanceLogsResponse", "unmarshalSetInstanceACLRulesResponse", "unmarshalSetInstanceSettingsResponse", "marshalACLRuleRequest", "marshalAddInstanceACLRulesRequest", "marshalInstanceSetting", "marshalAddInstanceSettingsRequest", "marshalCloneInstanceRequest", "marshalCreateDatabaseBackupRequest", "marshalCreateDatabaseRequest$1", "marshalEndpointSpecPrivateNetworkIpamConfig", "marshalEndpointSpecLoadBalancer", "marshalEndpointSpecPrivateNetwork", "marshalEndpointSpec$1", "marshalCreateEndpointRequest", "marshalCreateInstanceFromSnapshotRequest", "marshalCreateInstanceRequest", "marshalReadReplicaEndpointSpecPrivateNetworkIpamConfig", "marshalReadReplicaEndpointSpecDirectAccess", "marshalReadReplicaEndpointSpecPrivateNetwork", "marshalReadReplicaEndpointSpec", "marshalCreateReadReplicaEndpointRequest", "marshalCreateReadReplicaRequest", "marshalCreateSnapshotRequest", "marshalCreateUserRequest", "marshalDeleteInstanceACLRulesRequest", "marshalDeleteInstanceSettingsRequest", "marshalMigrateEndpointRequest", "marshalPrepareInstanceLogsRequest", "marshalPurgeInstanceLogsRequest", "marshalRestoreDatabaseBackupRequest", "marshalSetInstanceACLRulesRequest", "marshalSetInstanceSettingsRequest", "marshalSetPrivilegeRequest", "marshalUpdateDatabaseBackupRequest", "marshalLogsPolicy", "marshalUpdateInstanceRequest", "marshalUpdateSnapshotRequest", "marshalUpdateUserRequest", "marshalUpgradeInstanceRequestMajorUpgradeWorkflow", "marshalUpgradeInstanceRequest", "jsonContentHeaders$b", "API$b", "UpdateInstanceRequest", "validationRules_gen$2", "index_gen$c", "index$9", "CLUSTER_TRANSIENT_STATUSES", "unmarshalACLRule", "unmarshalPrivateNetwork$2", "unmarshalPublicNetwork", "unmarshalEndpoint", "unmarshalClusterSetting", "unmarshalCluster", "unmarshalAddAclRulesResponse", "unmarshalAddEndpointsResponse", "unmarshalClusterMetricsResponse", "unmarshalClusterSettingsResponse", "unmarshalAvailableClusterSetting", "unmarshalClusterVersion", "unmarshalListClusterVersionsResponse", "unmarshalListClustersResponse", "unmarshalNodeType", "unmarshalListNodeTypesResponse", "unmarshalSetAclRulesResponse", "unmarshalSetEndpointsResponse", "marshalACLRuleSpec", "marshalAddAclRulesRequest", "marshalClusterSetting", "marshalAddClusterSettingsRequest", "marshalEndpointSpecPrivateNetworkSpecIpamConfig", "marshalEndpointSpecPrivateNetworkSpec", "marshalEndpointSpecPublicNetworkSpec", "marshalEndpointSpec", "marshalAddEndpointsRequest", "marshalCreateClusterRequest", "marshalMigrateClusterRequest", "marshalSetAclRulesRequest", "marshalSetClusterSettingsRequest", "marshalSetEndpointsRequest", "marshalUpdateClusterRequest", "marshalUpdateEndpointRequest", "jsonContentHeaders$a", "API$a", "index_gen$b", "index$8", "IMAGE_TRANSIENT_STATUSES", "NAMESPACE_TRANSIENT_STATUSES", "TAG_TRANSIENT_STATUSES", "unmarshalImage", "unmarshalNamespace", "unmarshalTag", "unmarshalListImagesResponse", "unmarshalListNamespacesResponse", "unmarshalListTagsResponse$2", "marshalCreateNamespaceRequest", "marshalUpdateImageRequest", "marshalUpdateNamespaceRequest", "jsonContentHeaders$9", "API$9", "index_gen$a", "index$7", "unmarshalFolder", "unmarshalEphemeralProperties$1", "unmarshalSecretVersion$1", "unmarshalEphemeralPolicy$1", "unmarshalSecret$1", "unmarshalAccessSecretVersionResponse$1", "unmarshalListFoldersResponse", "unmarshalListSecretVersionsResponse$1", "unmarshalListSecretsResponse$1", "unmarshalListTagsResponse$1", "marshalAddSecretOwnerRequest$1", "marshalCreateFolderRequest", "marshalEphemeralPolicy$1", "marshalCreateSecretRequest$1", "marshalPasswordGenerationParams", "marshalCreateSecretVersionRequest$1", "marshalGeneratePasswordRequest", "marshalUpdateSecretRequest$1", "marshalEphemeralProperties$1", "marshalUpdateSecretVersionRequest$1", "jsonContentHeaders$8", "API$8", "index_gen$9", "unmarshalEphemeralProperties", "unmarshalSecretVersion", "unmarshalEphemeralPolicy", "unmarshalSecret", "unmarshalAccessSecretVersionResponse", "unmarshalBrowseSecretsResponseItemFolderDetails", "unmarshalBrowseSecretsResponseItemSecretDetails", "unmarshalBrowseSecretsResponseItem", "unmarshalBrowseSecretsResponse", "unmarshalListSecretVersionsResponse", "unmarshalListSecretsResponse", "unmarshalListTagsResponse", "marshalAddSecretOwnerRequest", "marshalEphemeralPolicy", "marshalCreateSecretRequest", "marshalCreateSecretVersionRequest", "marshalUpdateSecretRequest", "marshalEphemeralProperties", "marshalUpdateSecretVersionRequest", "jsonContentHeaders$7", "API$7", "index_gen$8", "index$6", "DATABASE_TRANSIENT_STATUSES", "unmarshalDatabaseBackup", "unmarshalDatabase", "unmarshalListDatabaseBackupsResponse", "unmarshalListDatabasesResponse", "marshalCreateDatabaseRequest", "marshalRestoreDatabaseFromBackupRequest", "marshalUpdateDatabaseRequest", "jsonContentHeaders$6", "API$6", "CreateDatabaseRequest", "Database", "ListDatabaseBackupsRequest", "ListDatabasesRequest", "UpdateDatabaseRequest", "validationRules_gen$1", "index_gen$7", "index$5", "index_gen$6", "HUMAN_TRANSIENT_STATUSES", "unmarshalHuman", "unmarshalListHumansResponse", "unmarshalRegisterResponse", "marshalCreateHumanRequest", "marshalRegisterRequest", "marshalUpdateHumanRequest", "jsonContentHeaders$5", "API$5", "index_gen$5", "index$4", "DOMAIN_TRANSIENT_STATUSES", "EMAIL_TRANSIENT_STATUSES", "unmarshalEmailTry", "unmarshalEmail", "unmarshalDomainRecordsDMARC", "unmarshalDomainRecords", "unmarshalDomainReputation", "unmarshalDomainStatistics", "unmarshalDomain", "unmarshalCreateEmailResponse", "unmarshalDomainLastStatusDkimRecord", "unmarshalDomainLastStatusDmarcRecord", "unmarshalDomainLastStatusSpfRecord", "unmarshalDomainLastStatus", "unmarshalListDomainsResponse", "unmarshalListEmailsResponse", "unmarshalStatistics", "marshalCreateDomainRequest", "marshalCreateEmailRequestAddress", "marshalCreateEmailRequestAttachment", "marshalCreateEmailRequestHeader", "marshalCreateEmailRequest", "jsonContentHeaders$4", "API$4", "index_gen$4", "index$3", "unmarshalPrivateNetwork$1", "unmarshalListPrivateNetworksResponse$1", "marshalCreatePrivateNetworkRequest$1", "marshalUpdatePrivateNetworkRequest$1", "jsonContentHeaders$3", "API$3", "index_gen$3", "unmarshalSubnet", "unmarshalPrivateNetwork", "unmarshalVPC", "unmarshalAddSubnetsResponse", "unmarshalDeleteSubnetsResponse", "unmarshalListPrivateNetworksResponse", "unmarshalListVPCsResponse", "unmarshalSetSubnetsResponse", "marshalAddSubnetsRequest", "marshalCreatePrivateNetworkRequest", "marshalCreateVPCRequest", "marshalDeleteSubnetsRequest", "marshalMigrateZonalPrivateNetworksRequest", "marshalSetSubnetsRequest", "marshalUpdatePrivateNetworkRequest", "marshalUpdateVPCRequest", "jsonContentHeaders$2", "API$2", "index_gen$2", "index$2", "GATEWAY_NETWORK_TRANSIENT_STATUSES", "GATEWAY_TRANSIENT_STATUSES", "unmarshalDHCP", "unmarshalIpamConfig", "unmarshalGatewayNetwork", "unmarshalIP", "unmarshalDHCPEntry", "unmarshalGatewayType", "unmarshalGateway", "unmarshalPATRule", "unmarshalListDHCPEntriesResponse", "unmarshalListDHCPsResponse", "unmarshalListGatewayNetworksResponse", "unmarshalListGatewayTypesResponse", "unmarshalListGatewaysResponse", "unmarshalListIPsResponse", "unmarshalListPATRulesResponse", "unmarshalSetDHCPEntriesResponse", "unmarshalSetPATRulesResponse", "marshalCreateDHCPRequest", "marshalCreateDHCPEntryRequest", "marshalCreateGatewayNetworkRequestIpamConfig", "marshalCreateGatewayNetworkRequest", "marshalCreateGatewayRequest", "marshalCreateIPRequest", "marshalCreatePATRuleRequest", "marshalSetDHCPEntriesRequestEntry", "marshalSetDHCPEntriesRequest", "marshalSetPATRulesRequestRule", "marshalSetPATRulesRequest", "marshalUpdateDHCPEntryRequest", "marshalUpdateDHCPRequest", "marshalUpdateGatewayNetworkRequestIpamConfig", "marshalUpdateGatewayNetworkRequest", "marshalUpdateGatewayRequest", "marshalUpdateIPRequest", "marshalUpdatePATRuleRequest", "jsonContentHeaders$1", "API$1", "index_gen$1", "index$1", "HOSTING_TRANSIENT_STATUSES", "unmarshalHostingCpanelUrls", "unmarshalHostingOption", "unmarshalHosting", "unmarshalDnsRecord", "unmarshalNameserver", "unmarshalDnsRecords", "unmarshalControlPanel", "unmarshalListControlPanelsResponse", "unmarshalListHostingsResponse", "unmarshalOfferProduct", "unmarshalOffer", "unmarshalListOffersResponse", "marshalCreateHostingRequestDomainConfiguration", "marshalCreateHostingRequest", "marshalUpdateHostingRequest", "jsonContentHeaders", "API", "ListControlPanelsRequest", "ListHostingsRequest", "validationRules_gen", "index_gen", "registry_exports", "__export", "registry_default", "__toCommonJS", "fetchNode", "fetch", "import_react", "StatusEnum", "KEY_IS_NOT_STRING_ERROR", "DEFAULT_MAX_CONCURRENT_REQUESTS", "DataLoader", "_DataLoader", "DEFAULT_MAX_CONCURRENT_REQUESTS", "StatusEnum", "args", "observer", "resolve", "force", "data", "error", "index", "import_jsx_runtime", "DataLoaderContext", "DataLoaderProvider", "children", "cacheKeyPrefix", "onError", "maxConcurrentRequests", "DEFAULT_MAX_CONCURRENT_REQUESTS", "requestsRef", "computeKey", "key", "getRequest", "addRequest", "args", "DataLoader", "newRequest", "KEY_IS_NOT_STRING_ERROR", "getOrAddRequest", "requestFound", "clearCachedData", "clearAllCachedData", "request", "reload", "reloadAll", "getCachedData", "acc", "getReloads", "requestKey", "load", "value", "useDataLoaderContext", "DataLoaderProvider$1", "import_react", "marshalQueryKey", "queryKey", "value", "subKey", "useDataLoader", "key", "method", "enabled", "onError", "onSuccess", "keepPreviousData", "needPolling", "pollingInterval", "initialData", "dataLifetime", "getOrAddRequest", "onGlobalError", "useDataLoaderContext", "methodRef", "onSuccessRef", "onErrorRef", "needPollingRef", "setCounter", "forceRerender", "current", "queryKey", "marshalQueryKey", "request", "needLoad", "optimisticIsLoadingRef", "previousDataRef", "isLoading", "StatusEnum", "isSuccess", "isError", "isIdle", "isPolling", "reload", "defaultOnSuccessOrError", "onSuccessLoad", "onFailedLoad", "interval", "import_api", "import_api", "import_configuration_loader", "error", "getErrorMessage", "showAlertError", "title", "options", "getErrorMessage", "error", "getPreferenceUser", "accessKey", "secretKey", "defaultOrganizationId", "defaultRegion", "defaultZone", "profileName", "import_react", "CONSOLE_URL", "POLLING_INTERVAL", "import_api", "bytesToSize", "bytes", "sizes", "i", "getIconFromLocality", "locality", "import_api", "import_sdk", "NAMESPACES_STATUSES", "acc", "transientStatus", "IMAGES_STATUS", "getImageStatusIcon", "image", "IMAGES_STATUS", "isNamespaceTransient", "namespace", "isImageTransient", "import_jsx_runtime", "getPrivacyAccessory", "image", "namespace", "ImageDetail", "namespaces", "id", "getImageStatusIcon", "getIconFromLocality", "bytesToSize", "tag", "import_api", "getNamespaceUrl", "namespace", "CONSOLE_URL", "getImageUrl", "image", "import_jsx_runtime", "ImageAction", "namespaces", "image", "toggleIsDetailOpen", "namespace", "id", "getImageUrl", "import_api", "import_jsx_runtime", "import_api", "import_jsx_runtime", "import_api", "import_jsx_runtime", "NamespaceDropdown", "setSelectedNamespaceId", "namespaces", "namespace", "getIconFromLocality", "import_sdk", "fetchAllRegions", "regions", "fetcher", "request", "region", "import_sdk", "useAPI", "clientSetting", "getPreferenceUser", "client", "useAllRegionNamespacesQuery", "params", "dataloaderOptions", "registryV1", "useAPI", "regions", "key", "useDataLoader", "fetchAllRegions", "request", "useAllImagesQuery", "params", "dataloaderOptions", "registryV1", "useAPI", "key", "useDataLoader", "import_jsx_runtime", "Images", "clientSetting", "getPreferenceUser", "isDetailOpen", "toggleIsDetailOpen", "state", "selectedNamespaceId", "setSelectedNamespaceId", "namespaces", "isLoadingNamespaces", "useAllRegionNamespacesQuery", "n", "isNamespaceTransient", "images", "isLoadingImages", "useAllImagesQuery", "id", "POLLING_INTERVAL", "image", "isImageTransient", "NamespaceDropdown", "ImageDetail", "ImageAction", "import_jsx_runtime", "Registry", "DataLoaderProvider$1", "Images", "import_jsx_runtime", "registry_default", "Registry"]
}
