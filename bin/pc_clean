#!/bin/bash

# Required parameters:
# @raycast.schemaVersion 1
# @raycast.title pc_clean
# @raycast.mode compact

# Optional parameters:
# @raycast.icon ðŸ¤–

# Documentation:
# @raycast.description Comprehensive system and development environment cleanup
# @raycast.author me

# Function to handle cleanup with error checking
cleanup() {
    echo "Starting cleanup process..."

    # System memory and cache cleanup
    sudo purge

    # Homebrew package management
    brew update && brew upgrade && brew cleanup && brew autoremove

    # Remove old node_modules directories
    find . -name "node_modules" -type d -mtime +120 -exec rm -rf {} +

	# Script to reset iOS Simulator data on macOS

	echo "Closing Xcode and Simulator..."
	# Close Xcode if it's running
	osascript -e 'quit app "Xcode"'

	# Wait a moment for Xcode to close
	sleep 2

	echo "Deleting Simulator data..."
	# Delete Simulator data
	rm -rf ~/Library/Developer/CoreSimulator

	echo "Resetting Xcode preferences (optional)..."
	# Delete Xcode preferences
	rm -f ~/Library/Preferences/com.apple.dt.Xcode.plist

	echo "Clearing Derived Data (optional)..."
	# Clear Derived Data
	rm -rf ~/Library/Developer/Xcode/DerivedData

	echo "Done! Please restart your Mac for all changes to take effect."

    # Remove Xcode and developer-related caches
    rm -rf ~/Library/Developer ~/Library/Caches/com.apple.dt.Xcode

    # Clean Rust project build artifacts
    find . -name "Cargo.toml" -type f -execdir cargo clean \;
    brew reinstall rust

    # Remove Python cache directories
    find . -name "__pycache__" -type d -exec rm -rf {} +

    # Clean CocoaPods cache
    rm -rf ~/Library/Caches/CocoaPods

    # Docker cleanup
    docker volume prune -f
    docker system prune -af --volumes

    # Clean temporary files
    rm -rf ~/Library/Caches/pip ~/.npm ~/.gradle/caches

    # Clear download history
    sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'

    # Optional: Empty Trash
    sudo rm -rf ~/.Trash/*

    # Clean up merged git branches across all directories
    for d in */; do 
        if [ -d "$d/.git" ]; then
            echo "Cleaning up merged branches in $d"
            git -C "$d" branch --merged master | grep -v "\* master" | xargs -r git -C "$d" branch -d
        fi
    done

    echo "Cleanup complete!"
}

# Execute the cleanup function
cleanup

#!/bin/bash
:G

# macOS Cleanup Script

# Function to safely remove directory contents
clean_directory() {
    local dir="$1"
    if [ -d "$dir" ]; then
        echo "Cleaning: $dir"
        # Use rm with -rf carefully, and only if directory exists
        rm -rf "$dir"/*
    else
        echo "Directory not found: $dir"
    fi
}

# Correct Cleanup Paths
clean_directory "$HOME/Library/Application Support"
clean_directory "/Library/Caches"
clean_directory "/Library/Internet Plug-Ins"
clean_directory "$HOME/Library/Preferences"
clean_directory "/Library/Application Support/CrashReporter"
clean_directory "$HOME/Library/Application State"

echo "Cleanup complete!"
